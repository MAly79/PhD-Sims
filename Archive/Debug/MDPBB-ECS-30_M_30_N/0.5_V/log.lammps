LAMMPS (5 Jun 2019)
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:88)
  using 1 OpenMP thread(s) per MPI task
#--- Brush Variables---#
variable      M      equal  30                 # The number of polymer chains on each brush
variable      N      string 30                 # The number of beads per chain
variable      xhi    equal  20                 # The width of the polymer Brush
variable      yhi    equal  20                 # The length of the polymer Brush
variable      wthick equal  3                  # The thickness of the walls wthick=1,2,3,4 gives 2,3,4,6 layers respectively

#--- Simulation Variables ---#
variable       Temp      index 1        #0.8 1 1.68                 #[Grest96]
variable       Tstep     equal 0.005                       # Timestep in Tau (default = 0.005)
variable       Nequil    equal 300000                       # Number of timesteps to equilibrate
variable       Ncomp     equal 400000                     # Number of timesteps to compress - until no more occilation of walls
variable       Nshear    equal 1000000      #2000000                      # Number of timesteps to shear - use approx 4ns for 10m/s
variable       Nthermo   equal 1000                        # Number of timesteps between thermo data prints
variable       Ndump_e   equal 10000
variable       Ndump_c   equal 10000                      # Number of timesteps per dump file (compression)
variable       Ndump_s   equal 10000                       # Number of timesteps per dump file (shear)
variable       Wall_v    index 0.5          #0.001 0.01 0.1 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2   # 0.005 0.05 0.1 0.5 1.5 0.001 0.003 0.2 0.0002 2                      # Wall velocity (A/fs) - equal to 10 m/s
variable       Pcomp     index 3 #3 4 5 8 10 1.50 0.5 0.05

include        MDPBB.in
# This is an input script that creates a mono disperse polymer brush bilayer
# A coarse grained bead-spring model is used for the polymers which are end
# grafted to the surfaces of 2 opposing FCC walls at random sites.

#--- Initialization ---#

dimension     3
boundary      p p f
units         lj
atom_style    bond


#--- Moved to main.in ---#
#variable      M      equal  50                # The number of polymer chains on each brush
#variable      N      string 80                # The number of beads per chain
#variable      xhi    equal  15                # The width of the polymer Brush
#variable      yhi    equal  20                # The length of the polymer Brush
#variable      wthick equal  3                 # The thickness of the walls wthick=1,2,3,4 gives 2,3,4,6 layers respectively

variable      zhi    equal  $(1.1 * 2 * v_N + (2 * v_wthick))  # The initial height of the simulation box the value is such that no overlaps occur
variable      zhi    equal  72  
variable      z0     equal  $((v_zhi)/4 - (v_N)/30)          # This is the location at which to place the CoM of the molecule
variable      z0     equal  17          

print "The number of grafted chains = $(v_M)"
The number of grafted chains = 30
print "The number of beads per chain = $(v_N)"
The number of beads per chain = 30

variable      check  equal count(all)         # The number of atoms in the system
variable      ntwall equal count(twall)       # The number of atoms in the top wall
variable      nbwall equal count(bwall)       # The number of atoms in the bottom wall
variable      s equal 234897  #45335              # Seed for the RNG

print "zhi = ${zhi}"
zhi = 72

#--- Create the simulation box ---#

region        sbox block 0 ${xhi} 0 ${yhi} 0 ${zhi}
region        sbox block 0 20 0 ${yhi} 0 ${zhi}
region        sbox block 0 20 0 20 0 ${zhi}
region        sbox block 0 20 0 20 0 72
create_box    4 sbox bond/types 3 extra/bond/per/atom 12 extra/special/per/atom 2
Created orthogonal box = (0 0 0) to (20 20 72)
  1 by 1 by 1 MPI processor grid

mass          1 2.0                   # Wall atoms that are not grafted
mass          2 1.0                   # Grafted bead
mass          3 1.0                   # The rest of the beads on the chain
mass          4 2.0                   # Wall atoms that the chains are grafted to

bond_style    hybrid fene harmonic    # Finitely extensible linearly elastic bond between neighbouring beads
#bond_coeff    1 fene 30.0 1.5 0.0 0.0      # Values obtained from literature [Grest, Galushcko]
bond_coeff    1 fene 30.0 30.0 0.0 0.0
bond_coeff    2 fene 30.0 30.0 0.0 0.0       # This is the grafting bond between the polymer and the wall atom
special_bonds fene                    #
  0 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0004591 secs
pair_style	  lj/cut 1.122462         # LJ potential with rc=2^1/6
#pair_coeff	  * * 1.0 1.0             # LJ potential acts between all atoms
pair_coeff    1 1 0.0 0.0
pair_coeff    1 2 1.0 1.0
pair_coeff    1 3 1.0 1.0
pair_coeff    2 2 1.0 1.0
pair_coeff    2 3 1.0 1.0
pair_coeff    2 4 1.0 1.0
pair_coeff    3 3 1.0 1.0
pair_coeff    3 4 1.0 1.0
pair_coeff    4 4 0.0 0.0
neighbor      10 bin                  #
neigh_modify  one 4000

#--- Create and read the molecule file ---#
python        BSMolf input 1 $N format i file BSMolf.py
python        BSMolf input 1 30 format i file BSMolf.py
python        BSMolf invoke    # Call the python function with number of beads to write the mol file
molecule      bs     bsmol.txt     # Read the Mol file to define the polymer chain
Read molecule bs:
  30 atoms with max type 2
  29 bonds with max type 1
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0

#--- Define the FCC wall region ---#
region        wall  block 0 ${xhi} 0 ${yhi} 0 ${wthick}
region        wall  block 0 20 0 ${yhi} 0 ${wthick}
region        wall  block 0 20 0 20 0 ${wthick}
region        wall  block 0 20 0 20 0 3
lattice       fcc 1
Lattice spacing in x,y,z = 1.5874 1.5874 1.5874

#--- Create the Top Brush  (At the bottom then rotate 180 degrees to top) ---#

create_atoms  1 region wall
Created 1352 atoms
  create_atoms CPU = 0.0017624 secs
group         twall  region wall
1352 atoms in group twall
#group         tsurf  region wsurf

# A loop to insert the Chains into the sim box
variable      i loop $M                                   # Index to insert N total number of chains
variable      i loop 30                                   
label         loop                                        # Start of loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 850                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[850]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 213                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[213]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1022                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1022]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1031                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1031]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1031 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1031]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1031]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1352                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1352+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 9.5244063118092 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 9.5244063118092 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.000244 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1382               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1031 $b
create_bonds  single/bond 2 1031 1353
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.002298 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 982                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[982]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1332                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1332]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1332 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1332]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1332]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1382                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1382+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 19.8425131496025 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 19.8425131496025 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.03e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1412               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1332 $b
create_bonds  single/bond 2 1332 1383
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019689 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 643                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[643]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 454                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[454]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 585                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[585]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 979                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[979]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 979 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[979]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[979]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1412                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1412+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 7.937005259841 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 7.937005259841 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.24e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1442               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 979 $b
create_bonds  single/bond 2 979 1413
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019328 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1211                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1211]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1211 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1211]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1211]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1442                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1442+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 15.874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 15.874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 6.33e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1472               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1211 $b
create_bonds  single/bond 2 1211 1443
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019942 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 11                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[11]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 258                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[258]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 442                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[442]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1095                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1095]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1095 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1095]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1095]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1472                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1472+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 12.6992084157456 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 12.6992084157456 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.54e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1502               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1095 $b
create_bonds  single/bond 2 1095 1473
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0016637 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 960                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[960]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 960 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[960]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[960]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1502                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1502+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 8.7307057858251 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 8.7307057858251 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 6.68e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1532               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 960 $b
create_bonds  single/bond 2 960 1503
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020925 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 931                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[931]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 931 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[931]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[931]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1532                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1532+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 6.3496042078728 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 6.3496042078728 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 6.92e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1562               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 931 $b
create_bonds  single/bond 2 931 1533
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0021467 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 755                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[755]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 755 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[755]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[755]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1562                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1562+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 1.5874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 1.5874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.25e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1592               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 755 $b
create_bonds  single/bond 2 755 1563
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0017975 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1053                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1053]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 832                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[832]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 832 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[832]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[832]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1592                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1592+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 3.9685026299205 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 3.9685026299205 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 6.98e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1622               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 832 $b
create_bonds  single/bond 2 832 1593
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019117 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 838                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[838]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 163                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[163]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1178                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1178]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 814                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[814]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1242                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1242]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 942                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[942]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1214                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1214]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 796                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[796]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 796 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[796]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[796]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1622                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1622+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 3.9685026299205 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 3.9685026299205 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 6.82e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1652               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 796 $b
create_bonds  single/bond 2 796 1623
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.005027 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1150                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1150]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1133                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1133]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 563                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[563]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1350                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1350]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1318                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1318]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 979                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[979]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 979 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[979]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[979]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1652                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1652+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 1                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1270                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1270]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 320                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[320]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1261                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1261]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 177                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[177]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1150                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1150]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1263                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1263]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1263 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1263]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1263]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1652                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1652+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 17.4614115716502 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 17.4614115716502 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.96e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1682               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1263 $b
create_bonds  single/bond 2 1263 1653
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0029321 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 463                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[463]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 352                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[352]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 898                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[898]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 631                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[631]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 196                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[196]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1245                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1245]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1293                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1293]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1223                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1223]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1223 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1223]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1223]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1682                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1682+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 15.874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 15.874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.45e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1712               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1223 $b
create_bonds  single/bond 2 1223 1683
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0038416 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1078                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1078]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 594                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[594]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 502                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[502]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 948                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[948]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 948 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[948]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[948]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1712                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1712+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 8.7307057858251 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 8.7307057858251 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.97e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1742               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 948 $b
create_bonds  single/bond 2 948 1713
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0029837 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 127                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[127]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 512                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[512]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 590                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[590]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 445                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[445]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 825                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[825]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 387                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[387]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 323                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[323]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 117                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[117]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 921                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[921]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 992                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[992]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 992 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[992]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[992]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1742                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1742+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 10.3181068377933 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 10.3181068377933 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.54e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1772               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 992 $b
create_bonds  single/bond 2 992 1743
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0028688 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 456                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[456]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 676                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[676]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 582                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[582]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 307                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[307]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 784                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[784]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 784 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[784]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[784]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1772                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1772+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 3.9685026299205 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 3.9685026299205 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.11e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1802               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 784 $b
create_bonds  single/bond 2 784 1773
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0016866 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 247                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[247]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1193                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1193]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 624                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[624]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1326                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1326]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1038                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1038]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1243                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1243]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1243 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1243]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1243]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1802                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1802+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 15.874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 15.874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.71e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1832               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1243 $b
create_bonds  single/bond 2 1243 1803
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0029213 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1344                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1344]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1344 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1344]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1344]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1832                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1832+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 19.8425131496025 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 19.8425131496025 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001068 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1862               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1344 $b
create_bonds  single/bond 2 1344 1833
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0026927 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 641                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[641]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 449                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[449]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 96                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[96]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 350                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[350]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 246                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[246]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 555                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[555]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 808                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[808]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 808 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[808]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[808]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1862                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1862+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 3.9685026299205 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 3.9685026299205 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.73e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1892               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 808 $b
create_bonds  single/bond 2 808 1863
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0025761 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 643                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[643]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1123                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1123]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1123 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1123]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1123]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1892                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1892+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 12.6992084157456 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 12.6992084157456 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.84e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1922               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1123 $b
create_bonds  single/bond 2 1123 1893
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0066529 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 202                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[202]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 224                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[224]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1084                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1084]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1084 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1084]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1084]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1922                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1922+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 11.9055078897615 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 11.9055078897615 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 6.33e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1952               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1084 $b
create_bonds  single/bond 2 1084 1923
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0023825 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 858                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[858]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 306                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[306]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 436                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[436]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 365                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[365]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1064                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1064]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1064 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1064]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1064]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1952                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1952+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 11.9055078897615 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 11.9055078897615 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.56e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1982               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1064 $b
create_bonds  single/bond 2 1064 1953
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.003446 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1177                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1177]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 588                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[588]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1349                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1349]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 882                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[882]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1238                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1238]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 582                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[582]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 734                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[734]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 989                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[989]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 586                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[586]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 397                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[397]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 19                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[19]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 203                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[203]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 779                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[779]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 779 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[779]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[779]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1982                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1982+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 1.5874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 1.5874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.98e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2012               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 779 $b
create_bonds  single/bond 2 779 1983
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0035264 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 144                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[144]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 686                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[686]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 244                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[244]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 445                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[445]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 53                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[53]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1270                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1270]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 465                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[465]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 488                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[488]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 659                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[659]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 994                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[994]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 249                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[249]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 684                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[684]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 684 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[684]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[684]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2012                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2012+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 0.7937005259841 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 0.7937005259841 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.99e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2042               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 684 $b
create_bonds  single/bond 2 684 2013
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0021313 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 649                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[649]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1248                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1248]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1248 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1248]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1248]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2042                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2042+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 16.6677110456661 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 16.6677110456661 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.31e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2072               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1248 $b
create_bonds  single/bond 2 1248 2043
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0022039 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 329                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[329]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 836                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[836]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 836 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[836]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[836]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2072                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2072+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 5.5559036818887 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 5.5559036818887 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 6.33e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2102               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 836 $b
create_bonds  single/bond 2 836 2073
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0024545 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 290                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[290]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1204                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1204]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1204 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1204]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1204]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2102                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2102+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 16.6677110456661 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 16.6677110456661 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.1e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2132               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1204 $b
create_bonds  single/bond 2 1204 2103
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0038214 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 241                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[241]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 430                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[430]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 515                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[515]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 723                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[723]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 723 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[723]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[723]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2132                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2132+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 0 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 0 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.92e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2162               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 723 $b
create_bonds  single/bond 2 723 2133
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0023297 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 562                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[562]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1075                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1075]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1075 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1075]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1075]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2162                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2162+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 13.4929089417297 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 13.4929089417297 11.1118073637774 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 13.4929089417297 11.1118073637774 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.18e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2192               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1075 $b
create_bonds  single/bond 2 1075 2163
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0025227 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 771                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[771]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 771 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[771]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[771]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2192                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2192+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 1.5874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 1.5874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.58e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2222               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 771 $b
create_bonds  single/bond 2 771 2193
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0023171 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 660                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[660]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
#print         "seed is = $s"
#print         "i = $(v_i)"
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 787                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[787]                
#print         "z coord of randatom is = ${randzi}"
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 787 type 4                    
  1 settings made for type
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[787]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[787]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2222                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2222+1                          
#print         "Grafted Bead ID = $b"
#print         "Random Wall atom = ${randatomi}"
#print         "x = ${x0}"
#print         "y = ${y0}"
variable      flag python A_Check         # Define a flag to check that the atom-id was not previously picked
# If flag = 1 then that means this random atom is already grafted if flag = 0 then atom is free to be grafted
# Define a python function that performs this check and keeps track throughout the loop to ensure no atom is picked twice
python        A_Check input 2 v_randatomi v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}                         # Invoke the python function
variable      flag0 equal 0                         
#print         "flag = ${flag0}"
# If the atom has been picked previously then do not insert and restart the loop
if            "${flag0} == 1" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 2.3811015779523 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 2.3811015779523 3.1748021039364 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 2.3811015779523 3.1748021039364 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.69e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2252               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 787 $b
create_bonds  single/bond 2 787 2223
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020968 secs
next i
jump MDPBB.in loop    # End of the loop

# Rotate the created brush about the centre of the simulation box by 180 degrees to make it true top brush
displace_atoms all rotate $(v_xhi/2.0) $(v_yhi/2.0) $(v_zhi/2.0 - 1) 1 0 0 180 units box
displace_atoms all rotate 10 $(v_yhi/2.0) $(v_zhi/2.0 - 1) 1 0 0 180 units box
displace_atoms all rotate 10 10 $(v_zhi/2.0 - 1) 1 0 0 180 units box
displace_atoms all rotate 10 10 35 1 0 0 180 units box

variable      ntop0 equal ${check}          # Count the total number of atoms in the top brush
variable      ntop0 equal 2252          

#--- Create the Bottom brush ---#

# Repeating the same procedure as above again but with new atoms

create_atoms  1 region wall
Created 1352 atoms
  create_atoms CPU = 0.0002828 secs
group         bwall region wall
1352 atoms in group bwall
variable      nbwall0 equal ${nbwall}
variable      nbwall0 equal 1352

variable      j loop $M
variable      j loop 30
label         loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2339
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2339]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2408
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2408]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2805
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2805]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2714
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2714]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2768
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2768]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2922
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2922]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3375
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3375]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3375 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3375]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3375]
variable      check0 equal ${check}
variable      check0 equal 3604
variable      b equal ${check}+1
variable      b equal 3604+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 12.6992084157456 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 12.6992084157456 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001201 secs

variable      check1 equal ${check}
variable      check1 equal 3634
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3375 $b
create_bonds  single/bond 2 3375 3605
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0016417 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3337
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3337]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3591
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3591]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3591 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3591]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3591]
variable      check0 equal ${check}
variable      check0 equal 3634
variable      b equal ${check}+1
variable      b equal 3634+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 19.0488126236184 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 19.0488126236184 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001003 secs

variable      check1 equal ${check}
variable      check1 equal 3664
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3591 $b
create_bonds  single/bond 2 3591 3635
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019754 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2388
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2388]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2962
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2962]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3410
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3410]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3528
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3528]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3528 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3528]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3528]
variable      check0 equal ${check}
variable      check0 equal 3664
variable      b equal ${check}+1
variable      b equal 3664+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 18.2551120976343 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 18.2551120976343 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 9.86e-05 secs

variable      check1 equal ${check}
variable      check1 equal 3694
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3528 $b
create_bonds  single/bond 2 3528 3665
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0023157 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2699
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2699]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3000
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3000]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3000 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3000]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3000]
variable      check0 equal ${check}
variable      check0 equal 3694
variable      b equal ${check}+1
variable      b equal 3694+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 2.3811015779523 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 2.3811015779523 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.94e-05 secs

variable      check1 equal ${check}
variable      check1 equal 3724
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3000 $b
create_bonds  single/bond 2 3000 3695
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0023534 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2797
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2797]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2717
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2717]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3345
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3345]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3175
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3175]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3175 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3175]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3175]
variable      check0 equal ${check}
variable      check0 equal 3724
variable      b equal ${check}+1
variable      b equal 3724+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 6.3496042078728 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 6.3496042078728 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.89e-05 secs

variable      check1 equal ${check}
variable      check1 equal 3754
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3175 $b
create_bonds  single/bond 2 3175 3725
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0031628 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3577
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3577]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2487
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2487]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2451
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2451]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2643
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2643]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3259
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3259]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3259 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3259]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3259]
variable      check0 equal ${check}
variable      check0 equal 3754
variable      b equal ${check}+1
variable      b equal 3754+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 9.5244063118092 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 9.5244063118092 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001268 secs

variable      check1 equal ${check}
variable      check1 equal 3784
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3259 $b
create_bonds  single/bond 2 3259 3755
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020641 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3423
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3423]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3423 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3423]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3423]
variable      check0 equal ${check}
variable      check0 equal 3784
variable      b equal ${check}+1
variable      b equal 3784+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 14.2866094677138 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 14.2866094677138 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001073 secs

variable      check1 equal ${check}
variable      check1 equal 3814
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3423 $b
create_bonds  single/bond 2 3423 3785
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019186 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2293
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2293]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2278
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2278]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2757
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2757]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2999
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2999]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 2999 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[2999]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[2999]
variable      check0 equal ${check}
variable      check0 equal 3814
variable      b equal ${check}+1
variable      b equal 3814+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 1.5874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 1.5874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001167 secs

variable      check1 equal ${check}
variable      check1 equal 3844
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 2999 $b
create_bonds  single/bond 2 2999 3815
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020072 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3322
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3322]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2797
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2797]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3249
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3249]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2865
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2865]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2293
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2293]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2434
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2434]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3437
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3437]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3495
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3495]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3495 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3495]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3495]
variable      check0 equal ${check}
variable      check0 equal 3844
variable      b equal ${check}+1
variable      b equal 3844+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 15.874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 15.874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001072 secs

variable      check1 equal ${check}
variable      check1 equal 3874
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3495 $b
create_bonds  single/bond 2 3495 3845
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019186 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2418
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2418]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3086
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3086]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3352
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3352]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3352 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3352]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3352]
variable      check0 equal ${check}
variable      check0 equal 3874
variable      b equal ${check}+1
variable      b equal 3874+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 13.4929089417297 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 13.4929089417297 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 9.84e-05 secs

variable      check1 equal ${check}
variable      check1 equal 3904
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3352 $b
create_bonds  single/bond 2 3352 3875
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020381 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3302
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3302]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3474
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3474]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3588
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3588]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3588 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3588]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3588]
variable      check0 equal ${check}
variable      check0 equal 3904
variable      b equal ${check}+1
variable      b equal 3904+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 19.8425131496025 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 19.8425131496025 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001189 secs

variable      check1 equal ${check}
variable      check1 equal 3934
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3588 $b
create_bonds  single/bond 2 3588 3905
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0034457 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2533
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2533]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2597
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2597]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3405
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3405]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2400
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2400]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2552
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2552]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2499
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2499]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2274
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2274]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2286
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2286]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2581
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2581]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2569
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2569]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2372
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2372]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3155
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3155]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3155 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3155]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3155]
variable      check0 equal ${check}
variable      check0 equal 3934
variable      b equal ${check}+1
variable      b equal 3934+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 6.3496042078728 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 6.3496042078728 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.85e-05 secs

variable      check1 equal ${check}
variable      check1 equal 3964
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3155 $b
create_bonds  single/bond 2 3155 3935
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0030317 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3508
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3508]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3508 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3508]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3508]
variable      check0 equal ${check}
variable      check0 equal 3964
variable      b equal ${check}+1
variable      b equal 3964+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 18.2551120976343 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 18.2551120976343 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001107 secs

variable      check1 equal ${check}
variable      check1 equal 3994
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3508 $b
create_bonds  single/bond 2 3508 3965
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020451 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2857
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2857]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3423
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3423]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3423 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3423]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3423]
variable      check0 equal ${check}
variable      check0 equal 3994
variable      b equal ${check}+1
variable      b equal 3994+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 1
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3228
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3228]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3228 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3228]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3228]
variable      check0 equal ${check}
variable      check0 equal 3994
variable      b equal ${check}+1
variable      b equal 3994+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 14.2866094677138 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 14.2866094677138 8.7307057858251 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 14.2866094677138 8.7307057858251 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001001 secs

variable      check1 equal ${check}
variable      check1 equal 4024
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3228 $b
create_bonds  single/bond 2 3228 3995
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020291 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3270
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3270]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2940
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2940]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 2940 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[2940]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[2940]
variable      check0 equal ${check}
variable      check0 equal 4024
variable      b equal ${check}+1
variable      b equal 4024+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 0.7937005259841 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 0.7937005259841 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001041 secs

variable      check1 equal ${check}
variable      check1 equal 4054
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 2940 $b
create_bonds  single/bond 2 2940 4025
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020958 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2320
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2320]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3309
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3309]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3250
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3250]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2319
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2319]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2916
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2916]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2564
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2564]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2661
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2661]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2459
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2459]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3594
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3594]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3301
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3301]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2440
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2440]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2349
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2349]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3216
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3216]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3216 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3216]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3216]
variable      check0 equal ${check}
variable      check0 equal 4054
variable      b equal ${check}+1
variable      b equal 4054+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 8.7307057858251 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 8.7307057858251 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.23e-05 secs

variable      check1 equal ${check}
variable      check1 equal 4084
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3216 $b
create_bonds  single/bond 2 3216 4055
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0025842 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3269
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3269]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2286
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2286]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3152
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3152]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3152 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3152]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3152]
variable      check0 equal ${check}
variable      check0 equal 4084
variable      b equal ${check}+1
variable      b equal 4084+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 7.1433047338569 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 7.1433047338569 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001381 secs

variable      check1 equal ${check}
variable      check1 equal 4114
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3152 $b
create_bonds  single/bond 2 3152 4085
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0026743 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2376
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2376]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2356
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2356]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2961
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2961]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2680
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2680]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2433
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2433]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3239
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3239]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3239 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3239]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3239]
variable      check0 equal ${check}
variable      check0 equal 4114
variable      b equal ${check}+1
variable      b equal 4114+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 7.937005259841 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 7.937005259841 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.65e-05 secs

variable      check1 equal ${check}
variable      check1 equal 4144
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3239 $b
create_bonds  single/bond 2 3239 4115
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0018954 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3093
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3093]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2494
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2494]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2279
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2279]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2546
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2546]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3295
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3295]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3295 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3295]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3295]
variable      check0 equal ${check}
variable      check0 equal 4144
variable      b equal ${check}+1
variable      b equal 4144+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 11.1118073637774 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 11.1118073637774 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 9e-05 secs

variable      check1 equal ${check}
variable      check1 equal 4174
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3295 $b
create_bonds  single/bond 2 3295 4145
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0018488 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2594
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2594]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2700
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2700]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2835
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2835]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2504
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2504]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2917
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2917]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3026
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3026]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2607
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2607]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3476
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3476]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3476 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3476]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3476]
variable      check0 equal ${check}
variable      check0 equal 4174
variable      b equal ${check}+1
variable      b equal 4174+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 16.6677110456661 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 16.6677110456661 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001231 secs

variable      check1 equal ${check}
variable      check1 equal 4204
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3476 $b
create_bonds  single/bond 2 3476 4175
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0026133 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2927
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2927]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2422
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2422]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2511
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2511]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2525
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2525]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2954
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2954]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2474
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2474]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3462
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3462]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3473
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3473]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3561
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3561]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3170
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3170]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3069
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3069]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2855
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2855]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3550
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3550]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3420
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3420]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3420 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3420]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3420]
variable      check0 equal ${check}
variable      check0 equal 4204
variable      b equal ${check}+1
variable      b equal 4204+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 15.0803099936979 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 15.0803099936979 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 9.53e-05 secs

variable      check1 equal ${check}
variable      check1 equal 4234
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3420 $b
create_bonds  single/bond 2 3420 4205
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0025194 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2632
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2632]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3569
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3569]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3378
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3378]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2844
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2844]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2984
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2984]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 2984 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[2984]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[2984]
variable      check0 equal ${check}
variable      check0 equal 4234
variable      b equal ${check}+1
variable      b equal 4234+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 2.3811015779523 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 2.3811015779523 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.92e-05 secs

variable      check1 equal ${check}
variable      check1 equal 4264
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 2984 $b
create_bonds  single/bond 2 2984 4235
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0040654 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2624
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2624]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2438
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2438]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2564
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2564]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3360
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3360]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3360 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3360]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3360]
variable      check0 equal ${check}
variable      check0 equal 4264
variable      b equal ${check}+1
variable      b equal 4264+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 13.4929089417297 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 13.4929089417297 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.000147 secs

variable      check1 equal ${check}
variable      check1 equal 4294
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3360 $b
create_bonds  single/bond 2 3360 4265
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0049952 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2550
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2550]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3033
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3033]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3163
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3163]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3163 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3163]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3163]
variable      check0 equal ${check}
variable      check0 equal 4294
variable      b equal ${check}+1
variable      b equal 4294+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 6.3496042078728 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 6.3496042078728 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001204 secs

variable      check1 equal ${check}
variable      check1 equal 4324
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3163 $b
create_bonds  single/bond 2 3163 4295
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.004785 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2544
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2544]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3010
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3010]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3085
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3085]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3531
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3531]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3531 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3531]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3531]
variable      check0 equal ${check}
variable      check0 equal 4324
variable      b equal ${check}+1
variable      b equal 4324+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 17.4614115716502 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 17.4614115716502 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001626 secs

variable      check1 equal ${check}
variable      check1 equal 4354
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3531 $b
create_bonds  single/bond 2 3531 4325
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0072975 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3011
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3011]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3011 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3011]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3011]
variable      check0 equal ${check}
variable      check0 equal 4354
variable      b equal ${check}+1
variable      b equal 4354+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 1.5874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 1.5874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 9.01e-05 secs

variable      check1 equal ${check}
variable      check1 equal 4384
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3011 $b
create_bonds  single/bond 2 3011 4355
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0025514 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3522
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3522]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2369
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2369]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3150
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3150]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2348
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2348]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3018
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3018]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3272
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3272]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3272 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3272]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3272]
variable      check0 equal ${check}
variable      check0 equal 4384
variable      b equal ${check}+1
variable      b equal 4384+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 10.3181068377933 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 10.3181068377933 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.74e-05 secs

variable      check1 equal ${check}
variable      check1 equal 4414
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3272 $b
create_bonds  single/bond 2 3272 4385
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0026554 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3517
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3517]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3536
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3536]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3536 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3536]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3536]
variable      check0 equal ${check}
variable      check0 equal 4414
variable      b equal ${check}+1
variable      b equal 4414+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 18.2551120976343 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 18.2551120976343 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001441 secs

variable      check1 equal ${check}
variable      check1 equal 4444
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3536 $b
create_bonds  single/bond 2 3536 4415
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0022448 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2482
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2482]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3353
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3353]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2480
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2480]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2307
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2307]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3140
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3140]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3140 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3140]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3140]
variable      check0 equal ${check}
variable      check0 equal 4444
variable      b equal ${check}+1
variable      b equal 4444+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 7.1433047338569 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 7.1433047338569 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001066 secs

variable      check1 equal ${check}
variable      check1 equal 4474
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3140 $b
create_bonds  single/bond 2 3140 4445
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0026917 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2916
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2916]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 2901
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2901]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
#print        "seed is = $s"
#print        "j = $(v_j)"
variable      randatomj equal ${randnj}
variable      randatomj equal 3104
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3104]
#print         "z coord of randatom is = ${randzj}"
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3104 type 4
  1 settings made for type
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3104]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3104]
variable      check0 equal ${check}
variable      check0 equal 4474
variable      b equal ${check}+1
variable      b equal 4474+1
#print        "Grafted Bead ID = $b"
#print        "Random Wall atom = ${randatomj}"
#print        "x = ${x0}"
#print        "y = ${y0}"
variable      flag python A_Check
python        A_Check input 2 v_randatomj v_M return v_flag format iii file A_Check.py
variable      flag0 equal ${flag}
variable      flag0 equal 0
#print        "flag = ${flag0}"
if            "${flag0} == 1" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 5.5559036818887 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 5.5559036818887 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001292 secs

variable      check1 equal ${check}
variable      check1 equal 4504
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3104 $b
create_bonds  single/bond 2 3104 4475
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.003303 secs
next j
jump MDPBB.in loopj

# Assign the beads to 2 different groups of grafted and non-grafted beads

group         gbeads type 2
60 atoms in group gbeads
group         fbeads type 3
1740 atoms in group fbeads

#--- Create harmonic bonds in the walls ---#
bond_coeff    3 harmonic 800.0 $(1.5874 * sqrt(2)/2)
bond_coeff    3 harmonic 800.0 1.1224613044555256103
create_bonds  many bwall bwall 3 0.5 1.2
Neighbor list info ...
  update every 1 steps, delay 10 steps, check yes
  max neighbors/atom: 4000, page size: 100000
  master list distance cutoff = 11.1225
  ghost atom cutoff = 11.1225
  binsize = 5.56123, bins = 4 4 13
  2 neighbor lists, perpetual/occasional/extra = 1 1 0
  (1) command create_bonds, occasional
      attributes: full, newton on
      pair build: full/bin
      stencil: full/bin/3d
      bin: standard
  (2) pair lj/cut, perpetual
      attributes: half, newton on
      pair build: half/bin/newton
      stencil: half/bin/3d/newton
      bin: standard
Added 6964 bonds, new total = 8764
  14 = max # of 1-2 neighbors
  14 = max # of special neighbors
  special bonds CPU = 0.0037674 secs
create_bonds  many twall twall 3 0.5 1.2
Added 6964 bonds, new total = 15728
  14 = max # of 1-2 neighbors
  14 = max # of special neighbors
  special bonds CPU = 0.0035961 secs

info system


fix           1 twall setforce 0.0 0.0 0.0  # Freeze top wall
fix           2 bwall setforce 0.0 0.0 0.0  # Freeze bottom wall

#dump           1 all image 250 stg0.*.jpg type type zoom 2 view 60 120 bond none none
#dump          2 all atom 50 dump.brush
#dump          3 all custom 100 dump.random.bin id x y z vx vy vz


#--- Minimize the system to obtain the initial structure for the PB bilayer ---#

timestep      0.010
minimize      0.0 1.0e-8 10000 100000
WARNING: Using 'neigh_modify every 1 delay 0 check yes' setting during minimization (src/min.cpp:168)
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 4000, page size: 100000
  master list distance cutoff = 11.1225
  ghost atom cutoff = 11.1225
  binsize = 5.56123, bins = 4 4 13
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair lj/cut, perpetual
      attributes: half, newton on
      pair build: half/bin/newton
      stencil: half/bin/3d/newton
      bin: standard
WARNING: Inconsistent image flags (src/domain.cpp:784)
Per MPI rank memory allocation (min/avg/max) = 25.85 | 25.85 | 25.85 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0            0   0.41035721    20.380875    20.791232    4.3300441 
      78            0 -0.076612708    18.666412    18.589799    4.1838791 
Loop time of 0.91836 on 1 procs for 78 steps with 4504 atoms

97.0% CPU use with 1 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = linesearch alpha is zero
  Energy initial, next-to-last, final = 
         20.7912318743      18.5897991135      18.5897991135
  Force two-norm initial, final = 5230.88 91.4254
  Force max component initial, final = 634.791 7.30296
  Final line search alpha, max atom move = 4.22877e-09 3.08825e-08
  Iterations, force evaluations = 78 137

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.84958    | 0.84958    | 0.84958    |   0.0 | 92.51
Bond    | 0.042147   | 0.042147   | 0.042147   |   0.0 |  4.59
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.011645   | 0.011645   | 0.011645   |   0.0 |  1.27
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0.0023373  | 0.0023373  | 0.0023373  |   0.0 |  0.25
Other   |            | 0.01265    |            |       |  1.38

Nlocal:    4504 ave 4504 max 4504 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    15786 ave 15786 max 15786 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    2.59291e+06 ave 2.59291e+06 max 2.59291e+06 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 2592910
Ave neighs/atom = 575.69
Ave special neighs/atom = 6.98401
Neighbor list builds = 0
Dangerous builds = 0

#--- Shrink the simulation box such that it encloses the system exactly ---#

variable z_f equal bound(all,zmin)
variable z_c equal bound(all,zmax)

change_box all z final ${z_f} $(v_z_c + 0.1) units box
change_box all z final 0 $(v_z_c + 0.1) units box
change_box all z final 0 70.099999999999994316 units box
  orthogonal box = (0 0 0) to (20 20 70.1)

info variables                              # For diagnostics

minimize      0.0 1.0e-8 10000 100000
WARNING: Using 'neigh_modify every 1 delay 0 check yes' setting during minimization (src/min.cpp:168)
WARNING: Inconsistent image flags (src/domain.cpp:784)
Per MPI rank memory allocation (min/avg/max) = 26.23 | 26.23 | 26.23 Mbytes
Step Temp E_pair E_mol TotEng Press 
      78            0 -0.076612708    18.666412    18.589799    4.2972796 
      81            0 -0.074053812    18.656968    18.582914     4.301802 
Loop time of 0.30337 on 1 procs for 3 steps with 4504 atoms

103.0% CPU use with 1 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = linesearch alpha is zero
  Energy initial, next-to-last, final = 
         18.5897991135      18.5829139104      18.5829139104
  Force two-norm initial, final = 91.4254 63.8966
  Force max component initial, final = 7.30296 4.99447
  Final line search alpha, max atom move = 8.68605e-09 4.33822e-08
  Iterations, force evaluations = 3 48

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.28098    | 0.28098    | 0.28098    |   0.0 | 92.62
Bond    | 0.014592   | 0.014592   | 0.014592   |   0.0 |  4.81
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.0039037  | 0.0039037  | 0.0039037  |   0.0 |  1.29
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0.0008044  | 0.0008044  | 0.0008044  |   0.0 |  0.27
Other   |            | 0.003088   |            |       |  1.02

Nlocal:    4504 ave 4504 max 4504 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    15786 ave 15786 max 15786 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    2.6198e+06 ave 2.6198e+06 max 2.6198e+06 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 2619800
Ave neighs/atom = 581.661
Ave special neighs/atom = 6.98401
Neighbor list builds = 0
Dangerous builds = 0

#--- Remove the fixes for the restart file ---#
unfix         1
unfix         2

#--- Write Restart File ---#

write_restart  MDPBB.rst
#write_data     MDPBB.data
print        "Created a Polymer Brush Bilayer with Surface Coverage = $(v_M/(lx*ly))"
Created a Polymer Brush Bilayer with Surface Coverage = 0.074999999999999997224

label          sim

include        ecs.in
# This is an input script that creates a mono disperse polymer brush bilayer
# A coarse grained bead-spring model is used for the polymers which are end
# grafted to the surfaces of 2 opposing FCC walls at random sites.

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:88)
  using 1 OpenMP thread(s) per MPI task


#--- Read in the Restart file ---#

read_restart    MDPBB.rst
  restoring atom style bond from restart
  orthogonal box = (0 0 0) to (20 20 70.1)
  1 by 1 by 1 MPI processor grid
  restoring pair style lj/cut from restart
  restoring bond style hybrid from restart
  4504 atoms
  15728 bonds
  14 = max # of 1-2 neighbors
  14 = max # of special neighbors
  special bonds CPU = 0.0072487 secs
  read_restart CPU = 0.0119319 secs
reset_timestep  0

#--- Redefine the bond coeffs ---#

bond_coeff    1 fene 30.0 1.5 0.0 0.0      # Values obtained from literature [Grest, Galushcko]
bond_coeff    2 fene 30.0 1.5 0.0 0.0       # This is the grafting bond between the polymer and the wall atom
bond_coeff    3 harmonic 800.0 $(1.5874 * sqrt(2)/2)
bond_coeff    3 harmonic 800.0 1.1224613044555256103

neigh_modify   every 1 delay 0 check yes

#--- Define variables ---#

# for dimensional values: eps = 4.14e-21 J at T = 300K and sigma = 0.5nm

#--- Moved to main.in ---#
#variable       Temp       equal ${Tstr} #[Grest96]
#variable       Tstep     equal 0.005                       # Timestep in Tau (default = 0.005)
#variable       Nequil    equal 10000                       # Number of timesteps to equilibrate
#variable       Ncomp     equal 200000                      # Number of timesteps to compress - until no more occilation of walls
#variable       Nshear    equal 1000000                     # Number of timesteps to shear - use approx 4ns for 10m/s
#variable       Nthermo   equal 1000                        # Number of timesteps between thermo data prints
#variable       Ndump_e   equal 10000
#variable       Ndump_c   equal 10000                       # Number of timesteps per dump file (compression)
#variable       Ndump_s   equal 10000                       # Number of timesteps per dump file (shear)
#variable       Wall_v    equal 0.0002                      # Wall velocity (A/fs) - equal to 10 m/s
#variable       Pcomp     equal 1
variable        Pcomp2    equal ${Pcomp}
variable        Pcomp2    equal 3
variable        Wall_v2   equal ${Wall_v}
variable        Wall_v2   equal 0.5

# For Equilibration - density profiles (10 for entire run)
variable       Nfreqe   equal ${Nequil}/10                  # Calculate bin averages every this many timesteps
variable       Nfreqe   equal 300000/10                  
variable       Neverye  equal 100                           # Use input values every this many timesteps
variable       Nrepeate equal ${Nfreqe}/${Neverye}          #s Number of times to use input values
variable       Nrepeate equal 30000/${Neverye}          
variable       Nrepeate equal 30000/100          


# For compression - density profiles (10 for entire run)
variable       Nfreqc   equal ${Ncomp}/10                  # Calculate bin averages every this many timesteps
variable       Nfreqc   equal 400000/10                  
variable       Neveryc  equal 100                          # Use input values every this many timesteps
variable       Nrepeatc equal ${Nfreqc}/${Neveryc}         # Number of times to use input values
variable       Nrepeatc equal 40000/${Neveryc}         
variable       Nrepeatc equal 40000/100         

# For Shear - density profiles (10 for entire run)
variable       Nfreqs   equal ${Nshear}/10                  # Calculate bin averages every this many timesteps
variable       Nfreqs   equal 1000000/10                  
variable       Neverys  equal 100                          # Use input values every this many timesteps
variable       Nrepeats equal ${Nfreqs}/${Neverys}         # Number of times to use input values
variable       Nrepeats equal 100000/${Neverys}         
variable       Nrepeats equal 100000/100         


variable       binres   equal  0.001                       # Giving 1000 data points across the sim. box


variable       bwzmin  equal bound(bwall,zmin)
variable       bwzmax  equal bound(bwall,zmax)
variable       twzmin  equal bound(twall,zmin)
variable       twzmax  equal bound(twall,zmax)
variable       c       equal count(gbeads)
variable       surfcov equal $(v_M/(lx*ly))
variable       surfcov equal 0.074999999999999997224
variable       D       equal v_twzmin-v_bwzmax
variable       Dout    equal v_twzmax-v_bwzmin
variable       srate   equal (v_Wall_v/v_D)


#--- Define regions and groups ---#

print        "bwzmin = ${bwzmin}"
bwzmin = 0
print        "bwzmax = ${bwzmax}"
bwzmax = 2.3811015779523
print        "twzmin = ${twzmin}"
twzmin = 67.6188984220477
print        "twzmax = ${twzmax}"
twzmax = 70

region         bwallb  block  INF INF INF INF ${bwzmin} $(v_bwzmin + 0.4) units box
region         bwallb  block  INF INF INF INF 0 $(v_bwzmin + 0.4) units box
region         bwallb  block  INF INF INF INF 0 0.4000000000000000222 units box
region         bwallm  block  INF INF INF INF $(v_bwzmin + 0.35) $(v_bwzmax - 0.35) units box
region         bwallm  block  INF INF INF INF 0.3499999999999999778 $(v_bwzmax - 0.35) units box
region         bwallm  block  INF INF INF INF 0.3499999999999999778 2.0311015779522998415 units box
region         bwallt  block  INF INF INF INF $(v_bwzmax - 0.7) $(v_bwzmax) units box
region         bwallt  block  INF INF INF INF 1.6811015779522999747 $(v_bwzmax) units box
region         bwallt  block  INF INF INF INF 1.6811015779522999747 2.3811015779522999303 units box
region         bmelt   block  INF INF INF INF $(v_bwzmax) $(v_twzmax / 2) units box
region         bmelt   block  INF INF INF INF 2.3811015779522999303 $(v_twzmax / 2) units box
region         bmelt   block  INF INF INF INF 2.3811015779522999303 35 units box
region         tmelt   block  INF INF INF INF $(v_twzmax / 2)  $(v_twzmin - 0.1) units box
region         tmelt   block  INF INF INF INF 35  $(v_twzmin - 0.1) units box
region         tmelt   block  INF INF INF INF 35  67.518898422047712415 units box
region         twallb  block  INF INF INF INF $(v_twzmin - 0.1) $(v_twzmin + 0.35) units box
region         twallb  block  INF INF INF INF 67.518898422047712415 $(v_twzmin + 0.35) units box
region         twallb  block  INF INF INF INF 67.518898422047712415 67.968898422047701047 units box
region         twallm  block  INF INF INF INF $(v_twzmin + 0.35) $(v_twzmax - 0.35) units box
region         twallm  block  INF INF INF INF 67.968898422047701047 $(v_twzmax - 0.35) units box
region         twallm  block  INF INF INF INF 67.968898422047701047 69.650000000000005684 units box
region         twallt  block  INF INF INF INF $(v_twzmax - 0.35) $(v_twzmax) units box
region         twallt  block  INF INF INF INF 69.650000000000005684 $(v_twzmax) units box
region         twallt  block  INF INF INF INF 69.650000000000005684 70 units box

group          bwsurf  region bwallt
338 atoms in group bwsurf
group          bwbulk  region bwallm
676 atoms in group bwbulk
group          bwout   region bwallb
338 atoms in group bwout
group          bbeads  region bmelt
900 atoms in group bbeads
group          tbeads  region tmelt
900 atoms in group tbeads
group          abeads  union  bbeads tbeads
1800 atoms in group abeads
group          twsurf  region twallb
338 atoms in group twsurf
group          twbulk  region twallm
676 atoms in group twbulk
group          twout   region twallt
338 atoms in group twout
group          rest4bot union abeads twall
3152 atoms in group rest4bot
group          rest4top union abeads bwall
3152 atoms in group rest4top
group          walls    union bwall twall
2704 atoms in group walls
group          alltop   union twall tbeads
2252 atoms in group alltop
# Other groups are: gbeads fbeads bwall twall

info system
info coeffs

#--- Exclude wall-wall interactions ---#

#neigh_modify exclude type 1 1
#neigh_modify exclude type 1 4
#neigh_modify exclude type 4 4


############
# Computes #
############

#compute         sysTemp   all    temp/deform                       # Calculate the temperature without translational velocities
#compute         sysPress  all    pressure sysTemp                  # Calculate the pressure of the entire system of atoms
compute         melTemp   abeads temp
compute         melPress  all    pressure melTemp
compute         wallTemp  walls  temp
compute         wallPress all    pressure wallTemp
variable        melDens   equal  $(mass(abeads))/(lx*ly*v_D)
variable        melDens   equal  1800/(lx*ly*v_D)

#--- Forces and Energies ---#

compute         fbwall  bwall group/group rest4bot
compute         ftwall  twall group/group rest4top
compute         fwalls  bwall group/group twall

#--- Like done in comp_shear.in ---#
group           rest_bot union abeads bwall
3152 atoms in group rest_bot
group           rest_bot2 subtract all bwsurf
4166 atoms in group rest_bot2
compute         ggbot bwsurf group/group rest_bot
compute         ggbot2 bwsurf group/group rest_bot

group           rest_top union abeads twall
3152 atoms in group rest_top
group           rest_top2 subtract all twsurf
4166 atoms in group rest_top2
compute         ggtop twsurf group/group rest_top
compute         ggtop2 twsurf group/group rest_top2

#--- Calculate pressure of simulation area (Copy pasta) --#

compute        mopzt abeads stress/mop z ${twzmin} total
compute        mopzt abeads stress/mop z 67.6188984220477 total
compute        mopzc abeads stress/mop z center total
compute        mopxc abeads stress/mop x center total


#--- Calculate the applied force on each atom for the pressure applied---#
variable Fcomp equal (${Pcomp}*lx*ly)
variable Fcomp equal (3*lx*ly)
variable Fcatom equal (-${Fcomp})/(count(twout))
variable Fcatom equal (-1200)/(count(twout))


#compute	        peratom   all   stress/atom NULL
#compute	        p_all     all   reduce sum c_peratom[1] c_peratom[2] c_peratom[3]
#variable	      press_all equal -(c_p_all[1]+c_p_all[2]+c_p_all[3])/(3*v_volume)



info groups variables                              # For diagnostics


#################
# Equilibration #
#################

#--- Number Density profiles (Equil) ---#
compute         eabeads abeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         eabeads abeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             abeads_edz abeads ave/chunk ${Neverye} ${Nrepeate} ${Nfreqe} eabeads density/number file abeads_edz
fix             abeads_edz abeads ave/chunk 100 ${Nrepeate} ${Nfreqe} eabeads density/number file abeads_edz
fix             abeads_edz abeads ave/chunk 100 300 ${Nfreqe} eabeads density/number file abeads_edz
fix             abeads_edz abeads ave/chunk 100 300 30000 eabeads density/number file abeads_edz
compute         ebbeads bbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         ebbeads bbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             bbeads_edz bbeads  ave/chunk ${Neverye} ${Nrepeate} ${Nfreqe} ebbeads density/number file bbeads_edz
fix             bbeads_edz bbeads  ave/chunk 100 ${Nrepeate} ${Nfreqe} ebbeads density/number file bbeads_edz
fix             bbeads_edz bbeads  ave/chunk 100 300 ${Nfreqe} ebbeads density/number file bbeads_edz
fix             bbeads_edz bbeads  ave/chunk 100 300 30000 ebbeads density/number file bbeads_edz
compute         etbeads tbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         etbeads tbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             tbeads_edz tbeads  ave/chunk ${Neverye} ${Nrepeate} ${Nfreqe} etbeads density/number file tbeads_edz
fix             tbeads_edz tbeads  ave/chunk 100 ${Nrepeate} ${Nfreqe} etbeads density/number file tbeads_edz
fix             tbeads_edz tbeads  ave/chunk 100 300 ${Nfreqe} etbeads density/number file tbeads_edz
fix             tbeads_edz tbeads  ave/chunk 100 300 30000 etbeads density/number file tbeads_edz

#--- Radius of gyration of the bottom brush chains ---#
compute         chunk_bot bbeads chunk/atom molecule
compute         rgbbeads bbeads gyration/chunk chunk_bot
variable        aveRg    equal  (ave(c_rgbbeads))


#--- Fixes (Equil) ---#

#velocity       abeads create ${Temp} 290842 dist gaussian
#fix             nvt_melt    abeads nvt temp ${Temp} ${Temp} 100.0

# NVE for all and langevin thermostat for melt
fix             nve_melt abeads nve
fix             lang_melt abeads langevin ${Temp} ${Temp} 0.1 798753
fix             lang_melt abeads langevin 1 ${Temp} 0.1 798753
fix             lang_melt abeads langevin 1 1 0.1 798753
fix             nve_walls  walls nve

#--- Langevin thermostat the bulk of the walls in y ---#
# Only thermostat the bulk of the wall not the surface or the outer layer
compute         Tempyt     twbulk temp/partial 0 1 0
fix             lang_tbulk twbulk langevin ${Temp} ${Temp} 0.1 87239 zero yes
fix             lang_tbulk twbulk langevin 1 ${Temp} 0.1 87239 zero yes
fix             lang_tbulk twbulk langevin 1 1 0.1 87239 zero yes
fix_modify      lang_tbulk temp Tempyt
compute         Tempyb     bwbulk temp/partial 0 1 0
fix             lang_bbulk bwbulk langevin ${Temp} ${Temp} 0.1 87239 zero yes
fix             lang_bbulk bwbulk langevin 1 ${Temp} 0.1 87239 zero yes
fix             lang_bbulk bwbulk langevin 1 1 0.1 87239 zero yes
fix_modify      lang_bbulk temp Tempyb

#--- Freeze the outer layer of the walls ---#
fix             freeze_bout bwout setforce 0.0 0.0 0.0
fix             freeze_tout twout setforce 0.0 0.0 0.0

variable        sbot equal  f_freeze_bout[1]/(lx*ly)
variable        pbot equal -f_freeze_bout[3]/(lx*ly)
#--- Thermo output ---#

thermo_style  custom step etotal ke pe epair temp c_melTemp c_wallTemp v_Fcatom v_Pcomp2 press pxx pyy pzz pxy pxz pyz c_melPress c_wallPress c_mopzc[1] c_mopzc[3] c_mopxc[3] v_melDens v_surfcov v_aveRg v_Wall_v2 v_srate v_D v_bwzmax zhi c_fbwall[1] c_fbwall[3] c_ftwall[1] c_ftwall[3] v_sbot v_pbot #c_ggbot[1] c_ggbot[3] c_ggtop[1] c_ggtop[3]
thermo        ${Nthermo}
thermo        1000
thermo_modify flush yes

#--- Dumps ---#
#dump           eq all image ${Ndump_e} stg1.*.jpg type type zoom 2 view 60 120 bond none none


#--- Run Equilibration ---#
timestep    ${Tstep}
timestep    0.005
run         ${Nequil}
run         300000
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 1.42246
  ghost atom cutoff = 1.42246
  binsize = 0.711231, bins = 29 29 99
  11 neighbor lists, perpetual/occasional/extra = 1 10 0
  (1) pair lj/cut, perpetual
      attributes: half, newton on
      pair build: half/bin/newton
      stencil: half/bin/3d/newton
      bin: standard
  (2) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (3) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (4) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (5) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (6) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (7) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (8) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (9) compute stress/mop, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (10) compute stress/mop, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (11) compute stress/mop, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
WARNING: Inconsistent image flags (src/domain.cpp:784)
Per MPI rank memory allocation (min/avg/max) = 7.843 | 7.843 | 7.843 Mbytes
Step TotEng KinEng PotEng E_pair Temp c_melTemp c_wallTemp v_Fcatom v_Pcomp2 Press Pxx Pyy Pzz Pxy Pxz Pyz c_melPress c_wallPress c_mopzc[1] c_mopzc[3] c_mopxc[3] v_melDens v_surfcov v_aveRg v_Wall_v2 v_srate v_D v_bwzmax Zhi c_fbwall[1] c_fbwall[3] c_ftwall[1] c_ftwall[3] v_sbot v_pbot 
WARNING: One or more chunks do not contain all atoms in molecule (src/compute_chunk_atom.cpp:1161)
       0    19.516362            0    19.516362 -0.074053812            0            0            0   -3.5502959            3    4.0656815    4.9119712    4.9119361    2.3731372 -5.4497425e-06 4.2168082e-07 8.785454e-07    4.0656815    4.0656815            0            0            0  0.068978418        0.075    3.6166982          0.5 0.0076642686    65.237797    2.3811016         70.1            0            0            0            0 -1.4033219e-15    63.914914 
    1000    15.686516    2.1172523    13.569264 -0.028475937     1.411815     1.016306     1.675571   -3.5502959            3    2.2080825    3.4166281    3.6781876  -0.47056813 -0.0073899587  0.023228566 -0.024332905    2.0465608     2.142878            0            0   0.10301221  0.069845858        0.075    3.3266826          0.5 0.0077606509    64.427585    2.7905079         70.1 0.00022019751 -0.00034079459            0            0   -1.1057565    16.474155 
    2000     14.14308    1.8746047    12.268475 -0.033577378     1.250014   0.99064444    1.4231016   -3.5502959            3    1.9031833     3.401062    3.3047614  -0.99627363 -0.0024177836 0.0071427408 0.0053989594    1.7659991    1.8396252            0            0  0.037122579  0.069783351        0.075    3.1318603          0.5 0.0077537056    64.485296    2.7586741         70.1 -0.0014743428 -0.0022741674 8.2872601e-05 0.00016993449    3.0432568    8.4911471 
    3000    13.245349     1.549549      11.6958 -0.044625595    1.0332621   0.98771341    1.0639596   -3.5502959            3    1.8994108    3.3149243    3.3009107  -0.91760278 -0.0038184867 0.0011859994 -0.0056561802    1.7968472    1.8360407            0            0  0.029602214  0.069901479        0.075    2.9599739          0.5  0.007766831     64.37632    2.8345688         70.1 2.3498806e-05 -0.0016344086 0.0025932532 0.0041143595  -0.99140489    4.9538623 
    4000    12.711893    1.4466874    11.265206 -0.051629263   0.96467247    1.0214677   0.92722893   -3.5502959            3    1.6205165    3.0861321    3.0800537   -1.3046364 0.00062366648 -0.029636329 -0.0070648805    1.5311335    1.5549808            0            0 -0.020287251  0.069918031        0.075    2.8020155          0.5 0.0077686701     64.36108    2.8105656         70.1 0.0021791496 -0.0037064941 0.0049501198 0.0051139532    1.2388012   -3.8739686 
    5000    12.314563     1.387414    10.927149 -0.056551639   0.92514808    1.0157917   0.86516185   -3.5502959            3    1.5290805    3.0449297    2.9818173   -1.4395053 -0.0011206748 -0.031900182 -0.0049613332    1.4456807     1.463909            0            0 0.0068221478  0.069915951        0.075    2.6927309          0.5  0.007768439    64.362995    2.8230204         70.1 -0.00044456644 -0.0098994493 -0.0050561143  0.012639123    1.7473483   -7.9114161 
    6000    12.006958    1.3415862    10.665372  -0.07273513   0.89458939   0.99644132    0.8271321   -3.5502959            3    1.6671953    3.0741276    3.0511247   -1.1236663 0.0022347875  0.074590919 -0.022890978    1.5874615    1.6032653            0            0  0.075423898  0.069951837        0.075    2.5985544          0.5 0.0077724264    64.329976    2.8220343         70.1 -0.0017860401 -0.0072111137 -0.0057039545 0.0082554011   -3.1390262   -7.9022806 
    7000    11.772353     1.323026    10.449327 -0.087738387   0.88221319    1.0038594   0.80157714   -3.5502959            3    1.6854687    3.0216906    3.0649119   -1.0301965 0.00055780924  0.023747027 -0.012319088    1.6081982    1.6210627            0            0   0.02978864  0.069920359        0.075    2.5147094          0.5 0.0077689287    64.358938    2.8201808         70.1 0.0023023002 -0.0062058994  -0.00403576  0.011530037  -0.87874076   -9.8031099 
    8000    11.496757    1.2590721    10.237685 -0.097473115   0.83956778   0.97929727   0.74688047   -3.5502959            3    1.8198928    3.0986388    3.1252646  -0.76422506 -0.00092379347  -0.04603529  0.051763208     1.747895    1.7570627            0            0   0.13715616   0.06994116        0.075    2.4265471          0.5 0.0077712399    64.339797    2.8418961         70.1 -0.004131953 -0.0074517847 -0.0034355685  0.020606396     1.923777   -6.1695806 
    9000    11.391934     1.279259    10.112675  -0.12347198   0.85302871    0.9772688   0.77065546   -3.5502959            3    1.9274335    3.1584189    3.1468697  -0.52298824 0.0059551388  0.017362596 -0.017444201    1.8531438    1.8647335            0            0  -0.02127727  0.069892602        0.075    2.3586365          0.5 0.0077658446    64.384497    2.8054883         70.1 -0.0035512988 -0.012259994 0.0026302998  0.026606546   -2.8652059    2.0796855 
   10000    11.339406    1.3103671    10.029039   -0.1189794   0.87377205    1.0157153     0.779624   -3.5502959            3    1.9699135    3.1704255    3.1798507  -0.44053584 0.0042543248 -0.0032809058  0.031600974    1.8947593    1.9047469            0            0   -0.2052373  0.069905556        0.075    2.3265716          0.5  0.007767284    64.372566      2.81295         70.1 -0.0037852001 -0.041729536  0.011214405  0.032671495    4.4965193   -3.1706543 
   11000     11.20477    1.3038771    9.9008928  -0.14726464   0.86944443    1.0402341   0.75609583   -3.5502959            3     1.986249    3.1812739    3.1746972  -0.39722394 -0.0039607614 0.0079828013  0.064598423    1.9133629    1.9195093            0            0  0.048616929  0.069917234        0.075    2.2589769          0.5 0.0077685815    64.361814    2.8182314         70.1 -0.0038655928 -0.042737099 0.0083799866  0.048798235  -0.93142234    1.9138828 
   12000    11.162146    1.3019182    9.8602277  -0.14905055   0.86813822    1.0149542   0.77074505   -3.5502959            3    1.9637295    3.1200865    3.1371227  -0.36602079 -0.0051122984  0.015318837 -0.037757376    1.8894312    1.8986117            0            0  -0.24851081  0.069913004        0.075    2.2226694          0.5 0.0077681116    64.365708    2.8235939         70.1 0.0030412892 -0.064637007 -0.013751389  0.070484395  -0.78044401    1.4229422 
   13000    11.100447    1.2729373    9.8275101  -0.15189067   0.84881335    1.0226319   0.73344124   -3.5502959            3    2.1194055    3.2645412    3.2409337  -0.14725852 0.0056393627 0.0014636158  0.022214278    2.0487032    2.0537951            0            0  0.022365925  0.069890016        0.075    2.1851984          0.5 0.0077655574    64.386879    2.8076113         70.1 -0.003440076 -0.054722586 -0.0012604271  0.080869611    1.4645272   0.45273536 
   14000    11.108646    1.2876526     9.820993  -0.14034806   0.85862571   0.98548776   0.77450946   -3.5502959            3    2.0953259    3.2144102    3.1956139  -0.12404646 -0.0037087903 -0.032812274 -0.038209319    2.0206647    2.0320986            0            0 -0.043436538  0.069894804        0.075    2.1441821          0.5 0.0077660893    64.382469    2.8230015         70.1 0.0055186961 -0.095158686 0.0038713712  0.069007537  -0.35786036  -0.73530246 
   15000    11.056205    1.2523581    9.8038467  -0.14374179   0.83509081   0.97982336   0.73907203   -3.5502959            3    2.0979853    3.2108718     3.198232  -0.11514787 -0.0092545084   0.02222917  0.028428213    2.0267403    2.0351215            0            0   0.10124139  0.069873205        0.075    2.1158116          0.5 0.0077636894     64.40237    2.7879705         70.1 -0.0015847849 -0.064390863  0.011928229  0.079081517   0.27006031    3.0416786 
   16000    11.041897    1.2596803    9.7822169  -0.16163031   0.83997336   0.99989273    0.7338487   -3.5502959            3    2.0701184    3.1930903    3.2051129  -0.18784809 -0.0060649464 0.0051749338 0.0056250024    1.9993768    2.0059669            0            0  -0.10917259  0.069939928        0.075    2.0980093          0.5 0.0077711032    64.340929    2.8367893         70.1  0.013057242 -0.076228202 -0.0036031989  0.081265986    1.1748247    1.1428628 
   17000    11.035049    1.2632403    9.7718089  -0.15029972   0.84234723    1.0023796   0.73614823   -3.5502959            3    2.1277634    3.1972643    3.2487663 -0.062740577 -0.0042198724  0.017991701 -0.038272074    2.0568001    2.0634523            0            0 -0.014329665  0.069910292        0.075    2.0756592          0.5 0.0077678103    64.368205    2.8098713         70.1 -0.0052223062   -0.1024391 0.0084052453  0.075359194   -2.1161852   -0.7155016 
   18000    11.031067    1.2534098    9.7776572  -0.14304851   0.83579211    0.9746794   0.74366394   -3.5502959            3    2.1486538    3.2668403    3.2081647 -0.029043525 0.0037101764  0.075621171 -0.0023901241    2.0769661      2.08612            0            0   0.47425863  0.069880456        0.075    2.0769469          0.5 0.0077644951    64.395688    2.7961767         70.1 -0.010465279 -0.074007715 -0.0015550113   0.10467113  -0.85039211   -1.2795903 
   19000    11.094128    1.3103708    9.7837571  -0.16393931   0.87377455     1.021694   0.77564901   -3.5502959            3    2.1054301    3.1971441     3.220818  -0.10167174  0.008197322 -0.027249513  0.032786482    2.0306591    2.0398799            0            0  0.087342243  0.069962586        0.075    2.0644632          0.5 0.0077736206    64.320093    2.8428844         70.1 -0.014802159 -0.096695074 0.0038854593  0.081593342   0.70352249   -3.3286691 
   20000    11.097398    1.3101757     9.787222  -0.14838163   0.87364445    1.0359754   0.76592717   -3.5502959            3    2.0660636    3.1806415    3.1778862  -0.16033687  -0.00423616 -0.017880168  0.022381997    1.9922297    1.9995971            0            0 -0.0051606959  0.069928863        0.075    2.0496457          0.5 0.0077698737     64.35111    2.8331555         70.1  -0.01173106  -0.10343673 -0.000517886  0.093380944   -2.8282592   -3.9010342 
   21000    11.077084    1.2907428    9.7863413  -0.14608295   0.86068631   0.99542631   0.77132761   -3.5502959            3    2.1413759    3.2301326    3.2440359 -0.050040909 0.0065358759  0.048680682  0.027630481    2.0670214     2.077511            0            0 -0.010152025  0.069889611        0.075    2.0395777          0.5 0.0077655123    64.387252    2.8236144         70.1 -0.0023272206  -0.09481439  0.011296077  0.092624723   -1.8525609   0.52638047 
   22000    11.006155    1.2575578    9.7485968  -0.15727312   0.83855805    1.0029147   0.72947957   -3.5502959            3     2.179292    3.2475674    3.2666478  0.023660779 -0.0016124066  0.030454302 -0.0069997661    2.1089716    2.1149466            0            0  0.056648783  0.069912883        0.075     2.014286          0.5 0.0077680982    64.365819    2.8184308         70.1 -0.008590074  -0.12352012 -0.0025208428  0.067481708   0.16033088    9.0711999 
   23000    11.073512    1.2660942    9.8074176   -0.1510627   0.84425027    1.0041612   0.73813277   -3.5502959            3    2.1423721    3.2447932    3.2155927 -0.033269708 -0.0013717318  -0.08460114 0.0033580714    2.0712175    2.0779467            0            0   0.24307272  0.069861443        0.075    1.9991379          0.5 0.0077623825    64.413213    2.7867631         70.1 0.00077610187 -0.073037057  -0.01149577  0.086822154   0.30363166    2.8030482 
   24000    11.047936    1.2616847    9.7862516  -0.14201876   0.84130995    0.9945447   0.73963477   -3.5502959            3    2.1619592    3.2474047      3.23983 -0.001357191 -0.0059634883 -0.043861343  0.011338024    2.0906598    2.0981508            0            0   0.17678414  0.069865318        0.075    1.9803343          0.5 0.0077628131     64.40964    2.7854214         70.1 -0.014221297 -0.091897631 -0.012442995   0.10075442  -0.09907615    1.2042018 
   25000    11.020474    1.2721535    9.7483204  -0.15366623   0.84829068     1.003108   0.74556482   -3.5502959            3    2.1584424    3.2044069    3.2541495  0.016770917 0.0057875711  0.013841833   -0.0130898    2.0865715    2.0940847            0            0 -0.052089517   0.06990414        0.075    1.9608608          0.5 0.0077671267    64.373869    2.8151936         70.1 -0.0034089515   -0.1054448 -0.0062264505   0.09092427   -1.2598367   -3.0393304 
   26000    11.068426     1.306455    9.7619715  -0.16091681   0.87116344    1.0391457   0.75968399   -3.5502959            3    2.0828557    3.1860889    3.1974793  -0.13500113 0.0032592939 0.0048753133  0.015925395    2.0096236    2.0161858            0            0   0.14994128  0.069908215        0.075    1.9588225          0.5 0.0077675795    64.370117    2.8244796         70.1  0.017254959  -0.10789015 -0.0034747381  0.080744741     1.572173   -2.2075224 
   27000    11.100121    1.2663389    9.8337822  -0.15328643    0.8444134   0.99386403   0.74525791   -3.5502959            3     2.135765    3.2354703    3.2246793 -0.052854721 0.0035995293 -0.059802144  0.023492479    2.0639236    2.0720003            0            0  0.029298759  0.069873436        0.075    1.9754519          0.5 0.0077637151    64.402157    2.8023409         70.1 0.0030783509   -0.1428244 0.0073243201   0.08807136   -2.1112041    1.4901861 
   28000    11.020267    1.2420146    9.7782522  -0.14791212    0.8281936   0.98204899    0.7261005   -3.5502959            3    2.1090543    3.2009358    3.1860987 -0.059871465 -0.0033908416   0.14807582  0.030292802    2.0390597    2.0460477            0            0 -0.038064561  0.069902718        0.075    1.9473433          0.5 0.0077669687    64.375179    2.8183268         70.1 0.0050101801 -0.088436194 0.0019082966  0.087469288   -3.5521584   -1.2706313 
   29000    11.061486    1.2811736    9.7803124  -0.14580496   0.85430542   0.98068452   0.77050901   -3.5502959            3    2.1096682    3.2142736    3.1875364 -0.072805575 -0.010283834 -0.023074297 -0.017582575    2.0353926    2.0467491            0            0   0.12757456   0.06988746        0.075    1.9393995          0.5 0.0077652733    64.389234    2.8038748         70.1 -0.031905434   -0.1333267 -0.007465184  0.098161793      2.05189   -5.9256386 
   30000    11.055667    1.2969014    9.7587657  -0.15186129   0.86479295    1.0100657   0.76842561   -3.5502959            3    2.1496949    3.2318873     3.220529 -0.0033316766 0.00098702327  0.021681352 -0.078998293    2.0756202    2.0848907            0            0  0.036396285  0.069877328        0.075    1.9253814          0.5 0.0077641476     64.39857     2.801762         70.1 -0.012768098  -0.10372769 -0.0077189014  0.068031748     2.822664   -1.5208785 
   31000    11.007074    1.2596597    9.7474145  -0.16272293   0.83995961   0.98962797   0.74065757   -3.5502959            3     2.047543    3.1816525    3.1436521  -0.18267571 -0.010378733  0.051588392 -0.012807804     1.976145    1.9840501            0            0 -0.082699371  0.069924678        0.075    1.9157709          0.5 0.0077694087    64.354962    2.8346436         70.1 0.0096854033 -0.084792721 -0.0096837047  0.085847803   -1.7879987   -1.3814169 
   32000    10.995893    1.2495326    9.7463608  -0.16056574   0.83320673    1.0135152   0.71350946   -3.5502959            3    2.1390898    3.2210332    3.2243984 -0.028162366 0.0067699546 -0.013473676  0.032074211    2.0703089    2.0740643            0            0   0.35332304  0.069859682        0.075    1.9315568          0.5 0.0077621869    64.414837    2.7851077         70.1 0.0017834816  -0.10323661 0.0073177983   0.10805703  -0.95588714  -0.27951082 
   33000    11.040032    1.2631328    9.7768992  -0.15454537   0.84227555    1.0157351      0.72714   -3.5502959            3    2.0420642    3.1494776    3.1551039  -0.17838899  0.017443247 -0.042859945 0.0035731517    1.9719693    1.9768963            0            0  0.023426353  0.069888721        0.075    1.9266965          0.5 0.0077654134    64.388072    2.8181073         70.1 -0.0017687736 -0.075073379 0.0018498126  0.082617208   0.73374979    2.1073673 
   34000    11.046652    1.2778584    9.7687932  -0.15584495   0.85209479   0.99955156   0.75426917   -3.5502959            3     2.180071    3.2504274    3.2675041  0.022281515 -0.0017006758 0.0027498085 -0.017406946     2.107361    2.1159414            0            0  0.021268479  0.069922195        0.075    1.9010163          0.5 0.0077691327    64.357248      2.82758         70.1 -0.014295426 -0.095667406 0.0080703562   0.10024926   0.90268399    3.6800958 
   35000      11.0393    1.2562398    9.7830598  -0.14515427   0.83767922   0.99405989    0.7339089   -3.5502959            3    2.1153334    3.1843241    3.2296096  -0.06793344 -0.0042749503 -0.040779271 0.0050975208    2.0445861    2.0515562            0            0  0.098516385  0.069911119        0.075    1.8829908          0.5 0.0077679021    64.367443    2.8183103         70.1 -0.017568519  -0.11138972 0.0047479908   0.10829576  -0.37982104    1.9075078 
   36000    11.031451     1.272463    9.7589884  -0.15188814   0.84849703    1.0057052   0.74417997   -3.5502959            3    2.1563176    3.2200505    3.2468477 0.0020546356 -0.0089449756 -0.080877635 -0.044010255    2.0845801    2.0917932            0            0 -0.015385025  0.069923048        0.075    1.8722754          0.5 0.0077692276    64.356462    2.8111887         70.1 -0.019854859  -0.13988606  0.014176387   0.10825345    0.7922615   -1.6202338 
   37000    11.039513    1.2699883     9.769525  -0.16491689    0.8468469    1.0045155   0.74222278   -3.5502959            3     2.212481     3.280166    3.2921842   0.06509285 0.0065118984  0.030045782 0.0055440513    2.1409322     2.148033            0            0 -0.049171239  0.069908011        0.075    1.8986127          0.5 0.0077675568    64.370305    2.8177605         70.1  0.011775037  -0.12900023 -0.0020120049  0.089049686   -1.7561891  -0.40479195 
   38000    11.050612    1.2678805    9.7827313  -0.15651039   0.84544141    1.0149662   0.73292579   -3.5502959            3    2.1273213    3.2183496    3.2308224 -0.067208137 0.0032371997 -0.023543112  0.010464456    2.0566687    2.0622027            0            0 -0.021612318  0.069927273        0.075    1.8647016          0.5 0.0077696969    64.352574    2.8282745         70.1 0.0008533464 -0.089400511  0.011907015  0.091269301  -0.29061909  -0.69256638 
   39000    11.058134    1.2754358    9.7826987  -0.14924412   0.85047934    1.0279014   0.73270949   -3.5502959            3    2.0798337    3.2074728    3.1632205  -0.13119218 0.0024182313 -0.063288042  0.033413724    2.0092019    2.0138852            0            0  0.014356895  0.069910788        0.075    1.8510113          0.5 0.0077678653    64.367748    2.8249976         70.1 0.0052270214 -0.073970879 0.0035123568  0.086693301   0.64076943   -1.7015707 
   40000    11.071271    1.2867525    9.7845181  -0.15627154    0.8580255   0.99471864   0.76736588   -3.5502959            3    2.1419525    3.2331283     3.213629 -0.020899918 -0.001135189  0.034806075 -0.0014238017    2.0679799     2.078133            0            0  0.021762379  0.069896431        0.075    1.8446681          0.5 0.0077662701     64.38097    2.8102082         70.1 -0.016679257    -0.103576 -0.014311532  0.091673046   -1.7118755  -0.31946737 
   41000    11.085601    1.3037966    9.7818043  -0.14932572   0.86939079    1.0161694   0.77202292   -3.5502959            3    2.1418367    3.2199216      3.23526 -0.029671602 -0.0065658052 -0.015298676  0.043960563    2.0674152    2.0766409            0            0 -0.017184444  0.069877192        0.075    1.8469324          0.5 0.0077641324    64.398695    2.8084237         70.1 -0.0074183657  -0.10885724 -0.0019300236  0.086468787     1.753737   0.20409696 
   42000    11.056843    1.2934545    9.7633882  -0.16254352    0.8624945   0.99961637   0.77155119   -3.5502959            3    2.1710183    3.2480098    3.2428805  0.022164605 0.0083466468  0.041669732 -0.021441829    2.0966423    2.1068846            0            0 0.0053046563  0.069858375        0.075    1.8511145          0.5 0.0077620417    64.416041    2.7758811         70.1  0.020341633 -0.090747062 -0.00069306881    0.1073889    -3.735983    4.7989783 
   43000    11.046967    1.2672255     9.779741  -0.14947805   0.84500464   0.99503995   0.74546024   -3.5502959            3    2.1279389    3.2236336    3.2269051 -0.066721953 -0.0045798496  -0.13173228 0.0053728793    2.0560781    2.0640988            0            0  -0.22871601  0.069916327        0.075     1.849816          0.5 0.0077684808    64.362648    2.8204148         70.1 0.0054319278  -0.10606224 0.0053793381   0.12098351    2.4050563   0.75494297 
   44000    11.044597    1.2697387    9.7748582   -0.1495509   0.84668048    1.0073775   0.74004074   -3.5502959            3    2.1030845     3.200188    3.2022276 -0.093162152 0.0022871907  0.038490857 -0.017590987     2.031746    2.0384528            0            0   0.27228402  0.069903825        0.075    1.8475109          0.5 0.0077670916     64.37416    2.7986747         70.1  0.010322322  -0.11801434 -0.003315415   0.13141541   0.98725539   -1.2814875 
   45000    11.059035     1.301302     9.757733  -0.15507986   0.86772729     1.024113   0.76396475   -3.5502959            3    2.1425096    3.2299148    3.2388245 -0.041210399 -0.0078844057 0.0089121831 -0.066741917     2.068865    2.0768042            0            0  0.060704719  0.069913045        0.075    1.8370865          0.5 0.0077681161    64.365671    2.8429199         70.1  0.027921676  -0.13463962 -0.013213827   0.10885736   -1.8488896   -1.1969586 
   46000    11.065115       1.2578    9.8073147  -0.14555668   0.83871956   0.97566945   0.74788192   -3.5502959            3     2.186276    3.2400926    3.2662372  0.052498132 -0.0031554541 -0.032116963  0.027351745    2.1141816    2.1236786            0            0  -0.01840452  0.069935036        0.075    1.8456485          0.5 0.0077705596    64.345431    2.8223339         70.1  0.013756308 -0.077646937 0.0075469632  0.093781788  -0.13840281    1.8034704 
   47000    11.096676    1.2796884    9.8169874  -0.14744856   0.85331503   0.98575237   0.76548616   -3.5502959            3    2.1491248      3.23061    3.2067665 0.0099978187 -0.00074818027 -0.020349184 0.0018866434    2.0753334    2.0858805            0            0  0.073435657  0.069863957        0.075    1.8297695          0.5 0.0077626619    64.410895    2.7741041         70.1 -0.008484097  -0.10160285 0.0061543945   0.12604552   0.68492268  -0.58941646 
   48000    11.081167     1.280539    9.8006279  -0.15232321   0.85388228     1.007567   0.75191228   -3.5502959            3    2.1557832    3.1923708    3.2307631  0.044215914 -0.0061419023 -0.048763162  0.020603494    2.0833004    2.0911394            0            0 -0.017174292  0.069911034        0.075     1.826049          0.5 0.0077678926    64.367522    2.8113595         70.1 -0.010446603  -0.11184373  0.014716763   0.10128045    1.0808811   0.87274909 
   49000    11.039946    1.2653722    9.7745743  -0.14790946   0.84376882   0.98695251    0.7487841   -3.5502959            3    2.1272345    3.2263607    3.2054805 -0.050137594 -0.0018353348  0.083975624  0.031491075    2.0550532    2.0639133            0            0  -0.13522749  0.069927675        0.075    1.8448324          0.5 0.0077697416    64.352204    2.8320884         70.1  0.015847104  -0.10839407 0.0048114305  0.079493473   -3.4080144   0.37786796 
   50000    11.039145    1.2905625    9.7485821  -0.15463717   0.86056609    1.0073422   0.76319661   -3.5502959            3    2.1957871    3.2557162    3.2777239  0.053921146 -0.0032559184 0.0014771272 -0.029508978    2.1222164    2.1311576            0            0  0.018711338   0.06990902        0.075     1.860858          0.5 0.0077676689    64.369376    2.8072366         70.1 0.0099894135  -0.11489359 -0.0092772098  0.088738895    1.2947793    1.2788703 
   51000    11.044457    1.2598963    9.7845608  -0.15911055   0.84011742    1.0024356   0.73239624   -3.5502959            3    2.0747927    3.2008902    3.1855492  -0.16206126 -0.0040173953 -0.087055553 -0.010226564    2.0041912    2.0104781            0            0  0.025290269  0.069913588        0.075    1.8549922          0.5 0.0077681765     64.36517    2.8304881         70.1  -0.02334123  -0.10431396 -0.0042106796   0.12368183   -1.0696943   -5.2766898 
   52000    11.068916    1.2935988    9.7753168  -0.15113136   0.86259071     1.010979   0.76414897   -3.5502959            3    2.1132859    3.1965159    3.2083817  -0.06503986   0.01420695 0.0038468061 0.0057216068    2.0396235    2.0484232            0            0  -0.11611499  0.069855773        0.075    1.8447936          0.5 0.0077617526    64.418441    2.7816955         70.1  0.020109435 -0.096889874 -0.00071626171   0.11789864   0.21720966  -0.12722458 
   53000    11.074923    1.2940565    9.7808663  -0.15125719   0.86289594     0.980054   0.78523984   -3.5502959            3    2.1572549    3.2294134     3.233403 0.0089482443  0.012343354  0.027971237 -0.018441891    2.0815593    2.0943762            0            0  0.047724251  0.069857536        0.075    1.8303048          0.5 0.0077619485    64.416815    2.7937085         70.1 -0.016387573 -0.055352869 -0.014330039   0.15129965   -1.0826615  -0.53166026 
   54000    11.040836    1.2833499    9.7574865  -0.14785714   0.85575659    1.0135737   0.75103695   -3.5502959            3    2.1796139     3.268636    3.2451517  0.025053993 0.0080895338 -0.068117622  0.015629039    2.1072154    2.1145847            0            0  0.026770678  0.069884328        0.075    1.8081026          0.5 0.0077649254    64.392119    2.7957643         70.1 0.0018954005  -0.10453222 0.0053292236   0.12533419    2.1224495  0.049784077 
   55000    11.051786    1.2613308    9.7904553  -0.15308663   0.84107395   0.98149579    0.7479264   -3.5502959            3    2.0873437    3.1784645    3.1868637  -0.10329711 0.0032725903 0.0090471797 -0.029405109    2.0152451    2.0243725            0            0  -0.02459678  0.069897013        0.075    1.8116156          0.5 0.0077663347    64.380434    2.8174874         70.1 0.0009712935  -0.14634342 -0.00089515591   0.10050349   0.43981401  -0.75251549 
   56000    11.044502    1.2960424    9.7484595  -0.14732258   0.86422017   0.99510125    0.7774311   -3.5502959            3    2.0937574    3.2025511     3.167652 -0.088931007 -0.015774015 -0.043849703 -0.0057431265    2.0188146    2.0299133            0            0  0.038943676  0.069919372        0.075    1.7996643          0.5 0.0077688191    64.359846    2.8088098         70.1 -0.0014065191  -0.07878757  0.013928978    0.1412207   -1.3301053    1.0328286 
   57000    11.060988     1.269523    9.7914646  -0.15149807   0.84653661     1.010456   0.73775213   -3.5502959            3    2.2276031    3.2808601    3.2948618   0.10708743 -0.0042639293 -0.040104167 0.0029620338    2.1564853    2.1627739            0            0 -0.010678329  0.069922039        0.075    1.8124273          0.5 0.0077691154    64.357391    2.8167275         70.1 -0.022185591  -0.10511417      0.00772  0.093891288   0.54009685     4.473177 
   58000    10.997879    1.2544992    9.7433798  -0.16587355   0.83651854     1.004608   0.72495493   -3.5502959            3    2.2084552    3.2544962    3.2835587  0.087310764 -0.0071270397 0.0015091609  0.014779071     2.138571    2.1440012            0            0 -0.0029237068  0.069915798        0.075    1.8020817          0.5  0.007768422    64.363136    2.8220439         70.1 -0.032607161  -0.12784069 -0.0086673461  0.092949356  -0.58009371    2.7863757 
   59000    11.083474    1.2719098    9.8115645  -0.15760451   0.84812819    1.0038707   0.74478648   -3.5502959            3    2.1683835    3.2343842    3.2274098  0.043356499 0.00059861427  0.031223528  0.035596877    2.0965876    2.1039768            0            0 -0.060580873  0.069886953        0.075    1.7920166          0.5  0.007765217    64.389701    2.8056488         70.1  0.013239953  -0.10154507 -0.015052427   0.08094562     1.356487   -1.4112819 
   60000    11.016322    1.2525834    9.7637389  -0.15595861   0.83524107   0.97860186   0.74013532   -3.5502959            3    2.1594442    3.2256557    3.2257189  0.026957925 0.00099637817 -0.029430507 -0.0079368039    2.0880966    2.0966587            0            0  0.061370429   0.06986883        0.075    1.7846252          0.5 0.0077632033    64.406403    2.8072902         70.1 -0.013610897  -0.11710309 0.0035661583  0.084394047  -0.70237202   -1.7490478 
   61000    11.029805    1.2917792    9.7380256  -0.15944922   0.86137738    1.0343393   0.74658006   -3.5502959            3    2.1589162    3.2517314    3.2386677 -0.013650512  0.007153007 -0.048071061  0.023112599    2.0869474    2.0925547            0            0  0.048656228  0.069911524        0.075    1.8206674          0.5 0.0077679472     64.36707    2.8179051         70.1    0.0016712  -0.10189157 -0.0074548749  0.094079733    1.1365559   0.83511916 
   62000    11.035788    1.2830966    9.7526916  -0.16402392   0.85558768    1.0255312   0.74279715   -3.5502959            3    2.1084006    3.2045061    3.2009903 -0.080294724 -0.0038378898 0.0098469754 -0.005972126    2.0367964    2.0426042            0            0  0.019391412  0.069890682        0.075    1.8182735          0.5 0.0077656313    64.386266    2.8068555         70.1 0.0029584231  -0.11483469 0.0010237473  0.090163647  -0.72724295  -0.97160698 
   63000    11.039291    1.2560859    9.7832046  -0.14953982   0.83757659   0.99839922   0.73084987   -3.5502959            3    2.0929876    3.1753484    3.2337047  -0.13009024 -0.007000081  0.016106986 0.0038307391    2.0225351     2.028932            0            0  -0.09515295  0.069908034        0.075    1.8248818          0.5 0.0077675593    64.370284    2.8074405         70.1 -0.013111552   -0.1273966 -0.0029603052   0.10512575   0.42309474    2.9669307 
   64000    11.053157    1.2718334     9.781324  -0.16164365   0.84807722    1.0062224   0.74313636   -3.5502959            3     2.065194    3.1650454    3.1811363  -0.15059949 0.0033255952 -0.051429157 -0.021503718    1.9935572    2.0006365            0            0  0.028772456  0.069911688        0.075     1.816565          0.5 0.0077679654    64.366919     2.819366         70.1 -0.010684909  -0.10330183 -0.0040510248   0.11413057    3.7832211   -1.7925281 
   65000     11.09074    1.2749989     9.815741  -0.14906075   0.85018802    1.0111035   0.74340416   -3.5502959            3    2.1453307    3.2238173    3.2131291 -0.00095418469 -0.0051423088   0.04028975 -0.0021184628     2.073668      2.08046            0            0 -0.040928261  0.069881067        0.075    1.8186214          0.5  0.007764563    64.395125    2.7758665         70.1  0.011160512  -0.12324899 0.0013476494   0.10967646   -2.5090837    1.5865206 
   66000    11.019982    1.2663962    9.7535859  -0.15935887    0.8444516   0.99258387   0.74617358   -3.5502959            3    2.1922926    3.2513969    3.2812017  0.044279323 -0.0058973534 -0.0021648603 -0.015722848     2.120363    2.1286101            0            0 -0.018990592  0.069876567        0.075    1.8305382          0.5  0.007764063    64.399271    2.8031249         70.1  0.021605803  -0.12992572 -0.0063620818   0.10393066   0.11186709   -1.3001523 
   67000    11.069872     1.283544    9.7863282   -0.1417539     0.855886    1.0287095   0.74117879   -3.5502959            3    2.1375007    3.2200328    3.2312294 -0.038760158 2.8210681e-05  0.024921658 -0.0010383034    2.0660525    2.0715004            0            0   0.19166686  0.069901821        0.075    1.8171746          0.5  0.007766869    64.376005    2.8195327         70.1 0.0053093322   -0.1156287 0.0066521638   0.13301342   -2.1173691  -0.74606983 
   68000    11.064486    1.2771597    9.7873261  -0.15024489   0.85162886   0.98378544   0.76398621   -3.5502959            3    2.1661008    3.2245515    3.2363046  0.037446155 -0.0071017644 -0.045041384 -0.0038440408     2.092454    2.1029827            0            0   0.27559143  0.069900605        0.075     1.808344          0.5 0.0077667339    64.377125    2.8171107         70.1 0.0028191243 -0.077852153 0.0066566312   0.12464935    1.4551897    2.4115595 
   69000    11.022982    1.2514275     9.771554  -0.14416526   0.83447031   0.96978075   0.74472224   -3.5502959            3    2.1593575    3.2496119    3.2120535  0.016407149 -0.0021275083 -0.044485891  0.041106522    2.0875678     2.097138            0            0 0.0026717126  0.069895188        0.075    1.7911526          0.5  0.007766132    64.382114    2.8052591         70.1 -0.0052528135  -0.12484457 0.0016273423    0.1199722   0.45201132     1.512718 
   70000    11.041385    1.2726288     9.768756  -0.14781943   0.84860759    1.0123411   0.73994758   -3.5502959            3    2.1501329    3.2143302    3.2480017 -0.011933094 0.0068579137  0.093930213 -0.0093498126    2.0788035    2.0851828            0            0 0.0047447472   0.06989008        0.075     1.798695          0.5 0.0077655644     64.38682    2.8136182         70.1 0.0054676563   -0.1198508 -0.011173157  0.090497465   0.88311007    1.5969807 
   71000    11.070273    1.3005819    9.7696913  -0.14404816   0.86724715    1.0269225   0.76129496   -3.5502959            3    2.1877433    3.2714147    3.2500684  0.041746851  0.021838851 -0.029096691 -2.9535621e-05     2.114356    2.1218577            0            0  0.012271447  0.069884724        0.075    1.7977092          0.5 0.0077649693    64.391755    2.8029828         70.1   0.01628153  -0.11527568 -0.0081262148   0.10270362   0.89938238    3.5937505 
   72000    11.033914    1.2870598    9.7468546  -0.15547877    0.8582304    1.0116489   0.75643917   -3.5502959            3    2.1201748    3.1926034    3.2087647 -0.040843602  0.011815891 0.0099785248  0.015947582    2.0472556    2.0552691            0            0 -0.030884519  0.069868071        0.075     1.772924          0.5  0.007763119    64.407102    2.7991647         70.1 -0.026795053 -0.097336004 0.0036182944   0.10870231   -0.1671922    2.3026318 
   73000    11.053695    1.2561878    9.7975067  -0.14287671   0.83764451   0.99271945   0.73474323   -3.5502959            3    2.0773725    3.1834419    3.1603536  -0.11167789 7.7941106e-05  0.029374335  0.021064153    2.0065448    2.0136813            0            0  0.059647096  0.069860629        0.075      1.76625          0.5 0.0077622921    64.413964    2.7893368         70.1 0.0098905071 -0.095225604 -0.0072810501  0.080625093  -0.36218711   -4.0458305 
   74000    11.093408    1.2892284    9.8041795  -0.14995483   0.85967648      1.00563   0.76285414   -3.5502959            3    2.1466596    3.2173006     3.218883 0.0037950359 -0.0048892943  0.099228948  0.040995223    2.0731219      2.08214            0            0 -0.019628566  0.069884966        0.075    1.7651844          0.5 0.0077649963    64.391531    2.8238135         70.1 -0.021136568 -0.086955681 0.0053550906   0.10965105   0.49349643    1.7032508 
   75000    11.059811    1.2986314      9.76118  -0.15189395   0.86594655    1.0404644   0.75011536   -3.5502959            3    2.0861267    3.1789659    3.1849576  -0.10554345 -0.011429747 -0.084550895  0.023283042    2.0138171    2.0193722            0            0   0.15373163  0.069864712        0.075    1.7753549          0.5 0.0077627458    64.410199    2.8034614         70.1 0.0063022875 -0.082807429 0.0037728981   0.10680683     2.268292   0.57480521 
   76000    11.095866    1.2843153    9.8115503  -0.15013499   0.85640033    1.0194033   0.74822943   -3.5502959            3    2.0774621     3.176546    3.1635755  -0.10773524 -0.0029495968 -0.063549287  0.019261009    2.0053343    2.0120589            0            0  0.056844785  0.069941964        0.075    1.7700566          0.5 0.0077713294    64.339057    2.8257184         70.1 0.0059525876 -0.081842354 0.0093138513   0.13574942 -0.012051379  -0.63944794 
   77000    11.069133    1.2798893     9.789244  -0.14769813   0.85344902    1.0261555    0.7388188   -3.5502959            3    2.0981108    3.1675347    3.2009204 -0.074122582 0.0082568417   0.01873684  -0.02380139    2.0268902    2.0322744            0            0 -0.057753888  0.069889562        0.075    1.7579103          0.5 0.0077655069    64.387297    2.8092837         70.1 0.0011778208 -0.084728951 -0.0014632757  0.076929771    1.8577274   0.65811354 
   78000    11.056231     1.290999    9.7652316  -0.15198496   0.86085712    1.0069451   0.76394577   -3.5502959            3    2.1466116    3.2079272    3.2302507 0.0016568519 -0.008293783   0.02755539 -0.0051799639    2.0729687    2.0820077            0            0  -0.03076457  0.069902747        0.075    1.7602311          0.5 0.0077669719    64.375153    2.8003023         70.1 -0.0023226362  -0.12332256 -0.0094449858   0.11046274   -1.0218845   -2.3998511 
   79000     11.01775    1.2436195    9.7741306  -0.15754151   0.82926379   0.98089788   0.72864949   -3.5502959            3    2.2054107    3.2729658    3.2615215  0.081744993 0.0047143396 -0.00083462692 0.0019607514    2.1351704     2.142478            0            0  0.075184633  0.069911164        0.075    1.7651927          0.5 0.0077679071    64.367402     2.823626         70.1 -0.016699914 -0.095180397 -0.00017419972  0.088791543  -0.49920578    1.0998797 
   80000    11.056079    1.2985036    9.7575758  -0.14932008   0.86586131    1.0147452   0.76709096   -3.5502959            3    2.2054765     3.274858    3.2657017  0.075869895 0.0065644255 -0.0089874793 -0.0046650569    2.1315305    2.1403721            0            0 -0.086303211  0.069902116        0.075    1.7538042          0.5 0.0077669018    64.375734    2.8067335         70.1 -0.0098499694 -0.074002683  0.016343865   0.11465113   0.70992258    2.2113419 
   81000    11.064598    1.2825897    9.7820081  -0.14942672    0.8552497    1.0445639   0.72956673   -3.5502959            3    2.1389267    3.2240208     3.221801 -0.029041705 0.0021593238  -0.05988452 -0.034723603    2.0685979    2.0719092            0            0  0.060544292  0.069912903        0.075    1.7565087          0.5 0.0077681004    64.365801    2.8057476         70.1 -0.003028998 -0.091778821 -0.0088450565  0.057183142   0.27601294   -3.0519039 
   82000    11.029632    1.2678238    9.7618081  -0.15202624   0.84540354     1.003382   0.74057267   -3.5502959            3    2.2147277    3.2763862    3.2996802  0.068116586 -0.003314106 -0.061587613 -0.062825772    2.1433379    2.1503523            0            0    0.0449903  0.069932173        0.075    1.7620199          0.5 0.0077702414    64.348065    2.8309451         70.1 -0.0055487954 -0.093823345   0.02523214   0.11478954   0.73249254  -0.11850181 
   83000    11.008426    1.2529976    9.7554279  -0.14749632   0.83551722   0.97992773   0.73971293   -3.5502959            3    2.2343799     3.295931    3.3061147   0.10109404 -0.011188367 0.0059023838 -0.021945934    2.1630731    2.1715094            0            0  0.067764917   0.06991323        0.075    1.7446868          0.5 0.0077681367      64.3655    2.8080509         70.1 -0.005277708  -0.11816255 0.0087761833   0.10405358   0.79555694    3.3088899 
   84000    10.992049    1.2527478    9.7393008  -0.16238204   0.83535064   0.99867881   0.72695551   -3.5502959            3    2.1092542    3.2019408    3.1886407 -0.062818897 0.0055890612 -0.0070710941   0.01595991    2.0391771    2.0451806            0            0 -0.012123664  0.069899652        0.075    1.7373466          0.5  0.007766628    64.378003    2.8103749         70.1 0.0054594985 -0.084270965   0.01863004   0.09233522   -2.7147929 -0.069266006 
   85000    11.055501    1.2674256    9.7880759   -0.1500359   0.84513806    1.0077571   0.73721853   -3.5502959            3    2.1115389     3.203366    3.1770499 -0.045799197 -0.0034007979 -0.016142925 -0.025067228    2.0404725    2.0468829            0            0   0.18212855  0.069920902        0.075    1.7374725          0.5 0.0077689891    64.358438    2.8334734         70.1  0.012686893 -0.090369819 0.0065453857   0.12508666    2.4836055    4.0917767 
   86000    11.009185    1.2681883    9.7409965  -0.16019931   0.84564659    1.0120785   0.73518957   -3.5502959            3    2.1576529    3.2383191    3.2221136  0.012526034 -0.008020786 -0.012178703 -0.031016257    2.0867821    2.0927196            0            0  -0.17266913  0.069855954        0.075    1.7198351          0.5 0.0077617726    64.418275     2.792223         70.1 -0.019264534   -0.1283548 -0.0027015499  0.097899865   0.77203419    1.0501437 
   87000    11.070418    1.3002172    9.7702013  -0.15516857   0.86700393   0.99955829   0.77910224   -3.5502959            3    2.1787366    3.2531982    3.2721417  0.010869845  -0.00660826  0.035980735  0.028756373    2.1036327    2.1146066            0            0  0.014945659  0.069952883        0.075    1.7195176          0.5 0.0077725426    64.329014    2.8157944         70.1 -0.0041194588 -0.077418922 0.0058344862   0.11788458   -1.3228908  -0.37213413 
   88000    11.047515      1.27276    9.7747549  -0.15340623   0.84869513    1.0236847   0.73254363   -3.5502959            3    2.1845305    3.2500557    3.2469885  0.056547413 0.0086179736  0.074860011 -0.056324685    2.1139148    2.1188526            0            0  0.023291129  0.069907541        0.075    1.7137379          0.5 0.0077675046    64.370738    2.8237586         70.1 -0.0027318386  -0.10272153  0.012971843   0.11919705  -0.75169332    1.9239469 
   89000     11.02919     1.269475    9.7597148  -0.15493809    0.8465046    0.9956478    0.7475545   -3.5502959            3    2.1045893     3.182493    3.1722884 -0.041013582 -0.0058190452  -0.10415848 0.0081079234    2.0325265    2.0407102            0            0  0.003961419  0.069897977        0.075    1.7078005          0.5 0.0077664418    64.379546    2.8313086         70.1 0.0040009096 -0.090301802  0.013269234   0.09943854    2.0946145   0.93701366 
   90000    11.055448    1.2771366     9.778311  -0.15395801   0.85161347    1.0019608   0.75186384   -3.5502959            3     2.064059    3.1588238    3.1589036  -0.12555045  0.015238584  0.030214087 -0.010849223    1.9915808    1.9997748            0            0 -0.0039250352  0.069857944        0.075    1.7144757          0.5 0.0077619938    64.416439    2.7863025         70.1 -0.0036816282  -0.09400438 0.0058073293  0.091781587   -3.1202907   0.47655438 
   91000    11.065166    1.2798294    9.7853365  -0.15207194    0.8534091    1.0035797   0.75377778   -3.5502959            3    2.1848924    3.2418327     3.274334  0.038510335 0.00013782042  0.075629152 -0.071588137    2.1122297    2.1205044            0            0 -0.010147586  0.069912532        0.075    1.7020187          0.5 0.0077680591    64.366143    2.8179894         70.1 -0.012080461 -0.081905541 -0.0038856168   0.10747281   -1.6770456    5.5048021 
   92000    11.048501    1.2875381    9.7609625  -0.16009915   0.85854937    1.0095946   0.75833782   -3.5502959            3    2.1859885    3.2381474    3.2577588  0.062059103  0.001045647 -0.00017032201    0.0220188    2.1128862    2.1212145            0            0  0.032525998  0.069920391        0.075    1.6983945          0.5 0.0077689324    64.358908    2.7968099         70.1 -0.0024636884 -0.086278477 -0.0059273237   0.10370494    2.2594782    3.9864245 
   93000    11.067031    1.2970493    9.7699817   -0.1548449   0.86489153    1.0243778   0.75906434   -3.5502959            3    2.1505383    3.2269033    3.2203196  0.004392064 -0.0054964426 -0.077376815  0.040284445     2.077366     2.084816            0            0  0.028720991  0.069900017        0.075    1.7039983          0.5 0.0077666685    64.377667    2.7970378         70.1 -0.0054538774 -0.086291272  0.021372375     0.113557    -1.415093   -2.3124064 
   94000    11.057204    1.2867355     9.770468  -0.15187992   0.85801419    1.0121319   0.75575753   -3.5502959            3    2.1426716    3.2232409    3.1991499 0.0056237994 0.0094498965 -0.064187749 -0.034326443     2.069818    2.0777349            0            0   0.20482335  0.069870162        0.075    1.7170053          0.5 0.0077633514    64.405174    2.8086261         70.1 -0.024971228  -0.10984031  0.008159877    0.1113459   0.21372522   -2.8932423 
   95000     11.04981    1.2651999    9.7846097  -0.14482233   0.84365392   0.97047913   0.75955666   -3.5502959            3    2.0831224    3.1735942    3.1818895   -0.1061166 -0.0028919241 -0.0059521678  0.043159049    2.0099026     2.020858            0            0 -0.017175679  0.069884278        0.075    1.6968123          0.5 0.0077649198    64.392166    2.7993619         70.1  0.006525102 -0.085846607 -0.024840056   0.16404808    2.7606987    -4.198554 
   96000    10.996075    1.2554506    9.7406244  -0.15997695   0.83715297   0.98132366   0.74150889   -3.5502959            3    2.1375441    3.2343244    3.2210468 -0.042738839  0.014620825  0.012089429 -0.021278069    2.0660641     2.074584            0            0  -0.17846322  0.069923907        0.075    1.6856643          0.5  0.007769323    64.355672    2.8043614         70.1 -0.0040462459 -0.097511289 0.0017337309   0.10474576   0.13406883   -4.3118636 
   97000    11.024679    1.2737324    9.7509469  -0.15342538   0.84934352   0.97808848   0.76397066   -3.5502959            3    2.1577165    3.2318357     3.246369 -0.0050553134 0.0023110262 0.0056097684 0.0041194037    2.0840712    2.0949639            0            0  0.018937778  0.069906514        0.075    1.6814769          0.5 0.0077673904    64.371684    2.8210945         70.1 -0.0073141592 -0.098917293 -0.00070174993   0.10439728   -1.0793475  -0.31633085 
   98000    11.041716    1.2933305    9.7483856  -0.16285022   0.86241183   0.99193808   0.77652381   -3.5502959            3    2.1694918     3.234381      3.25229  0.021804438 0.0008524016 -0.033315752 -0.048840876    2.0946365    2.1058507            0            0   0.02263272  0.069859332        0.075    1.6850896          0.5  0.007762148     64.41516    2.7917969         70.1 -0.001306694 -0.094167982  0.013351863  0.074052878    3.2708555   -1.0103673 
   99000    11.031487    1.2624057     9.769081  -0.15051695   0.84179072    1.0044335   0.73385412   -3.5502959            3    2.0880795     3.186761    3.1588735 -0.081395944 -0.0055557952 -0.0033123709 0.0097230088    2.0173374    2.0236367            0            0  0.013132369  0.069888511        0.075    1.7051174          0.5 0.0077653901    64.388266    2.7906782         70.1 0.0056391924  -0.11915523 -0.0010749074  0.084576508    -1.808948   0.33195076 
  100000    11.048963    1.2559795    9.7929831   -0.1525982   0.83750565   0.98157115   0.74193172   -3.5502959            3     2.137305    3.2247794    3.2126495 -0.025513942 0.00036607287 -0.0073237316  0.037561033    2.0657843     2.074329            0            0 -0.052064209  0.069846285        0.075    1.7131226          0.5 0.0077606984    64.427192    2.7943814         70.1 0.0047938161  -0.10759551 0.0037975867  0.080888888    2.1097277   0.95897885 
  101000    11.034617    1.2676613    9.7669554  -0.15492431   0.84529521   0.99231499   0.74775793   -3.5502959            3    2.1053052    3.1905661    3.1996795 -0.074330033 -0.0016764854  0.023383634 -0.0045262079    2.0332228    2.0416399            0            0 -0.0027220202  0.069917255        0.075    1.7047363          0.5 0.0077685839    64.361795     2.826334         70.1 -0.00029068257   -0.1024713 -0.002842914    0.1075566   -1.8791416   -2.7114223 
  102000    11.078197    1.3011495    9.7770473   -0.1651586   0.86762563    1.0246143   0.76346174   -3.5502959            3    2.1485431    3.2128433    3.2281891 0.0045969859 -0.0027290959 -0.0082016122 -0.043791812    2.0749469    2.0828056            0            0  0.073855419  0.069888709        0.075    1.7193964          0.5 0.0077654121    64.388083    2.8147424         70.1 -0.014223015 -0.091350834  -0.01626956   0.10126947    2.1280231  -0.81080609 
  103000    11.059605    1.2713098    9.7882948  -0.14710451   0.84772806   0.97304647   0.76463516   -3.5502959            3    2.2159061     3.282694    3.2598929   0.10513136 -0.00023624894 -0.049731096  0.012698711    2.1421968     2.153477            0            0 0.0029360253  0.069891323        0.075    1.7144143          0.5 0.0077657026    64.385675     2.815293         70.1 -0.0025403596  -0.12179868  0.016573293   0.11781069   -1.1620008    4.8224461 
  104000    11.060255    1.2517165    9.8085386   -0.1519917   0.83466301    0.9700985   0.74483179   -3.5502959            3    2.0324728    3.1416395    3.1367313  -0.18095256 -0.0034490747  0.023853994 -0.0079432212    1.9606725    1.9702328            0            0  0.024400706  0.069883458        0.075    1.7026163          0.5 0.0077648287    64.392921    2.7937656         70.1 -0.010720299 -0.076781596  0.010920829    0.1042656  0.043660764    2.4769235 
  105000     11.05749    1.2867833    9.7707066    -0.150945   0.85804603   0.98663956   0.77277717   -3.5502959            3    2.1339326    3.1945631    3.2534824  -0.04624779 -0.005257567 -0.044051453 -0.048846353    2.0594384    2.0706314            0            0 -0.0063192502   0.06990037        0.075    1.7018613          0.5 0.0077667078    64.377342    2.8113875         70.1 -0.007840583 -0.093462634 0.0063763431   0.13711605   0.32864047     2.180093 
  106000    11.045157    1.2867689    9.7583881  -0.14614736   0.85803647    1.0146865    0.7540944   -3.5502959            3    2.2306984    3.2917676    3.2889358   0.11139186 -0.0084102663   0.03968633 0.0075926475    2.1580052    2.1655978            0            0 -0.017732854   0.06986467        0.075    1.6997022          0.5 0.0077627411    64.410238    2.8008641         70.1  -0.01604768  -0.10780747 -0.010913363   0.10804432  -0.20473609    3.5361662 
  107000    11.114249    1.3096855    9.8045637  -0.15504994   0.87331756    1.0371977   0.76456909   -3.5502959            3    2.1857803     3.232868    3.2575771  0.066895708  0.018923728 -0.018003199 -8.0726056e-05    2.1120773    2.1192354            0            0  0.016732173  0.069909074        0.075    1.6829762          0.5 0.0077676749    64.369326    2.8209483         70.1 0.00073483462 -0.083062191 -0.0041777713  0.093694477    1.0912664   -1.3365821 
  108000    11.042376    1.2675766     9.774799  -0.14191443   0.84523871   0.99179207   0.74801182   -3.5502959            3    2.1902888     3.248965    3.2567257  0.065175633 0.0028783126 -0.039646226  0.018847033    2.1181819     2.126657            0            0  0.064226267  0.069886728        0.075    1.6845092          0.5 0.0077651919    64.389909    2.8078244         70.1 0.0059549878 -0.096590716 -0.002152057    0.1187884    2.5156727  -0.77926739 
  109000    11.109983    1.2907379    9.8192446  -0.14704305   0.86068305   0.99047627   0.77461672   -3.5502959            3    2.1674751    3.2406339    3.2482321  0.013559406 -0.0034970923  0.065791021 -0.024560989    2.0928036    2.1039278            0            0  -0.18158158   0.06990269        0.075    1.6764085          0.5 0.0077669655    64.375205    2.8137641         70.1 -0.013204995  -0.11528199 0.0017506485    0.1081372   -3.9444576   -2.0881743 
  110000    11.085398    1.2946248    9.7907728  -0.15228103   0.86327484    1.0324004   0.75103153   -3.5502959            3     2.208467    3.2673752    3.2664507  0.091575062 -0.0031744823  0.056582634 0.0015946759     2.136069    2.1422299            0            0 0.0084504164  0.069932019        0.075    1.6903021          0.5 0.0077702243    64.348207    2.8150913         70.1 0.00015808958  -0.14089283  0.015596773   0.12769527  -0.35839933  -0.49134942 
  111000    11.094753    1.2726329    9.8221199  -0.13934919   0.84861037   0.98942827   0.75520202   -3.5502959            3    2.1983253    3.2555814    3.2725011  0.066893416 0.0039481303 -0.067185509 -0.011608486    2.1255253    2.1348452            0            0 0.0092535279  0.069876255        0.075    1.6611277          0.5 0.0077640283    64.399559    2.7848711         70.1 0.0082655644  -0.12203127 -0.013245738  0.097275879  -0.34133654    3.7603538 
  112000    11.055098    1.2747066    9.7803912  -0.15839711   0.84999309    1.0046829   0.74735273   -3.5502959            3    2.1072108    3.1981053      3.18884 -0.065313044 -0.0028321336  0.006923813 -0.043482411    2.0351675     2.042752            0            0  0.017874167  0.069866875        0.075    1.6550306          0.5 0.0077629861    64.408205    2.8058584         70.1 -0.002303968  -0.13394586 -0.028185771   0.11733415     2.355964   -5.1147344 
  113000    11.039746    1.2671441    9.7726015  -0.14710873   0.84495033   0.98403715   0.75269275   -3.5502959            3    2.1498444    3.2069897     3.225947  0.016596426  -0.01156891 -0.00060757189  0.022433082    2.0772863    2.0867102            0            0  0.096616619  0.069874285        0.075    1.6691165          0.5 0.0077638095    64.401374    2.8031042         70.1 -0.0023790525 -0.098867356 0.0071467303   0.12563483   -2.0621227  -0.57607354 
  114000    11.033092    1.2654252    9.7676667  -0.14964879   0.84380415   0.99119286   0.74602076   -3.5502959            3    2.1526154    3.2134328    3.2405757 0.0038375391 -0.0030776014 -0.027737717 0.0025233098    2.0807004    2.0890221            0            0  -0.37668469  0.069877231        0.075    1.6925315          0.5 0.0077641367     64.39866     2.801364         70.1  -0.01538113  -0.11274117 -0.013884448   0.10389186       3.5209   -2.3867788 
  115000    11.046911    1.2971324    9.7497789  -0.16001105   0.86494694    1.0141394   0.76597086   -3.5502959            3    2.0951667    3.1944407    3.1736494 -0.082589942  0.013107523  0.039065786 0.00031942502    2.0213286    2.0301012            0            0   -0.2092537  0.069899429        0.075    1.6743503          0.5 0.0077666032    64.378208    2.7911411         70.1   0.01237835  -0.10164139 0.0050151585   0.13728785 0.0035466658   -1.5247299 
  116000    11.009863    1.2473548    9.7625083    -0.150813   0.83175456   0.97613535   0.73596867   -3.5502959            3    2.1091153    3.2031925    3.1872171 -0.063063723 -0.0067516303 -0.015636739 -0.017546875    2.0381694    2.0464881            0            0 -0.062997862  0.069865003        0.075    1.6708059          0.5 0.0077627781    64.409931    2.7945436         70.1  0.013358531 -0.095620157 -0.0030936114   0.11592329    0.6021318   -4.9070606 
  117000    11.087028    1.2895269     9.797501  -0.15540635   0.85987554    1.0183574   0.75471497   -3.5502959            3    2.1729917    3.2316323    3.2399909  0.047351958 -0.017792242  0.031651599  0.028434344    2.1002387    2.1076556            0            0  0.069059977  0.069853574        0.075    1.6646368          0.5 0.0077615083    64.420469    2.7866681         70.1 0.00072435038  -0.09678967  0.016775024   0.11196845  -0.82363391   -4.7387952 
  118000    11.015179    1.2725142    9.7426645  -0.15823331   0.84853122    1.0007224   0.74755327   -3.5502959            3    2.1350965     3.202384    3.2197299 -0.016824349  0.012856801  0.055567127   0.02288296    2.0630339    2.0708918            0            0  0.027624394  0.069873134        0.075    1.6708119          0.5 0.0077636815    64.402436     2.795461         70.1 0.0094888547 -0.082101696  0.012720001   0.10278615   -1.6154433    1.1908718 
  119000    11.046795     1.273315    9.7734804  -0.14808279   0.84906516   0.98506069   0.75886653   -3.5502959            3    2.0757713    3.1600566    3.1686728  -0.10141556 0.0079631524  0.021953642 -0.025452149     2.002618    2.0125714            0            0   0.03054698  0.069911895        0.075    1.6706435          0.5 0.0077679884    64.366729    2.8248055         70.1  0.015246509  -0.12569973 0.0051266052   0.11841824   -1.4200132    1.5407066 
  120000    11.062085    1.2886864    9.7733991  -0.15071303   0.85931505   0.99857734   0.76694599   -3.5502959            3     2.165184    3.2228673     3.246781  0.025903567  0.009413461 -0.044410368  0.013488745    2.0912519    2.1011169            0            0  -0.31306045  0.069893192        0.075    1.6366035          0.5 0.0077659102    64.383953    2.8004059         70.1  0.006969519 -0.092134064  0.010269549   0.12255548  -0.39474094  -0.45004229 
  121000    11.029917    1.2561543    9.7737629  -0.15573167   0.83762219   0.99817027   0.73107822   -3.5502959            3    2.0889849    3.1697737     3.190707 -0.093526129 0.0048878321  0.014696048 0.0020640305    2.0185104    2.0249439            0            0  -0.12850713  0.069894386        0.075    1.6561849          0.5 0.0077660429    64.382853    2.8316582         70.1 0.0012270372  -0.12881058 -0.0069117025  0.082267141   0.81346001    -1.956392 
  122000    11.078505    1.2805686     9.797936   -0.1564824   0.85390197    1.0230169   0.74166227   -3.5502959            3    2.0827728    3.1811918     3.176865  -0.10973829 -0.0072440673  0.019760025  0.027869283    2.0112781    2.0171378            0            0  0.022279141  0.069922788        0.075    1.6332311          0.5 0.0077691987    64.356701    2.8363405         70.1 0.0067293322  -0.11080291 -0.0031633828  0.076017992   -2.7173708   0.31200516 
  123000    11.037623    1.2496756    9.7879472   -0.1548836    0.8333021   0.97212562   0.74121546   -3.5502959            3    2.0850463    3.1932854    3.1524131  -0.09055954 0.0042867607  0.019772029  0.015411902    2.0135946    2.0226763            0            0 -0.0043556253  0.069913966        0.075    1.6229161          0.5 0.0077682184    64.364822    2.8167216         70.1 -0.00091091307  -0.11973627 0.0058783584   0.11719622    2.8379356   0.97078632 
  124000     11.06006    1.2825729    9.7774868  -0.15275289    0.8552385    1.0122353   0.75106461   -3.5502959            3    2.1331827    3.2021946    3.2149001 -0.017546543 -0.0041303785  0.029812644  0.017161658    2.0607816    2.0682394            0            0 -0.085940671  0.069909524        0.075      1.62535          0.5 0.0077677249    64.368912    2.8243532         70.1 -0.0077186051 -0.097454018 -0.019408088   0.12037898    3.1556227   -2.8860744 
  125000    11.037123    1.2716977    9.7654255  -0.15407384   0.84798677   0.99479007   0.75059455   -3.5502959            3    2.2984251    3.3766392    3.3022598   0.21637621 0.0025694504   0.02254201  0.016033289    2.2260693     2.234601            0            0  -0.29359505  0.069900977        0.075    1.6265455          0.5 0.0077667753    64.376782    2.7909943         70.1 -0.0096334863  -0.08959568 0.0019585195  0.096386292  -0.85920747    6.4873781 
  126000    11.063376    1.2759638    9.7874122  -0.15342308   0.85083142   0.98430552    0.7623116   -3.5502959            3    2.1297356    3.2159794    3.2212597  -0.04803217 -0.0044964199 -0.043328153 0.0064397459    2.0562503    2.0665842            0            0  -0.01992631  0.069890413        0.075    1.6216092          0.5 0.0077656014    64.386513    2.7875987         70.1  -0.01484355 -0.082691273 -7.8339657e-05   0.10101535   -1.5428123   0.71764111 
  127000    11.072672    1.2559591    9.8167129  -0.16111296   0.83749204   0.98988096    0.7363784   -3.5502959            3    2.1804158    3.2651328    3.2431492  0.032965339 -0.001995901  0.048519417  0.024315966    2.1094304    2.1169066            0            0  0.012155867  0.069881774        0.075    1.6164104          0.5 0.0077646416    64.394473    2.8171374         70.1 0.0064273573 -0.087580648 0.0070074726  0.086344633   -3.1320541  -0.56155858 
  128000    11.064525     1.301491    9.7630338  -0.14686812   0.86785335    1.0474851   0.74861928   -3.5502959            3    2.1814744    3.2444742    3.2383048  0.061644141  0.013392158 -0.076281298 0.0060630358     2.109309    2.1142695            0            0 -0.031831136  0.069873769        0.075    1.6384997          0.5 0.0077637521    64.401851    2.7994295         70.1 -0.010695242  -0.10596459  0.013271939    0.1352596    3.9896483    1.5217117 
  129000    11.052794    1.2846613    9.7681329  -0.15829396   0.85663108   0.99822067   0.76271208   -3.5502959            3    2.1193333    3.1941373    3.2161015 -0.052238704 0.0063179917  0.020869257  0.044193397    2.0458094    2.0552892            0            0  0.034931575  0.069876476        0.075    1.6279496          0.5 0.0077640529    64.399355     2.792931         70.1 -0.0051274877  -0.11254222 -0.0031251441  0.069655148   -5.7145702   -1.0706788 
  130000    11.087345     1.279536    9.8078092  -0.14963586   0.85321345      1.01861    0.7434483   -3.5502959            3    2.2418246    3.2812335    3.2806591   0.16358131 -0.0035820224  0.033598242 -0.013126118    2.1701577    2.1764723            0            0  0.037947544   0.06986672        0.075    1.6108677          0.5 0.0077629689    64.408348    2.7813573         70.1 0.0060370491 -0.093439149 0.0012178054   0.10069929   -1.9531296    5.2592876 
  131000    11.047128    1.2810981    9.7660301  -0.15813024   0.85425504    1.0073569   0.75267311   -3.5502959            3    2.2883322    3.3264448    3.3331985   0.20535341 0.0058862977  -0.05673209 -0.028460469    2.2157761    2.2237019            0            0  0.011522578  0.069924371        0.075    1.6252897          0.5 0.0077693746    64.355244    2.8335795         70.1 0.0055983332  -0.14644798 -0.0062316605   0.10823336    1.6365782    3.3000944 
  132000     11.05611    1.2681762    9.7879342  -0.14892829   0.84563854   0.98239817   0.75493008   -3.5502959            3    2.1018937    3.1859196    3.2103416 -0.090580073 -0.010539619 -0.046985664  0.050967686    2.0291199    2.0388646            0            0  0.019404531  0.069906253        0.075    1.6123207          0.5 0.0077673614    64.371924    2.8243847         70.1 -0.039142193  -0.12032479 -0.00079340887  0.096634349     2.570301     2.077301 
  133000    11.052132    1.2529791    9.7991528  -0.15031931   0.83550489   0.98958404   0.73326557   -3.5502959            3    2.2250929    3.2692677    3.3002958   0.10571536 -0.0063328891 -0.086443806  0.023141707    2.1544076    2.1616029            0            0 -0.012078792  0.069903518        0.075    1.6275458          0.5 0.0077670576    64.374442    2.8118022         70.1 0.0080584034  -0.11002036 -0.0049539425   0.11806651   0.40275049    3.2502171 
  134000    11.047352    1.2635268     9.783825   -0.1375314   0.84253824   0.99437366   0.74179485   -3.5502959            3    2.2283136    3.2827396    3.2775189   0.12468215 0.0096159524   0.10736339 0.0018277474     2.156806    2.1645162            0            0 -0.0058422863   0.06986828        0.075    1.6324829          0.5 0.0077631422     64.40691    2.7966445         70.1  -0.01047056  -0.10273014 0.0069847837   0.11927664   -3.1094135  -0.90308142 
  135000    11.059978    1.2927715    9.7672067   -0.1582699   0.86203905   0.95778368   0.79863448   -3.5502959            3    2.2208856    3.2734292    3.2669886   0.12223895 -0.0065919849 -0.00055317836 -0.00050652961    2.1438988    2.1594358            0            0  0.001516461  0.069883837        0.075    1.6485517          0.5 0.0077648708    64.392572    2.7897244         70.1 -0.0067739649 -0.089463328 -0.013307495  0.084370819    4.0460185    1.8304039 
  136000    11.033187    1.2652368    9.7679507  -0.15096499   0.84367852    1.0001714   0.73983576   -3.5502959            3     2.178889    3.2575223    3.2427568  0.036388021 -0.0014705951  0.092264472 -0.0055473354    2.1075704    2.1147197            0            0  0.084410097  0.069864602        0.075    1.6547113          0.5 0.0077627335    64.410301    2.7956321         70.1 0.0044305454 -0.099197399 0.00071224613   0.13244782   -5.4182767    1.9253869 
  137000    11.059605    1.2789684    9.7806368  -0.14356855   0.85283496    1.0020945   0.75380977   -3.5502959            3    2.2014758    3.2359503    3.2783068  0.090170294 -0.0024520317 -0.021669713 0.0068604686    2.1288101    2.1371831            0            0 -0.0017981656  0.069880537        0.075    1.6485594          0.5 0.0077645041    64.395613    2.8116273         70.1 -0.0045526221  -0.13576504 0.0021668595   0.10836618     2.747561    2.1291595 
  138000    11.055201    1.2391587    9.8160427  -0.15115779   0.82628929   0.97505852   0.72758061   -3.5502959            3    2.1163156    3.2245474    3.1835513 -0.059151799 -0.0092074812  -0.10704777  -0.03328007    2.0461783    2.0537575            0            0  0.046282532  0.069894109        0.075    1.6439649          0.5 0.0077660121    64.383109    2.8106332         70.1 0.0021906374 -0.089146785 -0.0065257013   0.11104592   0.73687277  -0.97268712 
  139000    11.052045    1.2744276    9.7776173   -0.1512402    0.8498071   0.99811422   0.75141468   -3.5502959            3    2.1283108    3.1796233    3.2291956 -0.023886649 0.0089110018  0.081154373 -0.0027198057    2.0558759    2.0642734            0            0  -0.12916401  0.069894296        0.075    1.6465325          0.5 0.0077660329    64.382936    2.7898483         70.1 0.00030849271  -0.12364951 0.0029394897   0.11161683   -2.0908964   -3.3842434 
  140000     11.03564    1.2435125    9.7921273   -0.1402803   0.82919242   0.95888358   0.74318235   -3.5502959            3    2.2418097    3.2880174    3.2580303   0.17938125 -0.012323168  0.034542856 -0.029613152    2.1701684    2.1802893            0            0 -0.010047131  0.069842975        0.075     1.647857          0.5 0.0077603306    64.430245    2.7844075         70.1 0.0062582231  -0.12176754 -0.0019662904  0.085836247  -0.61736028    3.0747105 
  141000    11.058054    1.2912438    9.7668101  -0.14243273   0.86102036    1.0161484   0.75809239   -3.5502959            3    2.0743342    3.1663416     3.166028  -0.10936705 -0.018301541 -0.046356975 -0.0088997887    2.0012556    2.0091398            0            0 0.0023133773   0.06989259        0.075    1.6549999          0.5 0.0077658433    64.384508     2.819004         70.1  0.009715351  -0.10624739  0.021576529    0.1520988    1.1246461 -0.027707715 
  142000    11.083182    1.2815687    9.8016128  -0.14686912   0.85456888   0.99856249    0.7590491   -3.5502959            3    2.0988871    3.1617691    3.2026747 -0.067782467 -0.00020087666  0.032986115 -0.025671801    2.0257163     2.034821            0            0 -0.018920571  0.069975547        0.075    1.6560371          0.5 0.0077750608    64.308179    2.8429083         70.1 -0.011260068  -0.13239143 -0.016044244   0.11210925   -1.6937629    1.3451915 
  143000    11.012288    1.2759862    9.7363016  -0.15162933    0.8508464    1.0032229   0.74974595   -3.5502959            3    2.0916362    3.1885855    3.1807515 -0.094428421 -0.0047221288 -0.091907506  0.010003167    2.0193622     2.027271            0            0 -0.019613552  0.069882533        0.075    1.6481259          0.5 0.0077647259    64.393774    2.8052084         70.1 0.0027156599  -0.12288884 -0.015559407   0.12989999     2.294462  -0.26607849 
  144000    11.047943    1.2685414    9.7794017  -0.14776884   0.84588209   0.99074737   0.74977897   -3.5502959            3    2.1542959    3.2362014    3.2195822 0.0071041194 -0.00095072312 0.0014756965  0.031747926    2.0820187    2.0907312            0            0 -0.019153128   0.06994123        0.075    1.6395835          0.5 0.0077712478    64.339732    2.8277483         70.1 -0.0017303686 -0.099087574 -0.0030955092   0.11858968   -0.3460409    3.4760168 
  145000    11.038308    1.2719381    9.7663697  -0.15464424   0.84814704    1.0337893   0.72490534   -3.5502959            3      2.16219     3.233994    3.2382747  0.014301297 -0.0053965337 0.0090377311 -0.025026456    2.0923106    2.0958638            0            0   0.13650091   0.06991115        0.075    1.6263745          0.5 0.0077679055    64.367415    2.8143017         70.1 -0.00096681977  -0.12432009 0.0044381904  0.073102001     1.686755    1.8657205 
  146000    11.070585     1.270545    9.8000403  -0.15827312   0.84721812   0.98963271   0.75274656   -3.5502959            3    2.0440211    3.1482753    3.1467996  -0.16301158 0.0011677385  -0.02931372 -0.027802064    1.9714579    1.9805279            0            0  0.010472242  0.069912183        0.075    1.6317865          0.5 0.0077680204    64.366463    2.8105473         70.1 0.0083293285  -0.08929596 -0.0030777088  0.098413841  0.094148799   -5.8656529 
  147000    11.068323    1.2969109    9.7714123  -0.15926908   0.86479927    1.0133428   0.76625504   -3.5502959            3    2.1464504    3.2135187    3.2220936  0.003738709 -0.0014484951 -0.024906706    0.0155293    2.0725849     2.081436            0            0  0.042971682  0.069916351        0.075    1.6202691          0.5 0.0077684834    64.362627    2.7984084         70.1 0.00024792813 -0.098995061 -0.0085495137  0.093091393    1.8218332   -4.4027582 
  148000    11.034106    1.2720013    9.7621048  -0.15406519   0.84818917    0.9769319   0.76281737   -3.5502959            3    2.1596701    3.2309082    3.2156463  0.032455849 0.00094741968 -0.015630719 -0.00039161614    2.0861361    2.0969918            0            0 0.0083021144  0.069870308        0.075    1.6285656          0.5 0.0077633676     64.40504     2.791977         70.1 -0.011862073  -0.13566006 0.0055630407  0.091800892  -0.88355773    2.1092174 
  149000    11.055992    1.2753531     9.780639  -0.15177412    0.8504242    1.0196949   0.73807954   -3.5502959            3    2.1836377    3.2405992    3.2388531  0.071460576 -0.0011189124 -0.013294131 -0.041396581    2.1124883    2.1182157            0            0 0.0009257294  0.069888505        0.075    1.6320505          0.5 0.0077653895    64.388271    2.8153761         70.1 0.0085196541  -0.12273303  0.001020005   0.10118692   0.97827123   -2.2772397 
  150000    10.990636    1.2326291    9.7580069  -0.16041046   0.82193522   0.96572216   0.72654093   -3.5502959            3    2.0699826    3.1870347    3.1586016  -0.13568858 -0.0082088794 0.0063059106 -0.015005145    1.9999455    2.0080234            0            0   0.05378468   0.06988463        0.075    1.6331392          0.5 0.0077649589    64.391841    2.8003185         70.1  0.013399279  -0.10761243 0.0034871202   0.11349558  -0.57547242   -1.7938377 
  151000    11.081921    1.3139249    9.7679957  -0.15041395   0.87614443    1.0246408   0.77763582   -3.5502959            3    2.1308204    3.1949503    3.2322858 -0.034774914 -0.00063341966 -0.026481456  -0.02642399    2.0558579    2.0650812            0            0 0.0013457753  0.069933448        0.075     1.626116          0.5 0.0077703831    64.346892     2.829877         70.1 -0.0059492374  -0.10754391  0.012361937  0.093174206  0.064558209   0.33174733 
  152000    11.037363    1.2735506    9.7638123  -0.15443766    0.8492223   0.99684277   0.75128667   -3.5502959            3    2.1384518    3.2296554    3.1871435 -0.0014434628 0.0063607809  0.015789184  0.011915893    2.0660293     2.074496            0            0  0.064746344  0.069880163        0.075    1.6281533          0.5 0.0077644626    64.395957    2.7983136         70.1 0.0042934887  -0.13351476 -0.016180291   0.13962151    1.3962329  -0.85587731 
  153000     11.05808    1.2949508    9.7631288  -0.14329321   0.86349226   0.95989105   0.79965285   -3.5502959            3    2.1217154    3.2203855    3.1865558 -0.041795094 -0.001572774 -0.0056501368 -0.024207542    2.0446305    2.0601304            0            0  0.071838828  0.069912138        0.075    1.6083575          0.5 0.0077680153    64.366506    2.8303589         70.1 -0.012184975 -0.092966872 -0.0029325556   0.15629434   -1.2968948   -1.9343134 
  154000    11.094277    1.2778198    9.8164577  -0.16520371   0.85206904   0.98348524   0.76491933   -3.5502959            3    2.1496608    3.2208075    3.2047027  0.023472145 -0.00073846254  0.011605669  0.041561915    2.0759241     2.086562            0            0  0.022885613  0.069881115        0.075    1.6078663          0.5 0.0077645684     64.39508    2.8203177         70.1 -0.008919236   -0.1264492 0.0065894094    0.1010628   -1.7095379    1.7641887 
  155000    11.051789    1.2839936    9.7677954  -0.15081495   0.85618586   0.97576345   0.77691694   -3.5502959            3    2.1186107    3.1828595    3.2162924  -0.04331981 0.0056493213  0.020942549  0.018454063    2.0437175    2.0560073            0            0  0.043400798  0.069903371        0.075    1.6054548          0.5 0.0077670412    64.374578    2.8171399         70.1 0.00045501304 -0.092155969  0.044173599   0.17832492  -0.65033695   0.21083454 
  156000    11.016597    1.2489981    9.7675984  -0.14941381   0.83285033   0.99130158   0.72770015   -3.5502959            3    2.1595586    3.2471549    3.2380411 -0.0065201645 -0.006707692 -0.079090409 -0.020432701    2.0894098    2.0959584            0            0  0.053927361  0.069898854        0.075    1.5907748          0.5 0.0077665393    64.378738    2.8257022         70.1 -0.0082784542 -0.085469457 -0.0079888438   0.14454096 -0.021348712   -1.6501944 
  157000    11.111188    1.3227368    9.7884513  -0.15006935   0.88202038    1.0267022   0.78605272   -3.5502959            3    2.1587229    3.2277052     3.227817  0.020646591  0.010767359  0.042262104  0.031318057     2.082949    2.0928514            0            0  0.085639609  0.069905576        0.075    1.6153626          0.5 0.0077672863    64.372547    2.8232322         70.1 0.0022944723  -0.15099817 0.0038552579   0.10506061   -1.3237251  -0.46599638 
  158000    11.066556    1.2879741    9.7785816  -0.15113965   0.85884007   0.98750705   0.77352263   -3.5502959            3    2.0574722      3.16368    3.1633958   -0.1546592 -0.0018901697 -0.0071754129 -0.0028327895    1.9829061    1.9941154            0            0    0.1266321  0.069872125        0.075     1.617976          0.5 0.0077635694    64.403366    2.7984662         70.1 -0.0040618895  -0.11415596 -0.010414705  0.076175198  -0.15718132    0.6797202 
  159000    11.018941    1.2516409    9.7673002  -0.16443707    0.8346126   0.99686019   0.72693639   -3.5502959            3    2.1525398    3.2171755    3.2275224  0.012921396 -0.0049353302   0.03503833 -0.020264181    2.0824646    2.0885829            0            0 0.0028461939  0.069888949        0.075    1.6037662          0.5 0.0077654388    64.387862      2.81777         70.1  0.016453426  -0.13186744  0.027609676  0.087711357  -0.29251474    2.5963353 
  160000    11.049527    1.2646098    9.7849173  -0.14556139    0.8432604   0.97490648   0.75595443   -3.5502959            3     2.125093    3.1901814    3.1879356 -0.002838024 -0.0059310731 -0.025935151 -0.042512539    2.0522205    2.0625446            0            0 -0.0017573721  0.069893808        0.075    1.6183772          0.5 0.0077659787    64.383386     2.801299         70.1 0.0020084414  -0.12504725 -0.001537833   0.15837006  -0.73212001   -2.0775458 
  161000    11.059619    1.2971125    9.7625061  -0.15542337   0.86493367   0.99907374   0.77597583   -3.5502959            3    2.1117859      3.21236    3.2159826 -0.092984878 0.0028779729  0.038580526 -0.016121617    2.0369834     2.047687            0            0  -0.17557673  0.069913728        0.075     1.610972          0.5  0.007768192    64.365041    2.8191358         70.1  0.016830216  -0.12860829 0.0075683824    0.1064765  -0.68966881    1.3958164 
  162000    11.024413     1.252273    9.7721397  -0.15460928   0.83503406    1.0000662   0.72550475   -3.5502959            3    2.1578653    3.2059108    3.2648246 0.0028606202 0.0067146095 0.00087478637 -0.025566088    2.0879281    2.0937027            0            0  0.013261734  0.069912663        0.075    1.6289942          0.5 0.0077680736    64.366022     2.811909         70.1 0.0029111338 -0.092958163 -0.00017160101  0.086388018    -1.553762    3.8834654 
  163000    11.043352    1.2685057    9.7748464  -0.15332741   0.84585828   0.98276301   0.75505335   -3.5502959            3    2.1085272     3.180495    3.2205582 -0.075471559 0.0040662391 -0.049530762 0.0060687927    2.0357416    2.0454748            0            0  0.014065764  0.069903247        0.075    1.6216762          0.5 0.0077670275    64.374692    2.8074009         70.1 -0.010320234 -0.087806612 0.00035037894   0.11247877    1.7709132   -2.7867835 
  164000     11.03518    1.2683881    9.7667918  -0.15495968   0.84577982   0.99759074   0.74505393   -3.5502959            3    2.0795461    3.1946728    3.1637768  -0.11981139  0.010572176  0.044682036 -0.017326803    2.0077244    2.0155423            0            0  0.059162865  0.069905354        0.075    1.6155203          0.5 0.0077672616    64.372751    2.8042388         70.1 -0.0018038698 -0.097009599 0.0094015727  0.079001651   -1.2131636  -0.41937407 
  165000    11.033527    1.2653026    9.7682241  -0.16160429   0.84372236   0.98798595   0.74801889   -3.5502959            3    2.1877177    3.2633015    3.2522591  0.047592444 0.0090190955  0.044719382  0.018327386    2.1156102    2.1243302            0            0  0.023075737  0.069878873        0.075    1.6273441          0.5 0.0077643192    64.397146    2.7926801         70.1  0.013480694  -0.10131729 -0.0082897954   0.11195968    -1.651838  -0.21661475 
  166000    11.041502     1.272284    9.7692182  -0.15277637   0.84837769    1.0064388   0.74349292   -3.5502959            3    2.1481945    3.2136257    3.2410963 -0.010138418 -0.0012912863 -0.086938171  -0.01166351    2.0765233    2.0836231            0            0 -0.057969229  0.069901519        0.075    1.6251313          0.5 0.0077668355    64.376283    2.8216029         70.1 -0.0018332638  -0.11564959 0.0022723851  0.089789387   -0.2915851   0.17358375 
  167000    11.024247    1.2580839    9.7661626  -0.15070856   0.83890888    1.0234499   0.71639671   -3.5502959            3    2.1879986    3.2411365    3.2707503  0.052109023 -0.0065051598  -0.09924398  0.041098107    2.1189394    2.1223358            0            0 -0.0019065182  0.069897284        0.075    1.6267813          0.5 0.0077663649    64.380184    2.8011824         70.1  0.012367702  -0.13493496   0.02002956   0.12182287  0.023472834   0.31941945 
  168000    11.070442    1.2861302    9.7843114  -0.16186708   0.85761053    1.0122664   0.75499557   -3.5502959            3     2.226031    3.2787246    3.2579598   0.14140868 0.0020838665  0.072405994 0.0055269906     2.153251    2.1610857            0            0 0.0093156926   0.06985831        0.075    1.6450994          0.5 0.0077620345    64.416101    2.7862656         70.1  0.014339955  -0.13489942 0.00019294624   0.11098486   -2.1732424    1.0558785 
  169000    11.033873    1.2586847    9.7751883  -0.15315087   0.83930947   0.97510114   0.74924291   -3.5502959            3    2.1065784    3.1896826    3.1798562  -0.04980349 -0.0069179987  0.032695258 -0.044066228    2.0343529    2.0440175            0            0  0.028139865  0.069855875        0.075    1.6399833          0.5 0.0077617639    64.418347    2.7821053         70.1 0.0014605472  -0.13620672 0.0037525269   0.10434364   -0.8100793    0.1419988 
  170000     11.05076    1.2818259    9.7689338  -0.15230842   0.85474036   0.98841017   0.76609172   -3.5502959            3    2.1079669    3.2103202    3.1790982 -0.065517773 -0.0024599148 -0.011954144 -0.0022763909    2.0341172    2.0445521            0            0  0.021949288  0.069854868        0.075     1.649255          0.5  0.007761652    64.419276    2.8098232         70.1 -0.0027811981  -0.13082297 -0.0018995942  0.097977239    1.8047058   -3.9788603 
  171000    11.091919    1.2778522    9.8140672  -0.14289586   0.85209068    1.0219345   0.73936521   -3.5502959            3      2.19957    3.2608283    3.2618967  0.075985015 0.0064473566 0.0077349615 -0.0086137396    2.1282967    2.1340044            0            0  -0.04875722  0.069888065        0.075    1.6507014          0.5 0.0077653405    64.388677    2.7989312         70.1  0.017152238 -0.093761719 0.0080470271   0.13987229   -2.1796139    1.8324156 
  172000    11.033857    1.2437466    9.7901102  -0.15023892    0.8293485   0.97236578   0.73446921   -3.5502959            3    2.1849594    3.2329023    3.2558105  0.066165522 0.0083646784 -0.055816698 -0.055246417    2.1141581     2.122574            0            0    -0.277575  0.069898287        0.075    1.6664106          0.5 0.0077664764     64.37926     2.800412         70.1 0.0020493395  -0.13437073 -0.0054761247  0.083852053     1.483981  -0.59877909 
  173000    11.047929    1.2733146    9.7746144  -0.15328296   0.84906492   0.97282765   0.76700792   -3.5502959            3    2.1396092    3.1880773    3.2336897 -0.0029394475 0.0058720366 0.0030620939  0.020919851    2.0656712    2.0771942            0            0 -0.002042088   0.06989567        0.075    1.6478688          0.5 0.0077661856    64.381671    2.8108232         70.1 -0.0084934426  -0.11430387 -0.0022094635  0.063591828   -2.5348931   0.31053204 
  174000     11.09176    1.2951025    9.7966578  -0.15266607   0.86359337    1.0123219    0.7649256   -3.5502959            3    2.1707002    3.2483694    3.2420543  0.021676828 0.0078613919  0.058702146  0.024494733    2.0969629    2.1057513            0            0 -0.0020143212  0.069899206        0.075    1.6317827          0.5 0.0077665785    64.378413    2.8089114         70.1 0.0032240367  -0.10729875 -0.015518846   0.10588882   0.61712329    1.6528784 
  175000    11.112655    1.3047947    9.8078599  -0.14545959   0.87005631     1.009227    0.7777522   -3.5502959            3    2.1964704     3.266764    3.2545374  0.068109712 0.0052343262 -0.029134466   0.01667329    2.1214966      2.13172            0            0 -0.015554073  0.069893148        0.075    1.6365387          0.5 0.0077659054    64.383994    2.8073677         70.1 -0.011596269 -0.085143056 -0.015572344   0.12126288   -2.1373241   0.95164388 
  176000    11.033445    1.2708741     9.762571  -0.14768148   0.84743752    1.0011358   0.74545608   -3.5502959            3    2.1742711    3.2600176    3.2341748  0.028620858 -0.0032885798 -0.022201077   0.03052082    2.1024106    2.1100399            0            0  0.068245542  0.069914084        0.075    1.6424785          0.5 0.0077682316    64.364714    2.8282694         70.1 0.0027954622 -0.093378805 -0.011744856   0.10726035    3.1101996   -3.0205686 
  177000    11.057546    1.2690442    9.7885019  -0.15616889   0.84621734     1.007228    0.7393687   -3.5502959            3    2.1417244    3.2264878     3.211904 -0.013218511 -0.0015795007  0.067805675  0.011445096    2.0704508    2.0771023            0            0    0.0203012  0.069894741        0.075    1.6399994          0.5 0.0077660824    64.382526    2.8148566         70.1 0.0091710883 -0.075753988 -0.0097294953   0.11702504   -5.0576371   0.51934566 
  178000    11.033246    1.2576163    9.7756298  -0.15747759   0.83859708    0.9740639   0.74874646   -3.5502959            3    2.0711686    3.1847901    3.1448855  -0.11616981  0.011189598 -0.066970751    0.0568485    1.9989909    2.0086743            0            0  0.072169675  0.069861966        0.075    1.6349849          0.5 0.0077624407     64.41273    2.7927487         70.1  0.010582495  -0.10665374   0.01012677  0.087122164  -0.49234397   -4.0350118 
  179000    11.061547    1.2622915    9.7992551  -0.14784504   0.84171455   0.99636736   0.73909572   -3.5502959            3    2.0546442    3.1550325    3.1572321  -0.14833204 -0.0045356468 -0.020164078 -0.026966519    1.9833968    1.9907189            0            0  0.072912526  0.069914444        0.075    1.6315988          0.5 0.0077682715    64.364382    2.8180277         70.1 0.00064362729 -0.076116614 -0.0055545531  0.096629839    1.8914992   -1.7741018 
  180000    11.027566    1.2493551    9.7782113  -0.15245665   0.83308837    0.9783132   0.73674121   -3.5502959            3    2.1432924    3.2165577    3.2491266   -0.0358073 0.0031713132  0.048660313  0.021151227     2.072272    2.0805254            0            0   0.04372417  0.069904729        0.075    1.6430861          0.5 0.0077671921    64.373328    2.8192544         70.1 0.0071170731 -0.095809557 0.0020851747   0.13934498  -0.15232529    1.1222548 
  181000    11.045631     1.257766    9.7878646  -0.15680612   0.83869688   0.98280433   0.74309547   -3.5502959            3    2.0580746     3.171603    3.1345099  -0.13188916 -0.017860265 -0.020159628   0.01837216    1.9864417    1.9950195            0            0 0.0086754487  0.069873116        0.075    1.6464297          0.5 0.0077636796    64.402452     2.802175         70.1 -0.010331337 -0.083443762 -0.020745141     0.143989   -2.3708562   -5.2479558 
  182000    11.070875    1.2668075    9.8040679  -0.16229873   0.84472589    1.0082998   0.73617071   -3.5502959            3    2.0991991    3.1873308    3.1747011 -0.064434609 0.0054534883  0.017026358  0.026433595    2.0282337    2.0345082            0            0 -0.017959797  0.069891712        0.075    1.6438334          0.5 0.0077657457    64.385317    2.8029344         70.1 0.0056421524 -0.097007976 0.0020183176  0.081143528    1.8893027   0.35386934 
  183000    11.008005    1.2650468    9.7429585  -0.15837066   0.84355182    0.9723749   0.75812483   -3.5502959            3    2.1702402      3.26096    3.2361743  0.013586403 -0.0011549437  0.099435963  0.033691041    2.0971585    2.1078543            0            0 -0.054789477  0.069893488        0.075     1.651581          0.5 0.0077659431     64.38368    2.7842606         70.1 -0.0036519073  -0.11622394  0.029295557   0.10397254   -1.8897319   -1.0963976 
  184000     11.04887    1.2627435    9.7861266  -0.15956937   0.84201597   0.97774232   0.75199389   -3.5502959            3    2.1187757    3.2196549    3.2182668 -0.081594707 -0.010109442 -0.092718448  0.025862854     2.046285    2.0560454            0            0  0.031897265  0.069929579        0.075    1.6551396          0.5 0.0077699532    64.350452    2.8379697         70.1  -0.01190485 -0.091349965  0.027752168   0.10895744    1.9284333   -2.9771041 
  185000    11.094108    1.2976335    9.7964743  -0.14668246   0.86528112    1.0371446   0.75121634   -3.5502959            3    2.0948397    3.1744822    3.1791263 -0.069089524 0.0010156549  0.026582861 0.0026381374    2.0224239    2.0282982            0            0  0.015703217  0.069877214        0.075    1.6662343          0.5 0.0077641349    64.398675    2.8059307         70.1 0.0016232081  -0.12122521  0.001583207   0.10386533    -2.429569   0.25590809 
  186000    11.070424    1.2912211    9.7792033   -0.1630048    0.8610052    1.0097852   0.76230219   -3.5502959            3    2.0688596    3.1548195    3.1819327  -0.13017345 -0.004562384  0.039158433  0.011640371    1.9953752    2.0040734            0            0   0.00630334  0.069890962        0.075    1.6682453          0.5 0.0077656624    64.386008    2.8120156         70.1 0.0078917082  -0.10645007 -0.0061107194  0.092608436   0.99309555   -1.6792475 
  187000     11.04377    1.2662532    9.7775171  -0.15791339    0.8443563    0.9909156   0.74712514   -3.5502959            3    2.0975181    3.1823454    3.2016928 -0.091483869 -0.0050566237 -0.086180576  0.015604501    2.0254967    2.0339426            0            0 0.0096279596  0.069967048        0.075    1.6688746          0.5 0.0077741165    64.315991     2.854054         70.1 0.0086633411  -0.10090437 0.0038196678  0.095362601    1.6419191     -3.74566 
  188000    11.056765    1.2776703    9.7790952  -0.15420756   0.85196934   0.99764145   0.75533147   -3.5502959            3    2.0457709    3.1473769    3.1144254  -0.12448967 0.0055740156 0.0084468139  0.048718191    1.9729584    1.9817638            0            0  0.014427251  0.069866107        0.075    1.6732813          0.5 0.0077629008    64.408913    2.7964166         70.1 -0.0004401988  -0.11673615 -0.00099778696  0.074954016     1.152209 -0.054475789 
  189000    11.035388    1.2463755    9.7890125  -0.15350546   0.83110152   0.97075863   0.73845925   -3.5502959            3    2.0474101    3.1368162    3.1728854  -0.16747122 -0.017503123 -0.053601595 -0.006731903    1.9762241    1.9851278            0            0  0.034530683  0.069848732        0.075    1.6643448          0.5 0.0077609702    64.424935    2.7874276         70.1 0.0076006601  -0.09443672  -0.01061683  0.096741939    -1.002169   -2.4198871 
  190000     11.02977    1.2685341    9.7612357  -0.16070526   0.84587718    1.0173563     0.732061   -3.5502959            3    2.0754526    3.1654551    3.1907589  -0.12985623 0.0023020036 0.0086378413 -0.0057256132    2.0048834    2.0101807            0            0 -0.0019361375  0.069900452        0.075    1.6804352          0.5 0.0077667169    64.377266    2.8182827         70.1 0.0040055737  -0.14132366 -0.012968609  0.091262155   0.36999763   -4.9314688 
  191000    11.071261    1.3044397    9.7668213  -0.15505504   0.86981959    1.0299377   0.76357369   -3.5502959            3    2.0747598    3.1788324    3.1509043  -0.10545731  0.011925479    0.0100251 -0.002469393    2.0011528    2.0086807            0            0 -0.046783123  0.069893193        0.075    1.6842109          0.5 0.0077659104    64.383952    2.7994747         70.1 0.0088001219  -0.12035063 -0.0023201714    0.1045262   -1.2795536   -1.6608939 
  192000    11.024835    1.2326428    9.7921926  -0.15878908   0.82194435   0.99594468   0.70644134   -3.5502959            3    2.1295012    3.1918074    3.2091616 -0.012465512  0.012141133 -0.032541486  0.013367983    2.0614016     2.065603            0            0 -0.042174922  0.069917839        0.075    1.6672811          0.5 0.0077686488    64.361256    2.8152496         70.1  0.016722627 -0.088184727 -0.00096175309   0.10475942    2.4687605   -3.7906364 
  193000    11.050347    1.2662324    9.7841149  -0.15633828    0.8443424    0.9837071   0.75189964   -3.5502959            3     2.145602      3.21062    3.2447804 -0.018594286 -0.003841423 0.0040777032 0.00088835104    2.0731204     2.082489            0            0 -0.0060384308   0.06989163        0.075    1.6786731          0.5 0.0077657366    64.385392    2.7901641         70.1 -0.0093510555  -0.13615727 -0.0079402992   0.15294841   -1.1872217  -0.98243576 
  194000    11.068917    1.2806143    9.7883028  -0.15171783   0.85393245    1.0037893   0.75451014   -3.5502959            3    2.2163266      3.25647     3.271934   0.12057568 -0.0051139549  0.027508795 -0.0034891219    2.1435933    2.1519251            0            0 0.00035368762  0.069868975        0.075    1.6823882          0.5 0.0077632195    64.406269    2.7913898         70.1 0.0072239167  -0.11335367 -0.0083254199    0.1004223   -1.8560598    1.5036111 
  195000     11.00505     1.261865     9.743185  -0.14892994   0.84143014    1.0063503   0.73197772   -3.5502959            3    2.2262934     3.280371    3.2824499   0.11605948 -0.001700414 -0.050727345 -0.066842798    2.1557323    2.1617277            0            0 0.0051437073  0.069877845        0.075    1.6721454          0.5  0.007764205    64.398094    2.7874665         70.1 -0.0032479481  -0.12344495  0.017679319   0.11799539    1.4562632    1.0841675 
  196000    11.101767    1.2869288    9.8148384  -0.14685533   0.85814304   0.99952635   0.76436189   -3.5502959            3    2.1890037    3.2412434    3.2532012  0.072566472 0.0072257933 -0.027084906 -0.0010883453    2.1153207    2.1248757            0            0 0.0065993011  0.069868661        0.075    1.6713592          0.5 0.0077631846    64.406558    2.7885546         70.1 -0.0034846798 -0.099340372 -0.0092298183   0.11804774  -0.77085225  -0.39235647 
  197000    11.038392    1.2768606    9.7615313  -0.15325798   0.85142944    1.0208314   0.73899782   -3.5502959            3    2.0956977    3.1898419     3.196849 -0.099597798  0.002898577  0.022744418  0.036672031    2.0244598    2.0302028            0            0  0.057614907  0.069927552        0.075    1.6785526          0.5  0.007769728    64.352317    2.8150496         70.1  0.028926862  -0.10066869 -0.018947199   0.13184774   -1.9468206    -2.272923 
  198000    11.092907    1.2784395    9.8144677  -0.14682069   0.85248227   0.99844205   0.75565313   -3.5502959            3    2.1216376    3.2190363    3.1766265 -0.030750133 0.0025444652 -0.036671456  0.038165898    2.0487941    2.0575792            0            0  0.024573554  0.069863982        0.075    1.6808163          0.5 0.0077626647    64.410872    2.7963516         70.1  0.006944828 -0.095620121 -0.0064860531   0.12190137    2.5890735   -3.3514846 
  199000    11.045679    1.2761917    9.7694878  -0.14534762   0.85098338    1.0255209   0.73513359   -3.5502959            3    2.0906442    3.1966979    3.1686875 -0.093453034 -0.012859288  0.019767592 -0.019576006    2.0197787    2.0248484            0            0  0.016251696   0.06988438        0.075    1.7067217          0.5 0.0077649311    64.392071     2.806752         70.1 0.0029879908  -0.11313496 -0.00059927658  0.079826533    2.3053286   -6.9771338 
  200000    11.077308    1.2960247    9.7812835  -0.14710716   0.86420836    1.0184647   0.76186175   -3.5502959            3    2.1747818    3.2415442    3.2395555  0.043245676 -0.0022374266 -0.051748716 -0.025858292    2.1013398    2.1094388            0            0  -0.23590012  0.069888605        0.075    1.7210336          0.5 0.0077654006    64.388179    2.8037747         70.1   0.02288949 -0.095939648 0.0017188705   0.10420799   -2.6950545  0.079296569 
  201000    11.037865    1.2852345    9.7526305  -0.14905529    0.8570133    0.9883183   0.76993942   -3.5502959            3    2.0888026    3.1943656    3.1702379 -0.098195709 -0.0070891339 -0.024722093  0.018428912     2.014582    2.0253937            0            0  0.030969854  0.069924894        0.075    1.7023982          0.5 0.0077694327    64.354763    2.8303276         70.1 -0.0046215835  -0.10042788  0.008445876  0.094949588  -0.89084932   -2.8231763 
  202000      11.0247    1.2717597    9.7529405   -0.1640806   0.84802807    0.9925108   0.75218035   -3.5502959            3    2.1964387    3.2654857    3.2728225  0.051007764 0.0084302369  0.028302672  0.020460296      2.12393    2.1327608            0            0  -0.02112869  0.069867067        0.075    1.7028494          0.5 0.0077630075    64.408028    2.8014029         70.1 -0.0055363761  -0.09400986 0.0068636086   0.10206029   0.61391029   -3.9334441 
  203000    11.015888    1.2699387    9.7459494  -0.15326956    0.8468138    1.0220747   0.73048098   -3.5502959            3    2.2025557    3.2653228    3.2560055  0.086338726 -0.0021176261 -0.061463657 -0.018474831    2.1321388    2.1369811            0            0 -0.013775682   0.06992342        0.075    1.7078284          0.5 0.0077692689     64.35612    2.8377067         70.1 0.0097898808  -0.13536862 -0.013087475   0.13102942   0.97849316   -3.1357514 
  204000    11.056774    1.2725827    9.7841912  -0.15647527   0.84857684   0.98521154   0.75795263   -3.5502959            3    2.1748375    3.2084328       3.2324  0.083679555 0.00029843236  0.012447476 -0.032583384    2.1017723    2.1116279            0            0   0.18474348  0.069890585        0.075    1.7118456          0.5 0.0077656205    64.386355    2.8021782         70.1 -0.0087019397  -0.11496908 0.0097176082   0.10542573   0.42317344   -4.4608657 
  205000    11.076191     1.260899    9.8152924  -0.13980737   0.84078598   0.98831566   0.74290766   -3.5502959            3    2.0835201    3.1625549    3.1530247 -0.065019327 0.0058729938  0.018780265 -0.0054370004    2.0119053    2.0201114            0            0 -0.014398592  0.069880389        0.075    1.7090676          0.5 0.0077644877    64.395749     2.809084         70.1  0.020420799 -0.091207916 -0.0080645543   0.11248332    -1.256106   -2.9619979 
  206000    11.076957    1.2749145    9.8020422  -0.14910439   0.85013175   0.98993604   0.75739857   -3.5502959            3    2.0872021    3.1805184    3.1735476 -0.092459838 0.0010111543  0.042247447 -0.023412674    2.0141904    2.0236894            0            0 -0.0089084553  0.069897597        0.075    1.7017375          0.5 0.0077663996    64.379896     2.804594         70.1 -0.0034150845 -0.088080929 -0.0053390429   0.10536913   0.64998779   -3.2510347 
  207000    11.037878    1.2610125    9.7768656  -0.14882151   0.84086172   0.98704264   0.74388111   -3.5502959            3     2.229715    3.2788607     3.291562   0.11872217 -0.0078486589 -0.005010541  0.027410119    2.1580063     2.166388            0            0  0.026458352  0.069875671        0.075    1.7077547          0.5 0.0077639635    64.400097    2.8013687         70.1 0.00079475639  -0.12136927 0.0043619969   0.14182343    1.6278668  0.010200321 
  208000    11.051084    1.2682358    9.7828487  -0.15068567   0.84567827   0.98423941   0.75377083   -3.5502959            3    2.1641557    3.2255227    3.2588145 0.0081299522 0.0087109098 -0.065648356 -0.024597573    2.0914937    2.1010086            0            0 -0.018166024  0.069921848        0.075    1.7142997          0.5 0.0077690942    64.357567    2.8011519         70.1 -0.00050799954  -0.12680795 -0.010829198   0.10638721   -1.8976387   -2.8672281 
  209000    11.049949    1.2699963    9.7799523  -0.16426864   0.84685223    1.0034168   0.74296296   -3.5502959            3    2.0251269    3.1445249    3.1352612  -0.20440554 -0.0021035086  0.012261382  0.020207973    1.9535067    1.9607493            0            0 -0.013730028  0.069914039        0.075    1.7050628          0.5 0.0077682265    64.364756    2.8291411         70.1 0.0080560121  -0.12223376 -0.00039806522  0.093637321    3.1116814   -5.9477294 
  210000    11.056337     1.274626    9.7817108  -0.14595256   0.84993939    1.0210077   0.73639814   -3.5502959            3    2.1740107    3.2434533    3.2303153  0.048263666 -0.002483694  0.018551902 -0.056371074    2.1030234    2.1085046            0            0  -0.10150608  0.069861205        0.075    1.7368978          0.5 0.0077623561    64.413433    2.7984623         70.1 0.0068718672  -0.10838515  0.011360171   0.10006669   0.80451537    3.3510718 
  211000    11.064361    1.2694674    9.7948937  -0.15328231   0.84649953     1.000347   0.74441845   -3.5502959            3    2.1177954    3.2172202    3.1762432 -0.040077348 0.0064559536 0.0088976259 -0.027941698    2.0460349    2.0536147            0            0   0.09856876  0.069896462        0.075    1.7275821          0.5 0.0077662735    64.380941    2.7864329         70.1 0.00061093773 -0.077386899    0.0133321   0.10505912   -3.7790466    -1.045017 
  212000     11.06601    1.2897594     9.776251  -0.14560157   0.86003056   0.99230333    0.7723137   -3.5502959            3    2.1347708    3.2229747    3.2246007 -0.043263038  0.005148878 -0.019038423  0.037890225    2.0603213    2.0711062            0            0 -0.043747693  0.069941111        0.075    1.7366737          0.5 0.0077712346    64.339842    2.8345543         70.1 -0.0081648887  -0.12822484  0.012373166   0.13814249   -1.3867125  -0.94877715 
  213000     11.02723    1.2638765    9.7633538  -0.15310609   0.84277145    1.0320399   0.71711433   -3.5502959            3    2.1618042    3.2395743    3.2494952 -0.0036569167 -0.00014350149 0.0077325986  0.021385113    2.0926758    2.0955902            0            0 -0.058342441  0.069887466        0.075    1.7511604          0.5  0.007765274    64.389228    2.7998711         70.1 -0.0068713982  -0.10571273 -0.0060601296  0.079818304    2.0106434   -3.0457933 
  214000     11.06463    1.2666388    9.7979913   -0.1561201    0.8446134    1.0163952   0.73059534   -3.5502959            3     2.188836     3.235981    3.2533786  0.077148309 8.2302635e-05   0.11100628  0.024253762     2.118408    2.1236257            0            0  0.015982211  0.069855858        0.075    1.7365305          0.5  0.007761762    64.418362    2.7886261         70.1 -0.023479377 -0.072111141 -0.018288623   0.11241235   -4.9779837    1.8031617 
  215000     11.06259    1.2902016    9.7723883  -0.15091706   0.86032541   0.99886653   0.76843672   -3.5502959            3    2.1261739    3.2163313    3.1947577  -0.03256734 -0.0053554593 -0.085176073  0.032469745    2.0520981    2.0620883            0            0  0.015805885  0.069920567        0.075    1.7219681          0.5 0.0077689519    64.358746    2.8077801         70.1 0.0066384345  -0.12935518 -0.0019033752   0.11222487    3.1365861 -0.083124438 
  216000    11.063228    1.2717675    9.7914607  -0.14921005   0.84803328   0.99517052   0.75041883   -3.5502959            3    2.1731063    3.2549715    3.2266848  0.037662472 -0.012276089  0.025024823  0.028329868    2.1007674    2.1092578            0            0  0.055699456  0.069870453        0.075    1.7105827          0.5 0.0077633837    64.404906    2.7940691         70.1 -0.0084876188  -0.10567502 -0.014760627   0.13109495   -0.2453937    2.3155306 
  217000    11.029675     1.273169    9.7565057  -0.15319191   0.84896781    1.0043841   0.74584356   -3.5502959            3    2.1520568    3.2157561    3.2448385 -0.0044241741 0.0055132475  0.043281914  0.035058697     2.080159    2.0876172            0            0 0.0050306901  0.069879518        0.075    1.7132632          0.5 0.0077643909    64.396552    2.7995363         70.1  0.014624067 -0.098305888 -0.0068863612   0.14964113   -2.5282233 -0.0039740604 
  218000     11.03164    1.2713807    9.7602589   -0.1635449   0.84777533     1.014401   0.73719014   -3.5502959            3    2.1407334    3.2317314    3.2434552 -0.052986221 -0.0022188249 0.0030290503 -0.0041110118    2.0696698    2.0756512            0            0 -0.045063695  0.069939089        0.075    1.7057308          0.5 0.0077710099    64.341701    2.8395412         70.1 -0.00032043216  -0.13737398 0.0061284726   0.12351978  -0.16829701   -2.8195871 
  219000    11.038831    1.2424625    9.7963684  -0.15096676   0.82849226   0.98760613   0.72289946   -3.5502959            3    2.1665491    3.2388997    3.2494549  0.011292651 -0.0072001419 -0.012465132 -0.016414184     2.096863    2.1031859            0            0  -0.11577199  0.069876947        0.075    1.7167793          0.5 0.0077641052    64.398921    2.7912622         70.1 0.0052670047  -0.11689435 0.0095930328  0.091409657 -0.038094508    2.0772468 
  220000     11.03482    1.2697704    9.7650496  -0.15827173   0.84670157   0.96953125   0.76526469   -3.5502959            3    2.0719954    3.1780653      3.14755  -0.10962922  0.011980765  0.057318391 -0.026250195    1.9982254    2.0097919            0            0  0.016462064  0.069883394        0.075    1.7263633          0.5 0.0077648216     64.39298    2.8119712         70.1 0.00067632704   -0.1358931 -0.0015484127   0.10501331 -0.005956175   -3.4097778 
  221000    11.001409    1.2604088    9.7410001  -0.14592727   0.84045915     0.978876   0.74864581   -3.5502959            3    2.1945801    3.2710918    3.2415008  0.071147574 -0.015530183 -0.029124094  0.020666884    2.1224121     2.131777            0            0  -0.04648388  0.069899656        0.075    1.7111028          0.5 0.0077666285    64.377999    2.8054283         70.1 -0.016912561  -0.14952465 -0.0043090303  0.081696479  0.013647483    4.0132233 
  222000    10.991971    1.2852739     9.706697  -0.15197282   0.85703953    1.0138847   0.75296726   -3.5502959            3    2.1755512     3.250838    3.2193837  0.056431976  0.010673138 -0.041488433  0.010175003    2.1029667    2.1105021            0            0   0.22374771  0.069886321        0.075    1.7091434          0.5 0.0077651468    64.390283    2.8065141         70.1 -0.0085323767  -0.12170974 0.0047712022  0.097575815  0.075071477    2.2757359 
  223000    11.068177    1.2807972    9.7873801  -0.15707042    0.8540544    1.0087235   0.75142931   -3.5502959            3    2.1381728    3.2339695    3.2076192 -0.027070274 -0.0089749369 -0.011284244 -0.031123349    2.0657365    2.0734548            0            0  0.032790912  0.069928923        0.075     1.704462          0.5 0.0077698803    64.351056    2.8415749         70.1 -0.0011355987  -0.11576297 -0.0094781213  0.077859684   0.90368366    1.8901188 
  224000    11.064067    1.2852053    9.7788622  -0.15553146   0.85699379     0.991355   0.76788583   -3.5502959            3    2.1547976    3.2113018    3.2271457  0.025945248 -0.00074442683 -0.015326446  0.015200863    2.0807749    2.0911939            0            0   0.25240528   0.06992279        0.075    1.7073567          0.5 0.0077691989      64.3567    2.8196195         70.1 -0.014439846  -0.11047302 -0.019232201   0.11914059   0.99993636    1.8940091 
  225000    11.051839    1.2605899    9.7912492  -0.15076242   0.84057989   0.98556591   0.74439445   -3.5502959            3    2.0820366    3.1723491    3.2017025  -0.12794169 0.00026405043 -0.016355038  0.022621582    2.0102785    2.0188043            0            0  0.032117607  0.069864528        0.075    1.7113899          0.5 0.0077627254    64.410368    2.8186984         70.1 0.00032655699  -0.11351615 0.0088393605   0.13265557   0.83966873   -2.8602907 
  226000    11.053707    1.2776404    9.7760665  -0.15095987   0.85194941    1.0072981   0.74887123   -3.5502959            3    2.0322277    3.1189227    3.1459758  -0.16821542  0.011817927  0.052284532  0.017798298     1.960038    1.9676011            0            0  0.019950905  0.069931681        0.075    1.7031285          0.5 0.0077701868    64.348517    2.8209135         70.1 -0.0017141704  -0.11720049 -0.024111857  0.079883796   -1.5235361   -1.6554761 
  227000    11.031317    1.2581251    9.7731914  -0.14726328   0.83893632   0.96464127    0.7555829   -3.5502959            3     2.068742    3.1621925    3.1692353  -0.12520166 -0.0046892082 -0.017539336 0.0077182681    1.9959054    2.0068523            0            0 -0.016314398  0.069874546        0.075    1.6850191          0.5 0.0077638384    64.401134     2.788483         70.1 -0.013387294 -0.094918254 0.0008539677   0.13461837    1.3621837   -6.4935879 
  228000    11.026523    1.2615585    9.7649648   -0.1558889   0.84122577   0.99201327   0.74117934   -3.5502959            3    2.1494206    3.2130873    3.2116618  0.023512675  0.008811975 -0.057838327 -0.0089167037    2.0779724    2.0857746            0            0  0.023083168  0.069900455        0.075    1.6725726          0.5 0.0077667172    64.377263    2.8118995         70.1 0.0038050714  -0.11305393 0.0015988819  0.063130334  -0.47025477   -1.9318437 
  229000      11.0446    1.2787752    9.7658252  -0.15289866    0.8527061   0.98478275   0.76511706   -3.5502959            3    2.1076585    3.1786519    3.2300744 -0.085750724 0.00097851186  0.067755188 -0.014767386    2.0339028    2.0444765            0            0 0.0026029615  0.069892946        0.075    1.6697795          0.5 0.0077658829     64.38418    2.8111896         70.1 -0.021400122  -0.10080771 -0.013566667   0.10086592   -5.7309534   -1.0984139 
  230000    11.088279    1.2877275    9.8005512  -0.15805187   0.85867568   0.99130825   0.77071884   -3.5502959            3    2.1337839     3.197066    3.2210642 -0.016778359 0.0088828472  -0.09923823 -0.005990058    2.0594882    2.0701832            0            0  -0.10478148  0.069906355        0.075     1.669618          0.5 0.0077673728     64.37183    2.8175535         70.1 -0.0038992158    -0.106824 -0.002428598   0.11569721    3.6951395    2.0324086 
  231000     11.05855    1.2821718    9.7763782  -0.15798638   0.85497105    1.0022564   0.75726059   -3.5502959            3    2.2078239     3.258573    3.2771739  0.087724731 0.00099656489  0.060590498 -0.041602128    2.1348255    2.1435208            0            0 0.0068783255  0.069842726        0.075    1.6806045          0.5 0.0077603029    64.430474    2.7828081         70.1 -0.013814358  -0.13690528   0.02657852  0.092359383   -2.9973359     1.345648 
  232000    11.059897    1.2834219    9.7764748  -0.15447128   0.85580462    1.0230777    0.7447915   -3.5502959            3     2.118931    3.1832855    3.2023125 -0.028804892 0.0054004664  -0.07030938 -0.010809427    2.0471346    2.0532921            0            0  0.071012369  0.069903934        0.075    1.6801089          0.5 0.0077671038    64.374059    2.8206395         70.1  0.002555926  -0.10544788 -0.017024656   0.10936471    1.0770703   -3.0922498 
  233000    11.053613    1.2801475    9.7734655  -0.15487805    0.8536212   0.99952801   0.75682774   -3.5502959            3    2.1637635    3.2511351    3.2207397  0.019415587 1.3162019e-06 -0.025364487 -0.013261192    2.0908068    2.0996354            0            0   0.04642467  0.069920624        0.075    1.6845812          0.5 0.0077689582    64.358694    2.8308937         70.1 -0.0083347699  -0.15003356 -0.012123907   0.09012211   0.64423057    2.7627593 
  234000    11.051329    1.2797242    9.7716044  -0.15534729   0.85333895    1.0134945   0.74706204   -3.5502959            3    2.2102901    3.2469622    3.2786134    0.1052948 0.0070203288 -0.0043565484  0.006013787    2.1382748     2.145266            0            0 0.0004397929  0.069859126        0.075    1.6758276          0.5 0.0077621251    64.415349    2.7871439         70.1 0.0072040227  -0.12593757 -0.003957628   0.08427875   -2.9797965    2.1929904 
  235000    11.028058    1.2813774    9.7466808  -0.16532141   0.85444132     1.002382   0.75629454   -3.5502959            3    2.1032335    3.1894127     3.170056 -0.049768126 -0.001399904 -0.046805216 -0.025745553    2.0303282    2.0389223            0            0 -0.0052943726   0.06991719        0.075    1.6678435          0.5 0.0077685767    64.361854    2.8173918         70.1 -0.014936818 -0.096163439  0.016376793   0.10796102    3.8093952   -1.2085351 
  236000     11.04481    1.2700078     9.774802  -0.16278489   0.84685991   0.99911232   0.74584059   -3.5502959            3    2.0886352     3.210233    3.1600557  -0.10438307 -0.0031876402 -0.00075775099 -0.024428375    2.0167377    2.0245338            0            0  0.077439488  0.069922179        0.075    1.6543412          0.5  0.007769131    64.357262    2.8079838         70.1 0.0053868269  -0.11324975 0.00049271745   0.11627615  -0.44366054    1.0536501 
  237000    11.029817    1.2618538    9.7679636  -0.16741392   0.84142265   0.98078543   0.74898011   -3.5502959            3    2.1306612    3.2104511    3.1896577 -0.0081252707 -0.012821725  0.049151209  0.021953413     2.058461    2.0677356            0            0  0.048147363  0.069950086        0.075    1.6602672          0.5 0.0077722318    64.331586    2.8279693         70.1 -0.0072892228  -0.14037148 -0.025812683  0.088714218   -1.2065955   -3.1114953 
  238000    11.048633    1.2720164    9.7766166  -0.15971926   0.84819923    1.0057596   0.74364765   -3.5502959            3    2.0923869    3.1800274    3.1671843 -0.070051144 0.0091275493  0.021658075  0.046552113    2.0207007     2.027859            0            0 0.0029137387  0.069923837        0.075    1.6529187          0.5 0.0077693152    64.355736    2.8407791         70.1  0.004255959 -0.090016312 0.0080237288   0.11892391   -1.7123864  -0.47235916 
  239000    11.064048    1.2636137    9.8004343  -0.16585853   0.84259623    1.0031751   0.73603359   -3.5502959            3    2.2022105    3.2718751     3.231242   0.10351437 -0.0041264562 -0.045810602  0.041333764    2.1312583    2.1378484            0            0  -0.13593877  0.069900775        0.075    1.6521166          0.5 0.0077667528    64.376969    2.8274797         70.1 -0.0021769926 -0.091935564  0.010267094  0.087689575   0.96070494    2.4025943 
  240000    11.051574    1.2789167     9.772657    -0.148071   0.85280049   0.97555707   0.77141452   -3.5502959            3     2.206911    3.2730376    3.2556677   0.09202776 0.0079448232 -0.042256256 -0.037803226    2.1325482    2.1443209            0            0 -0.043097829  0.069878379        0.075    1.6521596          0.5 0.0077642643    64.397602     2.803567         70.1 -0.016102967 -0.070321222 0.0088735231  0.090104608   -2.3242688   0.33496645 
  241000    11.102937     1.300682    9.8022553   -0.1499435   0.86731388    1.0336111   0.75695453   -3.5502959            3    2.1442091    3.2232383     3.189028  0.020360923 0.0062949164  0.023890488 0.0076527032    2.0712402    2.0778943            0            0  0.045876917  0.069868331        0.075    1.6632917          0.5 0.0077631479    64.406863    2.7751747         70.1 -0.0028331136 -0.095135532 0.0093699919  0.092302554    1.9538115    2.2308985 
  242000    11.052254    1.2605086    9.7917451  -0.15033833   0.84052569    1.0007834   0.73417602   -3.5502959            3    2.1334817    3.2043681    3.2280554  -0.03197827 0.0034405368  0.014690877 -0.00079359309    2.0627086    2.0692731            0            0 0.0040357832  0.069928272        0.075    1.6760146          0.5  0.007769808    64.351655     2.820334         70.1 -0.019855576 -0.094281126 0.0016367733   0.10465536   0.62657995  -0.60087082 
  243000    11.057086    1.2760882    9.7809979  -0.15976425   0.85091437   0.98155391   0.76428115   -3.5502959            3    2.2114489     3.274413    3.2638416  0.096092108 0.00075802822 -0.027826058 -0.023656315    2.1377737     2.148474            0            0 -0.0028254598  0.069886406        0.075    1.6600558          0.5 0.0077651562    64.390205    2.8199163         70.1  0.018315646  -0.12284772  0.010845293   0.10656544   0.34210909    2.8662089 
  244000    11.037346     1.239433    9.7979126  -0.14935593   0.82647217   0.97328056   0.72906862   -3.5502959            3    2.1368217    3.2342319    3.2102549 -0.034021665 -0.0013028267 -0.057405062    0.0301932    2.0665409    2.0743776            0            0   -0.1078506  0.069866562        0.075    1.6615893          0.5 0.0077629514    64.408493    2.8061994         70.1 -0.0045343025  -0.10979918 -0.011541414   0.12091649    1.5343503    3.8283865 
  245000    11.038416    1.2600932    9.7783229  -0.15118581   0.84024871   0.98267179   0.74576892   -3.5502959            3    2.1705855    3.2561616    3.2147134  0.040881432 -0.0071759811 -0.029344391 -0.0041814692    2.0986949    2.1075389            0            0  0.016787504  0.069910055        0.075    1.6544493          0.5 0.0077677839    64.368423    2.8210489         70.1 0.0048491643  -0.10444094 0.0005972972   0.12229018   0.18071965  -0.17540893 
  246000    11.047825     1.265139    9.7826862  -0.15418304   0.84361329   0.99393029   0.74388089   -3.5502959            3    2.0450448    3.1372551    3.1427208  -0.14484159 -0.006849469  -0.04302725 -0.019692308    1.9733361    1.9812758            0            0 -0.022872488  0.069951744        0.075     1.658128          0.5  0.007772416    64.330061    2.8217591         70.1 -0.017928522  -0.12092746 0.0057100729   0.10793796   -1.3033048   -5.1422728 
  247000    11.085892    1.2661703    9.8197217  -0.14359512     0.844301   0.98162634   0.75321555   -3.5502959            3    2.1878258    3.2696063    3.2563106  0.037560579 -0.008352161   0.03435087 -0.038630771    2.1152174    2.1248463            0            0 -0.018105555  0.069929636        0.075    1.6590826          0.5 0.0077699595      64.3504    2.8299279         70.1 0.0067034228  -0.11720004 -0.011744057   0.14463766   -1.8182331    2.5445129 
  248000    11.070503    1.2870108    9.7834921  -0.15217396   0.85819772   0.98508015   0.77406776   -3.5502959            3    2.2734389    3.3091022    3.3109071    0.2003074  0.011768162 0.0036180501  0.041610136    2.1988203    2.2102378            0            0 -0.013145168  0.069882607        0.075    1.6576761          0.5 0.0077647341    64.393705    2.7969768         70.1 -0.0045559221  -0.15329432  0.014709648  0.091646246   -1.4906831    1.9199875 
  249000    11.000002     1.242751    9.7572506  -0.14734781   0.82868463   0.99370691   0.71915951   -3.5502959            3      2.24563     3.282718    3.3036929    0.1504791 -0.0070230364 -0.033010966 -0.0053047681    2.1763045    2.1818754            0            0  0.048712176  0.069868146        0.075    1.6512467          0.5 0.0077631273    64.407033     2.790456         70.1 -0.0038712231   -0.1168171 0.0012343204   0.12003432  -0.62362256    1.7562659 
  250000    11.046351    1.2507221    9.7956286  -0.13777777   0.83399988    1.0065844   0.71944363   -3.5502959            3    2.0833984    3.1757511    3.1775574  -0.10311326 -0.0011104439 -0.084119856 -0.0078705272    2.0140455    2.0188176            0            0 -0.023812631  0.069865366        0.075    1.6501624          0.5 0.0077628185    64.409596    2.7985133         70.1 -0.0099837587  -0.11682846 0.00079190336   0.10219842  -0.86677877   -3.6286244 
  251000     11.06422    1.2769068    9.7873129  -0.16153134   0.85146023    1.0009642   0.75227187   -3.5502959            3    2.0613313    3.1749805    3.1384066  -0.12939319 0.0047723323 -0.054279373 0.00031828255    1.9888138    1.9971111            0            0  0.016781798  0.069857224        0.075    1.6401826          0.5 0.0077619138    64.417103    2.7969916         70.1 0.0073485688  -0.10629103 0.0069947342    0.1409075    2.9408662  -0.25197492 
  252000    11.025694    1.2699106    9.7557832  -0.16444392   0.84679505     0.988887   0.75253806   -3.5502959            3     2.104254    3.1798138    3.2071536 -0.074205333 -0.0098850575  0.077433551 -0.023575586    2.0317109    2.0408087            0            0 -0.041297106  0.069862425        0.075    1.6409012          0.5 0.0077624916    64.412308    2.8034328         70.1 -0.018735966 -0.094887459 0.0036532195  0.076069904   -1.5353264    -6.764571 
  253000    11.090627    1.2927507    9.7978764  -0.15060227   0.86202521    1.0175629   0.75882494   -3.5502959            3    2.1133819    3.1950599    3.2081782  -0.06309232 -0.0041670829  0.060667829  0.021387751    2.0402327    2.0480968            0            0 -0.051714887  0.069892989        0.075     1.653054          0.5 0.0077658876     64.38414     2.806626         70.1 0.0098199979 -0.059203879 -0.0027795284    0.1096645   -1.0590279   -1.1777592 
  254000    11.051968    1.2622525     9.789716  -0.15153318   0.84168852   0.98993306   0.74333474   -3.5502959            3     2.122509     3.218214    3.2151794 -0.065866334 0.0060687088 -0.099950199 -0.013595493     2.050853    2.0589965            0            0  -0.23119364  0.069905149        0.075    1.6536355          0.5 0.0077672388    64.372941    2.8176731         70.1 -0.0062926784  -0.09476505  0.016899526   0.11498673     2.702351  -0.72809204 
  255000    11.050461    1.2734548     9.777006  -0.15499021   0.84915839    1.0057256   0.74526816   -3.5502959            3    2.1469248    3.2082162    3.2176144  0.014943836 0.0022723268 -0.010602456  0.033726918    2.0750824    2.0823991            0            0   0.25163663  0.069899452        0.075    1.6522497          0.5 0.0077666058    64.378187    2.8255896         70.1 0.00075520718  -0.10906284  0.004641611  0.094249553   0.35518699    2.8556015 
  256000    11.022763    1.2657642    9.7569984  -0.15574279    0.8440302    1.0165663   0.72950986   -3.5502959            3    2.1401612    3.2278013     3.213264 -0.020581732 -0.0034926929  0.065704942 -0.024973417    2.0698379      2.07494            0            0 -0.016431544  0.069930009        0.075    1.6700454          0.5  0.007770001    64.350056    2.8344244         70.1 0.0081617668 -0.085510835 -0.00038216504   0.09757546   -1.2504886   0.71594653 
  257000    11.059759     1.279488    9.7802711  -0.14872299   0.85318144   0.99362587   0.76002333   -3.5502959            3    2.0641296    3.1916162    3.1415119  -0.14073927 -0.0045807564 0.0083234829 -0.012946461    1.9908649    2.0003802            0            0 -0.034356428  0.069897162        0.075    1.6602575          0.5 0.0077663513    64.380297    2.8181014         70.1 -0.0020119652 -0.079641051 0.0075303682   0.11922854   0.36117928   -3.8547555 
  258000    11.017797    1.2615579    9.7562396  -0.15432813   0.84122536   0.99623613   0.73836811   -3.5502959            3    2.1124124    3.1907192    3.2164868 -0.069968847 0.0043000793 -0.016085895 -0.045891434    2.0412352    2.0484955            0            0  0.018415186  0.069904864        0.075    1.6798638          0.5 0.0077672071    64.373203    2.8113627         70.1 -0.0022589375 -0.063147525 -0.015488854   0.11622599  -0.78337979   -3.7796872 
  259000    11.005557    1.2639359    9.7416206  -0.15087237   0.84281106    1.0175274   0.72683924   -3.5502959            3    2.1496348    3.2213362    3.2251449 0.0024232076 -0.0064095671  0.050160593  0.023825544    2.0795689    2.0843519            0            0  0.030453919    0.0698565        0.075    1.6776143          0.5 0.0077618333    64.417771    2.8045362         70.1 0.00056506519  -0.14365961 -0.012373065  0.066776028  -0.56338564   -2.2406734 
  260000    11.026194    1.2408617    9.7853322  -0.15306064   0.82742486   0.97431055    0.7299702   -3.5502959            3    2.1353666    3.2168921    3.2114922 -0.022284414 0.0037599311  0.047638919  0.014637859     2.064999    2.0728565            0            0 -0.054264963  0.069964896        0.075    1.6577061          0.5 0.0077738773    64.317969    2.8555394         70.1 0.0082635219  -0.09422774  0.014416244   0.10414534 -0.028474395   -3.1389005 
  261000    11.060231    1.2712497    9.7889813  -0.15337897   0.84768797    0.9841683   0.75716618   -3.5502959            3    2.0985806    3.1933943    3.1734236 -0.071076004 -0.010903071 -0.019290017 -0.012885303    2.0255913     2.035438            0            0  0.010491298  0.069918088        0.075     1.626878          0.5 0.0077686765    64.361027    2.8205219         70.1 0.0032019771 -0.089287251 -0.0073089544  0.099240154  -0.38206485    -2.683017 
  262000    11.042051    1.2786597    9.7633913  -0.16848215   0.85262909   0.98986325    0.7616074   -3.5502959            3    2.1311918     3.227146     3.205585 -0.039155539 0.0020818551 -0.0078733277  0.052192576    2.0577744    2.0676838            0            0  0.041328832  0.069877977        0.075    1.6261583          0.5 0.0077642197    64.397972    2.7877581         70.1 -0.0022189862    -0.105151  0.011505866  0.092916966   -2.4328263   0.08958202 
  263000    11.034314    1.2500752    9.7842384    -0.157018   0.83356853    1.0030252   0.72109389   -3.5502959            3    2.0423104    3.1724751    3.1403428  -0.18588672 0.0033645114 -0.0059806356 -0.056376615    1.9727984     1.977958            0            0 0.0071158366  0.069893034        0.075    1.6503936          0.5 0.0077658926    64.384099    2.8185333         70.1  0.006223864 -0.090377039 0.0099213446   0.09824208   0.96745893   -3.5162686 
  264000    11.082459    1.2712133    9.8112452   -0.1410644   0.84766374    1.0009093   0.74598371   -3.5502959            3    2.1948464    3.2647801    3.2515686  0.068190506 -0.00087080226   0.05758472  0.011544818    2.1229351    2.1306297            0            0  0.043688178   0.06985289        0.075      1.65864          0.5 0.0077614323      64.4211    2.7979525         70.1 -0.022287893  -0.11342393 -0.0076968564   0.11786662   -1.3777286   -1.0239041 
  265000    11.008194    1.2558109    9.7523835  -0.16835299   0.83739322   0.98060578   0.74238693   -3.5502959            3    2.2086321    3.2906892    3.2649726  0.070234341 -0.0092520055 -0.057908922 -0.011771308    2.1370674     2.145718            0            0   0.20972935  0.069908359        0.075      1.66626          0.5 0.0077675955    64.369984     2.829711         70.1 -0.00049661552 -0.092311824 0.0030340215  0.082788151    1.4741243  -0.20221013 
  266000    11.047432    1.2659741    9.7814583   -0.1537877   0.84417017   0.99786154   0.74219214   -3.5502959            3    2.1612351    3.2381975    3.2355428 0.0099651396 -0.001149008  0.055865103 -0.031882262    2.0896893     2.097214            0            0 -0.037548179  0.069868149        0.075    1.6530704          0.5 0.0077631276    64.407031    2.7874761         70.1  -0.03233911  -0.14111698 -9.4272021e-05   0.10796282   0.33255127     1.720487 
  267000    11.102198    1.3002286    9.8019696  -0.15663942   0.86701158    1.0248142   0.76230575   -3.5502959            3    2.0728632    3.1818803    3.1534055  -0.11669606 0.0086857335 -0.055261372 -0.017937345    1.9993785    2.0071128            0            0 -0.00042213101  0.069903386        0.075    1.6501054          0.5 0.0077670428    64.374565    2.8170812         70.1  0.015067571  -0.15920212 0.0017946833  0.083656689     2.148293   -6.2585287 
  268000    11.079134    1.2803452    9.7987892  -0.16127174     0.853753     1.010807   0.74954052   -3.5502959            3    2.1016833    3.2163956     3.172313 -0.083658866 3.3300837e-05  0.031375575 -0.057261918    2.0294291    2.0368316            0            0   0.01689027  0.069895464        0.075    1.6397612          0.5 0.0077661627     64.38186    2.8047981         70.1   0.01212954  -0.12703573 -0.012509883     0.110551  -0.46517603   -2.8460212 
  269000    11.049948    1.2769626    9.7729855  -0.15645853   0.85149747    1.0063394   0.74875642   -3.5502959            3    2.1134363    3.1849247    3.1957039 -0.040319798 -0.0049408644  0.026432627 -0.00086084782    2.0412577    2.0488712            0            0  0.021601236  0.069885814        0.075    1.6364529          0.5 0.0077650905     64.39075    2.8062334         70.1 -0.0089377247  -0.10444309  0.014621034   0.11214947    0.4263476   -1.5399234 
  270000    11.033724    1.2766614    9.7570622   -0.1531207   0.85129662   0.99403142   0.75661345   -3.5502959            3    2.1983074    3.2522394     3.281931  0.060751723 -0.0069012859 -0.051705008 -0.017640459    2.1253713     2.134532            0            0  0.055183166  0.069884352        0.075    1.6291475          0.5  0.007764928    64.392097    2.7975965         70.1  0.002794747   -0.1246701 0.0031841081   0.10257218   -1.4666698    1.2483424 
  271000    11.039389    1.2667469    9.7726419   -0.1549397   0.84468546    1.0120257   0.73362355   -3.5502959            3    2.2330395    3.2939972    3.2736945    0.1314268 0.0026620092 -0.036547887 8.8518178e-05    2.1623196    2.1681096            0            0 -0.019021417  0.069853495        0.075    1.6249328          0.5 0.0077614994    64.420542    2.8018124         70.1  0.017267845  -0.10545462 -0.0045209821   0.10398249    1.2087726    5.7268959 
  272000    11.054976    1.2907595    9.7642165  -0.15692875   0.86069742    1.0119259   0.76036473   -3.5502959            3    2.1616562     3.246166    3.2062965  0.032506094 -0.0091281038 -0.0079156737 0.0039212659    2.0883585    2.0967327            0            0  -0.14078509  0.069873337        0.075    1.6314422          0.5 0.0077637041    64.402249    2.8062136         70.1 -0.0011852221 -0.095548052  0.017150168  0.087013162    2.0797945   0.59836308 
  273000    11.041879    1.2781335    9.7637453  -0.14977748   0.85227824   0.96962992   0.77448935   -3.5502959            3    2.1576459    3.2401475    3.2246203 0.0081700232 0.0069390445 -0.027088008 0.0058879395    2.0829867    2.0954361            0            0 -0.014758584  0.069920315        0.075    1.6296309          0.5 0.0077689239    64.358978    2.8310511         70.1 -0.0043588288  -0.11376888 -0.0067793791   0.10948189   0.39694518  -0.49816634 
  274000    11.015645    1.2679178    9.7477274  -0.14962599   0.84546625   0.98982016   0.74970331   -3.5502959            3    2.1806475    3.2405496    3.2422717  0.059121119 -0.011258673  0.043438243 -0.028722715    2.1083776    2.1171423            0            0  0.085975988  0.069881025        0.075     1.643331          0.5 0.0077645583    64.395163    2.8108983         70.1  0.014028516  -0.11815088 0.0028146794    0.1051718    -2.223762  -0.42197312 
  275000     11.04397    1.2595531    9.7844173  -0.15699949   0.83988857   0.98615414   0.74285125   -3.5502959            3    2.0772946    3.1802661    3.1714934  -0.11987562 3.1523522e-05  0.030480248 0.00034044993    2.0056853    2.0140246            0            0 -0.018077928  0.069893999        0.075    1.6339515          0.5 0.0077659999     64.38321    2.8189021         70.1 0.0076534018  -0.10245454 -0.010377145   0.11891203    1.2752258   -2.6609873 
  276000    11.032919    1.2591243    9.7737951  -0.15345243    0.8396026   0.98632395   0.74226183   -3.5502959            3     2.110396     3.173749    3.2061169 -0.048677971   0.00540475 -0.097984293 -0.026140104    2.0388434    2.0471151            0            0   -0.2019365  0.069889527        0.075    1.6257362          0.5 0.0077655031    64.387329    2.7937512         70.1 0.0047354592  -0.12235472 0.0038065589  0.072864824    1.5908893   -1.7455874 
  277000    11.064131    1.2947696    9.7693614  -0.15528264   0.86337141    1.0169693   0.76146269   -3.5502959            3     2.192056    3.2523171    3.2464849  0.077366153 0.0063819442  0.095526938  0.025796531    2.1186526     2.126809            0            0   0.14222177  0.069912214        0.075    1.6261377          0.5 0.0077680237    64.366436    2.8119396         70.1  0.014496894  -0.12789141 -0.0010089474  0.077335007   -4.4877975  -0.13264999 
  278000     11.05698    1.2800979    9.7768819  -0.15083118    0.8535881    1.0395269   0.73015107   -3.5502959            3    2.2459878      3.30437    3.2887744   0.14481898 -0.0010769339    0.0415531 0.0055807633    2.1756027    2.1792935            0            0   0.01526645  0.069903817        0.075     1.592408          0.5 0.0077670908    64.374167    2.8125672         70.1 0.0057343616 -0.096940331 0.0052659805   0.10037458    3.2630885    3.7605766 
  279000     11.06573    1.2812067    9.7845237   -0.1563355   0.85432746   0.98965327   0.76457652   -3.5502959            3    2.0818915    3.1724092    3.1766963  -0.10343112 -0.0017344625  -0.11535444 -0.0072190439    2.0081878     2.018397            0            0  0.072952732  0.069899938        0.075    1.5906267          0.5 0.0077666598     64.37774    2.8243991         70.1 -0.0034385994   -0.1299176 0.0023470732   0.10922224 -0.093838661     2.576349 
  280000    11.050414    1.2419954    9.8084191  -0.14831945   0.82818079   0.97022831   0.73394649   -3.5502959            3     2.196591    3.2833826    3.2242919   0.08209852  0.016852076  0.047196189 -0.061169071    2.1258401    2.1343428            0            0  0.071888735  0.069906905        0.075    1.6104926          0.5 0.0077674339    64.371324    2.8260369         70.1 -0.005178742 -0.099908102  0.029550068   0.10451209   0.39336928    4.1300298 
  281000    11.007996    1.2480259    9.7599698   -0.1492453   0.83220201    1.0028493   0.71893444   -3.5502959            3    2.0726203    3.1672228    3.1948577  -0.14421957 0.0021942117 0.0038450786 -0.020728449    2.0033165    2.0082792            0            0   0.10413367  0.069909079        0.075     1.607431          0.5 0.0077676754    64.369322      2.83251         70.1 -0.0098752075 -0.067743648  0.010496042   0.10921081    1.7756432    -3.172351 
  282000     11.01966    1.2883435    9.7313163  -0.16412829   0.85908643    1.0023608   0.76404701   -3.5502959            3    2.0711009    3.1677167    3.1676198  -0.12203376 0.00094797291  0.021218866  0.032007563    1.9974483    2.0067911            0            0  -0.19407809  0.069901739        0.075     1.617806          0.5 0.0077668599     64.37608    2.8087091         70.1 -0.022655303  -0.11363947 -0.019170925  0.098524244   -0.4613617   -3.6392213 
  283000    11.039847    1.2799501    9.7598965  -0.14521238   0.85348957      1.01817   0.74420118   -3.5502959            3    2.1208285    3.1904144    3.2087467   -0.0366755 -0.0040496183 -0.016604778  -0.02000295     2.049089    2.0555044            0            0 -0.0080827619  0.069925899        0.075    1.6102485          0.5 0.0077695443    64.353839    2.8246549         70.1 -0.0031156993  -0.10474467 0.0013654309   0.11772252 -0.067355368 -0.052319547 
  284000    11.106815    1.3085962    9.7982183  -0.16038975    0.8725912     1.005633   0.78436715   -3.5502959            3    2.0548923    3.1490604    3.1787278  -0.16311141 -0.0066191866  0.090804855 -0.026050685    1.9792808    1.9903725            0            0  0.018888569  0.069864483        0.075    1.6162936          0.5 0.0077627204     64.41041    2.8121238         70.1 -0.0037110326  -0.11234945 -0.00034747142   0.10925525  -0.82275069    -0.867828 
  285000    11.078958    1.2772762    9.8016814  -0.13635258   0.85170658    1.0027915   0.75146607   -3.5502959            3    2.1212135    3.2008234    3.1922687 -0.029451759 -0.0070258929 -0.0086944485  0.009333445    2.0487736     2.056876            0            0 -0.022749304  0.069905844        0.075    1.6076246          0.5  0.007767316      64.3723    2.8049064         70.1 -0.0010189437  -0.12845719 -0.0095840748   0.12074051   -1.7080196    1.3279953 
  286000    11.045904    1.2376731    9.8082308  -0.14335685   0.82529865   0.97727098   0.72445777   -3.5502959            3    2.1078539    3.1627434    3.2058122 -0.044993804 -0.0027546313 -0.037181803  0.021440609    2.0380176    2.0451538            0            0   0.02574409  0.069890376        0.075    1.6028435          0.5 0.0077655973    64.386548    2.8135537         70.1  -0.00808279  -0.10137909 -0.00097622849   0.10327826    1.5954216   0.51678213 
  287000    11.072684    1.2903123    9.7823715  -0.15978855   0.86039921   0.98636235    0.7768819   -3.5502959            3    2.1109471    3.2196553    3.1877842 -0.074598246  0.010639752  0.038700133 0.0041626947    2.0360572    2.0476637            0            0  -0.12593566   0.06988617        0.075    1.6132523          0.5   0.00776513    64.390422    2.8170631         70.1  0.014970204  -0.11041642 -0.0026592706  0.080834297    1.4822456   -1.7649086 
  288000    11.040216    1.2667786     9.773437  -0.15953841    0.8447066   0.99636534    0.7440816   -3.5502959            3    2.2429268    3.2931822     3.290911   0.14468719  0.001464841  0.049938352 -0.032034442    2.1711988    2.1790016            0            0 -0.025632422  0.069903122        0.075    1.6038528          0.5 0.0077670136    64.374807    2.8151037         70.1 0.0012352822  -0.11301153 -0.0051414234   0.11082722   -2.3009404    2.4234211 
  289000    11.054222    1.2824742    9.7717482  -0.14953765   0.85517265    1.0148887   0.74918892   -3.5502959            3    2.1276201    3.1850093    3.2050834 -0.0072324847  0.003523712   -0.1128413 -0.006310492    2.0553998    2.0625065            0            0 -0.018657689  0.069897296        0.075    1.6043899          0.5 0.0077663662    64.380173    2.8138716         70.1   0.00508669 -0.077527884 0.0098542494  0.071608626    2.6971596   -2.3533802 
  290000    11.072822     1.306424    9.7663982  -0.15616252   0.87114275    1.0344852   0.76275135   -3.5502959            3    2.1052377    3.2014137    3.1855761 -0.071276726 0.0076160758  0.048525866  0.025723183      2.03171    2.0388668            0            0 -0.049504496  0.069900318        0.075    1.6194117          0.5  0.007766702     64.37739    2.8135341         70.1 -0.007604533  -0.12190166 -0.011978269  0.081587236   -2.3969191   -1.5612852 
  291000     11.10895    1.2973819    9.8115682  -0.15242241   0.86511332    1.0137736   0.76649149   -3.5502959            3    2.2261308    3.2519309    3.2823751   0.14408642 0.0010208844 -0.042965238 -0.011870129    2.1522425    2.1610888            0            0 -0.020552059  0.069897031        0.075    1.6172374          0.5 0.0077663368    64.380417    2.8238871         70.1 -0.0086058566  -0.10754586 0.0032627073    0.1001512   0.17356237    9.8260196 
  292000     11.04666    1.2792787    9.7673814  -0.15663172   0.85304189   0.99101079   0.76153134   -3.5502959            3    2.0748428    3.1758563    3.1706062  -0.12193424 -0.0018028601 -0.024600876   0.00855868    2.0014327    2.0112611            0            0  -0.27808841  0.069901166        0.075    1.6303406          0.5 0.0077667962    64.376609    2.7874649         70.1 0.0069767473 -0.081553554  0.010901494   0.10469177   -2.0330271 -0.018875932 
  293000    11.057666    1.2773462    9.7803199  -0.16514203   0.85175326     1.010994   0.74608461   -3.5502959            3    2.0870703    3.1698418    3.1747881 -0.083419105  -0.00122922 -0.029487889  0.036224769    2.0151492    2.0222066            0            0  0.062677914  0.069868396        0.075    1.6363705          0.5 0.0077631551    64.406803    2.7904789         70.1 0.0054036474  -0.12671015 0.0040406982   0.11193666   0.96576587   -1.9080881 
  294000    11.033086    1.2602185    9.7728675  -0.14828275   0.84033227   0.97806493   0.74897426   -3.5502959            3    2.1178557    3.1922615    3.2166934  -0.05538783 -0.0040917318 -0.011111505 0.0043866452    2.0456561    2.0551047            0            0 -0.00099111032  0.069892719        0.075    1.6134314          0.5 0.0077658576    64.384389    2.8080833         70.1 0.00063038225 -0.084165189 0.00037372477    0.1244515    0.2316777   0.25135396 
  295000    11.055723    1.2784843    9.7772387  -0.16158007   0.85251218    1.0189799   0.74203384   -3.5502959            3    2.0827007    3.2118354    3.1512591  -0.11499231 0.0043933217  0.063049605 -0.023093564    2.0111701    2.0173246            0            0  0.078902508  0.069864327        0.075     1.606316          0.5  0.007762703    64.410554    2.7998941         70.1 -0.0047756155 -0.088415142 -0.005778957   0.11722128   0.17876378 -0.080573297 
  296000    11.084235    1.2920705    9.7921644  -0.16009612    0.8615716    1.0173361    0.7582202   -3.5502959            3    2.1261289    3.2120242    3.2133329 -0.046970496 -0.0068470783 -0.047173304 0.0052615006     2.053038    2.0608583            0            0   0.31861952  0.069858684        0.075    1.6139142          0.5  0.007762076    64.415757    2.7800723         70.1 -0.020197822  -0.10441004 0.0059219594   0.13506847   0.61308779  -0.19723512 
  297000    11.063239    1.3111404    9.7520988  -0.15472002   0.87428772   0.98074037    0.8037609   -3.5502959            3    2.1984811    3.2458651    3.2876706  0.061907672 -0.00029541634 0.0078146759 -0.0064160072    2.1210001    2.1355584            0            0  -0.30667349  0.069898604        0.075    1.6191716          0.5 0.0077665116    64.378968    2.8069438         70.1 0.00082940446 -0.079074445 -0.006912888  0.099669134  -0.15861814  -0.51532387 
  298000     11.06472    1.2799968    9.7847229  -0.16321818   0.85352068     0.990485   0.76267891   -3.5502959            3    2.1375631    3.2049775    3.2220676 -0.014355975  0.007547623  0.052695317  0.046346251    2.0640423    2.0740152            0            0 -0.006611068  0.069932513        0.075     1.620888          0.5 0.0077702792    64.347752     2.841362         70.1  0.006270362 -0.092932446 0.0017036598   0.12230524   0.25805796   -1.7659814 
  299000    11.030936    1.2792831     9.751653  -0.16957127   0.85304483    1.0095391    0.7492046   -3.5502959            3    2.0748456    3.1366325    3.1667175 -0.078813199 -0.002283889 -0.058877314 -0.045967524    2.0026238    2.0100752            0            0 -0.031838057  0.069906153        0.075    1.6156336          0.5 0.0077673503    64.372016    2.7998444         70.1 -0.0018101823  -0.10846305 -0.0042507865   0.11347339   0.31428634    0.5492422 
  300000    11.052402    1.2712393     9.781163  -0.15458481   0.84768105   0.99210446   0.75187268   -3.5502959            3    2.1670175    3.2434566    3.2549148  0.002681212 0.0031206489 -0.026679393  0.014715556    2.0945385    2.1033658            0            0 -0.015812481  0.069946413        0.075    1.6032738          0.5 0.0077718236    64.334965    2.8413474         70.1 -0.0013067444  -0.10607913 0.0046220703    0.1166353   0.10131621    3.8478628 
Loop time of 193.913 on 1 procs for 300000 steps with 4504 atoms

Performance: 668339.764 tau/day, 1547.083 timesteps/s
98.7% CPU use with 1 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 13.726     | 13.726     | 13.726     |   0.0 |  7.08
Bond    | 51.899     | 51.899     | 51.899     |   0.0 | 26.76
Neigh   | 51.543     | 51.543     | 51.543     |   0.0 | 26.58
Comm    | 4.9922     | 4.9922     | 4.9922     |   0.0 |  2.57
Output  | 0.63314    | 0.63314    | 0.63314    |   0.0 |  0.33
Modify  | 66.729     | 66.729     | 66.729     |   0.0 | 34.41
Other   |            | 4.391      |            |       |  2.26

Nlocal:    4504 ave 4504 max 4504 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    1470 ave 1470 max 1470 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    2969 ave 2969 max 2969 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 2969
Ave neighs/atom = 0.659192
Ave special neighs/atom = 6.98401
Neighbor list builds = 37673
Dangerous builds = 0
#undump      eq

#--- Unfix Equil ---#

unfix abeads_edz
unfix bbeads_edz
unfix tbeads_edz

unfix freeze_tout


###############
# Compression #
###############


#--- Bring the brushes closer together fit the sim box ---#

variable       bbzmax  equal bound(bbeads,zmax)
variable       tbzmin  equal bound(tbeads,zmin)
displace_atoms  alltop move 0.0 0.0 -$(v_tbzmin - v_bbzmax) units box
displace_atoms  alltop move 0.0 0.0 -39.298231800295994276 units box
variable z_f equal bound(all,zmin)
variable z_c equal bound(all,zmax)
change_box all z final ${z_f} $(v_z_c + 0.1) units box
change_box all z final 0 $(v_z_c + 0.1) units box
change_box all z final 0 30.80176819970400004 units box
  orthogonal box = (0 0 0) to (20 20 30.8018)

print         "D = $D"
D = 25.0367328811994
print         "D = $(v_twzmin - v_bwzmax)"
D = 25.036732881199398548
info variables

#--- Computes ---#

# Number density profiles

compute         cabeads abeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         cabeads abeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             abeads_cdz abeads  ave/chunk ${Neveryc} ${Nrepeatc} ${Nfreqc} cabeads density/number file abeads_cdz
fix             abeads_cdz abeads  ave/chunk 100 ${Nrepeatc} ${Nfreqc} cabeads density/number file abeads_cdz
fix             abeads_cdz abeads  ave/chunk 100 400 ${Nfreqc} cabeads density/number file abeads_cdz
fix             abeads_cdz abeads  ave/chunk 100 400 40000 cabeads density/number file abeads_cdz
compute         cbbeads bbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         cbbeads bbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             bbeads_cdz bbeads  ave/chunk ${Neveryc} ${Nrepeatc} ${Nfreqc} cbbeads density/number file bbeads_cdz
fix             bbeads_cdz bbeads  ave/chunk 100 ${Nrepeatc} ${Nfreqc} cbbeads density/number file bbeads_cdz
fix             bbeads_cdz bbeads  ave/chunk 100 400 ${Nfreqc} cbbeads density/number file bbeads_cdz
fix             bbeads_cdz bbeads  ave/chunk 100 400 40000 cbbeads density/number file bbeads_cdz
compute         ctbeads tbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         ctbeads tbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             tbeads_cdz tbeads  ave/chunk ${Neveryc} ${Nrepeatc} ${Nfreqc} ctbeads density/number file tbeads_cdz
fix             tbeads_cdz tbeads  ave/chunk 100 ${Nrepeatc} ${Nfreqc} ctbeads density/number file tbeads_cdz
fix             tbeads_cdz tbeads  ave/chunk 100 400 ${Nfreqc} ctbeads density/number file tbeads_cdz
fix             tbeads_cdz tbeads  ave/chunk 100 400 40000 ctbeads density/number file tbeads_cdz



#--- Fixes ---#
fix             freeze_tout twout setforce 0.0 0.0 NULL
fix             comp_tout twout aveforce 0.0 0.0 ${Fcatom}
fix             comp_tout twout aveforce 0.0 0.0 -3.55029585798817
fix             rwalls all wall/reflect zlo EDGE zhi EDGE




#--- Dumps ---#
#dump           comp all image ${Ndump_c} stg2.*.jpg type type zoom 2 view 60 120 bond none none


#--- Run Compression ---#
timestep    ${Tstep}
timestep    0.005
run         ${Ncomp}
run         400000
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
WARNING: Inconsistent image flags (src/domain.cpp:784)
Per MPI rank memory allocation (min/avg/max) = 9.772 | 9.772 | 9.772 Mbytes
Step TotEng KinEng PotEng E_pair Temp c_melTemp c_wallTemp v_Fcatom v_Pcomp2 Press Pxx Pyy Pzz Pxy Pxz Pyz c_melPress c_wallPress c_mopzc[1] c_mopzc[3] c_mopxc[3] v_melDens v_surfcov v_aveRg v_Wall_v2 v_srate v_D v_bwzmax Zhi c_fbwall[1] c_fbwall[3] c_ftwall[1] c_ftwall[3] v_sbot v_pbot 
  300000    11.052402    1.2712393     9.781163  -0.15458481   0.84768105   0.99210446   0.75187268   -3.5502959            3    4.9317925    7.3815992    7.4076762 0.0061020185 0.0071021081 -0.060718119  0.033490302    4.7668416     4.786931            0            0 -0.035986731   0.17973591        0.075    1.6032738          0.5  0.019970657    25.036733    2.8413474    30.801768 -0.0013067444  -0.10607913 0.0046220703    0.1166353   0.10131621    3.8478628 
  301000    11.097721    1.3333437    9.7643777   -0.1733535   0.88909323   0.99232146   0.82071791   -3.5502959            3    5.3595018    7.6131513    7.7291787   0.73617541 -0.0035562516 0.0086649321 -0.036210096    5.1794472    5.2146086            0            0   0.87001041   0.19733444        0.075    1.5807473          0.5  0.021926049    22.803927    2.7958575    30.801768  0.001942519 -0.081476448  0.017091321   0.33787768   -1.3791959   0.77687832 
  302000    11.042152    1.2904033    9.7517489  -0.19168872    0.8604599    1.0034657   0.76559977   -3.5502959            3    5.0492607    7.4448411    7.4064623   0.29647875 -0.0064604889  -0.11761447 -0.019557551    4.8812983    4.9027403            0            0 -0.047893212   0.21066113        0.075    1.5808783          0.5  0.023406792    21.361321    2.8036076    30.801768 -0.016835544  -0.12056212 -0.002229172   0.43071239    2.3621594   -3.9456675 
  303000    10.991123    1.2920384    9.6990848  -0.20671052   0.86155022   0.99807205   0.77100592   -3.5502959            3    5.0939013    7.4482424    7.5108065   0.32265502 0.0076155961  0.032590705 -0.045591811    4.9247528    4.9481685 -0.062916128   0.52695811  -0.33481898   0.22187755        0.075    1.5950442          0.5  0.024653061    20.281457      2.82466    30.801768 0.0081283509  -0.12699913 -0.025346079    0.4073106   0.29551556   -2.7589562 
  304000    11.008992    1.2760702    9.7329222  -0.20114313   0.85090241    0.9916645   0.75753204   -3.5502959            3    5.0369056    7.4257418    7.4327705    0.2522046  -0.03671727  -0.18244344 -0.0099435574    4.8707131    4.8921084            0            0  -0.40320347    0.2316015        0.075    1.5933765          0.5    0.0257335    19.429926    2.8080316    30.801768  0.012559504  -0.12128459 -0.0084255086    0.3501367    2.1435733    6.4455414 
  305000    10.951946    1.2614481    9.6904982   -0.2128234   0.84115215   0.99893908   0.73644719   -3.5502959            3    4.9166771    7.2893997    7.4286242  0.032007315 0.0090622395   0.16736723 -0.0078163565    4.7551103    4.7708177    -1.022229    1.0269854  0.098706439   0.24197062        0.075    1.5690401          0.5  0.026885625    18.597299    2.7927854    30.801768 -0.0097414832   -0.1144198 0.0022783912   0.36299642   -3.2898979   -1.2233815 
  306000    10.976461    1.2718706    9.7045903  -0.19673543   0.84810202   0.98424112   0.75780749   -3.5502959            3    5.3021495    7.6039539    7.6785663    0.6239284  -0.02208268   0.11737606 -0.015198523    5.1358966    5.1584362            0            0  -0.12571935   0.25138001        0.075    1.5532967          0.5  0.027931113    17.901185     2.808329    30.801768 0.0041627273  -0.12555005 -0.021425454   0.39265379   0.47131688    4.2791929 
  307000    11.000269    1.2933998    9.7068689  -0.21155889   0.86245802    1.0042647   0.76839667   -3.5502959            3    5.1384226     7.541312    7.4882872   0.38566855   0.01051498  -0.14307796 -0.023364901    4.9698465    4.9917855  -0.15933269    1.2801553  0.018467823   0.26249244        0.075    1.5670763          0.5  0.029165827    17.143351    2.8178406    30.801768 -0.0021505468  -0.12600005 -0.0016950986   0.37280842   0.46333393    1.8005745 
  308000    11.038757    1.3044388    9.7343187  -0.19935984   0.86981898    1.0233469   0.76795925   -3.5502959            3    5.1882056     7.585855    7.5137291   0.46503282 -0.0090210111 -0.095993739 -0.059658698    5.0197255    5.0387823            0            0  0.084048427   0.27314016        0.075    1.5703762          0.5  0.030348907    16.475058    2.8022937    30.801768 -0.0092863034  -0.11105757 -0.0080985429   0.37597967   -1.9189796    3.9174766 
  309000    10.969178    1.2511547    9.7180233   -0.2025965   0.83428835   0.98767986   0.73250625   -3.5502959            3    4.9607206    7.3446651       7.4099   0.12759669  0.010158438  0.039909233 -0.052969766    4.8000184    4.8165052            0            0 -0.0094776738   0.28475255        0.075    1.5636525          0.5  0.031639172    15.803195    2.8117362    30.801768 -0.015462283  -0.10477578  -0.03535447   0.38256643    1.7715123   -4.0100918 
  310000    10.940846    1.2607428    9.6801036  -0.20938689   0.84068188   0.98535772    0.7447029   -3.5502959            3    5.2578792    7.6056555    7.6313567   0.53662525  0.017024924 -0.017029331 -0.016480021    5.0945012    5.1140028            0            0   0.50359818   0.29742399        0.075    1.5536189          0.5   0.03304711    15.129916    2.8234598    30.801768  0.013780096 -0.075901699 -0.0016104534   0.38652211   -2.5710341    0.3337327 
  311000    10.978574    1.2866301    9.6919438  -0.20740792    0.8579439    1.0045881   0.76066125   -3.5502959            3    5.3894433    7.7195496    7.6996238    0.7491566 -0.0058422519  -0.14777203  0.046027881    5.2225643    5.2427591            0            0  0.066326762   0.31134608        0.075    1.5597095          0.5  0.034594009     14.45337    2.8000818    30.801768 0.0049158862 -0.093038613  0.005239618    0.3542103    1.0358988    2.5111139 
  312000    10.997605    1.2926742    9.7049313  -0.19957232   0.86197418    1.0162858   0.75958993   -3.5502959            3    4.9749396    7.3549528    7.4657977   0.10406824 0.0011778462 -0.059638729 -0.031914331    4.8082956    4.8265473            0            0  0.024676165   0.32720871        0.075    1.5676484          0.5  0.036356524     13.75269    2.8120011    30.801768 0.0061202592   -0.1196659 -0.011904966   0.31014937   0.45208369   -6.2894686 
  313000    10.975657    1.2762666    9.6993908    -0.210245   0.85103338    1.0139031   0.74294915   -3.5502959            3    5.3103062    7.6731826    7.6846648   0.57307113 -0.020855273   0.11096294 -0.0083703454     5.147313    5.1622618            0            0  -0.10027237   0.34400739        0.075     1.573144          0.5  0.038223043    13.081114    2.8177573    30.801768 -0.0038443838  -0.11006603 -0.014920333   0.35624121   -3.1678084     1.846888 
  314000    11.014369    1.3064833    9.7078858  -0.20845362   0.87118228    1.0129994   0.77711726   -3.5502959            3    5.2372908    7.5963999    7.5751897   0.54028273 -0.012690701 -0.074603955 0.0091568348    5.0668016    5.0893784            0            0  0.086215221   0.36252241        0.075    1.5605845          0.5  0.040280268    12.413026    2.8412757    30.801768 -0.013654723  -0.11723101 0.0063320413   0.38467626 -0.051042559   0.86076686 
  315000     11.03075     1.324021    9.7067293   -0.2139294   0.88287669    1.0551619    0.7685377   -3.5502959            3    5.0377347    7.4904837    7.4269271   0.19579323  0.001021428   0.11843004  0.055649147    4.8691277    4.8836659   0.77500813    1.8853497  -0.10934796     0.380766        0.075    1.5733825          0.5  0.042307334    11.818282    2.8135998    30.801768 -0.029219698    -0.109581 -0.019938365   0.36897852   0.74321142   -5.2808524 
  316000     11.01785    1.3008656    9.7169847  -0.20950891   0.86743633    1.0313979   0.75863151   -3.5502959            3    5.0667186    7.4843131    7.4533941   0.26244872  0.036479494  -0.04629552   0.09440225    4.9002849    4.9161198            0            0  -0.51585478   0.40032632        0.075    1.5281155          0.5  0.044480702     11.24083    2.8050398    30.801768 0.0085990195  -0.12571203  0.036705077   0.33547342   -1.7788607    2.5910872 
  317000    10.954586     1.268313    9.6862735  -0.22813861   0.84572976   0.99943488   0.74374316   -3.5502959            3    5.2750116    7.6195141    7.6162938   0.58922676 -0.020047517  0.014743499 -0.0074641246    5.1118442    5.1290797            0            0   0.12976143   0.42341974        0.075    1.4993694          0.5  0.047046637    10.627752    2.8131351    30.801768 0.0030846653 -0.086911731   0.00416616   0.33297201   -1.3213647  -0.99718197 
  318000    11.016429    1.2887126    9.7277162  -0.21813491   0.85933252    1.0038027   0.76349736   -3.5502959            3    5.1836515    7.4679432    7.5538663   0.52914497 0.0085662601  0.060887088  0.012193709    5.0161503    5.0370819            0            0  -0.20454535   0.44776485        0.075    1.4543897          0.5   0.04975165    10.049918    2.8263321    30.801768 0.0035244566  -0.10430141 0.0096576412   0.40206297   0.22710743    2.5301677 
  319000    10.974456    1.2795943    9.6948616  -0.22902953   0.85325231    1.0179239    0.7439697   -3.5502959            3    5.2698245    7.6638692    7.6063456   0.53925879 -0.042759678  0.091557684 0.0081897718    5.1066074     5.121193            0            0  -0.11507341   0.47216033        0.075    1.4320017          0.5  0.052462258     9.530661    2.7996712    30.801768 -0.0047711531   -0.1131946  -0.02396356   0.39620936  -0.50355765     7.485974 
  320000    10.995429    1.2634379    9.7319916  -0.22288587   0.84247896   0.97843659   0.75230312   -3.5502959            3     5.040354    7.4299543    7.5013028   0.18980493 -0.0007690326 -0.087108281  0.042915555    4.8753087    4.8974882            0            0 -0.0086359101   0.50044035        0.075    1.4032213          0.5  0.055604483    8.9920806    2.8163415    30.801768  0.023306145  -0.13379071 -0.016839021   0.32957487   0.53323586   0.39590019 
  321000    10.968291     1.295492    9.6727992  -0.22845357   0.86385316    1.0191391   0.76082116   -3.5502959            3    5.3248244    7.6835695    7.6248768   0.66602696 -0.0096350403     0.104464  0.045338314    5.1579104    5.1760155  -0.59174597    1.0446092  0.028301589    0.5275057        0.075    1.3624754          0.5  0.058611745    8.5307135    2.8018452    30.801768 -0.023635567  -0.13417497  0.031035817   0.33320988   -2.2741716   -1.3369341 
  322000     10.91849    1.2639462    9.6545437  -0.21859636   0.84281794    1.0001701   0.73840296   -3.5502959            3    5.1930793    7.5508959    7.6319727   0.39636933 -0.0098163734   0.10610168  0.041444291    5.0310835    5.0470401            0            0   0.18984831   0.56099406        0.075    1.3211854          0.5  0.062332673    8.0214754    2.8006809    30.801768  -0.02124231  -0.18172083 0.0034517906   0.35562161  0.074696766     2.757765 
  323000    10.880005    1.2270602    9.6529446  -0.23748513   0.81822177   0.95895466   0.72485875   -3.5502959            3    5.1525209    7.5360501    7.5957837   0.32572896 -0.023125409    0.0354802  0.067465644    4.9934965    5.0124998            0            0   0.11823556   0.58916159        0.075    1.2984835          0.5  0.065462399    7.6379725    2.8122606    30.801768  0.013498367  -0.12312254 -0.005916744   0.34751619    1.0591427    2.1034878 
  324000    10.905073    1.2752631    9.6298098  -0.24296347   0.85036422    1.0208856   0.73718715   -3.5502959            3    5.3214095    7.6780156    7.6922331   0.59397976  0.014766877 -0.099781445  0.040303352    5.1596804    5.1723456            0            0  -0.17244104   0.62675121        0.075      1.27671          0.5  0.069639023    7.1798825    2.8256216    30.801768  0.010440523    -0.111238 0.0096987818   0.29322161  -0.11464389    2.5036658 
  325000    10.930193    1.2608339    9.6693588  -0.23577063    0.8407426   0.97950808   0.74869734   -3.5502959            3    5.1916809    7.6013666    7.5871247   0.38655156 -0.017229085   -0.1049753  0.022259791    5.0274267    5.0486587   0.13312429   0.77346847   0.18138752   0.66084853        0.075    1.2434427          0.5  0.073427614    6.8094273     2.802461    30.801768 0.0030552635 -0.097389963 0.0020483814   0.40440761  -0.05210157   -1.4776866 
  326000    10.944943     1.294249    9.6506944  -0.23933569   0.86302431    1.0144538   0.76255868   -3.5502959            3     5.289036    7.6550438    7.6274033   0.58466086  0.024389214 -0.0056639261 -0.068620722    5.1217407    5.1409112   0.64951157    1.1112534 -0.043043159   0.69583594        0.075    1.2381002          0.5  0.077315104    6.4670417    2.7934735    30.801768 -0.003024425  -0.16054206  -0.02488039   0.32321895   -3.2200884   -5.7650022 
  327000    10.955815    1.2719265    9.6838881  -0.24859975   0.84813928    1.0075909   0.74232895   -3.5502959            3    5.1565745    7.5303835    7.5899939   0.34934604  0.011311214 0.0012328809 -0.017530397    4.9937173    5.0094518  0.041683992    2.0257401  -0.45524074   0.74584661        0.075    1.2028715          0.5  0.082871846    6.0334121    2.8507917    30.801768 -0.0067863296  -0.11802885  0.020783892   0.33637323    0.4458515   0.96497175 
  328000    10.920708    1.2822863    9.6384215  -0.25918021   0.85504734    1.0104545   0.75193139   -3.5502959            3     5.109251    7.4987923    7.5238481    0.3051125 0.0068067384  -0.07212849  0.065871455    4.9442872    4.9617101 -0.003462637   0.34226474   0.08773598   0.78051805        0.075    1.1841655          0.5  0.086724228    5.7654016    2.8176918    30.801768  -0.02780839  -0.14737683 -0.026823091   0.37339611  -0.61798357   -0.4535361 
  329000    10.930045     1.283834    9.6462109  -0.25591956   0.85607941   0.97908928   0.77452607   -3.5502959            3    5.4321621    7.7548441    7.7301493   0.81149299 0.0032628492  -0.08355144  0.058389115    5.2622414     5.289201            0            0  0.029415499   0.83143919        0.075    1.1624303          0.5  0.092382132     5.412302    2.7895613    30.801768 0.0032261105  -0.16007834 -0.016543968   0.31299672  -0.58672868    1.5665823 
  330000    10.905166    1.3099828    9.5951834  -0.27198201   0.87351584    1.0549993   0.75305147   -3.5502959            3    5.3633538    7.7429829    7.7111338   0.63594493  0.039878926  0.076831034 -0.0017428029    5.1981443    5.2093088   -0.7245909    1.5041026  0.093592021   0.87409399        0.075     1.160977          0.5  0.097121554    5.1481878    2.7951343    30.801768  0.008112081  -0.12755048 -0.024130879   0.34225642    1.4088225    1.4838115 
  331000     10.83804    1.2386254    9.5994149  -0.27261578   0.82593364   0.98945108   0.71740906   -3.5502959            3    5.3507528    7.7858387    7.6498575   0.61656219  0.033890452 -0.082421163   0.07125176    5.1933627    5.2062787   0.13370315   0.48414862   0.20430592   0.92380908        0.075    1.1669324          0.5   0.10264545    4.8711364    2.8334391    30.801768 0.0037896211  -0.22323879 -0.0054767332   0.28791972    1.1077801    4.3199304 
  332000    10.877115     1.281717    9.5953977  -0.27979323   0.85466774    1.0102331   0.75144636   -3.5502959            3    5.2987511    7.6900316    7.7302455   0.47597631 -0.021844414 -0.068727547 -0.019544967    5.1338937    5.1512426            0            0 -0.095378458   0.95440489        0.075    1.1646098          0.5   0.10604499      4.71498    2.7896403    30.801768 0.0060216923  -0.25995674 0.0047020849    0.3967993    1.2539434    1.8748138 
  333000    10.833323    1.2788347    9.5544882  -0.31138286   0.85274581    1.0262095   0.73761139   -3.5502959            3    5.4058545     7.715298    7.7888013   0.71346409 -0.0016807964 -0.064074628  0.033457898    5.2440323    5.2560132   -1.2304966    1.8253901 -0.038072669   0.97144993        0.075    1.1621711          0.5   0.10793888    4.6322511    2.7775337    30.801768 -0.019581431  -0.25762432 -0.00075803284   0.32320096   -1.5956226   -1.8313997 
  334000    10.809456    1.2715576    9.5378986  -0.30915723   0.84789334    1.0227685   0.73181771   -3.5502959            3    5.6013162    7.9130549    7.8955986   0.99529505 -0.0033658896 -0.024541707 -0.029445734    5.4407651    5.4519773   0.49140713    1.4703935  -0.32361999    1.0129405        0.075    1.1691639          0.5   0.11254895    4.4425116    2.7772764    30.801768 0.0084998835   -0.2632097 -0.016148431   0.41164072   -1.3269744    4.1352094 
  335000    10.724453    1.2197737    9.5046798  -0.32388681   0.81336304   0.94628465   0.72519706   -3.5502959            3    5.5243751    7.8519663     7.854471   0.86668807 -0.032685746  -0.15468607   0.09627123    5.3652765     5.386204    0.3640263   0.87679398 0.0021065996    1.0343528        0.075    1.1696602          0.5   0.11492808    4.3505467    2.8218653    30.801768 0.0015523429  -0.37566265 -0.008564939   0.38194116    1.4382791    4.1351906 
  336000    10.773415    1.2669557    9.5064595  -0.32840895   0.84482468    1.0062698   0.73768631   -3.5502959            3    5.4919483    7.7952519    7.8463272   0.83426583  0.014588267  0.088868954   -0.0451724    5.3301097    5.3450185    0.5291975   0.21564477    0.0282482    1.0492072        0.075    1.1809327          0.5   0.11657858    4.2889525    2.8315499    30.801768 -0.0024805735  -0.38767541 -0.0067070097   0.31069555   0.70079122    1.2065523 
  337000     10.80759    1.2870033    9.5205867  -0.31416028   0.85819272    1.0051759   0.76068456   -3.5502959            3    5.7848221    8.0310162    8.0060772    1.3173729   0.00120964  0.019829022 -0.023643561     5.617938     5.638052  -0.11442892    1.8478206   0.10850314    1.0505576        0.075    1.1770986          0.5   0.11672862    4.2834397    2.8096698    30.801768 0.0021819445  -0.32035353 -0.034283086    0.4628937  0.018574151    5.0993822 
  338000    10.818716    1.2850797    9.5336362  -0.32836326   0.85691007   0.99368848   0.76619329   -3.5502959            3    5.7840235    8.0575378    8.0740293    1.2205034  0.011069432  -0.17186127 0.0022285116    5.6159308    5.6389307  -0.75446123    1.1758541  0.014680647    1.0596707        0.075    1.1857339          0.5   0.11774119    4.2466023    2.8326782    30.801768 -0.014800626   -0.3866708  0.036099775    0.4116545    1.8848123    6.4144064 
  339000    10.801365    1.3031096    9.4982554  -0.32868372   0.86893266    1.0077721   0.77684859   -3.5502959            3    5.5193811    7.8667284    7.8656142   0.82580075   0.02250228   0.15634155 -0.046045307    5.3489508    5.3722319  -0.56747558   0.48103552   0.11962674    1.0437759        0.075    1.1819175          0.5    0.1159751    4.3112704    2.7965306    30.801768 -0.0088765528  -0.28639187  0.021004617   0.39581283   -1.2086582    6.0381117 
  340000    10.803281    1.2988715      9.50441  -0.34212683   0.86610662    1.0137717   0.76814753   -3.5502959            3    5.6795904    7.9368886    7.9735011    1.1283816  0.024708615 -0.013163502  0.039324924     5.511069    5.5315652            0            0  0.041865087    1.0565824        0.075    1.1814594          0.5   0.11739805    4.2590146    2.8253057    30.801768  0.016128642  -0.30186701 -0.046143364   0.32273994   -1.2964106    5.9515523 
  341000    10.814299    1.2870213    9.5272774  -0.31567414   0.85820474   0.98186844   0.77621703   -3.5502959            3    5.6961991    7.9805186    7.9971219    1.1109567 -0.0025573435  0.029785084 -0.028291053    5.5259073    5.5528322 -0.082521947    0.4829213   0.11956641     1.043268        0.075    1.1860127          0.5   0.11591867    4.3133689     2.808639    30.801768 0.0028027929  -0.37833733 -0.010612308   0.34941033   -1.4447105    7.1479936 
  342000    10.780351    1.2753895    9.5049617  -0.33772423   0.85044852   0.97064553   0.77076522   -3.5502959            3    5.6795659    7.9852643    7.9758123    1.0776212  0.028823976 -0.094361813  0.047343982    5.5104702    5.5378378   0.19223784    1.1401831   0.16782802    1.0619346        0.075    1.1920212          0.5   0.11799273    4.2375491    2.8189359    30.801768 -0.014267218  -0.36605687  0.010713746   0.41987345   -1.0548568    6.5848969 
  343000    10.809131    1.2683025    9.5408289  -0.30684255   0.84572277    1.0041944    0.7405638   -3.5502959            3    5.4660362      7.83692    7.8395875   0.72160116 -0.0054469338 0.0029982097  0.073572892    5.3035663    5.3194094  -0.70968389    1.9689621   0.30660278    1.0552009        0.075    1.2029638          0.5   0.11724454    4.2645908    2.8090409    30.801768  0.023255377  -0.34702509  0.011514049   0.37049408    1.0712023    1.9959901 
  344000    10.769138    1.2582951    9.5108427  -0.33065279   0.83904971   0.99542559   0.73528309   -3.5502959            3    5.6243605    7.9378685    7.9780512   0.95716168  0.026079587  -0.20779447   0.08145088    5.4630491    5.4790141    1.0878096    1.5299182  -0.06260495    1.0647709        0.075    1.2110129          0.5   0.11830787    4.2262614    2.8718651    30.801768 -0.023858126  -0.36193647 0.0035668624   0.32043158    1.8943446  -0.55082319 
  345000    10.822669    1.2766694    9.5459999   -0.3171188   0.85130197   0.98345781   0.76365971   -3.5502959            3    5.5297087    7.8597863    7.8423321   0.88700775  0.028150767 -0.0022988053 -0.073749874    5.3621719    5.3861098  -0.43037727     1.073918  0.081527188    1.0554653        0.075    1.2110532          0.5   0.11727392    4.2635225    2.8178931    30.801768 0.0027346861  -0.36508427 -0.0057384628   0.33277709    1.4460878    3.7145965 
  346000    10.784315    1.2650554    9.5192595  -0.32121774   0.84355753   0.98750346   0.74806542   -3.5502959            3     5.594038    7.9064537    7.8808326    0.9948275  -0.00254512   0.09600326 -0.040850509    5.4299223    5.4498483  0.060298301   0.45093681 -0.083007817    1.0559121        0.075     1.216098          0.5   0.11732357    4.2617184    2.8118498    30.801768  0.020343515   -0.4035857 -0.0010898308   0.39521469   -1.8391639    5.3122308 
  347000    10.810065    1.2810481    9.5290168  -0.32466106   0.85422173   0.99829668    0.7586477   -3.5502959            3    5.5409518    7.8492438    7.8127372   0.96087428  0.020617532  0.079798566  0.049004748    5.3745145    5.3951861  -0.71428269     1.909214   0.22865429    1.0633554        0.075    1.2162643          0.5   0.11815059    4.2318873    2.8264739    30.801768  0.019819191  -0.44275374 -0.037626641   0.38825902    1.6806264    1.4746301 
  348000    10.785223    1.2795523    9.5056711  -0.32385582   0.85322432   0.98960001    0.7627742   -3.5502959            3    5.6463396    7.9848742    7.9516488    1.0024957 -0.029744819   -0.1645006  0.076679247     5.478997    5.5018438    1.0873302    1.6297829 -0.020416205    1.0426245        0.075    1.2166694          0.5   0.11584717    4.3160313    2.7873256    30.801768 -0.00083294908  -0.35687424  0.011500131   0.47423279    3.2473399    2.7604778 
  349000    10.763277    1.2567674    9.5065095  -0.32957766   0.83803102   0.99692592   0.73258748   -3.5502959            3    5.6313291    7.8831577    7.9744176    1.0364121   0.03893852  0.056229906   0.08548287    5.4706092    5.4857637    0.4810359    1.6733292   0.12283953    1.0621433        0.075    1.2109277          0.5   0.11801593    4.2367163    2.8266514    30.801768 0.0011695059  -0.40431918  0.011428545   0.38325526   -2.7026627    4.8214794 
  350000     10.75905    1.2533514    9.5056988  -0.32070148   0.83575314    0.9614097   0.75243076   -3.5502959            3    5.5057842    7.7979826     7.852863   0.86650679 -0.0069040006  0.031496029  0.050441479    5.3407108    5.3654045   0.71018023    1.0159292   0.39982013    1.0635975        0.075    1.2140865          0.5    0.1181775     4.230924    2.8404589    30.801768 -0.014978136  -0.39134779   0.01875849   0.38811211    1.7876032 -0.015661771 
  351000    10.775153    1.2674516    9.5077009  -0.33907547   0.84515536    1.0000941   0.74234748   -3.5502959            3    5.4333582    7.7835694    7.7961616   0.72034357  0.053634522 -0.057961231  0.060546027     5.270497    5.2873301            0            0  -0.28238891    1.0577829        0.075     1.208723          0.5   0.11753143    4.2541813    2.8198197    30.801768 -0.0079229851  -0.39303707  0.034211012   0.34349072   0.20060522    1.7369191 
  352000    10.815263    1.3035388    9.5117241   -0.3254329   0.86921884    1.0407323   0.75538845   -3.5502959            3    5.5057305    7.8321608    7.8460787   0.83895207 -0.0030828394  0.071966897 -0.026223742    5.3400083    5.3537687  -0.53830278    2.2393877 -0.066323705     1.048288        0.075    1.2090065          0.5   0.11647644    4.2927136    2.8019808    30.801768  0.016305454  -0.35097543   0.00257886   0.37275963   -3.8150716  0.045962916 
  353000    10.784263    1.2543006    9.5299623  -0.31955779   0.83638607   0.96859613    0.7487022   -3.5502959            3    5.6033381    7.9023192    7.9480619   0.95963319 -0.0062825741 0.0082529904   0.08979614    5.4390828    5.4619092   0.52401367   0.96570062  -0.12208406     1.057627        0.075    1.2097937          0.5   0.11751411    4.2548081      2.82277    30.801768 -0.0012603238  -0.35622041  0.008084178   0.26758308    1.8281988    3.7850514 
  354000     10.76769    1.2823005    9.4853893  -0.32209664   0.85505685   0.99510232   0.76216497   -3.5502959            3    5.4159039    7.8213945    7.7905414   0.63577591  0.040447441  0.091202438 -0.014353464     5.248695    5.2706047   0.11743538   0.88620438 0.0049591167    1.0778329        0.075    1.2003952          0.5   0.11975921    4.1750442    2.8192083    30.801768  -0.01048387  -0.42316427 -0.011478298   0.36152591   -1.7266606   0.16655633 
  355000    10.762984    1.2761661     9.486818  -0.35029124   0.85096634     1.013343   0.74321028   -3.5502959            3    5.6135514    7.9492926    7.8963367   0.99502504  0.014150292  -0.10386759 -0.097097756    5.4505009    5.4655888            0            0  -0.10909371    1.0790642        0.075    1.2124669          0.5   0.11989602    4.1702801    2.8289997    30.801768 0.0025956314  -0.33272598 -0.0055031965   0.40103088    2.3833004    3.6979291 
  356000    10.797782    1.3069094    9.4908721  -0.32613729   0.87146641    1.0356879   0.76249011   -3.5502959            3    5.7113365    8.0489356    8.0010835    1.0839905 0.0003565728 -0.045809121 -0.063101063    5.5440563    5.5601113  -0.31846086     1.008337  -0.13261185    1.0696675        0.075    1.2125296          0.5   0.11885194    4.2069148    2.8222425    30.801768 0.0035788088  -0.30278059 -0.011395858   0.35695122   -0.8641311    1.2072263 
  357000    10.772938    1.2741773    9.4987604  -0.33282204   0.84964017    1.0030191   0.74787211   -3.5502959            3    5.4977191    7.8597102    7.8777958   0.75565149 -0.010981547 -0.063766013 -0.021664109    5.3336459     5.351264  -0.37699953   0.16664038 -0.019910905    1.0695929        0.075    1.2097866          0.5   0.11884366    4.2072081    2.8154647    30.801768 -0.015533336  -0.40395871 -0.00071159893   0.41794197    1.4510661   -1.1745464 
  358000    10.793139    1.2888552    9.5042843  -0.33587818   0.85942763    1.0406629   0.73912319   -3.5502959            3    5.6358336    7.9294527    7.9345578    1.0434903 -0.010153308  0.034147482  0.018779107    5.4736798    5.4838819   0.37792643    1.2920982  -0.10721625    1.0708509        0.075    1.2057326          0.5   0.11898343    4.2022658      2.80353    30.801768 -0.022546247  -0.39248244 0.0018369088   0.39222278   -0.3614848    3.3396568 
  359000    10.784514    1.2701224     9.514392  -0.31609801   0.84693629    0.9907703   0.75151993   -3.5502959            3    5.5091146    7.8313148    7.9000505    0.7959783  0.019084937   0.07583419 -0.0092939901     5.344241    5.3644479            0            0   0.14317656    1.0520931        0.075    1.2208495          0.5   0.11689923    4.2771881    2.8069439    30.801768 0.0086191878  -0.35317395 -0.013516962   0.39414021   -1.4995266    7.2935994 
  360000    10.756939    1.2726751    9.4842636  -0.34363293   0.84863849     1.015277   0.73804504   -3.5502959            3    5.4714532    7.8884945    7.7504353   0.77542987 -0.010966284   0.18552814 -0.006729055    5.3095359    5.3232082   -1.1871871    2.1189489  0.043292636    1.0758031        0.075    1.2250964          0.5   0.11953368    4.1829217    2.8121029    30.801768 -0.025750681  -0.44400629  -0.03590408   0.40703489  -0.18056582   0.58143357 
  361000    10.793215    1.2836416    9.5095732  -0.32013084   0.85595112    1.0108083   0.75320156   -3.5502959            3    5.7508897     8.011037    8.0688949    1.1727373 0.0006120168  0.020444928  -0.13583492    5.5856473    5.6032972  -0.23183188    1.3138646  0.026991158    1.0626709        0.075    1.2167903          0.5   0.11807454    4.2346131    2.8306846    30.801768 0.0063497622  -0.32842752 -0.022619183   0.41328835    2.8368411    1.2518442 
  362000    10.782955     1.255783    9.5271723  -0.30586273   0.83737458   0.99811367   0.73070339   -3.5502959            3    5.5760291    7.9110678    7.8591552   0.95786423 -0.021221195 -0.031878629  0.051716325    5.4157224    5.4302902  0.017260695   0.57663244 -0.037881636    1.0547149        0.075    1.2226187          0.5   0.11719054     4.266556    2.8084551    30.801768  0.034478301  -0.37021725 -0.0068362114   0.37120068   -2.0893254    4.1203261 
  363000    10.771274     1.274192     9.497082  -0.32722229   0.84964998    1.0238157   0.73404714   -3.5502959            3    5.6529812    7.9791933    8.0038694   0.97588081 0.0029670179  0.023611892  0.017803691    5.4919409    5.5034894            0            0   0.11438931    1.0670136        0.075    1.2089745          0.5   0.11855706    4.2173784    2.8328512    30.801768 -0.029459997  -0.39891535 -0.0043180946   0.30222332   -2.2898076     4.100262 
  364000    10.828408      1.28496    9.5434479  -0.31960844   0.85683024    1.0268208   0.74400884   -3.5502959            3     5.494552    7.8371267    7.8956023   0.75092694  -0.02743983  -0.12805913  0.042944406    5.3313263    5.3446214   0.28907025   0.85181427  -0.47971427    1.0660466        0.075    1.2047861          0.5   0.11844962     4.221204     2.833299    30.801768  0.026428514  -0.34755336 -0.010441403     0.337629    3.7863966    7.0431033 
  365000    10.773909    1.2819744    9.4919345  -0.33763699   0.85483942    1.0086759    0.7527688   -3.5502959            3    5.6542674    7.9438353    7.9405366    1.0784302   0.01999116  0.088981242 -0.040468045    5.4891199    5.5069862   -1.3678645    1.8238306    0.2788948    1.0503279        0.075    1.2123706          0.5    0.1167031    4.2843763    2.8102727    30.801768  0.020962089  -0.34611229 -0.0014617592   0.34953752   -1.9111975     4.642911 
  366000    10.784421    1.2798181    9.5046033   -0.3407232   0.85340152    1.0124391   0.74786873   -3.5502959            3    5.4385628     7.773081    7.7897692   0.75283817  0.037326079 -0.088172892  0.025309176    5.2744903    5.2907322  -0.30265996   0.69154051    0.2765838    1.0558381        0.075    1.2288988          0.5   0.11731534    4.2620171    2.8099165    30.801768 -0.010878804  -0.31893006  0.012505772   0.42309239  -0.24237273    1.1395307 
  367000    10.822368    1.2919403    9.5304273  -0.31159205   0.86148479   0.99470269   0.77313942   -3.5502959            3    5.4938625    7.8836967    7.8286998   0.76919104 -0.0022055668  0.021004106  0.024358796     5.324246    5.3486216            0            0   0.20094641    1.0488476        0.075    1.2291489          0.5   0.11653862     4.290423    2.7832888    30.801768  0.012940162  -0.39508042   0.02674069   0.27413189   0.39734205   0.83548704 
  368000    10.778423    1.2791285    9.4992949  -0.32877681   0.85294168    0.9986361   0.75628932   -3.5502959            3    5.5018066    7.8238984    7.8566983   0.82482314 -0.013952724  -0.27009086 -0.0074249584    5.3358867    5.3559914  0.068303414    0.3946133  -0.12411651    1.0466717        0.075    1.2280385          0.5   0.11629685    4.2993425     2.801495    30.801768  0.017502172   -0.3193317 0.0097530897   0.36631667    2.5683647   0.97682086 
  369000    10.733543    1.2457641    9.4877784  -0.34910839   0.83069386   0.95074607   0.75109962   -3.5502959            3    5.6036399    7.9153869    7.9286053   0.96692758 0.0018485056  0.082211449 -0.047411022    5.4388586    5.4648173   0.56685006    1.4925347   0.13853028    1.0604556        0.075    1.2270892          0.5    0.1178284    4.2434593    2.8078745    30.801768 0.0015675425  -0.35029624 0.0014966354   0.35987212  -0.51470314    6.6263597 
  370000    10.755271    1.2832885    9.4719822  -0.32318634   0.85571568   0.98289333   0.77138832   -3.5502959            3     5.583087    7.9032132    7.9443582   0.90168956  0.013000285  0.034003159  0.016052568    5.4138546    5.4395705   0.29067269   0.47408576   0.09556264    1.0532469        0.075    1.2224291          0.5   0.11702743    4.2725026    2.8078164    30.801768  0.010454588  -0.39300664  0.020377473   0.38409988  -0.15880482    4.1549174 
  371000     10.74044    1.2570983    9.4833417  -0.33253539   0.83825163    0.9835389   0.74186482   -3.5502959            3    5.5528929    7.8890073    7.8602005    0.9094709 0.0065164279  -0.14270039  0.044016732    5.3901376    5.4092821    0.5847457   0.32381683  -0.05356461    1.0489156        0.075     1.232035          0.5   0.11654618    4.2901449    2.7888209    30.801768  -0.03333523  -0.37726807 0.0077851324   0.33338404    4.4124374    8.4290227 
  372000    10.763736    1.2726797    9.4910561  -0.33453689   0.84864155    1.0078197    0.7430134   -3.5502959            3    5.7582533    8.0269014    8.0393894    1.2084692   0.01235953 -0.0069011456 -0.049464793     5.595246    5.6110972            0            0 -0.034348966    1.0593416        0.075    1.2374979          0.5   0.11770463    4.2479213    2.8183344    30.801768  0.018550895  -0.33014832  0.013494957   0.38186236  -0.79025844    6.0474237 
  373000    10.780697    1.2534976    9.5271998  -0.32302233   0.83585064   0.95965027   0.75376419   -3.5502959            3    5.5875754    7.8937544    7.9431688     0.925803 -0.026978421  -0.18973621 -0.064260437    5.4222095    5.4474527   0.75228812      1.30371  -0.52831289    1.0596575        0.075    1.2337475          0.5   0.11773972    4.2466552    2.8232637    30.801768 0.0014303707  -0.38792129 -0.036244559   0.43613612  -0.21868413    1.5235646 
  374000    10.751803    1.2819549    9.4698483  -0.34524506    0.8548264   0.99420929   0.76237543   -3.5502959            3    5.5759166    7.9303584    7.8609368   0.93645464  0.012296165 0.0096277095  0.077849033    5.4086615    5.4307478      1.03096    2.1409055  -0.20374975    1.0915116        0.075     1.229838          0.5   0.12127907     4.122723    2.8223291    30.801768  0.031347663  -0.41387544 -0.0075880971   0.34631299  -0.52325467    2.2192962 
  375000    10.757656    1.2596723    9.4979839  -0.33180487   0.83996803    0.9945344   0.73740608   -3.5502959            3    5.6893593    7.9705437    8.0053509    1.0921831  0.012980135 -0.060019108 -0.037682004    5.5275821     5.544143  0.047579333    1.2986456   0.51114268    1.0611856        0.075    1.2295531          0.5   0.11790952    4.2405398    2.8202649    30.801768 -0.0058796245    -0.442289 -0.0051742068   0.36163667    1.8039801     1.691151 
  376000    10.765661    1.2565721    9.5090887  -0.31613836   0.83790074   0.98140607   0.74269978   -3.5502959            3    5.8048659    8.1081484    8.0678077    1.2386415 -0.017382305 0.0044301634   0.01529939    5.6419274    5.6615665            0            0  0.012710653    1.0582743        0.075    1.2353531          0.5   0.11758604    4.2522056    2.7969824    30.801768  0.022541293  -0.34382916 -0.013219129   0.34428431  0.093963674    2.7444379 
  377000    10.762205    1.2518481    9.5103573  -0.32074672   0.83475073   0.99137997    0.7308139   -3.5502959            3    5.4018944    7.7343014    7.7688466   0.70253528 -0.0025112066 -0.015335819  0.020967726    5.2415635    5.2571387  -0.19055138    1.1847869   0.20910407    1.0558253        0.075    1.2248989          0.5   0.11731393    4.2620685    2.8161808    30.801768 0.0062250859   -0.3284418  0.011457299   0.47008125   0.18042981  -0.61533312 
  378000    10.799288    1.3217102    9.4775775  -0.33289037   0.88133578    1.0038711   0.80010763   -3.5502959            3    5.5255999    7.8552676    7.8509651   0.87056687 -0.033574879 -0.039616923 -0.024112091    5.3500669    5.3790203            0            0  0.068923808    1.0604845        0.075    1.2320811          0.5   0.11783161    4.2433435    2.8158923    30.801768 -0.0018202156  -0.33092008  0.011655028   0.36877909  -0.44526111    2.9386003 
  379000    10.771574    1.2654498    9.5061243  -0.31743255   0.84382054   0.98982405   0.74695909   -3.5502959            3    5.5788397    7.8905603    7.8661887    0.9797701 0.0032831619 -0.023623972  -0.11605898    5.4149668    5.4343112   0.35159419   0.66578932  0.049480231    1.0633481        0.075    1.2376915          0.5   0.11814979    4.2319162    2.8234312    30.801768 -0.017603627  -0.31160395  0.011060995   0.39487898  -0.12072999   -1.3625369 
  380000    10.772685    1.2820756    9.4906094  -0.33773363   0.85490688   0.99215937   0.76387384   -3.5502959            3    5.7568617     8.011504     8.004518    1.2545629 -0.011031878  -0.14252717 -0.063931917    5.5892778    5.6119922  -0.14975967    1.0381032  0.029067636    1.0687596        0.075    1.2389036          0.5   0.11875106    4.2104887    2.8042434    30.801768  0.026273007  -0.39829023 -0.00070247298   0.42145691    2.3809524    7.3249182 
  381000    10.758227    1.2660387    9.4921886  -0.33359102   0.84421323   0.98517663   0.75070641   -3.5502959            3    5.5619568    7.9220612    7.8243628    0.9394463 -0.036163486  -0.11486484   0.04199054    5.3972617    5.4181069            0            0   -0.3677808     1.076583        0.075    1.2361223          0.5   0.11962033    4.1798914    2.8234819    30.801768  0.028543716  -0.37822826 0.0020574926   0.37785017  -0.77691681   0.74858562 
  382000    10.747738    1.2686296    9.4791087  -0.34555898   0.84594085   0.98772604   0.75188773   -3.5502959            3    5.7833422     8.064936    8.1127938    1.1722967 0.00016062138   0.16308862 -0.090426088     5.618388      5.63912    1.7332917    1.4854242   0.21032067    1.0708915        0.075    1.2356307          0.5   0.11898794    4.2021065    2.8111749    30.801768 -0.035582277  -0.33643704  0.012736809    0.3415447   -1.5589248    3.5480778 
  383000    10.745161    1.2685495     9.476612  -0.33561479   0.84588745   0.98506814   0.75356773   -3.5502959            3    5.5691329    7.8931007     7.871074   0.94322415 -0.0041972357  -0.15329938  0.029069726    5.4038102    5.4252989            0            0  0.050705171    1.0726943        0.075    1.2286552          0.5   0.11918826    4.1950441    2.8041568    30.801768 -0.0026908769   -0.4059046 -0.0079711316   0.39618901    1.8928675    2.2733222 
  384000    10.738563    1.2624363    9.4761266  -0.33082219    0.8418111   0.98592611   0.74620582   -3.5502959            3    5.4827956    7.8897462    7.8603546   0.69828612  0.034432081 -0.095814323   0.10193687     5.319088    5.3388363  -0.31684456    1.3328596   0.12515735    1.0796616        0.075    1.2233765          0.5    0.1199624    4.1679728     2.803235    30.801768  0.018078136   -0.3738424  -0.00162946   0.45805582   -1.4330807    0.6759001 
  385000    10.803106    1.2865409    9.5165648  -0.32633304   0.85788444    1.0113728   0.75604663   -3.5502959            3    5.6308709    7.9534693    7.9428329   0.99631043 0.0099661815   0.14810239 -0.062715309    5.4650043    5.4831959 0.0074375073    2.7856198 -0.060279957     1.071228        0.075     1.234343          0.5   0.11902533    4.2007864    2.8047144    30.801768 0.0027967057  -0.37433339 -0.010670641   0.39850653  -0.48310242   -1.5202724 
  386000    10.794582    1.2798152    9.5147663  -0.33393038   0.85339962    1.0031043   0.75407835   -3.5502959            3    5.4033634    7.8024514    7.7374884   0.67015033 -0.035168325 -0.057292476 -0.0055708774    5.2379286    5.2568958            0            0  -0.19718714    1.0573956        0.075    1.2266375          0.5    0.1174884    4.2557392    2.7970298    30.801768  -0.01349223  -0.33076976 -0.0032094475   0.34802168   -2.8973344   0.99048191 
  387000    10.807044    1.2859269     9.521117   -0.3146706   0.85747497    1.0182849   0.75076406   -3.5502959            3    5.7311379    8.0718304    7.9964481    1.1251351  0.016885304   -0.1690115 -0.084662696    5.5664302    5.5824536            0            0  -0.49553035    1.0709817        0.075     1.225204          0.5   0.11899797    4.2017524    2.8132965    30.801768  0.013255377  -0.36739675 -0.016780472    0.4047139    0.6209691    4.8407702 
  388000     10.78606    1.2744458    9.5116138  -0.31191222   0.84981924   0.99172793   0.75568534   -3.5502959            3    5.4247516    7.7948916    7.8009703   0.67839302 -0.013275364   0.02100391 0.0098155256    5.2589643    5.2799451  0.060539774   0.85835057   0.14800953    1.0616463        0.075    1.2293087          0.5   0.11796069       4.2387    2.7918568    30.801768  0.013048307  -0.32012085 -0.0051879126     0.342811 -0.0011831934    1.9738951 
  389000    10.811423    1.3219257     9.489497  -0.33192497    0.8814795     1.056981   0.76499942   -3.5502959            3    5.6227991    7.9120191    7.9810729   0.97530532 -0.033336619    0.1622032  0.011715513    5.4549683    5.4684647   0.40626836    1.0640431  -0.07409498    1.0586037        0.075    1.2320287          0.5   0.11762263    4.2508827     2.821632    30.801768 -0.0010636963  -0.37867272 -0.00064333439   0.34981666   -1.7348991   0.78451817 
  390000    10.767548     1.286429    9.4811194  -0.33637845   0.85780976   0.99869508   0.76435993   -3.5502959            3    5.6056901      7.96804    7.8763789   0.97265137 -0.032311471   0.18955121  0.086286481    5.4379996    5.4598663            0            0 -0.089153465    1.0507513        0.075    1.2333982          0.5   0.11675014      4.28265    2.8016151    30.801768 -0.037459337  -0.35047676 -0.015615557   0.28571074  -0.28304007    4.5024664 
  391000    10.716683     1.240385    9.4762984  -0.32950139     0.827107   0.95958283   0.73924281   -3.5502959            3    5.6801887    7.9032725    8.0616822    1.0756114  0.031947722  -0.21883099  0.032917771    5.5180086    5.5400758            0            0   0.21818038    1.0544548        0.075    1.2389724          0.5   0.11716164    4.2676083    2.7948317    30.801768 -0.0020869042  -0.35692088 0.00091859249   0.37821771     2.214643    5.6662488 
  392000     10.73764    1.2385818     9.499058  -0.33566739    0.8259046   0.97648579   0.72598981   -3.5502959            3    5.6418248    7.8924797    7.9658472    1.0671473  0.015792903  0.028125225  0.043510179    5.4825522    5.4992438            0            0  0.041127112    1.0583454        0.075    1.2257729          0.5   0.11759393      4.25192    2.8004934    30.801768  0.011755951  -0.31231948 -0.016554763   0.34883346   -1.2698645    8.0568947 
  393000    10.780091    1.2607986    9.5192925  -0.34075976   0.84071905    1.0020921   0.73362716   -3.5502959            3     5.662378    7.9859952    7.8913563    1.1097825 -0.010908728  0.075795766  0.040473596    5.5014299    5.5160582   -1.1335121    0.4281422 -0.027814067    1.0547871        0.075    1.2216372          0.5   0.11719857    4.2662636    2.8174473    30.801768 0.0068242172  -0.39157848  0.016422379   0.37781105  -0.29852147    5.3741533 
  394000    10.791165    1.2591463    9.5320189  -0.32473181   0.83961729   0.97045172   0.75285016   -3.5502959            3    5.4912137    7.8106681    7.8024231   0.86054982 -0.037112985 -0.084062736 -0.071337277    5.3260483    5.3495138   0.49317332   0.41237045   0.17233614    1.0424004        0.075    1.2270156          0.5   0.11582226    4.3169593    2.8008194    30.801768 -0.0039771155  -0.32707002 0.0084994769   0.39135058    1.0353065    4.6812167 
  395000    10.803033    1.2719926      9.53104  -0.32843023   0.84818336   0.97073823   0.76692992   -3.5502959            3    5.4957255    7.8108115    7.8448729   0.83149216  0.016341017  -0.11788588  0.042075994    5.3274712    5.3539838            0            0  0.025029581    1.0603457        0.075    1.2228893          0.5   0.11781619     4.243899    2.8259824    30.801768 0.0063418975  -0.35275787  0.007168422   0.39199657   -1.1256106  -0.48677978 
  396000    10.799253    1.2515682    9.5476852  -0.31201709   0.83456411   0.99300864   0.72941903   -3.5502959            3     5.746013    7.9945927    7.9980167    1.2454295 -0.029558742   0.16348039 -0.050591761    5.5859881    5.6010195            0            0   -0.4948681    1.0471136        0.075    1.2276083          0.5   0.11634595    4.2975281    2.8123518    30.801768 -0.013622178  -0.41796887 -0.00072898812   0.36610046   0.14865775    1.7544584 
  397000    10.746299    1.2558533    9.4904458  -0.32624295   0.83742143     1.001554   0.72849167   -3.5502959            3    5.6754394     7.933523    8.0178913    1.0749041 -0.0088198099  -0.08371112 -0.033540074     5.515618    5.5291982 -0.067773632    1.5033178  0.096052075    1.0650577        0.075    1.2382006          0.5   0.11833974    4.2251233    2.8163085    30.801768  0.008471603  -0.36897329 -0.0072181546    0.3727068   -1.3460773    1.5798544 
  398000    10.764555     1.296624    9.4679313   -0.3218041   0.86460798    1.0270262   0.75682928   -3.5502959            3    5.6080367     7.911821    7.9361929   0.97609633  0.010686717  0.069451792 -0.059595379    5.4419984    5.4580762 0.0059282509   0.19414658  0.044214401     1.055912        0.075    1.2342107          0.5   0.11732355    4.2617188    2.8011759    30.801768 -0.017936455  -0.34020999 0.00027711829    0.3053821   0.67164247    5.6225223 
  399000    10.790346    1.2879146    9.5024311  -0.34193858   0.85880043    0.9832851   0.77626653   -3.5502959            3    5.8794396    8.0983699    8.1252902    1.4146588  0.011391436   0.13262355   0.06005016     5.709137    5.7358659 -0.037810486  0.054232854   0.23005961     1.070218        0.075    1.2434835          0.5   0.11891311    4.2047508    2.7958714    30.801768 -0.0089569851  -0.39497373 0.0012047092   0.35086271  -0.22811374    3.0326052 
  400000    10.788692    1.3044307    9.4842614  -0.31869811   0.86981361    1.0178541   0.77160609   -3.5502959            3    5.4049023    7.7718137    7.7795323    0.6633609  0.038223874  -0.07571118 -0.044865388    5.2356221     5.256281   0.55573483   0.37650405  -0.66212668    1.0635936        0.075    1.2417902          0.5   0.11817707    4.2309392    2.8107813    30.801768 -0.00040604583  -0.39640794 -0.0097392248   0.38870562    -1.392522    2.7795671 
  401000    10.788155    1.2692272    9.5189282   -0.3271532   0.84633939    1.0019767   0.74306705   -3.5502959            3    5.7122011    7.9874566    8.0080185    1.1411283 -0.024672558   0.10772551  0.049151026    5.5491821    5.5658982            0            0 -0.001573708    1.0617813        0.075    1.2434565          0.5    0.1179757     4.238161    2.8157351    30.801768 0.0057596388  -0.39697206 -0.0042792524   0.35333545    1.3559117    4.4588767 
  402000    10.765402    1.2777458    9.4876559  -0.33461178   0.85201972   0.99501012   0.75716669   -3.5502959            3     5.688541     7.958593    7.9865497    1.1204802  -0.02392627   0.01273204  0.013678589    5.5224286    5.5432552 -0.035429167    1.3048894 -0.066536961    1.0629249        0.075    1.2576075          0.5   0.11810277    4.2336009    2.7893477    30.801768 -0.0045432605    -0.399364 0.0061865242   0.34318633     2.853064    5.5449663 
  403000    10.795991    1.2767539    9.5192373  -0.32635014   0.85135828   0.99491451   0.75612842   -3.5502959            3    5.6444616     7.941758    8.0403414   0.95128537 0.0046214245  0.015123453 -0.014479578     5.478577    5.4991898            0            0  -0.38868283    1.0732059        0.075    1.2563986          0.5    0.1192451    4.1930444    2.8245192    30.801768 -0.0089117445  -0.31799722 0.0070549077   0.30575556  -0.70944375    4.6086464 
  404000    10.772504    1.2929113    9.4795927  -0.33195911    0.8621323    1.0229878   0.75539278   -3.5502959            3    5.7000426    8.0163383    7.9622107    1.1215788 -0.024724977  -0.16426568 -0.029842357    5.5343194    5.5506717  -0.24069766   0.21439326 -0.093940261    1.0582924        0.075    1.2350123          0.5   0.11758804    4.2521331    2.7898413    30.801768 -0.025562197  -0.34708784 -0.0073734824   0.33853941    1.6906602    4.2314658 
  405000    10.828331     1.289527    9.5388037  -0.33238673   0.85987558   0.99859292   0.76786943   -3.5502959            3    5.7514196    8.0133479    8.0353116    1.2055994   0.01832319  0.048940667  0.020344418    5.5829593    5.6056107            0            0  -0.19363434    1.0476291        0.075    1.2430194          0.5   0.11640324    4.2954131    2.7824509    30.801768 -0.013354344  -0.31796957 -0.0098959502   0.32777386     1.878476    4.3305838 
  406000     10.78844    1.2696256     9.518814  -0.33941658   0.84660504   0.98188926   0.75687891   -3.5502959            3    5.3866265     7.801006     7.805715   0.55315859 -0.0053061186   0.17031927   0.11379712    5.2205773    5.2432566            0            0  -0.65374847    1.0575326        0.075    1.2470351          0.5   0.11750362     4.255188    2.8075272    30.801768  -0.01050631  -0.30543327 -0.011359719   0.29364772   0.60682893    3.4898609 
  407000    10.773669    1.2662584     9.507411  -0.32919031   0.84435974   0.99091021   0.74713445   -3.5502959            3    5.6107583    7.9464447    7.9146775   0.97115271 -0.010197372 -0.047044313 0.0059563519    5.4468469    5.4660712  -0.31064243    1.5036095  0.059990561    1.0470137        0.075    1.2395433          0.5   0.11633485    4.2979382    2.8069384    30.801768  0.010391519  -0.37525176 0.0054807177   0.38621984  0.095199371     2.608109 
  408000    10.763655    1.2786586    9.4849966  -0.32787147   0.85262835   0.99416019    0.7587463   -3.5502959            3    5.5191835    7.8915288     7.884951   0.78107078 -0.0004202474  -0.12769829  0.057529457    5.3527246    5.3740219   0.62709221   0.67396441   0.31241085    1.0640319        0.075     1.247569          0.5   0.11822577    4.2291964    2.8222564    30.801768 -0.0007803499  -0.36033192 -0.017108496   0.44594696    1.4451523    1.1384602 
  409000    10.799846    1.2773233    9.5225225  -0.31481761   0.85173801   0.98638665    0.7624368   -3.5502959            3    5.5028687     7.857153    7.8396334   0.81181971  0.059273906 -0.052996049 -0.071977563    5.3356001    5.3588421            0            0  0.036753412    1.0637778        0.075    1.2496988          0.5   0.11819753    4.2302067    2.8030748    30.801768 0.0038380124  -0.43640701 0.0027769552   0.36957702   0.12224323    1.8683908 
  410000    10.751107    1.2580843    9.4930224  -0.31446988   0.83890914   0.99877664    0.7328186   -3.5502959            3    5.5999867      7.89309    7.9176416   0.98922851 -0.018930704  0.024867197  0.049314078     5.439216     5.454151            0            0    0.2353105    1.0604271        0.075    1.2482678          0.5   0.11782524    4.2435731    2.8132189    30.801768 0.0077777722   -0.4149663  0.002295485   0.39076524  -0.35087238   0.96230927 
  411000     10.79559    1.2809426    9.5146476  -0.32556447   0.85415136   0.98015604   0.77060409   -3.5502959            3    5.5180496    7.9111664    7.8916022   0.75138018 -0.0059670702  -0.12769143 -0.056379442    5.3489893    5.3749328            0            0   0.15442469    1.0448999        0.075    1.2433967          0.5   0.11609999    4.3066325    2.7580321    30.801768   0.02848766  -0.35782206 0.0023074071   0.36785783   0.75220616    3.0624703 
  412000    10.807679    1.2965789    9.5111003   -0.3110016   0.86457789    1.0532303   0.73933884   -3.5502959            3    5.6462904    8.0007952    7.9709773    0.9670986 0.0091193226  0.046753381  0.057502845    5.4840892    5.4925036            0            0 -0.033538019    1.0462404        0.075    1.2424789          0.5   0.11624894    4.3011146    2.8537447    30.801768 -0.017587474  -0.34443653 -0.019139668   0.39183213   -3.9696151  -0.46564859 
  413000    10.795454    1.3027762    9.4926779  -0.32968611   0.86871032    1.0426535   0.75326263   -3.5502959            3    5.8267618     8.028089    8.1245772    1.3276191 -0.011734422 -0.049796409  0.052169783    5.6615059    5.6745194            0            0 -0.033761106    1.0597902        0.075     1.239125          0.5   0.11775447    4.2461233    2.8061867    30.801768  0.024411067  -0.35299414 -0.023597385   0.37938842    1.4728588    7.5950269 
  414000     10.75687    1.2728196    9.4840504  -0.32377197   0.84873487   0.99514695   0.75160331   -3.5502959            3     5.406066    7.8138742    7.7637924   0.64053138  0.024780321 -0.00048888996 -0.0044619949    5.2411742    5.2607603 -0.074817673   0.67665052  0.047964919    1.0526384        0.075    1.2446139          0.5   0.11695982    4.2749724    2.8167046    30.801768  0.015405455  -0.28415671 0.0060777767   0.39084498    3.0336964   0.47557512 
  415000    10.771942    1.2667568     9.505185  -0.31878287    0.8446921   0.99861995   0.74255688   -3.5502959            3    5.6548984    7.9696422     8.007858   0.98719516   0.00160977  0.054210609  0.041820642    5.4919913    5.5090856  -0.44711084     1.524184  -0.15310608    1.0666083        0.075    1.2375727          0.5   0.11851204    4.2189807    2.8159609    30.801768 -0.013192385  -0.34290426  0.021911798    0.3007644  -0.17652168   0.81153347 
  416000    10.780964    1.2829317    9.4980321  -0.32451841   0.85547771   0.99229181   0.76473665   -3.5502959            3    5.5993292    7.8839022    7.8911566     1.022929  0.031043574 -0.020089525 -0.091332577    5.4315561    5.4544404  -0.12915785   0.35277083   0.12779679    1.0450894        0.075     1.243055          0.5   0.11612104    4.3058519    2.8025287    30.801768 -0.019468391  -0.39497623  0.011727271   0.36921383    1.5005664     4.178865 
  417000    10.765402    1.2879157    9.4774866  -0.34232651   0.85880112   0.99695293   0.76717097   -3.5502959            3    5.6073717    7.9656842    7.8905686   0.96586238  0.024424139   0.12719721  0.063688039    5.4390646    5.4618023   0.31937705    1.6869415  0.067789259    1.0689014        0.075    1.2427181          0.5   0.11876683    4.2099298    2.8100721    30.801768 -0.0021211044  -0.35255338 0.0077878845    0.3780678   -3.6781454     2.705051 
  418000    10.813611    1.3122468     9.501364  -0.32928025   0.87502548    1.0274358    0.7739115   -3.5502959            3    5.5527586    7.9507069    7.8776773   0.82989163 0.0018588393 -0.047799687  0.027806628    5.3829727    5.4027383  0.067697076   0.64530298    0.1056738    1.0692469        0.075     1.242203          0.5   0.11880522    4.2085694    2.8038305    30.801768  0.012052009  -0.41663396 0.0015573966    0.3828071   0.78967652    1.3933908 
  419000     10.77146    1.2722747    9.4991849  -0.34715108    0.8483715   0.98843047   0.75546817   -3.5502959            3    5.6191423    7.8492944    7.8790555     1.129077 -0.029184214   0.17132384 -0.030001343    5.4534026    5.4748173  -0.26521898   0.98184298   0.10910057    1.0397671        0.075    1.2454011          0.5   0.11552968    4.3278921    2.7972996    30.801768  0.001933028  -0.35286917  0.013417194   0.34791459   -2.7006085    5.0318921 
  420000    10.743532    1.2915317    9.4520002  -0.34678832   0.86121232    1.0172036   0.75770986   -3.5502959            3    5.6060428    7.9486329    7.8563719    1.0131235 0.0012045338 -0.061873698 -0.068837588    5.4398113    5.4575165   0.69802218    1.1900702   -1.1807198    1.0565347        0.075    1.2443313          0.5   0.11739275    4.2592069    2.8037267    30.801768  0.010742033  -0.31685446 -0.0038344937   0.32196929    3.0286682    1.6132034 
  421000    10.733952     1.240668     9.493284  -0.33729569   0.82729565   0.97975956   0.72612832   -3.5502959            3    5.3507647    7.7080042    7.7264076   0.61788224 -0.010591234   0.16101224  0.076992229    5.1914617    5.2077057  -0.26361932   0.84277048 -0.067717112    1.0639908        0.075    1.2352226          0.5    0.1182212      4.22936    2.8157566    30.801768 0.0097031235  -0.37399279 -0.0047902202    0.3884451    1.1105525    3.7453773 
  422000    10.782391    1.2994734     9.482918  -0.33191535   0.86650801    1.0245065    0.7616716   -3.5502959            3     5.673527    7.9680155    7.9964118    1.0561536  0.061762615 -0.057750809 -0.057604752    5.5064263    5.5239343   -1.5272682    1.0033137  0.039344987    1.0788286        0.075     1.224945          0.5   0.11986985    4.1711908    2.8178086    30.801768 -0.0051209131  -0.32613422 -0.013536532   0.42625674  -0.78385721    8.7887844 
  423000     10.78844    1.2683297    9.5201103  -0.31858278   0.84574092    1.0042525   0.74055533   -3.5502959            3    5.7303091    8.0117989    8.0346468    1.1444817   0.00547734 -0.064448637 -0.065621732    5.5678411    5.5836739  -0.36575465    1.6001236  0.055612889    1.0454695        0.075     1.224414          0.5   0.11616328    4.3042861    2.7800431    30.801768  0.023419554   -0.2845549  0.010119759   0.41285503   0.22076996    2.6612642 
  424000    10.790259    1.2771939    9.5130649  -0.31089714   0.85165169   0.97971445   0.76673373   -3.5502959            3    5.6628897    8.0091823    7.9652984    1.0141885  0.035184362 -0.013012023  0.062273961    5.4946785    5.5198374   -1.6187547    3.5512718 0.0026281885    1.0616091        0.075    1.2289224          0.5   0.11795657    4.2388484     2.792366    30.801768 -0.0023509164  -0.39156607  -0.02870232   0.40405757    3.4679434    7.7777618 
  425000    10.805656    1.2764999    9.5291565  -0.33352669   0.85118891    1.0026895   0.75067155   -3.5502959            3    5.7473365    8.0524397     8.024059    1.1655108 -0.0070290113   0.19137417 -0.049410815    5.5826491    5.6009294   -1.3147494    1.2225347 -0.093848671    1.0607649        0.075    1.2336766          0.5   0.11786277    4.2422218    2.8138281    30.801768 -0.0043578134  -0.41058522  0.024447886   0.35886756   -4.0468446    3.9908252 
  426000    10.787638    1.2831657    9.5044727  -0.33626322    0.8556338    1.0032841   0.75768068   -3.5502959            3    5.4706301    7.8305589    7.8840355   0.69729598 0.0098945488 -0.089558761  0.015126566     5.304405    5.3241363   -1.5063713    1.1437543 -0.040982606    1.0697357        0.075    1.2384305          0.5   0.11885952    4.2066467    2.8161938    30.801768 -0.026361627   -0.3339648 -0.0054581778   0.38658317    1.7118945   -4.2944192 
  427000     10.82658    1.2950474    9.5315328  -0.33630393   0.86355668    1.0123477   0.76484731   -3.5502959            3    5.6127141     7.893468    7.9265216    1.0181526   0.02013008 -0.0098199931  0.011573324    5.4449167    5.4648968   0.15740384    1.0295115 0.0098984848    1.0776501        0.075    1.2311237          0.5    0.1197389    4.1757524    2.8175287    30.801768 -0.0017754834  -0.39635672 -0.034007619   0.33203352   0.97725334    3.5813146 
  428000    10.784622    1.2769207    9.5077013  -0.33151877    0.8514695   0.99877861   0.75374193   -3.5502959            3     5.691018    8.0609886    7.9666582    1.0454072  0.019024677 -0.087341631  0.094365772     5.525657     5.545182  -0.25101565    0.8732244   0.35593436    1.0600767        0.075     1.241409          0.5    0.1177863    4.2449758    2.7870735    30.801768 -0.0081034164   -0.3666461  0.020483354   0.34179948   -4.9696486    7.5661914 
  429000     10.79093    1.2591752     9.531755   -0.3179198   0.83963657   0.96925227   0.75368059   -3.5502959            3     5.575308    7.8641691    7.9337388   0.92801604 -0.00081163156 -0.035546519   -0.0552501    5.4099604    5.4337832     0.208292    1.0039527  0.076061746    1.0501286        0.075    1.2288054          0.5   0.11668095    4.2851895    2.8012852    30.801768 -0.0096265659  -0.35801784  0.016374576   0.39041296    2.6604336     7.188724 
  430000    10.804694    1.2957737    9.5089198  -0.31892678   0.86404098   0.99091751   0.77991711   -3.5502959            3    5.5503194    7.9689321    7.8800919   0.80193435 -0.0018127536   0.11353321  0.039743411    5.3792159    5.4056313   0.15711359   0.42173447 -0.083296778    1.0513392        0.075    1.2219619          0.5   0.11681547     4.280255    2.8032299    30.801768 -0.025074713  -0.39809273 -0.039941529   0.39169552   -1.3660358   -2.0715963 
  431000    10.763957    1.2661622    9.4977953  -0.31852785   0.84429556    1.0056466    0.7372196   -3.5502959            3    5.6503136     7.966449    8.0031872   0.98130472 -0.038290402  0.095061378  0.031753435    5.4885774    5.5034748  -0.48190687   0.70110395  -0.28853695     1.043091        0.075    1.2180236          0.5     0.115899    4.3141011    2.8229925    30.801768  0.021419486  -0.40929649 0.0082671271   0.29333893   0.54677704    1.9549264 
  432000    10.762426    1.2536415    9.5087844  -0.31310006   0.83594659   0.97785067   0.74181064   -3.5502959            3    5.5580316    7.8701902    7.8714821   0.93242243  0.027893476  0.097603528 -0.052142359    5.3952881    5.4152513   -1.5323172   0.95421498  0.038574052     1.042981        0.075    1.2341602          0.5   0.11588678    4.3145562    2.8164283    30.801768 -0.016218946  -0.37918283  0.031212854   0.36409923    -1.414477    5.0671215 
  433000    10.774024    1.2715932    9.5024312   -0.3057945   0.84791707    0.9882755   0.75481426   -3.5502959            3    5.6706261    7.9400798    7.9736097    1.0981888 -0.012544331  0.026166743  0.091887556    5.5050298    5.5263237  -0.75914144   0.81240805  0.053158591    1.0385569        0.075    1.2516078          0.5   0.11539521    4.3329356     2.813314    30.801768 -0.0081893037  -0.36604803 -0.0023096241   0.26136046   0.21015164    5.1945901 
  434000     10.77007    1.2862932    9.4837763  -0.32963798   0.85771923   0.99849984   0.76433906   -3.5502959            3    5.6803339    8.0023916    7.9602665    1.0783437 0.00042043898 -0.034841862  0.053767125    5.5126481    5.5345386  -0.66602049    1.0635763 -0.037295024    1.0496741        0.075    1.2372131          0.5   0.11663045     4.287045    2.8062047    30.801768 -0.015624397  -0.36183141 -0.0041486315   0.40347305   0.34196898    7.1138704 
  435000    10.756573     1.274351    9.4822222  -0.32884293     0.849756    1.0136307   0.74100243   -3.5502959            3    5.7070709    7.9873159    8.0046299    1.1292669 -0.0075325358   0.22948216 -0.024027729    5.5445048    5.5590663            0            0  0.016483772    1.0498972        0.075    1.2490026          0.5   0.11665524    4.2861341    2.7952623    30.801768 -0.017291169  -0.33773893 -0.0063029437   0.39053684   -3.6715637     5.972227 
  436000    10.781576    1.2743231    9.5072534   -0.3159611   0.84973737    1.0092201   0.74390694   -3.5502959            3    5.5367998    7.8563854     7.895529   0.85848503 -0.012321816  0.027023627 -0.030134203    5.3735965    5.3894392  -0.80169295   0.60782091  0.089634514    1.0466598        0.075    1.2458825          0.5   0.11629553    4.2993913    2.8089981    30.801768 0.0097097298  -0.30781392 -0.021521687   0.37918422   -1.8040155    -1.052082 
  437000    10.782212    1.2679906    9.5142211  -0.34408647   0.84551476   0.98604643   0.75229576   -3.5502959            3    5.5912492     7.895022    7.8723834     1.006342 -0.029277812  -0.13813982  0.078698842    5.4262054    5.4472722   -1.6116432    1.4016097   -0.2980322    1.0476049        0.075    1.2428521          0.5   0.11640054    4.2955127    2.8031161    30.801768 -0.0053807136  -0.29496665   0.02889264   0.37644855     1.792399   0.73188265 
  438000     10.75552    1.2329889    9.5225309  -0.32222591   0.82217514   0.97845806   0.71846415   -3.5502959            3    5.5673067    7.8458621    7.9178935   0.93816436  0.022548183   -0.1589397  0.049096623    5.4096851    5.4244377   0.35495273    2.1691977  0.058023836    1.0417925        0.075    1.2411767          0.5   0.11575472    4.3194784    2.7934514    30.801768 -0.045740286  -0.33907766 -0.019045421   0.35508889  -0.70142926    2.6931408 
  439000    10.751944    1.2700557    9.4818883  -0.32003643   0.84689183     1.017628   0.73357053   -3.5502959            3    5.7269337    8.0013424      8.08458    1.0948787 -0.0026837993   0.19507424 -0.0084791175     5.565998    5.5783454  -0.10319769   0.29191724 -0.0039588121    1.0547807        0.075    1.2369083          0.5   0.11719786    4.2662895     2.796473    30.801768 -0.0060124379  -0.36018324 -0.0091932057   0.33046162   0.10491338    6.2743414 
  440000    10.742656    1.2604388    9.4822169  -0.31663643   0.84047915   0.99696701   0.73663853   -3.5502959            3    5.7778212    8.0378811    8.0244224      1.27116 -0.056253656 -0.056143074 -0.076919811    5.6162124    5.6322497   0.72883206   0.52186639   0.03285977    1.0587678        0.075    1.2341327          0.5   0.11764087    4.2502236    2.8148513    30.801768  0.014205421  -0.44784871 -0.0029221244   0.34779444   -2.0814113  -0.44740865 
  441000    10.787347    1.2945239    9.4928235  -0.33626629   0.86320757   0.99522435   0.77566225   -3.5502959            3     5.702571    7.9995818    7.9722129    1.1359182 -0.028362352 -0.0057967057 -0.051264996     5.532401     5.557254   0.39931788    1.1299663  -0.63150038    1.0626226        0.075    1.2319568          0.5   0.11806918    4.2348055    2.8122366    30.801768 0.0046156967  -0.41631654  0.016999605   0.35469786     1.445033    4.1081839 
  442000    10.744821    1.2424602    9.5023604  -0.33746397   0.82849074   0.98679599   0.72343611   -3.5502959            3    5.7632899    8.0679766    8.0343821    1.1875109 -0.0001623785  0.044257326  0.028177788    5.6045776    5.6192035            0            0  0.073946222    1.0747392        0.075    1.2444442          0.5   0.11941547    4.1870622    2.8351298    30.801768 0.0050764026  -0.37775796 0.0095261068   0.41561463   0.43725391    7.1887699 
  443000    10.809385    1.2914064    9.5179782  -0.32309842   0.86112879    1.0226379   0.75395388   -3.5502959            3    5.6386969    7.9063662    7.9506916     1.059033 -0.059502287 -0.064367514 -0.013257814    5.4732894    5.4893771            0            0 0.0028651668    1.0604939        0.075    1.2470803          0.5   0.11783265    4.2433059     2.818432    30.801768 0.0042500642  -0.37454477 0.0073897479   0.41260966   0.35053522    5.4726932 
  444000    10.792255    1.2597745    9.5324808   -0.3128737    0.8400362    1.0206379   0.72014628   -3.5502959            3    5.4855046    7.7650027     7.895847   0.79566402 -0.015307022   0.12667415  0.027090408     5.327514    5.3364768  -0.33105018   0.30667989  0.029980451    1.0586521        0.075    1.2483248          0.5   0.11762801    4.2506883    2.8207387    30.801768 -0.030579296  -0.36471636  0.019064026   0.38481241   0.45789648   0.38573344 
  445000    10.776551    1.2849497    9.4916012  -0.32744917   0.85682337   0.99709715    0.7637802   -3.5502959            3    5.4666838    7.8264953     7.815293   0.75826298 -0.00026580646 -0.0024453871 -0.052364366    5.2991205    5.3210933   0.59482957   0.36819151   0.54021551    1.0547454        0.075    1.2400407          0.5   0.11719393    4.2664325    2.8158963    30.801768 -0.0045914307  -0.32299063  -0.01193663   0.32614611    2.1942159    2.3035924 
  446000    10.805252    1.3016049    9.5036468   -0.3226068   0.86792927    0.9993016   0.78081463   -3.5502959            3     5.726573    7.9964628    8.0271157    1.1561404 -0.017080734  0.015442998 -0.021489013    5.5552726    5.5806606   0.70519878   0.27032304  0.028307235    1.0591943        0.075    1.2395909          0.5   0.11768825    4.2485124    2.8135518    30.801768 0.0012854144   -0.3721669 -0.015849145   0.35340484    0.7062051    7.7882686 
  447000    10.811134    1.2869683    9.5241655  -0.33423286   0.85816937     1.030622   0.74370986   -3.5502959            3    5.4738762    7.8705666    7.8135787   0.73748327 -0.019142398 -0.074678883 -0.071270815    5.3107161    5.3233906   0.53936409   0.54988845  0.013054647    1.0630177        0.075    1.2407047          0.5   0.11811308    4.2332314    2.8113811    30.801768 -0.011176669  -0.31432902  0.010225791   0.34265248  -0.98546821   0.37425355 
  448000    10.819429    1.2795339    9.5398946  -0.32875885   0.85321206    1.0179133   0.74390969   -3.5502959            3    5.8120944    8.0269262    8.1253677    1.2839892  0.015889117 -0.010319832 -0.047826742    5.6488904    5.6634644   0.33416986    2.1866935    0.2445757    1.0508443        0.075    1.2353299          0.5   0.11676048     4.282271    2.8160222    30.801768 -0.022038945  -0.35708525 -0.0075649628   0.33708077     0.464905   0.86577638 
  449000    10.781918    1.2839489     9.497969  -0.32244851   0.85615602    1.0130675   0.75203924   -3.5502959            3    5.4602455    7.8477204    7.7768124   0.75620385 0.00055392252 -0.051277873  0.070869735    5.2952581    5.3123231   0.32635105   0.58244055 -0.036731109    1.0522828        0.075     1.235138          0.5   0.11692031    4.2764169     2.784085    30.801768  0.019721537  -0.39808607  0.030683089   0.38598375    0.5766595    2.6215239 
  450000     10.73643    1.2596241    9.4768064   -0.3358117   0.83993586    1.0034697   0.73140554   -3.5502959            3    5.5875774    7.9178024     7.908082   0.93684766  0.013201867  0.003693335 -0.017610449    5.4271167    5.4410564   0.11325678    1.9371005   0.09561867    1.0539331        0.075     1.239513          0.5   0.11710368    4.2697206    2.7921664    30.801768 0.0066140579  -0.38453621 0.0056511088   0.38941176   0.73304082    6.3529867 
  451000    10.760137      1.25902    9.5011167  -0.32525197   0.83953303   0.97698344   0.74836257   -3.5502959            3    5.7395849    8.0652385    8.0564378    1.0970785 -0.0011906728 -0.074853289  0.013058062    5.5754041    5.5969313   0.33487888    1.0808439   0.01503642     1.062433        0.075    1.2227732          0.5   0.11804811    4.2355611    2.8131858    30.801768 -0.017849606  -0.31957032 -0.00023521946   0.37402466    2.5231016    7.4766273 
  452000    10.768148    1.2765105    9.4916372  -0.32951721   0.85119596   0.99548519   0.75547819   -3.5502959            3    5.7579207    8.0794781    8.0313593    1.1629249 0.0030337893  -0.10892917  0.030844404    5.5921788    5.6125656            0            0  -0.04691867     1.049696        0.075    1.2339903          0.5   0.11663289    4.2869555    2.8109858    30.801768 0.0039337047  -0.37463942 -0.021523109    0.3482019   -0.9253561    5.1923719 
  453000    10.782001    1.2499384    9.5320622  -0.33632789   0.83347734   0.96287854   0.74766185   -3.5502959            3     5.626847    7.9757496    7.8643735    1.0404178 -0.021598835 -0.0023437993  0.062955159    5.4628199    5.4862529  -0.89413738   0.96132348  0.082628433    1.0573507        0.075    1.2419853          0.5   0.11748341      4.25592      2.80502    30.801768  -0.01700216  -0.37663201 -0.0048523957   0.35821625  -0.57526946    3.3489739 
  454000    10.774971    1.2923568    9.4826146  -0.34305959   0.86176256    1.0132357   0.76126741   -3.5502959            3    5.6337237    7.9475116    7.9545403   0.99911924  0.033916293 -0.0032161277 -0.065553306    5.4667117    5.4857768  0.074493767   0.30461289  -0.16648378    1.0622752        0.075    1.2300424          0.5   0.11803058    4.2361904    2.8293628    30.801768 0.0076627518  -0.35272783 -0.025397763    0.3753804      1.91114    8.4902374 
  455000      10.8042    1.2774677    9.5267322   -0.3197544   0.85183429    1.0168915   0.74229452   -3.5502959            3    5.5100871    7.8365979    7.8774596   0.81620396  0.030095199  -0.12596121 -0.063130186    5.3472375    5.3616064   0.19268344   0.72918388   0.05986092    1.0527216        0.075    1.2231647          0.5   0.11696907    4.2746344    2.7691545    30.801768 -0.0053885906  -0.37111041 -0.013881528   0.40377409    2.1284171    3.0337743 
  456000    10.749734    1.2706521    9.4790814  -0.34808535   0.84728954    1.0010109   0.74529272   -3.5502959            3    5.6333433    7.9437334    7.9211973    1.0350993 -0.0097306279   0.12362847 0.0093700053     5.469836    5.4871814 -0.076976033   0.59168616  -0.19507062    1.0667929        0.075    1.2432245          0.5   0.11853255    4.2182507    2.8268596    30.801768 -0.0028533847  -0.38359729 -0.025618177   0.38382147  -0.38849634    6.3746398 
  457000    10.780343    1.2741877    9.5061554  -0.33093308   0.84964713    1.0023553    0.7483255   -3.5502959            3    5.5964212    7.8708449    7.9322975    0.9861213 -0.0051176429  0.036290384  0.066834959    5.4322485     5.450063    2.0238947    1.0885921    0.4767246    1.0733578        0.075    1.2412329          0.5   0.11926197    4.1924512    2.8040663    30.801768 -0.035245145  -0.41563884 0.0054772905   0.38932576  -0.42319533    8.5904358 
  458000    10.773527    1.2722506    9.5012763  -0.31985483   0.84835542    1.0001374   0.74764975   -3.5502959            3    5.6041427    7.9625415    7.9036908   0.94619574   0.01198299  0.001946056   0.09564531    5.4401182    5.4581083            0            0   0.12524551    1.0490203        0.075    1.2456793          0.5   0.11655781    4.2897167    2.8291188    30.801768 -0.030769973  -0.38557397  0.023350154   0.33804382    2.8532089    3.8052417 
  459000    10.761691      1.24239    9.5193014  -0.31542482   0.82844396   0.94425032   0.75167474   -3.5502959            3    5.6413479    7.9529633    7.9874165   0.98366388 -0.017558123   0.12254187  -0.04189461    5.4764404    5.5034738            0            0  0.010084798    1.0520644        0.075      1.25333          0.5   0.11689605    4.2773046    2.8422301    30.801768 -0.023014256  -0.38306264   0.02086945   0.39825755   -2.5328921    1.0760135 
  460000    10.763104    1.2693397    9.4937643  -0.32966673   0.84641437   0.99242755   0.74954745   -3.5502959            3    5.4130189    7.8012242    7.7314094   0.70642322  0.024705402 -0.095391354    0.1036269    5.2485781    5.2681103   0.60751386   0.76376709 -0.011918361    1.0466289        0.075     1.262002          0.5    0.1162921    4.2995182     2.806498    30.801768 0.0019146234  -0.35714055 -0.011815621   0.34034068   0.80545526   0.24721212 
  461000    10.777642    1.2730599    9.5045818  -0.33335066   0.84889507    1.0098231   0.74210236   -3.5502959            3    5.5484871    7.8771106    7.8532256   0.91512506 0.0088219685   0.26780521  0.045283963    5.3856797    5.4010385   -2.0594296    2.0542146   0.13947706     1.046536        0.075    1.2409214          0.5   0.11628178    4.2998997    2.7807584    30.801768 -0.021778827  -0.34432443  -0.01517792   0.33879021   -1.2416144    3.2923207 
  462000    10.770739    1.2790895    9.4916496  -0.33226397    0.8529157   0.99623811   0.75784204   -3.5502959            3    5.6577769    7.9308616    7.9582404    1.0842288 -0.0037573973   0.12392695  0.077019262    5.4915164    5.5123119  -0.51924434    1.0925488  -0.14316969    1.0550228        0.075    1.2329556          0.5   0.11722476    4.2653105    2.8090455    30.801768 0.0054679584  -0.39754582  0.015431825   0.32473375  -0.99568826    5.4985164 
  463000    10.773372    1.2676054    9.5057663  -0.33088222   0.84525793    1.0064934    0.7382593   -3.5502959            3    5.5318954    7.8859277    7.8442928   0.86546575 0.0030161273   -0.3179205  -0.01144118    5.3699311    5.3849329  -0.40701736   0.53036183   0.14705569    1.0577808        0.075    1.2241335          0.5    0.1175312    4.2541894    2.7946858    30.801768  0.016494219  -0.34997089 0.0006887848   0.33245154    4.0227848    4.8731094 
  464000     10.77415    1.2864013    9.4877486  -0.33209265   0.85779134    1.0079302   0.75818273   -3.5502959            3    5.5712984    7.9457003    7.8894514   0.87874361   0.01358487  0.041421041  -0.10129149    5.4049632    5.4241262   0.13466145   0.32479365  -0.14071036    1.0611421        0.075    1.2415759          0.5   0.11790468    4.2407138    2.8129925    30.801768 0.0041324382  -0.31061598  0.021277469   0.36933283   0.95140876  -0.16781173 
  465000    10.776504    1.2814195    9.4950849  -0.35623335   0.85446936    1.0096289   0.75151798   -3.5502959            3    5.5552635    7.8715971    7.8940528   0.90014057  0.013839329   0.05976005     0.021794    5.3903904    5.4078432            0            0 -0.054624205    1.0570015        0.075    1.2313313          0.5   0.11744461     4.257326    2.7835432    30.801768 0.0062340699  -0.36996949 -0.020234777   0.37164958   0.28419489   0.70904304 
  466000     10.73832    1.2593679    9.4789517  -0.32206731   0.83976504    1.0107723   0.72626066   -3.5502959            3    5.5722273    7.9396024    7.8803679    0.8967117 0.0091996231 -0.015320197 -0.012129582    5.4128954    5.4246401  -0.96935848   0.84264228   0.28231991    1.0566223        0.075    1.2388913          0.5   0.11740248    4.2588539    2.8117118    30.801768   -0.0235498  -0.33379052 -0.023268024   0.38478333  -0.75419642   0.29754051 
  467000    10.775823    1.2644879    9.5113348  -0.32979583   0.84317917   0.97956184    0.7527207   -3.5502959            3     5.489095    7.8572483    7.7730522   0.83698441 -0.013121162  0.090441413  -0.00729211     5.323958    5.3460649  -0.44010473    1.4006787  0.032597961    1.0509512        0.075    1.2324832          0.5   0.11677236    4.2818353    2.8170182    30.801768 -0.003274443  -0.32089305 0.0043293873   0.32269495   -1.9816173  -0.45700234 
  468000    10.742858    1.2745937    9.4682644  -0.33629673   0.84991785    0.9783528   0.76475154   -3.5502959            3    5.5848421    7.8905311    7.8818473   0.98214786  0.023057869  -0.04434651  0.087248599    5.4170657    5.4419885    1.9332538    2.5558889  0.054520101    1.0431215        0.075    1.2446716          0.5   0.11590239    4.3139748    2.8033725    30.801768  0.010438169  -0.41521298 -0.0023500516   0.31368543    1.2445972    1.6686559 
  469000      10.7716      1.27785    9.4937497    -0.312639    0.8520892    1.0036017   0.75156424   -3.5502959            3    5.4336357    7.7988594    7.8697069   0.63234078 -0.030597017 -0.091729515  0.060733897    5.2687525    5.2870954   -0.6284671   0.50510723   0.21385598    1.0539478        0.075    1.2514058          0.5   0.11710531    4.2696613    2.8097811    30.801768  0.028490981  -0.27139034 -0.020408701   0.38637172    2.6293538   -1.7043955 
  470000    10.744579    1.2439466    9.5006323   -0.3515426    0.8294819     1.006669   0.71186073   -3.5502959            3    5.6217578    7.9510768    7.9388396   0.97535714  0.034766806  0.045090622 -0.043803191     5.465585    5.4747697  -0.57201444    1.1932517  0.017314353     1.059724        0.075    1.2488285          0.5   0.11774712    4.2463885    2.8083238    30.801768 0.0077934995    -0.343693 -0.010202749   0.34521735  -0.66916255   -1.1001413 
  471000    10.721745    1.2493283    9.4724166  -0.33734108   0.83307051   0.96966192   0.74246937   -3.5502959            3    5.7161184    7.9695323    8.0309728    1.1478501 -0.038153646   0.12740756 -0.0024145815    5.5532305    5.5745339   -0.3790357     1.393153   0.23740422    1.0524097        0.075    1.2511002          0.5   0.11693442    4.2759011    2.7821495    30.801768  0.015245625  -0.35585289 0.0028021528    0.3839603   0.13659386    6.1787581 
  472000    10.790755    1.3031691     9.487586  -0.34291478   0.86897235    1.0058969   0.77816277   -3.5502959            3    5.4194273    7.7377453     7.796937   0.72359951 0.0057905167  -0.16324922 0.00049956853    5.2487087    5.2725519   0.03392844   0.81793262 -0.026254316    1.0526952        0.075    1.2495101          0.5   0.11696613    4.2747416    2.7940438    30.801768 0.0059318621   -0.4501696  0.027195043   0.35782273   0.47506586    2.6534401 
  473000    10.777345    1.2642569    9.5130882  -0.32073556   0.84302507   0.98988406   0.74559397   -3.5502959            3    5.7713516    7.9712319    8.0718457    1.2709772   0.03040034  -0.10597438 -0.017555976    5.6077782    5.6268143    1.2548149   0.96396306  0.050061951    1.0600188        0.075    1.2468768          0.5   0.11777987    4.2452076    2.8169764    30.801768 -0.046354268  -0.44462405  0.016665313   0.31772435  -0.58645437    3.5540762 
  474000    10.822545    1.3203657    9.5021793  -0.32712636   0.88043926    1.0239398    0.7852572   -3.5502959            3    5.6492124    7.9688197    7.9567513    1.0220662  0.014156674 -0.013543948 -0.083935776    5.4769373    5.4997025  -0.70770864    1.5675256   0.40525524    1.0570688        0.075    1.2494662          0.5   0.11745209    4.2570548    2.8166859    30.801768  0.024278199  -0.34810325  0.012155102   0.34347175  -0.58270305    3.7562711 
  475000    10.742319    1.2628672    9.4794521  -0.33753756   0.84209843   0.99350187   0.74164239   -3.5502959            3     5.460554    7.7934576    7.8221768    0.7660275 -0.018209907 -0.071649591  0.045830958    5.2978475    5.3154885  -0.58162902    1.4806593  0.034211035    1.0728395        0.075    1.2581024          0.5   0.11920439    4.1944765    2.8001384    30.801768  -0.01402312  -0.44728994 -0.017297193   0.32705371  -0.44542464    8.8340704 
  476000    10.740147    1.2555404    9.4846063  -0.33263156   0.83721285    1.0128171   0.72064799   -3.5502959            3    5.5241241    7.8251098    7.8124534   0.93480928 -0.032551686  -0.10029252 -0.013528229    5.3660235    5.3762383  -0.14483921   0.77392998  0.039696067    1.0469397        0.075    1.2594461          0.5   0.11632664    4.2982416    2.7788018    30.801768 0.0029886083  -0.38143136 -0.025989566   0.41034252   -3.3556368    7.5706961 
  477000    10.731269    1.2343101    9.4969588  -0.32846334   0.82305614    0.9901655   0.71213986   -3.5502959            3    5.6041576    7.9413952    7.9022234   0.96885423 -0.025228145   0.24590162   0.01525473    5.4479236    5.4595793   -0.3512485   0.56409342   0.12457396    1.0692563        0.075    1.2582639          0.5   0.11880626    4.2085325    2.8209517    30.801768  0.010711322    -0.356719  0.012589171   0.35619728  -0.54492608    3.3743162 
  478000    10.798606    1.2797086     9.518897  -0.32173887   0.85332854    1.0141621   0.74660036   -3.5502959            3    5.4318361    7.7828584    7.7824997   0.73015009 0.0044841413 0.0027797736   0.11086424    5.2680419    5.2837539            0            0   0.17277746    1.0532572        0.075    1.2615733          0.5   0.11702858    4.2724607    2.8027707    30.801768 -0.006263939  -0.37705358 -0.018978561   0.34522992   -1.8256363    2.2864268 
  479000    10.741981    1.2731076    9.4688731  -0.32754681   0.84892692    1.0047733   0.74551639   -3.5502959            3    5.7097907    8.0013687    7.9895759    1.1384274  0.019841643  0.081085048 -0.003269008    5.5462342    5.5630793   0.16962129   0.26932386   0.20627953    1.0416355        0.075    1.2424509          0.5   0.11573728    4.3201291    2.7814206    30.801768  0.011595604  -0.35097545 -0.024093936   0.41355085   0.13815392    4.5878559 
  480000     10.75398    1.2629412    9.4910386  -0.31714785    0.8421478   0.99087662   0.74347188   -3.5502959            3    5.3448265     7.767602    7.7552761   0.51160135 -0.028110623  0.057372584  0.011036427    5.1817186    5.2001443  0.089112002   0.86859933  0.032539063    1.0651778        0.075    1.2430241          0.5   0.11835309    4.2246467     2.813613    30.801768 0.0057424695  -0.36165605 -0.0046303088   0.31545849    1.2363373  -0.55306578 
  481000    10.779791    1.2701066    9.5096845  -0.32583204   0.84692574   0.97974131   0.75884277   -3.5502959            3    5.4766998    7.8357253    7.8275348   0.76683921  0.013260444  -0.14555495  0.012382339    5.3102197    5.3336435            0            0   0.12476255    1.0676297        0.075    1.2401001          0.5   0.11862552    4.2149447    2.7951932    30.801768 -0.020884891  -0.39042063  0.027379771   0.43322004    2.6032482   0.41980318 
  482000    10.740835    1.2857838    9.4550508  -0.34585429   0.85737958    1.0170367   0.75143591   -3.5502959            3     5.473189    7.8062164    7.8022501   0.81110041 -0.010134281 -0.045227122 -0.059100544    5.3083339     5.324687 -0.081176899   0.52133338   0.15223632    1.0766955        0.075    1.2369385          0.5   0.11963283    4.1794547    2.8147447    30.801768 -0.036012499  -0.39431863 -0.017452387   0.36609322   -1.5620318  -0.36415649 
  483000    10.708907    1.2306877    9.4782198  -0.32910918   0.82064065   0.97526577   0.71803245   -3.5502959            3     5.428367    7.8000644    7.7766038   0.70843295 0.0027725944  0.070231783 -0.007344147    5.2708402    5.2859642   0.42089663    1.0105846   0.15189276    1.0581625        0.075     1.251829          0.5   0.11757361    4.2526551    2.7988462    30.801768  0.021247736  -0.27796082 -0.00051267567   0.34589709   -0.6118616    2.3281685 
  484000    10.756865    1.2941128    9.4627519   -0.3441721   0.86293343    1.0303872   0.75180267   -3.5502959            3    5.7220884    8.0079789    8.0162888    1.1419977  0.015290981 -0.037292021 -0.055398346    5.5571529    5.5716371  0.015947759   0.64501191 -0.060974441    1.0694792        0.075    1.2455636          0.5   0.11883102    4.2076555    2.8167799    30.801768 -0.014303321  -0.29218997  0.010819048   0.39658305    2.1631467    3.6984477 
  485000    10.727277    1.2741187    9.4531583  -0.34604431   0.84960113    1.0232185   0.73436322   -3.5502959            3    5.5729334     7.921174    7.8972031   0.90042313 -0.046148634  0.039877136 0.0044864856    5.4118239    5.4235289            0            0  -0.16165152    1.0680798        0.075    1.2473005          0.5   0.11867553    4.2131685    2.7945765    30.801768  0.025611227  -0.39844552 0.00062637405   0.33910495    1.3314817    1.5227327 
  486000    10.790671     1.290317     9.500354  -0.31230096   0.86040236   0.99930563   0.76827266   -3.5502959            3    5.5922525    7.9127513     7.929498   0.93450823  0.013505797   0.10274848  0.012356109    5.4237037    5.4463396  -0.88227237    1.4908396 -0.076356296     1.057768        0.075    1.2442856          0.5   0.11752978    4.2542409    2.7848462    30.801768  0.014758265  -0.37758214 -0.0071161141   0.41608473   -1.7716147  -0.08827135 
  487000    10.794024    1.3026898    9.4913342  -0.31949268   0.86865271    1.0308772   0.76100449   -3.5502959            3    5.6410031     7.965732    7.9281128    1.0291644  0.046411829 -0.040910369  -0.04872529    5.4740488    5.4904802   0.38469051   0.53849427 -0.044363417    1.0606698        0.075    1.2486637          0.5    0.1178522    4.2426023    2.8181726    30.801768 -0.014752665  -0.34696252   0.01684216   0.46308466  0.066715351   -3.7006225 
  488000    10.768967    1.2830331    9.4859343  -0.33399352   0.85554537   0.97946742   0.77338473   -3.5502959            3     5.487455    7.8427425    7.8378529   0.78176953 -0.0023325052  -0.06707644  -0.13232888    5.3177846    5.3444387  -0.58611508     2.127284  0.062755613    1.0694591        0.075      1.24031          0.5   0.11882879    4.2077346    2.8042262    30.801768 -0.0025922171  -0.40781394  0.021246958   0.39318107    2.1499463    5.2700939 
  489000    10.765766    1.2742731    9.4914934  -0.34180786   0.84970403   0.97799155   0.76463576   -3.5502959            3    5.6028068    7.8893291    7.9140447    1.0050467  0.030258097  -0.10163842 -0.046147106    5.4350559     5.460006  -0.63587144   0.45232857  0.070286271    1.0697988        0.075    1.2393527          0.5   0.11886653    4.2063986    2.8080749    30.801768  -0.02655751  -0.40512615 -0.00079876073   0.38230067   -1.4081321    3.5671204 
  490000    10.751174    1.2567741    9.4943999  -0.31657215   0.83803543   0.95887088   0.75792262   -3.5502959            3    5.6532526    8.0216566    7.9710905   0.96701066 0.0061675461 -0.037663662  -0.03624852    5.4869744    5.5132437   0.26215798   0.72584097  -0.11884294    1.0501996        0.075    1.2247323          0.5   0.11668885    4.2848997    2.7928966    30.801768 -0.0054297207  -0.34610897  -0.01032561   0.38132532    2.6030484    3.5270599 
  491000    10.772903    1.2635498    9.5093527  -0.33871599    0.8425536   0.99375947   0.74222922   -3.5502959            3    5.5124833    7.8113202    7.9056947    0.8204351 -0.020918942  0.047206427 0.0010343627    5.3496481    5.3673802  -0.61036812      1.11312 -0.012137845    1.0570782        0.075    1.2446324          0.5   0.11745314    4.2570169    2.8208822    30.801768  -0.03083536  -0.25513674 -0.0065394296   0.38711989   -2.9804031    4.6839188 
  492000    10.803864    1.2971278    9.5067367  -0.33830124    0.8649439    1.0045835   0.77232578   -3.5502959            3    5.4787871    7.8076017    7.8354707   0.79328892 -0.025507895  0.098218594  0.025191774    5.3093491    5.3321035            0            0 0.0045101285    1.0561158        0.075    1.2354542          0.5    0.1173462    4.2608964    2.8144474    30.801768 -0.0039182149  -0.33289338 -0.012932432   0.28111635  -0.37785749    2.6939099 
  493000    10.749055    1.2827508    9.4663042  -0.34286721   0.85535711    1.0275976   0.74103774   -3.5502959            3    5.6167158    7.8728076    7.9118241    1.0655157 0.0018947855   0.10236932 -0.019325925    5.4541419    5.4666718   0.75885627   0.76363033  0.027051187    1.0643992        0.075    1.2482251          0.5   0.11826658     4.227737    2.8181766    30.801768 -0.0086059062  -0.39848748  0.020210967   0.34682012  -0.64429477    7.4555293 
  494000    10.772832     1.266702      9.50613  -0.34554313   0.84465555   0.98792117   0.74961663   -3.5502959            3    5.3089075    7.7513846    7.6971281   0.47820989  0.024134129   0.12118185 -0.063238131    5.1444516    5.1646569      1.57751    3.1881312   0.17640854    1.0689467        0.075    1.2543349          0.5   0.11877185    4.2097517    2.8239625    30.801768 -0.0062902768  -0.36612049   0.01098657   0.33703472   -3.0307494   -1.7946461 
  495000    10.800854    1.2907489    9.5101054   -0.3260547   0.86069035    1.0181653   0.75620026   -3.5502959            3    5.5781024    7.9081492    7.9440504    0.8821076 -0.024976979  0.058172909 -0.037178639    5.4122021    5.4294357            0            0  -0.39387188    1.0541267        0.075    1.2586356          0.5   0.11712519    4.2689364    2.8027362    30.801768 -0.0097140564  -0.36905904  0.029023569   0.34113458   -1.3939698    0.1310068 
  496000    10.799035    1.3029265     9.496108  -0.32656933   0.86881058    1.0357083   0.75805211   -3.5502959            3    5.6295602    7.9754648    7.9018941    1.0113216  0.018392046  -0.04378915 -0.043620408    5.4632536    5.4783319   0.76341669   0.45615869   0.15554517    1.0620536        0.075    1.2551918          0.5   0.11800596    4.2370742    2.7980011    30.801768 -0.019329705  -0.41394407 -0.004325184   0.40061083  -0.95159156   -1.5809935 
  497000     10.77023    1.2786043    9.4916255  -0.33657803   0.85259214    1.0218204   0.74027653   -3.5502959            3    5.6651268    8.0334583    7.9448631    1.0170591 -0.0084576469  0.091835308 -0.076948428      5.50272    5.5159264            0            0 -0.081695415    1.0599599        0.075    1.2379902          0.5   0.11777332    4.2454435    2.7911874    30.801768 -0.0018320341  -0.42449064 0.0038145934   0.31126671 -0.068763728    3.9688554 
  498000    10.783263    1.2930031    9.4902599  -0.33703625   0.86219351    1.0171068    0.7594089   -3.5502959            3    5.5592375    7.9255184    7.8702886   0.88190547 -0.0017378163   0.23471465  0.022882971    5.3926332    5.4107253   0.58086401    2.3473143 -0.022990915    1.0661975        0.075    1.2446623          0.5   0.11846638    4.2206065    2.8102068    30.801768 -0.0042112531   -0.3828297 -0.031045649   0.36028842   -2.6951782    3.7366396 
  499000    10.772467    1.2652602    9.5072064  -0.32168421   0.84369411    1.0071595   0.73521076   -3.5502959            3    5.3494459    7.6909685    7.7797651   0.57760413  0.026129573  0.029753001  0.050920912    5.1881504    5.2023862   0.80025022    1.9493582   0.15452763    1.0520003        0.075    1.2442064          0.5   0.11688892    4.2775654    2.8035435    30.801768  0.014586021  -0.37164679 -0.029170139   0.31276759    2.0730612 0.0038853747 
  500000    10.735717    1.2420111    9.4937064    -0.327404   0.82819125   0.98411268   0.72472308   -3.5502959            3    5.5849233    7.9090443    7.9340811   0.91164457 -0.011809587  -0.14736283  0.021929738    5.4259287    5.4412287 -0.015212015  0.038625573   0.55601443    1.0566037        0.075    1.2404824          0.5   0.11740041     4.258929    2.8094955    30.801768 -0.0081236142  -0.36935641  0.010105362   0.41068757    3.4902629     3.716184 
  501000    10.736083    1.2345984    9.5014849  -0.33780454   0.82324841   0.96389433   0.72994514   -3.5502959            3    5.4588133    7.8065577    7.8441621   0.72572004  0.030175553  0.022235189 -0.093394748     5.298673    5.3180709   0.43035644    1.5947866  -0.13946393    1.0708152        0.075    1.2389162          0.5   0.11897947    4.2024057    2.8194104    30.801768 -0.019906184  -0.39742579 0.0062264388   0.39097882  -0.27209814    4.2383365 
  502000    10.803125    1.3194542    9.4836711  -0.33634911   0.87983148    1.0381467   0.77478919   -3.5502959            3     5.597049    7.8876615    7.9186891   0.98479658 -0.024112955   0.12264517 -0.082226719    5.4270705    5.4454647  -0.83328299    2.3570011  0.098745405    1.0535735        0.075    1.2475542          0.5   0.11706372     4.271178     2.782546    30.801768  0.015055899  -0.38828374 -0.0048460636   0.36765312   0.48595607    7.1526532 
  503000    10.782247    1.2594166    9.5228302  -0.33216348   0.83979753    1.0050206   0.73014289   -3.5502959            3    5.6640819    7.9246502    7.9720295    1.0955659  0.004581625  0.012627756  0.034192803    5.5038982    5.5173344  -0.92057599    1.7090558   0.10284622    1.0385168        0.075    1.2363761          0.5   0.11539075    4.3331028    2.7745632    30.801768 -0.012793652   -0.3660093 0.0097051419    0.3484248  0.051301507    6.7861978 
  504000    10.764342    1.2565757    9.5077663  -0.33274266   0.83790314    1.0095552   0.72396896   -3.5502959            3     5.411731    7.7668137    7.8105928   0.65778645 0.0046844713  -0.12997274  0.074877622    5.2529018    5.2643215            0            0   0.14218967    1.0503916        0.075      1.25121          0.5   0.11671018    4.2841164    2.7961591    30.801768  0.015488188  -0.36113937 -0.00093893968   0.36519479    1.7439502    5.2344135 
  505000    10.768155    1.2823523    9.4858025  -0.32254709   0.85509139   0.99166718   0.76450879   -3.5502959            3    5.6346238    7.9730712    7.9400975   0.99070274 -0.024095297    0.0921598 -0.053629276    5.4669007    5.4898262  0.020003522     1.946587   0.16575678    1.0445863        0.075    1.2615988          0.5   0.11606514    4.3079256     2.793441    30.801768 -0.027982101  -0.37334247 0.0036135226   0.36429082   0.35540018    2.5643272 
  506000    10.772436    1.2733148    9.4991213  -0.31807625   0.84906506   0.98636063   0.75800118   -3.5502959            3    5.5148563    7.8906642    7.7848989   0.86900566 -0.0015260144   0.14771108  -0.12354444    5.3485608    5.3708335   -1.0461714   0.76499296  0.073436053     1.059793        0.075     1.257731          0.5   0.11775478    4.2461121    2.8104144    30.801768  0.022518394  -0.34964427   0.02858126   0.44858736   -3.9708785    1.4572381 
  507000    10.811772    1.2915571    9.5202154   -0.3300322   0.86122926    1.0355537   0.74552505   -3.5502959            3    5.4515284    7.7135767      7.82669   0.81431858  0.046824948   0.10911346  0.012352308    5.2879701    5.3003227   0.64739234    1.2096159 0.0040959234    1.0576838        0.075    1.2676156          0.5   0.11752042    4.2545797    2.8285355    30.801768 -0.018989879  -0.41411772 -0.0042667486    0.3223843    1.1120558    3.5621558 
  508000      10.7325    1.2488089    9.4836914  -0.33866535   0.83272416   0.99122806   0.72753889   -3.5502959            3    5.6187012    7.9148405    7.9449814   0.99628184  0.028503894 -0.039781909  -0.05033217    5.4590888    5.4739677    1.0349696    1.0061834   0.10324239    1.0733235        0.075    1.2565757          0.5   0.11925816    4.1925851    2.8109015    30.801768 0.0004040399  -0.39397984 -0.032238619     0.334549   0.92749833    7.1456905 
  509000    10.739302     1.276223    9.4630792   -0.3431841   0.85100429   0.99244424   0.75718281   -3.5502959            3    5.4897376     7.820331    7.8536156   0.79526616 -0.014600403 -0.058142352 -0.058875131    5.3236217    5.3448265            0            0   0.11535914    1.0579363        0.075    1.2466836          0.5   0.11754848     4.253564    2.8090576    30.801768 -0.0006100235  -0.35011693 -0.0018533547   0.40815864   0.49086861    10.570219 
  510000    10.751032    1.2737489    9.4772835  -0.33709235   0.84935454    1.0025062   0.74773767   -3.5502959            3    5.8611719    8.1473523    8.0804168    1.3557467  0.025847924   0.20888003 -0.055804792    5.6971282    5.7147916            0            0   0.10878743    1.0741926        0.075     1.241745          0.5   0.11935473    4.1891929    2.8421674    30.801768  -0.02370124  -0.31358508   0.02076959   0.39155255   -3.0973806    4.7826033 
  511000    10.764574    1.2762562    9.4883178  -0.32290722   0.85102644    1.0149742   0.74222474   -3.5502959            3    5.4958686    7.8441645    7.8396156   0.80382575 -0.011632189  0.072280069  0.019517219    5.3330344    5.3476678   -1.4612561   0.84481756 -0.030494857    1.0548406        0.075    1.2403717          0.5   0.11720451    4.2660473    2.8012336    30.801768 -0.0047502249  -0.38493806 -0.012239577   0.35745403   0.91541923    4.4582371 
  512000    10.736031    1.2746275    9.4614036  -0.33609522   0.84994035   0.99707227   0.75233015   -3.5502959            3    5.5651244    7.9234926    7.9064175     0.865463 -0.012251908 -0.033454605  0.047507021    5.4000731    5.4195375   0.10084642   0.65120469  0.031253526    1.0697874        0.075    1.2510948          0.5   0.11886526    4.2064433    2.7976846    30.801768 -0.016078449  -0.34944622  0.019677921   0.37507523  0.052689758    5.3802929 
  513000    10.748826    1.2686771     9.480149  -0.34151224   0.84597256   0.98194292   0.75578955   -3.5502959            3    5.4035454    7.7824878     7.790468   0.63768047  0.013558813   0.13769042  0.062007951    5.2377352    5.2601677    1.4613763    2.3483007   0.03946629    1.0646529        0.075    1.2478268          0.5   0.11829477    4.2267297    2.8154636    30.801768  0.011992451  -0.35562054 -0.013504521   0.34775198   -1.3547954    3.3375962 
  514000    10.801006    1.2839067    9.5170993  -0.33314927   0.85612789      1.01734   0.74914882   -3.5502959            3    5.5085083    7.8571847    7.9134983   0.75484184  0.024124439  -0.13536731  -0.16065952     5.344155    5.3599621  -0.26916942   0.75354933  0.092661566    1.0659405        0.075     1.252906          0.5   0.11843784    4.2216238     2.808636    30.801768 -0.010694357  -0.31733376  0.028802399   0.29898688   -1.9811411    2.4715714 
  515000    10.792718    1.2932607    9.4994575  -0.33240971   0.86236525    1.0099998   0.76442514   -3.5502959            3    5.7683101    8.0001214     8.028444     1.276365 -0.0030340038 -0.065625752  0.010364032    5.6006054    5.6208357  -0.49627781    0.7151706 -0.029552713    1.0456825        0.075    1.2590158          0.5   0.11618695    4.3034094    2.7853578    30.801768 0.0072216696  -0.41510364 0.00063994584   0.38363977      1.42974    8.2709918 
  516000    10.781985    1.2880599    9.4939255  -0.33912868   0.85889732    1.0114415   0.75768824   -3.5502959            3    5.5976418    7.9501915    7.8399834    1.0027505  -0.02483268  0.015838029 -0.034134709     5.431415    5.4499568            0            0  0.044155675    1.0568943        0.075    1.2518432          0.5    0.1174327     4.257758    2.8087816    30.801768  0.020946417  -0.39627115  0.007084703   0.34183343    1.6593441    7.4541044 
  517000    10.760258    1.2799369    9.4803212  -0.34477761   0.85348075   0.98914906   0.76350153   -3.5502959            3    5.6253155     7.895696    7.9682762    1.0119744 -0.014327718  0.074010667  0.027825623    5.4578134    5.4808856   0.47757107   0.89260667  -0.17690862    1.0827037        0.075    1.2449009          0.5   0.12030041    4.1562617    2.8547743    30.801768 -0.018578166  -0.30048977  0.010023134   0.31750878  -0.52318426    2.2168422 
  518000    10.755914    1.2831118    9.4728026  -0.33395967   0.85559782    1.0096692   0.75337113   -3.5502959            3    5.4680164    7.9175795    7.8287984   0.65767127 -0.011934472  -0.16781374   0.11564999    5.3027367    5.3205902  -0.32828278   0.96233787  0.090723663    1.0550462        0.075    1.2349297          0.5   0.11722736    4.2652159    2.7928787    30.801768 -0.0010343075  -0.35716523  0.011762094   0.34567205   0.86969699    4.0461266 
  519000    10.802618     1.291651    9.5109674  -0.32348904   0.86129187   0.99673646   0.77146445   -3.5502959            3    5.6870772    7.9797506    7.9817427    1.0997383 0.0012579667   0.13161765  0.093774059    5.5178281    5.5415394  -0.23561592     1.371199   0.09987735    1.0616515        0.075    1.2415157          0.5   0.11796127    4.2386792    2.8067775    30.801768  0.026599534  -0.36401299 -0.0032221777   0.36588083   0.28098838    6.5578269 
  520000    10.809669     1.274536    9.5351327   -0.3269066   0.84987936   0.98809054   0.75820639   -3.5502959            3    5.4441589    7.8548874    7.7637547    0.7138347 0.00050790039   0.16878546 -0.066614222    5.2778185    5.2998835 -0.0019483225    1.1114521   0.13300318    1.0729067        0.075    1.2438935          0.5   0.11921185    4.1942139    2.8371635    30.801768  -0.01918737  -0.34570624 -0.00017507681    0.3094235  -0.95758382   0.53911465 
  521000    10.748685    1.2530409    9.4956446  -0.31910257    0.8355461   0.99240893    0.7314541   -3.5502959            3    5.6885205    8.0548458    7.9777233    1.0329925 -0.026921354 -0.027690749  0.080375722    5.5280492    5.5436146            0            0   0.12908426    1.0639772        0.075    1.2560306          0.5   0.11821968    4.2294141    2.8214766    30.801768 0.0061123907  -0.38969923  0.014824107   0.37203786   -3.0818565    6.4859144 
  522000    10.755263    1.2621851    9.4930775  -0.34564164   0.84164358   0.99053865   0.74285683   -3.5502959            3     5.437735    7.8028591    7.7444476   0.76589819 -0.025434114  -0.06223716 -0.018868022     5.274762    5.2931021   0.58765056   0.71392796   0.17963695    1.0670999        0.075    1.2543074          0.5   0.11856665    4.2170374     2.806188    30.801768 -0.038419639  -0.47398252 -0.010766941   0.42449464   0.39695014    1.2675724 
  523000      10.7736    1.2704686    9.5031309  -0.32801537   0.84716718    1.0088455   0.73987447   -3.5502959            3    5.5353458    7.8230819    7.9297554   0.85320004 -0.0058560898 -0.020640457  0.083284294    5.3730271    5.3880399  -0.34589068   0.52552802   0.14696288    1.0547329        0.075    1.2480245          0.5   0.11719255     4.266483    2.7848213    30.801768  0.001039138  -0.35376684 0.0036101601   0.36323219  -0.26106065  -0.45362176 
  524000    10.732323     1.256231    9.4760924  -0.32567267   0.83767334   0.98991684   0.73665655   -3.5502959            3    5.7862387    8.0292257    8.1071026    1.2223879 -0.045117192  0.062586673 -0.014730457    5.6246261    5.6416967   -1.2919718    1.1225019 -0.020074871    1.0575033        0.075    1.2383609          0.5   0.11750037    4.2553058    2.7884199    30.801768  -0.01585209   -0.3128122 -0.020270705   0.33587289     1.656086    3.8664172 
  525000    10.738925    1.2942375    9.4446871  -0.33212875   0.86301664    1.0135226   0.76316563   -3.5502959            3    5.5983024     7.921366    7.9782968   0.89524438 -0.0081765116   0.13027295  -0.12036481     5.430874    5.4503136    0.5923706    2.6132452  -0.47464185    1.0776726        0.075    1.2363855          0.5    0.1197414    4.1756653    2.8237426    30.801768 0.0012696018  -0.38320947 0.0088423018   0.42820665   -1.0560471    1.9986271 
  526000    10.750831    1.2908193    9.4600122  -0.35082193   0.86073728   0.99203462   0.77366988   -3.5502959            3    5.4965607    7.8282941    7.7898607   0.87152723 -0.019618805  -0.10694733  -0.07013511    5.3268278    5.3517094   0.79896217     0.701993  -0.23923005    1.0645418        0.075    1.2401467          0.5   0.11828242    4.2271708    2.8336873    30.801768 -0.016005466  -0.32866934 0.0077945721   0.39833837  -0.31035165   0.51484922 
  527000    10.746437    1.2863718    9.4600651   -0.3251501   0.85777167    1.0023371   0.76187248   -3.5502959            3    5.7308612    8.0281721    7.9970821    1.1673293 -0.012983366  0.062177687  0.034544632    5.5637164    5.5845056            0            0  -0.25454027    1.0603258        0.075    1.2419261          0.5   0.11781397    4.2439788    2.7888549    30.801768 0.0096181439  -0.45027117 -0.0065257684   0.33457538  -0.50441178    5.4156065 
  528000    10.771719    1.2644223    9.5072969  -0.31760043   0.84313536    1.0024812   0.73739361   -3.5502959            3    5.5629536     7.974086    7.8729437   0.84183099  0.020439216 -0.084317538  0.003795172    5.4011792    5.4165769  -0.24082652   0.25405432   -0.2122917    1.0669773        0.075    1.2355873          0.5   0.11855303    4.2175218    2.7966443    30.801768  0.019761162  -0.36044747  0.039591027   0.43062208  -0.78510818    2.0214214 
  529000    10.739975    1.2598329    9.4801417   -0.3426535   0.84007509    1.0192124   0.72115983   -3.5502959            3    5.7668496    8.0171767    8.0461772     1.237195 -0.012407123   0.11110407  0.037103408    5.6086367      5.61803   0.52126981   0.63486922 -0.0079031257    1.0717532        0.075    1.2356202          0.5   0.11908369    4.1987278    2.7979448    30.801768 0.00016741136   -0.3562274  0.037484571   0.39892941    1.1043482    3.2724051 
  530000    10.762238    1.2448483    9.5173898  -0.32641488   0.83008318   0.96881148   0.73805871   -3.5502959            3    5.4845237     7.788283    7.8455101   0.81977792   0.01741389   0.10504282  0.071334897    5.3226034    5.3430633   0.67190165     1.122323   -1.0817237    1.0594526        0.075    1.2365996          0.5   0.11771696    4.2474763     2.818595    30.801768 0.0033173681  -0.36256794  0.016702088   0.31729006   0.19898865    -2.121911 
  531000    10.830443    1.3089987    9.5214442  -0.32114722    0.8728596    1.0296849   0.76880637   -3.5502959            3    5.4436595    7.8007519    7.8024566   0.72777007 -0.027439663  -0.07336725  0.067409437    5.2749936    5.2933107   0.26403453   0.36925521   0.41073327    1.0385913        0.075    1.2292706          0.5   0.11539904    4.3327918    2.8165085    30.801768 0.00063603361  -0.31974919 0.0037579943    0.2680051    1.3457726   0.11969031 
  532000    10.748888    1.2722642    9.4766241   -0.3230378   0.84836448    1.0153403   0.73754644   -3.5502959            3    5.6750763    7.9754985    7.9866944    1.0630359 -0.027228108   0.15060482 -0.057517056    5.5132684     5.526822   0.57098662     2.228269  -0.64780107    1.0508417        0.075    1.2394689          0.5   0.11676019    4.2822815    2.8028083    30.801768   -0.0098886  -0.35374522   0.03169367   0.38800373  -0.65324897    7.0825637 
  533000    10.771315    1.2688001    9.5025148  -0.31812703   0.84605458    1.0007968   0.74337787   -3.5502959            3    5.6711759    8.0098246    7.9629657    1.0407375  0.010128826  0.034527921  0.041569984    5.5080886    5.5250452     1.063359   0.51528709   0.02728622    1.0583059        0.075    1.2403362          0.5   0.11758954    4.2520788    2.7907701    30.801768  0.011886732  -0.36465653 0.0058675467   0.40478778   -2.7782228    3.4193352 
  534000    10.805669    1.2792862    9.5263823  -0.32495804   0.85304686    1.0506511   0.72184564   -3.5502959            3    5.5998979    7.9083422    7.9311066   0.96024479  0.012769555  -0.15055493  0.065838931    5.4415345    5.4464877 -0.029238193   0.45077353   0.02372413    1.0724576        0.075    1.2427028          0.5   0.11916195    4.1959702    2.8349922    30.801768   0.01008305  -0.35952292   0.01135449   0.37209655     1.713282    3.1716949 
  535000    10.784001    1.2681126    9.5158887  -0.33246483   0.84559614   0.99108297   0.74907923   -3.5502959            3    5.5845635    7.8828542    7.8797722   0.99106413 -0.0048920341 -0.076040591  0.086215136    5.4202254    5.4398512            0            0   0.24468457    1.0671319        0.075    1.2398211          0.5   0.11857022    4.2169106    2.8169269    30.801768 0.00084907253  -0.35137544 0.0069322971   0.42092762    1.4636417    4.7445786 
  536000    10.777702    1.2738895    9.5038128  -0.31541225   0.84944825    1.0006315   0.74914148   -3.5502959            3    5.6671661    7.9521377    7.9747851    1.0745755 -0.012547201  0.029272353  0.050446523    5.5028144    5.5210596            0            0  -0.07837115    1.0557652        0.075    1.2459922          0.5   0.11730725    4.2623113     2.789874    30.801768 0.0056549115  -0.39577622 -6.3336557e-05   0.33955763   -2.4159909     4.522737 
  537000    10.800873    1.2971945    9.5036785  -0.34168313   0.86498835    1.0346568   0.75238439   -3.5502959            3     5.755099    7.9996655     8.030879    1.2347527 -0.013057625  -0.17148779 -0.061374373    5.5900359    5.6040243  -0.20411862   0.38905502  0.054480131     1.059117        0.075    1.2475983          0.5   0.11767967    4.2488224     2.804702    30.801768 -0.017753783  -0.39651641 0.00072960259   0.50304778   -1.4662824    5.6882403 
  538000     10.73556    1.2446022    9.4909581  -0.33902469   0.82991903   0.99792641   0.71840762   -3.5502959            3    5.6324543    7.9668077    7.9297156    1.0008395 -0.018998215 -0.0013005589  0.032229694    5.4748452    5.4867427   -1.0782171     1.130946  0.076529936     1.045093        0.075    1.2436931          0.5   0.11612144     4.305837    2.8023152    30.801768 -0.018249036  -0.32750679 -0.003033639   0.34692154   0.61631946    5.1488205 
  539000    10.789385    1.3164987     9.472886  -0.34810184   0.87786071    1.0047069   0.79376215   -3.5502959            3    5.7108646    8.0148065      7.95375    1.1640372 -0.018754497 -0.085696801  -0.11369296    5.5367237     5.564163    1.2115599    2.0676258 -0.033000643    1.0732924        0.075    1.2506612          0.5   0.11925471    4.1927066    2.8206901    30.801768 -0.0056313501  -0.34757327 -0.00035620773   0.38801194    1.1252064     6.465529 
  540000    10.816199    1.3038248    9.5123744  -0.33421263   0.86940956    1.0271751   0.76472929   -3.5502959            3    5.6385319    7.9372564    7.9733943     1.004945 0.0028325116  -0.08862823 -0.010788778    5.4707604    5.4885496   0.25621759   0.97210957   0.10580027    1.0601457        0.075    1.2470594          0.5   0.11779397    4.2446994     2.794569    30.801768 -0.0016887725  -0.35474651 -0.018850091   0.39811005  -0.63562063    2.7835296 
  541000    10.792269     1.272564    9.5197048  -0.31275644   0.84856439    1.0095095   0.74176018   -3.5502959            3    5.7852452    8.1083815    8.0375408    1.2098133 -0.0099061782   0.21413783  0.052693638    5.6225128    5.6378423   0.76129899    1.2156405 -0.010462664    1.0486862        0.075    1.2439012          0.5   0.11652069    4.2910834    2.7887648    30.801768  0.021859414  -0.34677549   0.03536809    0.4211044   -0.5712418    2.4438658 
  542000     10.77325    1.2905253    9.4827248  -0.33909499   0.86054125    1.0067661   0.76353864   -3.5502959            3    5.4665146     7.860699    7.8079908   0.73085386 -0.038314104 -0.024945067  0.027784268    5.2990043    5.3195123   -1.1503561    1.4923439  0.053718271    1.0512075        0.075    1.2390168          0.5   0.11680083    4.2807914    2.7772908    30.801768 0.00022343396  -0.37314268  0.023370486   0.33756478    3.0988225    1.4423817 
  543000    10.754598    1.2575969    9.4970014  -0.33963656   0.83858411    1.0265814   0.71377147   -3.5502959            3    5.5736213    7.8435733    7.9212292   0.95606153 -0.0037523321  -0.10237123 -0.0072241877    5.4170293    5.4237257            0            0  0.095703105    1.0588404        0.075    1.2564226          0.5   0.11764894    4.2499322    2.8023298    30.801768 0.0074717863  -0.42884316 -0.0042275992   0.36739638   0.96021092  -0.57015703 
  544000    10.791165    1.2854184    9.5057462  -0.32526693   0.85713589    1.0018665   0.76112658   -3.5502959            3    5.5382083    7.8983618     7.927883   0.78838025 -0.0053499981   0.16099588  -0.16564877    5.3712273    5.3919215            0            0  -0.87156291    1.0514844        0.075    1.2522243          0.5    0.1168316    4.2796642    2.8038433    30.801768 -0.00085440747  -0.32577163 -0.0067547594   0.33723257   -1.8923472   -0.7160639 
  545000    10.745907    1.2604852    9.4854219  -0.33777531   0.84051008   0.98300654   0.74598154   -3.5502959            3    5.5756983     7.867271    7.9535966   0.90622715  0.016888006 0.0011838723  0.022841969    5.4120398    5.4321652  -0.67962199   0.76648643  0.048925062     1.057944        0.075    1.2437697          0.5   0.11754934    4.2535331    2.7935725    30.801768 -0.023817528  -0.36169577  0.022633081   0.32842768  -0.12686444    4.1957681 
  546000    10.780384    1.2803225    9.5000616   -0.3404729   0.85373786   0.99801341   0.75803014   -3.5502959            3    5.5295561    7.8743172    7.8363201   0.87803105 -0.0094866186 -0.073494139 -0.056461829    5.3632543    5.3838318   -0.3153074   0.81865379  -0.10255492    1.0610764        0.075    1.2443857          0.5   0.11789737    4.2409766    2.8135017    30.801768   0.01302877  -0.36705512 -0.011857305   0.34331093   0.26633085   -0.9701134 
  547000    10.779001    1.2677364    9.5112645  -0.31842931   0.84534529      0.99866   0.74361838   -3.5502959            3    5.6867938    8.0123463    7.9911185    1.0569164 -0.017955007 -0.065858894  0.018483128    5.5236537    5.5409751            0            0 -0.078461347    1.0606904        0.075     1.256499          0.5   0.11785449    4.2425199    2.7886659    30.801768  0.012138145  -0.34658338   0.02560517   0.37644425   0.30720165     6.267249 
  548000    10.755954    1.2598921    9.4960617  -0.33919226   0.84011459   0.96132574    0.7597525   -3.5502959            3    5.6174386    7.9278842    7.9152501    1.0091815  -0.01320721 -0.018584859  0.044951829    5.4507589    5.4770712            0            0   0.23910602    1.0553852        0.075    1.2480553          0.5   0.11726503    4.2638459    2.7937972    30.801768 -0.023517839  -0.39661683  0.028812261   0.37972289   0.79689675    5.5397254 
  549000    10.804233    1.2923898    9.5118427   -0.3288171   0.86178457    1.0203886    0.7565434   -3.5502959            3    5.5973216    7.8838321    7.9416141   0.96651878 -0.014107254 -0.024551097 -0.023536548     5.431346    5.4483303            0            0 -0.054908742    1.0563648        0.075    1.2500419          0.5   0.11737386    4.2598922    2.8228591    30.801768 0.0081450218   -0.3723925  0.015000963   0.38489652  -0.47786212   0.74965643 
  550000    10.754282    1.2702134    9.4840688  -0.32597469   0.84699702    1.0081308   0.74006667   -3.5502959            3    5.4710736    7.8074118    7.8139628   0.79184612 -0.032895254  -0.11281147  0.097435068    5.3087128     5.323872   0.76509739   0.32973045   0.13456246    1.0472835        0.075    1.2479545          0.5   0.11636483    4.2968308    2.7928186    30.801768 -0.0012506889  -0.34228021   0.01851658     0.368787   -3.2024559    2.8217233 
  551000    10.810953    1.2780393    9.5329136  -0.32146016   0.85221538    0.9848942   0.76422538   -3.5502959            3    5.6822838    7.9734928    7.9699516     1.103407 -0.0090871988   -0.0404078 -0.045042987    5.5146229    5.5384751   0.68719992   0.77317484 -0.092933082    1.0626686        0.075    1.2504845          0.5   0.11807429    4.2346222    2.8054882    30.801768 0.0025147245   -0.3387943 -0.00012386513   0.36184825    4.4578436    2.6984733 
  552000    10.757826    1.2804083    9.4774175   -0.3378684   0.85379508    1.0049367   0.75351762   -3.5502959            3     5.498996    7.8288155    7.8459395   0.82223304 -0.022252961   0.08523389 -0.084360244    5.3336842    5.3522608  -0.25609249   0.59983211 -0.017663188    1.0518559        0.075    1.2504409          0.5   0.11687288    4.2781525    2.7935738    30.801768  0.029018237  -0.34123263 -0.0070675241   0.42947941   -1.1366218    4.7671021 
  553000    10.796673    1.2888857    9.5077872  -0.34199994   0.85944793    1.0102025   0.75943016   -3.5502959            3    5.8135584    8.1028272    8.0103179    1.3275303 -0.065670468   0.18507143  0.096242549    5.6469495    5.6660544    1.0916298    4.0804775  -0.19481717    1.0590969        0.075    1.2458775          0.5   0.11767743    4.2489032    2.8061713    30.801768  0.018239556  -0.34692156 -0.0090860335   0.37174596    -1.609458    11.086623 
  554000    10.786824    1.2664357    9.5203883  -0.32546988   0.84447795   0.99218396   0.74648363   -3.5502959            3    5.5745292    7.9213324    7.8918708   0.91038456 -0.036859643  0.044510027  0.030063192    5.4107606    5.4296562  -0.05495887    0.9368497   0.18371932    1.0437514        0.075    1.2405595          0.5   0.11597238    4.3113713     2.808222    30.801768 0.0033619152  -0.32828437 0.0027052365   0.34970239   -1.9812504    1.6111338 
  555000    10.789104    1.2749679    9.5141361   -0.3255698   0.85016733    1.0077524   0.74560003   -3.5502959            3    5.4955069    7.8869428    7.8297473   0.76983053  -0.01030137 -0.057148189  0.026054841    5.3319321    5.3483606            0            0  0.017202315    1.0593444        0.075    1.2400933          0.5   0.11770493    4.2479103    2.8090692    30.801768   0.01968771  -0.31984417 0.0013135594   0.32438717   0.64752873   -0.7078545 
  556000    10.758618    1.2819276    9.4766908  -0.33401824   0.85480816    1.0125709   0.75012436   -3.5502959            3    5.6088259    7.9229778    7.9475026   0.95599736 -0.013032428 -0.067853427 -0.043031709    5.4442586     5.460976  -0.39140449    0.8558646   0.10360827    1.0685611        0.075    1.2384089          0.5   0.11872901    4.2112705    2.8273777    30.801768 -0.021591015  -0.37969567 -0.00083524263   0.34475234   0.29149532    1.7507127 
  557000    10.828146    1.3073638    9.5207819  -0.32455541   0.87176945    1.0169207   0.77548559   -3.5502959            3    5.4399745    7.7856618    7.8012538   0.73300801 -0.042131628  -0.12868404  0.052242606    5.2698432    5.2914895            0            0   0.24880406     1.058438        0.075    1.2436002          0.5   0.11760423    4.2515479    2.8313454    30.801768 -0.0073328575  -0.33145184  0.011929746   0.34395955    1.4369936   0.17058929 
  558000    10.762383    1.2555507     9.506832  -0.33300973   0.83721971   0.98043999   0.74220822   -3.5502959            3    5.5509367    7.8771888    7.8687415    0.9068798   0.02378508   0.17555795  0.019247156    5.3881061    5.4077784  -0.42805593    1.0111425  0.073012012    1.0664437        0.075     1.252744          0.5   0.11849375    4.2196319    2.8126313    30.801768 -0.0046328641  -0.35167232 -0.0061398728    0.3570765  -0.37186943    1.8576372 
  559000    10.765259    1.2823379    9.4829215  -0.32777739   0.85508178    1.0011178   0.75820287   -3.5502959            3     5.693457    7.9613795    7.9774654    1.1415261  -0.03284744 -0.064638008  0.062584677    5.5271174    5.5472795    1.2224552    1.0364203 -0.034201635    1.0723046        0.075    1.2500619          0.5   0.11914495    4.1965688    2.8296287    30.801768 0.0082813928   -0.3750896 -0.018594613   0.36337989    1.0273778    1.3242324 
  560000    10.709938    1.2462208    9.4637175  -0.33961164   0.83099834   0.97211534    0.7373844   -3.5502959            3     5.513781    7.9021658     7.840905    0.7982721 -0.016196679 -0.099429215 -0.073928476    5.3520086    5.3718382  -0.63863327    1.7620312 -0.023775687     1.080054        0.075     1.243438          0.5     0.120006    4.1664582    2.8427452    30.801768 -0.0022771376  -0.36555429 -0.022688149   0.38299204   0.94025966    6.2515588 
  561000    10.802614    1.2974356    9.5051784  -0.33207191   0.86514915   0.99950427   0.77604826   -3.5502959            3    5.5320509    7.8714715    7.8373959   0.88728522 0.0089236509 0.0015217419 -0.059828604    5.3617962    5.3861089   -1.8849485    1.3786498 -0.044733971    1.0687473        0.075    1.2450761          0.5    0.1187497     4.210537    2.8036863    30.801768 0.0087951696  -0.45465082  0.019226026    0.3392226   0.24136073    3.8535363 
  562000    10.728344     1.263702    9.4646423  -0.33453826   0.84265512   0.96685238   0.76030653   -3.5502959            3     5.644308    7.9501362    7.9720073    1.0107804 -0.00056297023  -0.13152045   0.13432173    5.4775068    5.5031337 -0.019010867   0.25079097  0.084562669    1.0691742        0.075    1.2623849          0.5   0.11879714    4.2088556     2.801428    30.801768  0.013163266  -0.31016838 0.0067512869   0.35214456    2.3321296     5.115245 
  563000    10.755361    1.2603874    9.4949735  -0.33798559   0.84044485    1.0088882   0.72864717   -3.5502959            3    5.5666218    7.8182148    7.8926707   0.98897986 0.0023765147  0.026726313  0.019709271    5.4067662    5.4193096   0.62646504    1.0411418   0.15601418    1.0570275        0.075    1.2601464          0.5    0.1174475    4.2572212    2.7845373    30.801768 0.0044809645  -0.39688163 0.0099754201   0.33610704  -0.18365438     3.780139 
  564000    10.783103    1.3091748    9.4739285  -0.33876009   0.87297704     1.006015    0.7847557   -3.5502959            3    5.6285093    7.9150052    7.9848574   0.98566542 -0.040456923  -0.10831114  0.089233166    5.4563443    5.4816167  -0.57184272   0.53467391  -0.14159146    1.0501722        0.075    1.2574027          0.5    0.1166858    4.2850116    2.7759842    30.801768 -0.0045788331  -0.34110457 -0.0089696258   0.33298054    2.3725523   0.76059124 
  565000     10.82145    1.2920613    9.5293887  -0.32434539   0.86156552    1.0104732   0.76277772   -3.5502959            3    5.6410152    7.9886153    7.9473956   0.98703457 -0.0073136554  -0.12092501  0.046167161    5.4736718    5.4934716   -1.2333738    4.1407861   0.12602507      1.06266        0.075    1.2536741          0.5   0.11807333    4.2346564    2.8237749    30.801768 0.0079025382  -0.37047597 -2.8311701e-05   0.29302585      1.13924    5.1290271 
  566000    10.767691    1.2660214    9.5016695  -0.33175078   0.84420173    1.0014353   0.73986616   -3.5502959            3    5.5659137    7.8711262    7.8690192   0.95759565 -0.023783673  0.098868227   -0.1028361    5.4035969    5.4196898   0.35600253  0.097656332 -0.036074635    1.0641273        0.075    1.2485739          0.5   0.11823637    4.2288172    2.8302738    30.801768 3.4591704e-05  -0.34914511 -0.0068331641   0.32019127   -3.3925527   0.61448347 
  567000    10.781232    1.2949075    9.4863249  -0.34942042    0.8634634    1.0004224   0.77262885   -3.5502959            3    5.4922039    7.8478477    7.8286737   0.80009035 0.00069713819  0.041115725 -0.0067591839    5.3226994    5.3461279  0.060196189   0.89428921  0.054082003    1.0536564        0.075    1.2516746          0.5   0.11707294    4.2708419    2.7891119    30.801768 -0.011937111  -0.31949378 -0.00095694082   0.34091518    1.8892544    1.9042369 
  568000    10.785569    1.2943056    9.4912636  -0.33005331   0.86306204    1.0065603   0.76787508   -3.5502959            3    5.5965542    7.8733849    7.9691527   0.94712517 0.0056728756   -0.2198717 -0.046150195    5.4280926     5.449582  0.017579163   0.67582449  -0.20262208     1.067702        0.075    1.2459238          0.5   0.11863355    4.2146592    2.8008466    30.801768  -0.00968369  -0.40990215 -0.016234003   0.32869186    2.2075935    6.2747184 
  569000    10.714577    1.2374221    9.4771545   -0.3424568   0.82513126   0.98975886    0.7158675   -3.5502959            3    5.5537423    7.8792376     7.869182   0.91280719 -0.030933559  0.081357406 -0.047355146    5.3966904    5.4092233   0.10556161    0.2026065  0.027054455     1.056514        0.075    1.2531139          0.5   0.11739045    4.2592903    2.7809259    30.801768 0.0091710574  -0.39226171  0.022951852   0.35014115   0.29349641    2.6274169 
  570000    10.821316    1.2913197    9.5299961   -0.3277872   0.86107097    1.0249736   0.75230304   -3.5502959            3    5.6017149    7.8657112    7.9801247   0.95930876  0.012672643   0.14380225 -0.0081386921    5.4366696     5.452054            0            0  0.010895601    1.0449936        0.075    1.2468486          0.5    0.1161104    4.3062464    2.7915697    30.801768 -0.0023096142  -0.41487735   0.00636708   0.33233709   -2.7146384   0.23423092 
  571000    10.809083    1.2997318    9.5093516  -0.33712208   0.86668027    1.0043671   0.77536251   -3.5502959            3    5.5884485    7.8919915     7.912019   0.96133502 -0.014948114  -0.13764563 -0.085597429    5.4183442    5.4417965            0            0 -0.011686646    1.0503218        0.075    1.2522757          0.5   0.11670242    4.2844014    2.7992219    30.801768 -0.0053341103  -0.35068529 0.0017634644   0.37576039    1.8635644    3.0107987 
  572000    10.771486    1.2710798    9.5004059    -0.320686   0.84757475    1.0083669     0.740872   -3.5502959            3    5.6726832    8.0259431    7.9727419    1.0193644  0.012262132  0.087199748  0.040194206    5.5101457    5.5254471   -1.1915286    3.6284344 -0.098059278    1.0540903        0.075    1.2572107          0.5   0.11712114     4.269084    2.7992145    30.801768  -0.01291671  -0.32689704  0.010503483   0.27533514    1.3573581    2.0353044 
  573000    10.719758    1.2600709    9.4596872  -0.33514157   0.84023382   0.99258662   0.73914522   -3.5502959            3     5.658899    7.9500884     8.024178    1.0024306 -0.020056456 -0.066501653 0.0091007665    5.4967403    5.5139671   0.98106462   0.72347147  -0.57495626    1.0733835        0.075    1.2513167          0.5   0.11926483    4.1923507    2.8128531    30.801768  0.015782341  -0.32751323 -0.015447615   0.37193999   0.85498813    2.8671409 
  574000    10.763924    1.2788927    9.4850315  -0.34675804   0.85278447   0.98589838    0.7645051   -3.5502959            3    5.3828954    7.7825802    7.7347134   0.63139265 0.0014182908 -0.090365823 0.0074440699    5.2151731    5.2389401  -0.32270675   0.60647326   0.26005723    1.0654589        0.075    1.2511702          0.5   0.11838432    4.2235323    2.7996685    30.801768 0.0098979264  -0.39385635 -0.0031764577   0.38090524  0.098454936  -0.15976304 
  575000    10.755102    1.2457421    9.5093594  -0.33954025   0.83067915   0.97521268    0.7347912   -3.5502959            3    5.6789048    7.9747741     7.939164    1.1227763 -0.0019721127   0.13311386   0.11461286    5.5177014    5.5365098  -0.12167607    1.0881116 -0.087232058    1.0559713        0.075    1.2386246          0.5   0.11733014    4.2614795     2.806231    30.801768 0.0074718975  -0.30341211 0.0012885259   0.41308464     1.017006    8.2480308 
  576000    10.772146    1.2567241    9.5154216  -0.32785035    0.8380021   0.99877724   0.73130714   -3.5502959            3    5.4878318    7.8374382    7.7816434   0.84441396 -0.012733041 -0.084693015  0.097422866    5.3273927     5.341996   0.67762086   0.29894141  0.080570699    1.0552623        0.075    1.2439391          0.5   0.11725137    4.2643426    2.8084399    30.801768 -0.017099067  -0.39136465 0.0070015381    0.3919615    1.2384696 -0.030550836 
  577000    10.776244    1.2792868    9.4969573  -0.33887859   0.85304728    1.0073149   0.75068904   -3.5502959            3    5.5050896     7.874543    7.9005549   0.74017091  0.010551921 -0.012360594 -0.077570811    5.3403984    5.3580072            0            0   0.11894947     1.060937        0.075    1.2486447          0.5   0.11788189    4.2415336    2.8072596    30.801768 -0.017368947  -0.31760441  0.010415296   0.32457851   0.36259943    1.3366487 
  578000     10.74727    1.2451951    9.5020749  -0.32732197   0.83031443   0.95638085   0.74671724   -3.5502959            3    5.7967217    8.0858399    8.0843757    1.2199494  0.012547975 0.00042638794  0.033486098    5.6329018    5.6570763            0            0   -0.1011565    1.0468018        0.075    1.2496686          0.5   0.11631131    4.2988079    2.8000852    30.801768  0.011744203  -0.32936439 -0.0076935857   0.36996107   -2.9301974    6.0944306 
  579000    10.758739    1.2555111    9.5032275  -0.32604491   0.83719325   0.97489429   0.74585512   -3.5502959            3    5.5594305    7.8918882    7.9266342   0.85976918 0.0063375726  0.015658747 -0.032557649    5.3957998     5.417082    1.6852422    2.5734903 0.0058155752    1.0611467        0.075    1.2530579          0.5   0.11790519    4.2406954    2.7994698    30.801768  0.024029963  -0.41277227 0.0090281704   0.34797941    2.5459799    0.2135995 
  580000    10.746913    1.2680049    9.4789084  -0.32183258   0.84552435   0.99945042   0.74339061   -3.5502959            3    5.6240393    7.9481413    7.9584314   0.96554521 -0.031260155  0.012485992 -0.042213488    5.4609492    5.4781052   0.37303273   0.71069231 -0.015794836    1.0407826        0.075    1.2454391          0.5   0.11564252    4.3236694    2.7995099    30.801768 -0.0058910161  -0.35545278   0.02314983   0.35135218    2.2412046    5.3392872 
  581000    10.765684     1.267186    9.4984979  -0.31688914   0.84497825    0.9928526   0.74687208   -3.5502959            3    5.6307339    7.9256796    7.9418597    1.0246623 -0.031789741   0.03416949 -0.033434258      5.46688    5.4857632            0            0   0.19308606    1.0611904        0.075    1.2534904          0.5   0.11791004     4.240521    2.8242491    30.801768 -0.021200891  -0.38689593 -0.019315083   0.39095046   -2.2034017    5.1018272 
  582000    10.808134    1.2948186    9.5133156  -0.32824052   0.86340413   0.99615567   0.77536986   -3.5502959            3    5.7248879    8.0528602    7.9599286    1.1618749 -0.0099470804   0.14586803 -0.011546398     5.554782    5.5794349            0            0 -0.012157785    1.0658385        0.075    1.2621033          0.5    0.1184265    4.2220281    2.8063442    30.801768 -0.0045431011  -0.35845933 -0.001784666    0.2843871    1.1891517   0.47142204 
  583000    10.756797    1.2635305    9.4932664  -0.32951817   0.84254072   0.98935687   0.74513795   -3.5502959            3    5.5163587    7.8925726    7.8374075   0.81909615 0.0086073277  -0.14720665  0.039924511    5.3528853    5.3718984            0            0   0.21445468    1.0661012        0.075     1.276109          0.5   0.11845569    4.2209877    2.8366728    30.801768 -0.014040471  -0.33144499 0.0067184353   0.43656465     1.031926    3.2900884 
  584000    10.742654    1.2577207    9.4849331  -0.33820823   0.83866669     1.000269   0.73142146   -3.5502959            3    5.3620263    7.7439788    7.7189269   0.62317323  0.026981154 0.0035791871 -0.0035025773    5.2015621    5.2159727  -0.52994875   0.53455988    0.1088447     1.050454        0.075    1.2661982          0.5   0.11671711     4.283862     2.797805    30.801768  0.013188715  -0.34703143 -0.041815953   0.34631172   0.28697292    2.6643269 
  585000    10.763625     1.285034    9.4785912  -0.32311036   0.85687955    1.0313196    0.7410968   -3.5502959            3    5.7747877    8.0265177    8.0598579    1.2379875   0.01497421  0.018595641  0.035246702    5.6122009    5.6242003    1.0693439    1.3136739 -0.065320361    1.0492896        0.075    1.2570598          0.5   0.11658774    4.2886157    2.8133002    30.801768  0.018871049  -0.35808911 0.0021540969   0.28870975   -2.8976974    2.4120812 
  586000    10.757742    1.2654554    9.4922868   -0.3282917   0.84382428     1.005955   0.73622925   -3.5502959            3    5.5520906    7.9139777    7.8611169   0.88117707 0.0083310755 -0.012322694  -0.10077262    5.3905716    5.4052067   0.77223224   0.58233276   0.15338378    1.0706183        0.075    1.2622631          0.5   0.11895759    4.2031787    2.8192216    30.801768  -0.01943088  -0.36712143  0.011006903    0.4215111    1.6458596    1.9394377 
  587000    10.776665    1.2595063    9.5171587  -0.31369063   0.83985736    1.0243867   0.71735331   -3.5502959            3    5.5707881    7.9351654    7.8936202   0.88357876  0.017304008  -0.16479033  0.067511038    5.4134103     5.421213            0            0    -0.172963    1.0601581        0.075    1.2589848          0.5   0.11779535    4.2446499    2.7971395    30.801768 0.0057757224  -0.42635514  0.016294327   0.44352726    0.4217319   -1.6249993 
  588000    10.753979    1.2693884    9.4845905  -0.31454495   0.84644688    1.0243271   0.72837061   -3.5502959            3    5.5840104    7.9056475    7.9043039   0.94207965  0.014850002   0.15281401  0.071547452    5.4242155    5.4344439   0.29071007   0.59942345   0.55606644    1.0749907        0.075    1.2613428          0.5   0.11944341    4.1860826    2.8207251    30.801768 -0.026275795  -0.32855858  0.017013925   0.41987139 -0.051591615    3.2534593 
  589000     10.77398    1.2739016    9.5000787  -0.32249732   0.84945636    1.0025481   0.74787939   -3.5502959            3    5.4505719    7.7796936    7.8756162   0.69640581 -0.019476178 0.0047281186   0.08196419     5.286497    5.3041855            0            0   0.11816321    1.0443419        0.075    1.2573697          0.5   0.11603799    4.3089335    2.8066685    30.801768 -0.028457484  -0.35327195  0.013984522   0.28732366   -2.2033138  0.077364488 
  590000    10.764382    1.2726801    9.4917014  -0.32368874   0.84864182   0.99835542   0.74931288   -3.5502959            3    5.7013738    8.0272458    8.0068729    1.0700027 -0.024720625 -0.024772273 0.0017002829    5.5369845    5.5555996  -0.66134963    1.5016396   0.21948062    1.0660252        0.075    1.2634417          0.5   0.11844724    4.2212886    2.7971924    30.801768 0.0012704853  -0.34430205 0.0064250417   0.37666037     2.491336    1.3348669 
  591000    10.778425    1.2707924    9.5076326  -0.33494945   0.84738308    1.0024562   0.74448659   -3.5502959            3    5.6918931    7.9585346    7.9941869    1.1229577  0.034371648  -0.12099491 -0.057719109    5.5285626    5.5455201  -0.71751218   0.54150185 -0.041740788    1.0610608        0.075    1.2610573          0.5   0.11789564    4.2410389    2.7993847    30.801768  0.012433841  -0.37565005 -0.021048237   0.38009225  -0.32422845    3.9117096 
  592000    10.795136    1.2860661    9.5090697    -0.326371   0.85756783    1.0099312   0.75647862   -3.5502959            3    5.5120973    7.8833402    7.8017771    0.8511746   -0.0161456  -0.15852849   0.05056706    5.3461359    5.3646328   -1.0353727    0.8586855  0.043343989    1.0516901        0.075    1.2611126          0.5   0.11685445     4.278827    2.8146244    30.801768 0.0047522612  -0.41274523 -0.0050766405   0.38844463    2.5670658     3.214811 
  593000    10.734189    1.2590855    9.4751039  -0.32016992   0.83957674    0.9914042   0.73883755   -3.5502959            3    5.6880824    8.0869456    7.9127955    1.0645061  0.013200659  0.046894822 -0.014535902    5.5259912    5.5433232  0.095875906    2.1886352  0.026053553    1.0566334        0.075    1.2581285          0.5   0.11740372     4.258809    2.8102773    30.801768  0.010074192  -0.34923721 0.0021412512   0.34994366 -0.051671122    3.1393375 
  594000    10.777079    1.2643085    9.5127706  -0.31489118   0.84305954   0.97715215   0.75412519   -3.5502959            3    5.6747803    7.9659161    8.0247463    1.0336787 -0.015315152   0.20620541  0.085949237    5.5093353    5.5321021   0.25804439    1.3270677   0.12708543    1.0825848        0.075    1.2603179          0.5    0.1202872    4.1567184    2.8393398    30.801768  0.009161481  -0.38748444 -0.0059055266    0.3259939     1.759516    3.6896189 
  595000    10.735039     1.249989    9.4850499  -0.34355709   0.83351105   0.95942029   0.75001967   -3.5502959            3    5.5182762    7.7987121    7.8833497   0.87276669 -0.026710885 -0.079408319  -0.18711717    5.3537318    5.3781871   0.65345341    1.0210327   0.26741858    1.0632415        0.075    1.2600366          0.5   0.11813795    4.2323404    2.7902287    30.801768  -0.00224562  -0.40197236   0.01318207   0.40010882    1.7914831    2.6956179 
  596000    10.809822    1.3116884    9.4981339  -0.33532413   0.87465311    1.0118437   0.78366855   -3.5502959            3    5.6240479    7.9052143    7.9689079    0.9980215 -0.0069928572 -0.048885382 -0.058378987    5.4521214    5.4763042  -0.15230368    1.5090352 -0.0096008448    1.0600389        0.075    1.2463402          0.5    0.1177821    4.2451273     2.802968    30.801768 0.0061501229  -0.36080413 -0.0053362842   0.37029187   -2.1454457    1.6508334 
  597000     10.79342    1.2858738    9.5075459   -0.3306988   0.85743956    1.0278472    0.7443408   -3.5502959            3    5.6663365    7.9767089    7.9806964    1.0416041   0.01665051  0.079827133  0.047589765     5.503038     5.516256            0            0  0.065378789    1.0580469        0.075    1.2500305          0.5   0.11756077    4.2531194    2.8044448    30.801768  0.025698815  -0.36090253 -0.0072873022    0.4595607   -1.0455856    2.4382619 
  598000    10.743341    1.2557872    9.4875535  -0.33905418   0.83737735   0.96104176   0.75538146   -3.5502959            3    5.7404374    8.0499976    8.0140258    1.1572887 0.0057167651  -0.20529128 -0.022314213    5.5747167    5.6001115            0            0   0.15479956    1.0694992        0.075     1.262342          0.5   0.11883325    4.2075767    2.8284624    30.801768 0.0032510189  -0.36862364 -0.0061459538   0.38834899  -0.30266211    2.0121754 
  599000    10.786092    1.2659629     9.520129  -0.32080416   0.84416266    1.0006654   0.74031352   -3.5502959            3    5.5251124     7.875522    7.8907619   0.80905325  0.021337575    0.0128096  0.025683604    5.3626974    5.3790009  0.096357468   0.68628023  0.036270059    1.0525616        0.075    1.2639139          0.5   0.11695129    4.2752841    2.8071383    30.801768 0.0093309136  -0.38757327  0.022904664   0.41623287    2.5252836    9.9331112 
  600000     10.77285    1.2820474    9.4908023  -0.33049551   0.85488805   0.99096034   0.76464048   -3.5502959            3     5.745129    8.0531322    8.0192914    1.1629633   0.02729932 -0.017612626   0.05172994     5.577377    5.6004345  0.099805737    1.3430188  0.037394525    1.0643472        0.075    1.2628409          0.5    0.1182608    4.2279437    2.8228571    30.801768 -0.013290361  -0.35566071  0.012473845   0.40477561 -0.093800767   -3.1623699 
  601000    10.738107     1.274142    9.4639652  -0.33711662   0.84961661   0.99957931   0.75012225   -3.5502959            3    5.5384603    7.9009738    7.8748838   0.83952322 -0.003627985 -0.049679343  0.050880521    5.3738934    5.3925073            0            0   0.08593807    1.0545977        0.075     1.265514          0.5   0.11717752    4.2670299    2.8155401    30.801768  0.022008717  -0.30627519 -0.012044893   0.36937631  -0.45690583    3.1047306 
  602000    10.736673     1.254715    9.4819577  -0.32443167   0.83666243   0.99048202   0.73459629   -3.5502959            3    5.5955828    7.8458268     8.022625    0.9182965  0.004363265 -0.038952598 -0.0045652007    5.4344221    5.4509582  -0.42205349   0.98822666   0.19149939    1.0560778        0.075    1.2557529          0.5   0.11734198    4.2610495    2.8140398    30.801768 0.0031980599  -0.34510835 0.0010399972   0.45186177   0.94490595    3.5670389 
  603000    10.754045    1.2816504     9.472395  -0.34392077   0.85462337    0.9917909   0.76364676   -3.5502959            3    5.6923875    8.0626428    7.9578545    1.0566652  0.003509169  -0.14600057   0.11672553    5.5248535    5.5475718   0.48816284   0.90038025 -0.084534554    1.0572022        0.075    1.2549706          0.5   0.11746691    4.2565179    2.8112084    30.801768 -0.0018114403  -0.32788474 -0.0011193694   0.31395144    2.0009201    3.7846836 
  604000    10.773515    1.2797858    9.4937296  -0.33082372   0.85337999   0.99413925   0.76001242   -3.5502959            3    5.3963284    7.8178446    7.7870161   0.58412457 -0.023351819  0.080728508  0.035725518    5.2295918    5.2511698            0            0   0.11564533    1.0522139        0.075     1.261021          0.5   0.11691265    4.2766971    2.7987405    30.801768 -0.012276942  -0.29316469 0.0080076185    0.3277857   -0.3535837   -1.3974067 
  605000    10.751029    1.2659732    9.4850562  -0.34185918   0.84416957   0.98122152   0.75326603   -3.5502959            3    5.7127918    7.9826706    8.0187473    1.1369575 -0.050853825 -0.079916025 -0.0074441251    5.5475352    5.5695194    0.2323565   0.50169457   0.10568345     1.070449        0.075    1.2600323          0.5   0.11893877    4.2038436    2.7978293    30.801768 -0.020354326  -0.34056878 -0.012193501   0.40346419    2.7241551    2.3603739 
  606000    10.773819    1.2639281    9.5098907  -0.32873827   0.84280587   0.98691856   0.74720249   -3.5502959            3    5.5118399    7.9035581    7.8402221   0.79173932  -0.00774224  0.065236894   0.02975316    5.3479135    5.3677356  -0.66790923    2.7489013  -0.03580429    1.0727697        0.075     1.265327          0.5   0.11919663    4.1947493    2.8383077    30.801768  -0.02169469  -0.31832499 -0.0052350223   0.39048755   -2.8333129   0.74461995 
  607000    10.718044    1.2612446    9.4567994   -0.3491629   0.84101647    0.9877855   0.74364448   -3.5502959            3    5.6401777    7.9190319    7.9510826    1.0504187 -0.005041148   -0.2465983  0.045272745     5.477032    5.4959469  -0.25287728   0.90494157  0.073054155    1.0607914        0.075    1.2734372          0.5   0.11786571    4.2421159    2.8001214    30.801768  0.020693568  -0.30460575  0.019887136   0.48172046    1.5928968    4.9979096 
  608000    10.752622    1.2666809    9.4859411  -0.32999101   0.84464144   0.98896817   0.74889629   -3.5502959            3    5.6096854    7.8883111    7.9328358    1.0079093  0.035605174   0.14192784  0.025782014    5.4453875    5.4652819  -0.83629048    2.2994145   0.51770818     1.058488        0.075    1.2557175          0.5   0.11760978    4.2513473    2.7816317    30.801768 0.0024281591  -0.35583943 0.0074570886   0.39632202   -2.4905593    5.9410428 
  609000    10.776299    1.2651602    9.5111384  -0.31519131   0.84362743   0.98828334   0.74766281   -3.5502959            3    5.5736158    7.8781369    7.9418356   0.90087495 -0.012646371  0.027488375   0.11582906    5.4095885    5.4293123  -0.93293263   0.30303482   0.11799496    1.0558032        0.075    1.2538301          0.5   0.11731147     4.262158    2.8144023    30.801768 0.0013690945  -0.39096448 -0.0055194684   0.36726833  -0.55464406    2.8856083 
  610000    10.777321    1.2697681    9.5075525  -0.32861396   0.84670004    1.0052389   0.74149669   -3.5502959            3    5.7067727    7.9543983    7.9886669     1.177253  0.015409319  -0.13773326 -0.00099095099    5.5440982    5.5599934            0            0   0.11288093    1.0569916        0.075    1.2476096          0.5   0.11744351     4.257366    2.8084281    30.801768 0.0041274828   -0.3264659 -0.0047618739   0.33724445    2.9597951    6.1360606 
  611000    10.798514     1.287873    9.5106411  -0.32985149   0.85877267    1.0010915   0.76436912   -3.5502959            3    5.7868463      8.05777     8.074634     1.228135 -0.031388551   0.19342184 -0.015279589    5.6191539    5.6406726  -0.17602467     1.095802 -0.038153956    1.0517188        0.075    1.2539464          0.5   0.11685765    4.2787101    2.8143866    30.801768 -0.011116921  -0.42254471 0.0082784637   0.29712471   -5.0938462    4.7193841 
  612000    10.798141    1.3132521    9.4848887  -0.33449941   0.87569583    1.0413226   0.76578575   -3.5502959            3    5.5433179    7.8602565    7.8528218   0.91687545 -0.0016813902 -0.052984811 -0.012733841    5.3753146    5.3912699  -0.10135045   0.87714475   0.11647447     1.058356        0.075    1.2495886          0.5   0.11759511    4.2518773     2.814776    30.801768  0.020708716  -0.41754442 -0.014393166   0.35544261    1.3106266    6.3846485 
  613000    10.752503    1.2571516    9.4953516  -0.34520138   0.83828719   0.99626123   0.73345663   -3.5502959            3    5.5869452    7.9165311     7.867794   0.97651056  -0.01657173  -0.28622588 -0.040778049    5.4260346    5.4414768 -0.057893428   0.28183665  -0.21606404    1.0812569        0.075    1.2516469          0.5   0.12013966    4.1618231    2.8068382    30.801768 -0.017395344  -0.40265911 -0.029734407   0.38697492    2.3252161    4.3265281 
  614000    10.780383    1.2680398    9.5123434  -0.30792703   0.84554758    1.0055755   0.73935271   -3.5502959            3    5.6249403    7.9495194    7.9794884   0.94581326 -0.026023275   0.19078814   0.10638344    5.4627362    5.4781119   0.69324602    1.0384819  0.024848931    1.0805569        0.075    1.2415937          0.5   0.12006187    4.1645194    2.8295635    30.801768  0.014221721   -0.3629908   -0.0107593   0.27956103   -1.5911321    2.5029696 
  615000    10.821411    1.2917385    9.5296728  -0.32330108   0.86135026    1.0312909   0.74856376   -3.5502959            3    5.6757799    7.9709766    8.0230192     1.033344 -0.0086141834   0.13004479 0.0080624584     5.511555    5.5251967            0            0  0.078219275    1.0755066        0.075     1.248225          0.5   0.11950073    4.1840749    2.8186771    30.801768 0.0041220462  -0.38742432 -0.0088065334   0.38512102  -0.89413304    2.8892823 
  616000    10.766547    1.2841407    9.4824062  -0.34135933    0.8562839    1.0198656   0.74772781   -3.5502959            3    5.4807063    7.8283331    7.8591421   0.75464367 -0.012643018 -0.090674104 -0.039481887    5.3166647    5.3317913  -0.51681287   0.73619615  -0.30907059    1.0660389        0.075    1.2485527          0.5   0.11844877    4.2212341    2.8222485    30.801768 -0.018680966  -0.34276078 -0.014802501   0.44516132    2.3763827    3.2523918 
  617000    10.763826    1.2670261    9.4967997  -0.34018134   0.84487163   0.99875032   0.74276919   -3.5502959            3    5.6979744    7.9465151    7.9649987    1.1824093 -0.029222768 -0.077706177  0.016244352    5.5350206    5.5521425  -0.31227123    1.1113057 -0.095216188    1.0488413        0.075    1.2440906          0.5   0.11653792    4.2904489    2.7949688    30.801768 -0.0014730476  -0.38496558  0.013404274   0.37017583     -2.00639    6.5555399 
  618000    10.749269    1.2861107    9.4631582  -0.32878276   0.85759755   0.99897449   0.76382044   -3.5502959            3    5.5222953    7.8250138    7.8779498    0.8639222 -0.021009027   0.10896702 -0.079303031    5.3547232    5.3764307  -0.41799029   0.70659014   0.20261436    1.0635607        0.075    1.2456192          0.5   0.11817341    4.2310701    2.8344614    30.801768 -0.0095255813  -0.42970256  0.011427625    0.3502533    1.0776508  -0.29282381 
  619000    10.787589    1.2917902    9.4957989  -0.31678347    0.8613847    1.0138403   0.76023554   -3.5502959            3    5.5970608    7.9601691    7.9229133   0.90810002  0.017303897  -0.11909456 -0.079860712    5.4302752    5.4490256  -0.64471309    2.4854671   0.15404228    1.0586533        0.075    1.2495844          0.5   0.11762814    4.2506835    2.8206473    30.801768 -0.018167765  -0.31972175  0.043496534   0.33733062    2.0990435   0.59280462 
  620000     10.76639    1.2237188    9.5426712  -0.32122293   0.81599368   0.97108728   0.71307196   -3.5502959            3    5.5462537    7.8510057    7.8756347   0.91212056 -0.025696834 -0.017274047 0.0056583921    5.3898151     5.404461   0.24205098    1.4876159 -0.078881617    1.0557339        0.075    1.2553094          0.5   0.11730376    4.2624379    2.8150784    30.801768 -0.009300875  -0.41106106 0.0085759625    0.3098448  -0.45919827    7.1505037 
  621000    10.797328    1.2699625     9.527365  -0.31387426    0.8468297    0.9853757   0.75493276   -3.5502959            3    5.5328553    7.8741819    7.8616957   0.86268848 0.0074034761  0.033402522 -0.091974688    5.3672331    5.3889763  -0.30217445   0.51606321   -0.2506438    1.0489212        0.075    1.2531687          0.5    0.1165468    4.2901222    2.7674093    30.801768 0.0074097266  -0.39681353 -0.019662903   0.36442864   0.69551211    4.7501693 
  622000    10.797108    1.2947475    9.5023604  -0.33660528   0.86335666    1.0004709   0.77241873   -3.5502959            3    5.5649127    7.8922748    7.8847139   0.91774951 0.0006272555 -0.0003346746  0.029393535    5.3954543    5.4188296            0            0  -0.77882985    1.0719796        0.075    1.2488604          0.5   0.11910884    4.1978411    2.8120887    30.801768  0.013116459  -0.28846576  0.010701574   0.36659727   0.61784546    1.1182067 
  623000    10.779555    1.2805025    9.4990524  -0.33008068   0.85385792    1.0238771   0.74101636   -3.5502959            3    5.7593799    8.0531343    8.0240221    1.2009835  0.025182561  -0.27604598  -0.06317329    5.5968108    5.6098792   0.98108827    1.6527717  0.026137512    1.0722463        0.075    1.2549897          0.5   0.11913848    4.1967968    2.7953522    30.801768 -0.017869154  -0.34575107 0.0043379392   0.40038622   0.73385659    1.7693418 
  624000    10.758231    1.2666964    9.4915344  -0.34009813    0.8446518   0.99212274   0.74681401   -3.5502959            3    5.4786897    7.8591303    7.8481432   0.72879561  0.017550774    0.1096408 -0.088603057    5.3148486    5.3338256  -0.82721055    0.3953242  -0.13987102    1.0692156        0.075    1.2534202          0.5   0.11880174    4.2086926    2.8187531    30.801768 -0.0038873166   -0.3268214 -0.0016950709   0.32180907   -1.4507949   0.78618534 
  625000    10.783012    1.2718242    9.5111878  -0.32660542   0.84807106    1.0076341   0.74218657   -3.5502959            3    5.6934471    7.9757943    7.9942003    1.1103467 0.0038810909   0.07035768  0.051874487    5.5306212     5.546318   0.65213229    1.6845983 -0.081827152    1.0608847        0.075    1.2568372          0.5   0.11787608    4.2417427    2.8228411    30.801768  0.024290226  -0.33868031 -0.015780824   0.33353525  -0.44248734    1.7576007 
  626000    10.752404    1.2749146    9.4774899  -0.35555994   0.85013182   0.99660272   0.75296163   -3.5502959            3    5.5572807    7.8376071     7.935244   0.89899096 -0.00030763774 -0.094844934  0.033633158    5.3920909    5.4117624   0.20213094    0.3885497   0.18956245     1.066177        0.075    1.2481749          0.5   0.11846411    4.2206876    2.8304839    30.801768  0.006841195  -0.35215803 0.0088359031   0.36357635   0.86103857    4.3575233 
  627000    10.779874    1.2763009    9.5035735  -0.31819121   0.85105621    1.0102384   0.74542629   -3.5502959            3    5.5407352    7.8756083    7.8086815   0.93791584 -0.00016889173  0.064485493  0.070683794    5.3771986    5.3932259   0.83676492     1.708888   0.36672135    1.0627177        0.075    1.2386838          0.5   0.11807975    4.2344264    2.8022589    30.801768 -0.0037662769  -0.33330153  -0.01759914   0.36670718   -1.0248555     5.780171 
  628000    10.808157    1.3161496    9.4920072  -0.33745168   0.87762792    1.0216835   0.78207541   -3.5502959            3    5.7766583    8.0799411    8.0496016    1.2004323  0.035519508   0.17475275   0.00500468    5.6050813    5.6274779            0            0  0.046177594    1.0826966        0.075    1.2337761          0.5   0.12029962    4.1562892    2.8439095    30.801768 -0.017446762  -0.43519105 -0.038465799   0.38683308  -0.31104446    4.0559298 
  629000    10.732372    1.2545551     9.477817  -0.34593793   0.83655578   0.98211473   0.73998753   -3.5502959            3    5.6878954    7.9326693    7.9895727    1.1414442 -0.038370738  0.041215559  -0.11607194    5.5255519    5.5444926     -0.78558   0.30470618  0.072749353    1.0701382        0.075    1.2447086          0.5   0.11890425    4.2050643     2.821815    30.801768 -0.0077898287  -0.45372015 -0.0057486084   0.35931837   -1.8145543    8.6903574 
  630000    10.763297    1.2832783    9.4800188  -0.33973762   0.85570885   0.99787172   0.76140797   -3.5502959            3    5.5914495    7.9389204    7.9171115   0.91831661 -0.021070398  -0.15251735  -0.06416152    5.4244067    5.4457459  -0.25099781    0.9663743  0.045277781    1.0583262        0.075    1.2338033          0.5    0.1175918     4.251997    2.8008629    30.801768  -0.01964826  -0.36165816  0.022152392   0.37596482    3.4673084    3.6362618 
  631000    10.727264    1.2471549    9.4801094  -0.34131885   0.83162127   0.97279435   0.73797023   -3.5502959            3     5.728998    7.9587914    8.0493184    1.1788842 -0.010512448   0.14893571 -0.050364787    5.5670971    5.5869561   0.12674396   0.43999833 -0.092391713    1.0791904        0.075    1.2455135          0.5   0.11991005    4.1697924    2.8191475    30.801768 0.00018890674  -0.34397916  0.016323484   0.34314073   -4.1279494    2.1232352 
  632000    10.766661     1.279529    9.4871323  -0.34128017   0.85320877    1.0026937   0.75403371   -3.5502959            3    5.7060523    7.9885918     8.013559     1.116006 0.0031010317  0.063543815  0.037119702    5.5406273    5.5596446            0            0  0.014985404    1.0583791        0.075    1.2317706          0.5   0.11759767    4.2517848    2.7814996    30.801768 0.0021750519  -0.35115936 -0.028840036    0.3751213  -0.84630004    5.6466173 
  633000    10.763809    1.2465873    9.5172213   -0.3220089   0.83124279   0.98594468   0.72858742   -3.5502959            3    5.5238189    7.9158823    7.8615139   0.79406056  0.049535633  -0.12480775 -0.047744487    5.3639765    5.3798569  0.017450071    1.6194015   0.00990326    1.0526958        0.075    1.2401637          0.5    0.1169662    4.2747394    2.8131631    30.801768 -0.030409373   -0.3648732   0.01157882   0.28993023    2.8268383    6.1280982 
  634000    10.778674    1.2789775     9.499696  -0.33464512   0.85284103    1.0288982   0.73598052   -3.5502959            3     5.409863    7.7908117    7.7713228   0.66745467 -0.020739976  0.030366321 -0.017075997    5.2483987    5.2596291            0            0 -0.069400075    1.0698056        0.075    1.2300084          0.5   0.11886729    4.2063717    2.8250588    30.801768 -0.010100133  -0.30054725 -0.009681106   0.37064679   -1.2621509    5.8357762 
  635000     10.79193    1.2990676    9.4928623  -0.33183926   0.86623739   0.99786938    0.7789493   -3.5502959            3    5.7989579     8.016106    8.1024852    1.2782825 0.0026561698  0.064943381  -0.11295891    5.6280667    5.6532546  -0.78521026    1.0907037 0.0041483724    1.0660067        0.075    1.2318822          0.5   0.11844519    4.2213619    2.8221441    30.801768 -0.012512189  -0.39444436 -0.013817347   0.35730702   -2.7527041    7.6056799 
  636000     10.79638    1.2955091    9.5008706  -0.31967099   0.86386452    1.0203992   0.76000141   -3.5502959            3    5.4099955    7.8115485    7.7795877   0.63885019  0.019309609 -0.027269139  0.060988136    5.2432612    5.2610025  -0.13898155   0.54950775  0.073325824    1.0581671        0.075    1.2217537          0.5   0.11757413    4.2526363    2.8099081    30.801768 -0.018224649  -0.33342537  0.028991781   0.36704467   -1.8990951  -0.62071404 
  637000    10.802132    1.3068553    9.4952765  -0.32237483   0.87143033    1.0138075   0.77699262   -3.5502959            3    5.5370841    7.9617499    7.8783548   0.77114751 -0.026093482   0.12089615  0.041551577    5.3666222    5.3890536     0.259543   0.67251555  0.020302404    1.0593985        0.075    1.2168296          0.5   0.11771095    4.2476932    2.8233379    30.801768 -0.011262647  -0.33529213 -0.012844588   0.35469446   -2.2501867    2.1581648 
  638000    10.815353    1.3104839    9.5048689  -0.32499249   0.87384995    1.0685681   0.74457723   -3.5502959            3    5.6288556      7.89236    7.9371751    1.0570319 -0.0029515136  0.036861569 -0.014491622    5.4655053    5.4728294  -0.24964394    1.3810433    0.2504836    1.0585784        0.075     1.220387          0.5   0.11761982    4.2509842    2.8055252    30.801768 -0.0072797901  -0.37994122 0.0064737559   0.28064954    2.7100969    2.9923836 
  639000      10.7316    1.2501226    9.4814774  -0.32204035   0.83360014   0.97450321   0.74012955   -3.5502959            3    5.7386095    8.0762047    8.0571207    1.0825031 -0.020767728  0.045317738  0.056702728    5.5762349     5.596318    1.3392109    1.7288773  0.042507152    1.0702027        0.075    1.2316227          0.5   0.11891141    4.2048108    2.8199371    30.801768 -0.017247056   -0.3960494  0.021403509   0.44539259   -3.1527499    4.5842444 
  640000    10.821036    1.2834626    9.5375735  -0.31979168   0.85583175    1.0100491     0.753508   -3.5502959            3    5.5738624    7.8881796    7.9641138   0.86929362 -0.002015319   0.16078873  0.084761636    5.4085527    5.4263807   -1.0990336   0.71380736   0.15488283    1.0556512        0.075    1.2311221          0.5   0.11729458    4.2627716    2.7860916    30.801768 0.0061151092  -0.34905513 -0.012551114    0.3471311   -1.1151892    2.2546155 
  641000    10.761403    1.2809193    9.4804833  -0.31592201   0.85413581    1.0120527   0.74934914   -3.5502959            3    5.6586865    8.0243826    7.9613437   0.99033331  0.043315874 -0.070784772   0.11241338    5.4942893    5.5109123  -0.39647856   0.73082656  0.060483684     1.046088        0.075    1.2526724          0.5     0.116232    4.3017412    2.7921673    30.801768  0.025621602  -0.35391736  0.016878226   0.30795144    1.8162387    8.5304079 
  642000    10.714956    1.2428242    9.4721318   -0.3390034   0.82873347   0.99230287   0.72017534   -3.5502959            3    5.5089592    7.9047224    7.8276547   0.79450043 -0.020941341  0.013564234   -0.1063939    5.3509622    5.3640687  -0.37627548    1.9007124   0.22466321     1.058893        0.075    1.2423779          0.5   0.11765478    4.2497212     2.829842    30.801768 -0.017698657  -0.38661831 0.0096626734   0.35624121   -2.1747107    3.9498368 
  643000    10.784523      1.28413    9.5003933  -0.32873315   0.85627675    1.0292161   0.74149257   -3.5502959            3    5.7467162     8.018217     8.030918    1.1910136 -0.0087183763  0.073718743  0.042042394    5.5840426    5.5964359   0.15990948   0.25089749  0.097768636    1.0606144        0.075     1.253204          0.5   0.11784604    4.2428239    2.8209124    30.801768  0.006652677  -0.31604829  0.015771911   0.34351171    2.3799498     5.643708 
  644000    10.783737    1.3073291    9.4764083  -0.34269287   0.87174631   0.99576393   0.78952805   -3.5502959            3    5.4842954    7.8438232    7.9010387   0.70802431 -0.063746815 -0.072549685  0.017003276    5.3110834    5.3388996 -0.096820856    0.5639509 -0.046382106    1.0672818        0.075    1.2395534          0.5   0.11858686    4.2163187    2.8049533    30.801768 -0.012425805  -0.37102588 -2.4927891e-05   0.39029807   0.22110995    6.9875632 
  645000    10.706278    1.2516908     9.454587  -0.34757717   0.83464585   0.97049003   0.74454261   -3.5502959            3    5.5645954    7.8887092    7.9143865   0.89069056 -0.029715628  0.086207571  0.081793392    5.4012526    5.4228899 -0.080811836   0.22391153  0.023429257    1.0638781        0.075    1.2560756          0.5   0.11820867    4.2298081    2.7823301    30.801768 0.0015383428  -0.33062871 -0.00031714479   0.31650208   -3.0391418    4.8456387 
  646000    10.759721    1.2667529    9.4929676  -0.33009468   0.84468946    1.0075275     0.736624   -3.5502959            3    5.7507997    8.1034863    8.0048813    1.1440315 -0.001148225  0.072722692  0.010809921    5.5891941    5.6036862   0.24769772    1.0453889 0.0043865441    1.0705708        0.075    1.2576815          0.5   0.11895231    4.2033652    2.8236731    30.801768 0.0068874129  -0.40839036  0.010197843    0.3764158  -0.12471926    0.8736827 
  647000     10.73928    1.2304641    9.5088155  -0.31793081   0.82049154   0.98011213   0.71455853   -3.5502959            3    5.8605561    8.1249641    8.1099797    1.3467246 0.0037569566  0.074108995 -0.024763475    5.7037914    5.7174457   0.88468663   0.38875806  0.045195006    1.0797152        0.075    1.2614113          0.5   0.11996835    4.1677658    2.8327405    30.801768 -0.0049831853  -0.37891213 -0.0021358432   0.34348594   0.72667847    3.8585915 
  648000    10.746131    1.2925335    9.4535979  -0.32840408   0.86188036    1.0349829   0.74698964   -3.5502959            3    5.5614787    7.9036639    7.9115878   0.86918451 -0.036710497  0.095700514  0.024004867    5.3975991    5.4103564   0.14685493   0.59556034 -0.080172134     1.065866        0.075    1.2564953          0.5   0.11842956    4.2219189    2.7822445    30.801768 -0.0012682178  -0.35353133  0.014919483   0.41391597   -2.7626878    3.1575829 
  649000    10.762938    1.2914013    9.4715362  -0.34608163   0.86112541    1.0314329   0.74809468   -3.5502959            3     5.408267    7.7546902    7.8169437   0.65316717 -0.0003497696   -0.0760223  0.055018782    5.2441449     5.257663            0            0  0.096366428    1.0647812        0.075    1.2567327          0.5   0.11830902    4.2262205    2.8073427    30.801768 0.0087892084  -0.37439796   0.01618906   0.38552136    1.3486092    1.9701125 
  650000    10.754198    1.2731452    9.4810525   -0.3364615   0.84895199   0.99069787   0.75492612   -3.5502959            3    5.7679593    8.0822871     8.016393    1.2051978 0.0090224734  0.039720682 -0.053131842    5.6023385    5.6233032   0.21467432   0.39058561 0.0037963903    1.0643717        0.075    1.2591461          0.5   0.11826353    4.2278462    2.8154844    30.801768 -0.0021077959  -0.34505214  0.013333039    0.4003594  -0.10683515    4.2326274 
  651000    10.772367      1.26198    9.5103869  -0.33431067   0.84150681   0.99770251   0.73786102   -3.5502959            3    5.5622076    7.8791316      7.88725    0.9202413 -0.014659649  -0.06969507   0.03877158    5.4003307    5.4165287   -0.5655697   0.42677107   -0.2664214    1.0658174        0.075    1.2622994          0.5   0.11842416    4.2221116    2.8226957    30.801768 -0.0065513034  -0.33120467 -0.045943878    0.4850545 -0.050506907    3.0528008 
  652000    10.726085    1.2582215    9.4678636  -0.34143327   0.83900065   0.99375349   0.73631424   -3.5502959            3    5.8987581    8.1605419    8.1060949    1.4296376 0.0073191652   0.10643729    0.1052459    5.7372205    5.7536558            0            0 0.0023984973    1.0575882        0.075    1.2573613          0.5   0.11750979    4.2549645    2.7965413    30.801768 -0.039703359  -0.38235949 0.0041078902    0.3711325  -0.63638881    2.5015271 
  653000    10.781341    1.2707219    9.5106192  -0.31320286   0.84733603    1.0134403   0.73709772   -3.5502959            3    5.6620623    8.0255487    7.9904773   0.97016086  0.031490139  0.053519904   0.10692612    5.5003528    5.5140855  0.092383008   0.58487567 0.0073156849    1.0527352        0.075    1.2562065          0.5   0.11697058    4.2745792    2.8121804    30.801768  0.024781304  -0.34421018 -0.0083088118   0.31848745    1.1378782   0.79879798 
  654000    10.779754    1.2683697    9.5113839  -0.33491377   0.84576756   0.98792638    0.7514657   -3.5502959            3    5.5696518    7.8775309    7.9252393   0.90618515   0.03623604  0.016213118 0.0074317141    5.4047902    5.4254004            0            0 -0.0043898342    1.0675949        0.075    1.2495087          0.5   0.11862165    4.2150821    2.8189913    30.801768 -0.010334717  -0.30470823 -0.0043441299   0.33829541    1.5258373    0.9889194 
  655000    10.717554    1.2703004    9.4472538  -0.35367599   0.84705501   0.98946469   0.75258665   -3.5502959            3    5.5900977     7.891847    7.9137546   0.96469157  0.029353408   -0.1329589   0.01204655    5.4249902    5.4456217   0.37587079   0.54465835 0.0049872792    1.0655724        0.075     1.260487          0.5   0.11839693    4.2230823    2.8045745    30.801768 -0.034865381  -0.36195412     0.016087   0.36129036   0.27223826  -0.17806367 
  656000    10.804409    1.3056264     9.498783   -0.3440301   0.87061087     1.034123   0.76210632   -3.5502959            3    5.5903787    7.9162861    7.9045513   0.95029873 0.0030358869 -0.060260534  0.073291959    5.4231827    5.4393819            0            0 -0.013503205    1.0624495        0.075    1.2580295          0.5   0.11804994    4.2354954    2.7932694    30.801768 -0.0068197889  -0.37927036 -0.00069848174   0.39040035    3.0757705    3.4077298 
  657000    10.738587    1.2611146     9.477472  -0.35036619   0.84092974    1.0351909   0.71194901   -3.5502959            3    5.7737378    8.0350836    8.0984213    1.1877087  0.013909947  -0.04424179 -0.078407661    5.6175457    5.6225851  -0.16220538   0.69517786 -0.024292071    1.0760011        0.075    1.2530053          0.5   0.11955567     4.182152    2.8087489    30.801768 -0.019306387   -0.3845983 -0.00054399655   0.41323566   -1.7921696    4.2049958 
  658000    10.748099    1.2757628    9.4723358  -0.33247973   0.85069739    1.0103897   0.74472779   -3.5502959            3    5.5836074    7.9335354    7.8841592   0.93312754  0.024838139  0.050101424  0.029167243     5.420224     5.436076            0            0  -0.25134253    1.0768632        0.075    1.2420992          0.5   0.11965147    4.1788036    2.8157312    30.801768 -0.011768894  -0.36757088 0.0040443767     0.426734  -0.73437106    2.9598462 
  659000    10.748317    1.2544215    9.4938952  -0.33874062    0.8364667    1.0065117   0.72360155   -3.5502959            3    5.4973703    7.7890196    7.8593178   0.84377353  -0.05924656 -0.020084836 0.0034618126    5.3386217    5.3504052  -0.09449872    1.2372186  0.047631329    1.0564258        0.075    1.2354837          0.5   0.11738065    4.2596459    2.8021976    30.801768 0.0022196085  -0.36586919 -0.007332207   0.34061921 -0.040177814    3.8110915 
  660000    10.811265    1.2824201    9.5288452  -0.33072137   0.85513661   0.99865321   0.75993453   -3.5502959            3    5.6155342    7.9690472    7.8809925   0.99656307  -0.01655767 -0.016094032  0.049104243    5.4488147    5.4697165            0            0  0.056577386    1.0644632        0.075    1.2439085          0.5   0.11827369     4.227483    2.8189726    30.801768 -0.0066923655   -0.3671469 -0.022813952   0.37059823    1.1867492    8.8387041 
  661000    10.774664    1.2694194    9.5052445  -0.33212304   0.84646753   0.97994434    0.7579443   -3.5502959            3     5.661544    7.9544416    7.9918595    1.0383309 0.0033436502  0.077568976 -0.047920784    5.4952611    5.5184581            0            0 0.0030286071    1.0643891        0.075    1.2371149          0.5   0.11826545    4.2277774    2.8227374    30.801768  0.015300307  -0.38924617 -0.022885415   0.31639862   -2.9658327    4.1850962 
  662000    10.787984    1.2848562     9.503128  -0.30674091     0.856761    1.0074948   0.75675609   -3.5502959            3     5.555378     7.938076     7.868258   0.85979989 -0.0041080809  -0.02347146   0.19892774    5.3893557    5.4082693   0.85686078    1.0470029    0.1683786     1.066061        0.075    1.2320039          0.5   0.11845122    4.2211467    2.8236517    30.801768 -0.015513912  -0.39246787 0.0079594712   0.34472962   -2.0768458    3.4905887 
  663000     10.80441    1.3102028    9.4942069  -0.35298682   0.87366251    1.0134407   0.78095541   -3.5502959            3    5.4302467    7.7342236    7.8211963    0.7353202  0.027170693 -0.044889087  -0.10112254    5.2589154    5.2822698   0.17373501     1.937603  -0.23553264    1.0661743        0.075    1.2351001          0.5   0.11846381    4.2206983    2.8185665    30.801768 -0.0079537581  -0.40613382 0.0067847101   0.41488364     1.596431   -4.7072275 
  664000    10.746384    1.2689896    9.4773945  -0.33119784   0.84618094   0.97722275   0.75927823   -3.5502959            3    5.6045582    7.9529493    7.9549777   0.90574745  0.024145216 -0.052873796 -0.058128459    5.4379826    5.4618696    0.1747581    1.0752346  -0.25408273    1.0510338        0.075    1.2256511          0.5   0.11678153     4.281499    2.7861661    30.801768 -0.010536389  -0.36132739 0.0078791284   0.36378933    1.8891123    2.7880312 
  665000    10.760752    1.2756704    9.4850814   -0.3326864   0.85063577   0.99123662   0.75737261   -3.5502959            3     5.629174    7.9859801    7.9541561   0.94738566  0.013832794 -0.051320138 -0.033847798    5.4630164    5.4844392  -0.13253389   0.58533662 -0.086330759    1.0655189        0.075    1.2260956          0.5   0.11839098    4.2232946    2.8006171    30.801768 -0.0073729968  -0.37367894   0.03340775   0.36478012   -2.0563164    3.0070266 
  666000    10.836596    1.3137878    9.5228078  -0.33003487   0.87605301    1.0318495   0.77268573   -3.5502959            3    5.5492253    7.8627718    7.8577484   0.92715563 -0.014979816 -0.017416184   0.10374156    5.3797083    5.3985605            0            0 -0.011415498    1.0505187        0.075    1.2300578          0.5    0.1167243    4.2835981    2.8146136    30.801768  0.015661301  -0.35507308  0.010756316   0.37056306     1.243444   0.77380314 
  667000    10.786359    1.2712782    9.5150808  -0.34039513   0.84770704    1.0058696   0.74275449   -3.5502959            3    5.5786482    7.8699888    7.8942074   0.97174836 -0.047161179  -0.13228419  0.020411303    5.4156977    5.4317768   0.45024498   0.35077932   0.43134283    1.0643347        0.075    1.2283753          0.5   0.11825941    4.2279933    2.7792863    30.801768 -0.012162532  -0.42899705 -0.025543219   0.33437036  -0.50663149    3.2051168 
  668000    10.712466     1.241168    9.4712985  -0.33113575   0.82762908   0.98863257    0.7207783   -3.5502959            3    5.7793435     8.067982    8.0287216    1.2413268   0.01672589 -0.054599364  0.017011248    5.6212143    5.6349889    1.5055967    1.2433072  0.040968172    1.0639741        0.075     1.235232          0.5   0.11821934    4.2294264    2.8083939    30.801768 -0.0098906555  -0.38609212 0.0069878226   0.34306533   -2.9873187      3.93042 
  669000     10.74605    1.2576451    9.4884053  -0.33637898   0.83861623   0.99354072   0.73581544   -3.5502959            3    5.6950963    8.0127898    7.9757147    1.0967844  0.014868035   0.17044577   0.12228294    5.5336681    5.5500251  -0.62168857    1.5554537 -0.030599118    1.0925027        0.075    1.2396047          0.5   0.12138919    4.1189829    2.8307235    30.801768 0.0074680365  -0.37576609 -0.016342303   0.41978336   -0.6991267    4.9715274 
  670000     10.76917    1.2530839    9.5160863  -0.33472301   0.83557477   0.98466062    0.7366588   -3.5502959            3    5.6581963    7.9835996    7.9477481    1.0432411 -0.030811773 -0.054850032 -0.070671577    5.4965831    5.5144217  -0.64217531    1.8434999 5.0457552e-05    1.0543274        0.075    1.2454203          0.5   0.11714749     4.268124    2.8146591    30.801768 -0.0082953452  -0.33999423 0.0038102114   0.33345316    0.9279567    5.2145123 
  671000    10.774117    1.2513788    9.5227385   -0.3117387   0.83443783    0.9832749   0.73568702   -3.5502959            3    5.5912815    7.8562933    7.9586055   0.95894564 -0.0021266304  0.028309108  0.020193185    5.4298815    5.4477092  -0.51552093   0.75405623  -0.05840565    1.0603487        0.075    1.2394981          0.5   0.11781652     4.243887    2.8324864    30.801768  0.017788747  -0.41761148 0.0069954341   0.34065516   -1.4255996  0.098921971 
  672000     10.78076    1.2714317    9.5093279   -0.2986009   0.84780938   0.97647465   0.76248899   -3.5502959            3    5.4995772    7.8288109    7.9167335   0.75318725 -0.018409797  -0.02449085 -0.049794028    5.3322972    5.3569979  -0.10580885    1.5111656 -0.070391169    1.0637445        0.075    1.2491396          0.5   0.11819384     4.230339    2.7922768    30.801768 0.0068107562   -0.4261005 -0.012934908    0.3362697   -3.5213358    1.0786602 
  673000    10.799238    1.3143271    9.4849105  -0.33024114   0.87641267    1.0281943   0.77571762   -3.5502959            3    5.4327721    7.7831702    7.8808315   0.63431471 -0.025123489   0.13557051  0.048595555      5.26259     5.282641   0.98298302    1.4030347  0.016576589    1.0552945        0.075    1.2646792          0.5   0.11725495    4.2642123    2.8064741    30.801768 0.0052327776  -0.40138703  0.019089932   0.34484618  -0.64162756   0.79857431 
  674000    10.797775     1.278955      9.51882  -0.30683905   0.85282603    1.0236614   0.73944089   -3.5502959            3      5.52128    7.9114977    7.8192374   0.83310502 0.0056388421 -0.037473941 -0.077525421    5.3590565    5.3718108            0            0  0.074497898    1.0533691        0.075    1.2524256          0.5   0.11704101    4.2720067     2.796341    30.801768  -0.02942006   -0.3473973 -0.010470533   0.39604098   0.93397168  -0.36183503 
  675000    10.827717    1.2760017    9.5517148  -0.31514465   0.85085669    1.0031294   0.74982532   -3.5502959            3    5.6721983    7.9516365    7.9294378    1.1355207 -0.0019813795  0.098972711 -0.053978377    5.5076966    5.5257271  -0.47389242   0.49453101  -0.11900248    1.0732111        0.075    1.2591819          0.5   0.11924568    4.1930241    2.8297143    30.801768 -0.0018560721  -0.38814942  0.010920475   0.33829717    1.7061849    2.2744523 
  676000    10.725025    1.2386511    9.4863735  -0.33070167   0.82595078    0.9719524   0.72908397   -3.5502959            3    5.6264513    7.9503958    7.9320148   0.99694333 -0.011657731   0.22532509  0.019679068    5.4664999    5.4845323   0.50486849      1.29053  0.062245464    1.0610792        0.075    1.2597947          0.5   0.11789769    4.2409652    2.7880273    30.801768 0.0022780985  -0.32323638    0.0340549   0.37890261   -0.1182415    1.3396544 
  677000    10.747832    1.2561609    9.4916713  -0.32194293   0.83762654    0.9722914   0.74830932   -3.5502959            3    5.7372326    8.0311975    8.0388996    1.1416008  0.015011012  -0.11855517  -0.08025364    5.5730635    5.5952642            0            0    0.3464179    1.0679171        0.075    1.2577801          0.5   0.11865745    4.2138103    2.8021987    30.801768 -0.022528355  -0.40338849 0.0061203772   0.41722758   0.55891076    5.0384102 
  678000    10.791131    1.2787549     9.512376  -0.32452983    0.8526926    1.0229539   0.73968951   -3.5502959            3    5.6357448    7.9081446     7.996434    1.0026557 -0.012081128   0.01652052 0.0084003237    5.4734667    5.4863788   0.42883722    0.2389521 -0.062491852     1.058111        0.075    1.2469085          0.5   0.11756789    4.2528619     2.779352    30.801768 0.0045962932  -0.44364871 -0.026683265   0.35179668    1.8366042    2.8149071 
  679000    10.786051    1.2919677    9.4940836  -0.33624542   0.86150306    1.0389117   0.74374628   -3.5502959            3    5.6503889    7.9358992    7.9616674    1.0536002 -0.039518518 -0.0041091643 -0.086797354    5.4872209    5.4986929  -0.57586624   0.30177716 -0.035385273    1.0605535        0.075     1.242339          0.5   0.11783928    4.2430673    2.7893995    30.801768 -0.0042835867  -0.38656125 0.0008968607   0.37635603   -1.8921204    3.8156295 
  680000    10.774456    1.2539902    9.5204662  -0.33625839   0.83617914   0.98711152   0.73603442   -3.5502959            3     5.708275    8.0082293    7.9846298    1.1319659 -0.051992806  0.095240337 -0.0018296701    5.5467988    5.5641426            0            0  -0.11405736    1.0643813        0.075    1.2514281          0.5   0.11826459    4.2278083    2.8176614    30.801768 -0.0053758076  -0.36107563 -0.030399275   0.31657767   0.25122513    9.2637473 
  681000    10.750964    1.2768962    9.4740681  -0.32307967   0.85145319    1.0083273   0.74735954   -3.5502959            3    5.6417062    7.9348666    7.9995925   0.99065962 0.0038456881  0.058285925  0.049021564    5.4777455     5.494476  -0.77913096    1.0240347 0.0070446836    1.0677965        0.075    1.2515121          0.5   0.11864406    4.2142862    2.8066341    30.801768 -0.012651945   -0.4500816 0.0040481964   0.38676891   0.60707874   0.47988292 
  682000    10.789966    1.2743687    9.5155974  -0.31447969   0.84976782    1.0128597   0.74153531   -3.5502959            3    5.6913198    8.0187573    7.9379172     1.117285 -0.027727855   0.10404808 -0.080821728    5.5286368    5.5434278 0.0013128392   0.66008558  -0.51518754    1.0440693        0.075    1.2560439          0.5    0.1160077    4.3100588    2.7766952    30.801768  0.021044446  -0.32995316 -0.012376592   0.30601414   -1.7100411    4.6242318 
  683000    10.760697    1.2755095    9.4851875   -0.3309588    0.8505285   0.97101329    0.7706537   -3.5502959            3    5.6162165    7.8888938    7.9313694    1.0283863 -0.013906208  0.066727963  0.053108981    5.4471453    5.4744347            0            0  -0.16866078    1.0689384        0.075    1.2431947          0.5   0.11877093    4.2097844    2.7869353    30.801768 -0.011318559  -0.44572811 -0.013336725   0.33885299   0.22728348   -1.4549355 
  684000    10.752092    1.2673145    9.4847771  -0.32864154   0.84506396    1.0305172   0.72194695   -3.5502959            3    5.5675264    7.8998152    7.8903904   0.91237361  0.018218907  0.076169703 -0.062358796    5.4091408    5.4170561   -0.2619453   0.57927721  -0.71477046    1.0626149        0.075    1.2435159          0.5   0.11806832    4.2348364      2.80609    30.801768 0.0038048526  -0.35509132 -0.011186005   0.36969913    2.3841425    2.5082088 
  685000    10.786276    1.2898686    9.4964075   -0.3337171   0.86010338    1.0017727   0.76613258   -3.5502959            3    5.5546968    7.9049456    7.8604425   0.89870239  0.029876347   0.21056941  0.042746899    5.3866175    5.4084236  -0.24912251    3.2682169  -0.18115164    1.0656326        0.075    1.2342447          0.5   0.11840362    4.2228439     2.844655    30.801768 -0.0057695673  -0.41084813 0.0069407972   0.28787162  -0.91520796 -0.046805389 
  686000    10.778986    1.2913906    9.4875957  -0.33326091   0.86111827    1.0320941    0.7476427   -3.5502959            3     5.634151    8.0257621    7.9234331   0.95325774 -0.053908089   0.13836294  0.088185162    5.4701281    5.4834504 -0.013928466    1.0548339 -0.096858286    1.0758895        0.075    1.2259709          0.5   0.11954327    4.1825858    2.7962794    30.801768 0.0015011404  -0.39772589 -0.011638436   0.44811192   -1.6230586    4.4118736 
  687000    10.758819    1.2646508     9.494168  -0.33701343   0.84328778    1.0087859   0.73345136   -3.5502959            3    5.7261959    7.9982414    8.0540887    1.1262577  0.030620856  -0.15436689 -0.017795948    5.5652864    5.5788987            0            0  0.010722407    1.0750685        0.075    1.2367222          0.5   0.11945206    4.1857797    2.8201107    30.801768  0.020036415  -0.37040943 -0.015376698   0.37925686    1.6066279    2.7657524 
  688000    10.805659     1.280592    9.5250671  -0.31084213   0.85391756   0.98243549    0.7686975   -3.5502959            3    5.6543417    8.0167883    8.0029494   0.94328742 -0.0066584881 0.0072403735 -0.046858098    5.4856997     5.510892 -0.049093018    1.4335729  -0.19602486    1.0719974        0.075    1.2338266          0.5   0.11911082    4.1977713    2.8286527    30.801768 -0.0053028918  -0.36648474 -0.0058600563   0.39864901  -0.74140878    2.1801517 
  689000    10.790851    1.2909082    9.4999431  -0.33275234   0.86079659    1.0149336   0.75852814   -3.5502959            3    5.6048712    7.9185887     7.907134   0.98889089  0.034136922  0.074762472 -0.030664115    5.4384602    5.4566763            0            0 -0.084264805    1.0498644        0.075     1.224989          0.5    0.1166516    4.2862678    2.7997974    30.801768 -0.011411213  -0.40929477 -0.018263091   0.34874761  -0.66400428    2.9782849 
  690000    10.707926    1.2447623    9.4631641  -0.32884594   0.83002583   0.98740919   0.72558534   -3.5502959            3    5.5480734    7.9204983    7.8715344   0.85218738 -0.012648706  -0.19180149 -0.030896723    5.3888896    5.4038975   0.24725456   0.69633169 0.0019149569    1.0572526        0.075    1.2357905          0.5   0.11747251    4.2563149    2.8104846    30.801768  0.010899357  -0.29662636 -0.00010088925   0.36764281 -0.069780825    6.9315558 
  691000    10.787174    1.3017556    9.4854188  -0.33426256   0.86802979    1.0322918   0.75902524   -3.5502959            3    5.5420906    7.9183354    7.8960552   0.81188109 -0.0043343657  0.098195252 -0.049526663    5.3755705    5.3913612   -1.4522281    2.0733115  -0.20810696    1.0713415        0.075    1.2420129          0.5   0.11903795    4.2003413    2.8314695    30.801768 -0.005361646  -0.36614284 -0.0029723354   0.41107865  -0.98093824    5.8687379 
  692000    10.785203    1.2906689    9.4945341  -0.33272958   0.86063699    1.0025916   0.76647655   -3.5502959            3    5.7441319    7.9936712     8.010897    1.2278276  0.051954834 -0.013803433 -0.061438421    5.5759771    5.5977392    0.4820494   0.90102557  0.022426184    1.0670406        0.075    1.2405227          0.5   0.11856007    4.2172716    2.7834364    30.801768 0.0092138603  -0.44891618  0.014785716   0.40363642    3.0359358    6.1025315 
  693000    10.751558    1.2718288    9.4797295  -0.33374454   0.84807415    1.0033198   0.74506307   -3.5502959            3    5.5405018    7.9112976    7.8721624   0.83804534 -0.0045587782  0.021633946  0.052677339    5.3770448    5.3940027    1.3897244    2.6061396   0.17824081    1.0623772        0.075    1.2226018          0.5   0.11804191    4.2357838    2.7958114    30.801768 -0.026485084   -0.4113936 0.0040764247   0.32463475    1.1505233    4.2397928 
  694000     10.74129    1.2547701    9.4865196  -0.32952901   0.83669918   0.97744824   0.74333222   -3.5502959            3    5.7157803    8.0549515    7.9556477    1.1367417 -0.010630966   0.11636344 -0.0062369645     5.552703    5.5730588            0            0 -0.023129949    1.0600136        0.075    1.2312578          0.5   0.11777929    4.2452284    2.7783102    30.801768  0.013714662  -0.40470277  0.008755392   0.34423371   -2.2306098    7.4042058 
  695000    10.730574    1.2556334    9.4749403  -0.31567965   0.83727486   0.97754545   0.74422657   -3.5502959            3    5.7088541    8.0550547    8.0413692    1.0301385  0.025209147   0.16519807  -0.15411299    5.5455807    5.5661185   0.54028362   0.22027413 -0.063806759    1.0599928        0.075    1.2305821          0.5   0.11777698    4.2453119    2.8038262    30.801768 0.0015232518  -0.29760376 -0.0016611081   0.38101109   -1.3757665    4.3363249 
  696000    10.779725     1.254318    9.5254066  -0.32483865   0.83639768   0.94445356   0.76478978   -3.5502959            3    5.4154944    7.7968695    7.7462486   0.70336504 -0.021870177 -0.019314001 -0.0022356588    5.2477096    5.2775906  -0.34106085    2.9982449  -0.10518517    1.0471095        0.075    1.2302004          0.5    0.1163455     4.297545    2.7896114    30.801768  0.033736341  -0.42324468 0.0048142376   0.27181456 -0.066185712   -1.0974932 
  697000    10.723668    1.2439421     9.479726   -0.3422409    0.8294789   0.96633019   0.73870346   -3.5502959            3    5.5787821    7.8721916     7.842076    1.0220785 0.0045278876  0.064726715 -0.079441018    5.4167203     5.437684  -0.34259302    1.3543266   0.34218589    1.0545541        0.075    1.2427968          0.5   0.11717268    4.2672063    2.8094949    30.801768 -0.0010726762  -0.38820066 0.0097154624   0.34914749    2.1332031    5.6205653 
  698000    10.739081    1.2761242    9.4629564  -0.35012884   0.85093839    0.9632924   0.77647522   -3.5502959            3    5.6529642    7.9767413    8.0009422   0.98120901  0.013632696 -0.092436394 -0.052060081    5.4826158    5.5123097            0            0 -0.00029088574    1.0795917        0.075    1.2378526          0.5   0.11995463    4.1682426    2.8019166    30.801768 -0.0077413942  -0.36099049  0.016841809   0.41387102   -2.6019261    4.9599507 
  699000     10.82225    1.2861023    9.5361476   -0.3043434   0.85759196    1.0326524   0.74139657   -3.5502959            3    5.8673281    8.0993162    8.0657145    1.4369536 -0.0023287241   0.15320951  0.095397241    5.7046755     5.716546   0.59820852     1.649168  -0.05661972    1.0654285        0.075    1.2361376          0.5   0.11838094    4.2236528    2.8386608    30.801768  0.042308788  -0.38276797  0.028752743   0.43406896   -2.2422933    6.5806631 
  700000    10.745796    1.2699251    9.4758706  -0.33570493   0.84680474   0.99213369   0.75039336   -3.5502959            3    5.5264666     7.918328    7.9172523   0.74381961  0.014105655  -0.04392406 -0.042027194    5.3618403    5.3816009    0.6453427    1.2649303 -0.048853006    1.0636746        0.075    1.2233971          0.5   0.11818606    4.2306173    2.7859231    30.801768  0.016178667  -0.34550695 -0.002847966   0.32274116  -0.45500869     2.752284 
Loop time of 311.98 on 1 procs for 400000 steps with 4504 atoms

Performance: 553880.789 tau/day, 1282.131 timesteps/s
98.9% CPU use with 1 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 39.927     | 39.927     | 39.927     |   0.0 | 12.80
Bond    | 68.583     | 68.583     | 68.583     |   0.0 | 21.98
Neigh   | 94.82      | 94.82      | 94.82      |   0.0 | 30.39
Comm    | 6.2856     | 6.2856     | 6.2856     |   0.0 |  2.01
Output  | 0.83545    | 0.83545    | 0.83545    |   0.0 |  0.27
Modify  | 95.846     | 95.846     | 95.846     |   0.0 | 30.72
Other   |            | 5.684      |            |       |  1.82

Nlocal:    4504 ave 4504 max 4504 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    1381 ave 1381 max 1381 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    10450 ave 10450 max 10450 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 10450
Ave neighs/atom = 2.32016
Ave special neighs/atom = 6.98401
Neighbor list builds = 49941
Dangerous builds = 0
#undump      comp

unfix abeads_cdz
unfix bbeads_cdz
unfix tbeads_cdz

###############
# Shearing    #
###############

#--- Keep only thermostat on walls ---#
unfix lang_melt

#variable    vtop equal (v_Wall_v/2)
#variable    vbot equal -(v_Wall_v/2)
velocity    twout set $(v_Wall_v/2) 0.0 0.0  units box
velocity    twout set 0.25 0.0 0.0  units box
velocity    bwout set -$(v_Wall_v/2) 0.0 0.0  units box
velocity    bwout set -0.25 0.0 0.0  units box


#--- Number Density profiles ---#

compute         sabeads abeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         sabeads abeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             abeads_sdz abeads  ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} sabeads density/number file abeads_sdz
fix             abeads_sdz abeads  ave/chunk 100 ${Nrepeats} ${Nfreqs} sabeads density/number file abeads_sdz
fix             abeads_sdz abeads  ave/chunk 100 1000 ${Nfreqs} sabeads density/number file abeads_sdz
fix             abeads_sdz abeads  ave/chunk 100 1000 100000 sabeads density/number file abeads_sdz
compute         sbbeads bbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         sbbeads bbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             bbeads_sdz bbeads  ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} sbbeads density/number file bbeads_sdz
fix             bbeads_sdz bbeads  ave/chunk 100 ${Nrepeats} ${Nfreqs} sbbeads density/number file bbeads_sdz
fix             bbeads_sdz bbeads  ave/chunk 100 1000 ${Nfreqs} sbbeads density/number file bbeads_sdz
fix             bbeads_sdz bbeads  ave/chunk 100 1000 100000 sbbeads density/number file bbeads_sdz
compute         stbeads tbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         stbeads tbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             tbeads_sdz tbeads  ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} stbeads density/number file tbeads_sdz
fix             tbeads_sdz tbeads  ave/chunk 100 ${Nrepeats} ${Nfreqs} stbeads density/number file tbeads_sdz
fix             tbeads_sdz tbeads  ave/chunk 100 1000 ${Nfreqs} stbeads density/number file tbeads_sdz
fix             tbeads_sdz tbeads  ave/chunk 100 1000 100000 stbeads density/number file tbeads_sdz

#--- Temperature and Velocity profiles ---#
compute        eall all chunk/atom bin/1d z lower ${binres} units reduced
compute        eall all chunk/atom bin/1d z lower 0.001 units reduced
#compute        biasT all temp/profile 1 1 1 xyz 100 100 100
fix            temp_prof   all ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} eall temp file temp_sz
fix            temp_prof   all ave/chunk 100 ${Nrepeats} ${Nfreqs} eall temp file temp_sz
fix            temp_prof   all ave/chunk 100 1000 ${Nfreqs} eall temp file temp_sz
fix            temp_prof   all ave/chunk 100 1000 100000 eall temp file temp_sz
#fix            temp_bias   all ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} eall temp bias biasT file tempb_sz
fix            vel_prof_x_s all ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} eall vx vy file velp_sz
fix            vel_prof_x_s all ave/chunk 100 ${Nrepeats} ${Nfreqs} eall vx vy file velp_sz
fix            vel_prof_x_s all ave/chunk 100 1000 ${Nfreqs} eall vx vy file velp_sz
fix            vel_prof_x_s all ave/chunk 100 1000 100000 eall vx vy file velp_sz
#--- Ave s_bot and p_bot ---#

fix             fc_ave all ave/time ${Neverys} ${Nrepeats} ${Nfreqs} v_sbot v_pbot file fc_ave.dump
fix             fc_ave all ave/time 100 ${Nrepeats} ${Nfreqs} v_sbot v_pbot file fc_ave.dump
fix             fc_ave all ave/time 100 1000 ${Nfreqs} v_sbot v_pbot file fc_ave.dump
fix             fc_ave all ave/time 100 1000 100000 v_sbot v_pbot file fc_ave.dump

#--- Dumps ---#
#dump           shear all image ${Ndump_s} stg3.*.jpg type type zoom 2 view 60 120 bond none none

#--- Run Shear ---#
timestep    ${Tstep}
timestep    0.005
run         ${Nshear}
run         1000000
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
WARNING: Inconsistent image flags (src/domain.cpp:784)
Per MPI rank memory allocation (min/avg/max) = 10.43 | 10.43 | 10.43 Mbytes
Step TotEng KinEng PotEng E_pair Temp c_melTemp c_wallTemp v_Fcatom v_Pcomp2 Press Pxx Pyy Pzz Pxy Pxz Pyz c_melPress c_wallPress c_mopzc[1] c_mopzc[3] c_mopxc[3] v_melDens v_surfcov v_aveRg v_Wall_v2 v_srate v_D v_bwzmax Zhi c_fbwall[1] c_fbwall[3] c_ftwall[1] c_ftwall[3] v_sbot v_pbot 
  700000    10.754171    1.2783007    9.4758706  -0.33570493   0.85238971   0.99213369    0.7596975   -3.5502959            3    5.5285078    7.9251864    7.9172523   0.74308485  0.014105655  -0.04392406 -0.042027194    5.3618403    5.3836421   0.69547563    2.0169154 -0.048853006    1.0636746        0.075    1.2233971          0.5   0.11818606    4.2306173    2.7859231    30.801768  0.016178667  -0.34550695 -0.002847966   0.32274116  -0.45500869     2.752284 
  701000    10.831528    1.3434918    9.4880361   -0.3363402    0.8958601    1.0138237   0.81768002   -3.5502959            3     5.572355    7.9085058    7.8349166    0.9736425  0.025522225   0.41289223  0.021943699    5.3929668    5.4243222  0.023734062    2.3730455 -0.067931738    1.0584444        0.075    1.2569012          0.5   0.11760493    4.2515223    2.8121024    30.801768 -0.018585215  -0.40459323 -0.036091382   0.42739859   -5.2504318    5.2998489 
  702000    10.880491     1.338339    9.5421523  -0.31277794   0.89242411    1.0114351    0.8135457   -3.5502959            3    5.7297449     8.067191    8.0262342    1.0958094 -0.025799289  -0.21586779  0.024391113    5.5512637    5.5820609   0.33909257   0.75270255   0.12566048    1.0344345        0.075    1.2594195          0.5   0.11493717    4.3502029    2.7948592    30.801768 -0.0059898867  -0.33130089 -0.027445999   0.37895045    2.1048387    2.3688213 
  703000    10.922907     1.388552    9.5343547  -0.33567036   0.92590688    1.0931356   0.81494925   -3.5502959            3    5.6303746    7.9111252    7.9510776     1.028921  0.035707261  -0.31913574  0.018077097    5.4515855    5.4707611            0            0 -0.065311798    1.0304681        0.075    1.2857715          0.5   0.11449645    4.3669476    2.7965838    30.801768  0.020873222  -0.34502894 -0.026871212   0.31577708    2.1592486  -0.80429004 
  704000    10.971252    1.3939072    9.5773445  -0.30334196   0.92947786    1.1067948   0.81180722   -3.5502959            3    5.6947001    7.9410436    8.0391503    1.1039064  0.011797589  -0.02110991   -0.1129415    5.5166004    5.5330922    1.5457279    1.0374012  -0.22609337    1.0146104        0.075    1.3350098          0.5   0.11273449    4.4351999    2.8078337    30.801768  0.021349731  -0.25739729 -0.0075590049   0.34907124   0.29923132    5.1817625 
  705000    11.028737    1.4276183    9.6011186  -0.31884081   0.95195691    1.1804483   0.80023508   -3.5502959            3    5.6476719     7.872666    7.9330465    1.1373033 -0.0058680517   -0.2814453 -0.041310537    5.4721109    5.4753095  -0.40350282   0.62191389   0.15552706    0.9944891        0.075    1.4337461          0.5   0.11049879    4.5249365    2.7721838    30.801768  0.012873741  -0.33104739 -0.0035911311   0.36265501    -2.463452    6.6355892 
  706000    11.065193     1.460213    9.6049795  -0.31140535   0.97369154    1.1901239   0.83000377   -3.5502959            3    5.7587386     7.977099     8.009394    1.2897227 -0.024691113  0.018238043   0.17921999    5.5766467    5.5849634    1.2845904    1.5195497   0.06109251    1.0200161        0.075    1.5370737          0.5   0.11333512     4.411695    2.8097766    30.801768 -0.011108101  -0.47576944 -0.0046184357   0.35760766   0.59841865    3.2831252 
  707000    11.105195    1.4613619    9.6438328  -0.29330477   0.97445761    1.2366898   0.80028771   -3.5502959            3    5.5634295    7.7947445    7.8811384    1.0144054  0.011739438   -0.1468301  0.025389147    5.3878569     5.382855  -0.22278476    2.1045975  -0.42060057    1.0016639        0.075    1.6494875          0.5   0.11129599     4.492525    2.8152253    30.801768 -0.019628334  -0.41663795 0.0082168731   0.39375199   -1.2071963   -0.5112293 
  708000     11.07978    1.4830757     9.596704  -0.30626591   0.98893668    1.2931387   0.78683879   -3.5502959            3     5.475191     7.764294    7.8532991   0.80797995 -0.00038577331  -0.20906056  0.061096413     5.302569    5.2863742            0            0 -0.047630442    1.0093273        0.075    1.7036712          0.5   0.11214747    4.4584152    2.8315859    30.801768 0.0042880054  -0.43269775 -0.0029050505   0.35498021    3.3692365    3.8312253 
  709000    11.141046    1.4856654    9.6553808  -0.29481163   0.99066353    1.2625973   0.81004266   -3.5502959            3    5.6392367    7.9102919    7.9002537    1.1071644  0.022927353  -0.11376032 -0.088284691     5.461524    5.4548793   -1.6350602    1.4501214  0.074803907   0.98592299        0.075    1.7416499          0.5     0.109547     4.564251    2.8003545    30.801768  0.041276027   -0.3634595 -0.011765378   0.40475666  -0.62642904     5.580055 
  710000    11.128118    1.4798558    9.6482623  -0.29847778   0.98678962    1.2610389    0.8046262   -3.5502959            3    5.7702188    7.9438682    8.0681902     1.298598 -0.0013101263 -0.060376488   0.10295231    5.5936945     5.586089            0            0  0.084063426    1.0025469        0.075    1.8187685          0.5   0.11139409    4.4885683    2.8406637    30.801768 -0.011839243  -0.38411841 -0.0093928838   0.42364513    2.8025612    5.2973296 
  711000    11.142675     1.473018    9.6696575  -0.27819594   0.98223008     1.283738   0.78192281   -3.5502959            3    5.5050411     7.785267    7.8522925   0.87756361 -0.015086828 -0.016432134 -0.006706247    5.3334975    5.3175969            0            0   0.16946761   0.99354047        0.075    1.8944673          0.5   0.11039339    4.5292569    2.7969977    30.801768 -0.018438946  -0.31777655 0.0041414233   0.38512941  -0.44458992    1.8596222 
  712000    11.154706    1.5136841    9.6410214  -0.29849815    1.0093468    1.2956671   0.81915789   -3.5502959            3    5.6263201    7.8895699    7.9444547    1.0449358  0.019431385 -0.083320484 -0.020165349    5.4466078    5.4371342   -0.1190056   0.98183746  -0.31903631   0.99973177        0.075    1.9050989          0.5   0.11108131    4.5012074    2.8005608    30.801768  0.052534307   -0.3491011  0.014463932   0.36384825  -0.81971787     4.606227 
  713000    11.124076    1.4916563    9.6324197  -0.29369477   0.99465835    1.3091653   0.78570408   -3.5502959            3    5.5775229    7.7802893    7.9039076    1.0483718  0.012874398  -0.36844834  0.028949846    5.4051498     5.386366   0.77257257    2.4176907  0.070679125   0.99855862        0.075    1.9497878          0.5   0.11095096    4.5064956    2.7848025    30.801768  0.014915585  -0.38043763 -0.029046238    0.4173676    4.7926011    7.1160288 
  714000    11.138612    1.4870061    9.6516059  -0.27718426   0.99155754    1.3022073   0.78516935   -3.5502959            3    5.5377266    7.8043659    7.9044166   0.90439724 -0.0083368574 -0.025240172 -0.057731782    5.3654709    5.3475857 -0.099257799    3.9434271 -0.069115508    1.0083438        0.075    1.9405087          0.5   0.11203819    4.4627638    2.8100468    30.801768  0.016050855  -0.34114138 -0.0035773949   0.32681711    1.7094745     3.081096 
  715000    11.160327    1.5138485    9.6464786  -0.29054606    1.0094564     1.287653    0.8246743   -3.5502959            3    5.4758572    7.7810984    7.8238768   0.82259643 -0.018055728  -0.16419031 -0.068906633    5.2949346    5.2878414  -0.64821211   0.79212547 -0.053886261    1.0024914        0.075    1.9838088          0.5   0.11138793    4.4888167    2.8097156    30.801768  0.028338162  -0.37072131 -0.014685997   0.38281072    1.2106841    1.1836129 
  716000    11.131806    1.5130866    9.6187191  -0.29494072    1.0089484    1.3300465   0.79561264   -3.5502959            3    5.4621524    7.6670916     7.877964   0.84140143 -0.010266519  -0.16521943  0.077821948    5.2876055    5.2679465   0.45949673   0.84287502   0.40689737    1.0160343        0.075    2.0066463          0.5    0.1128927    4.4289841    2.7986644    30.801768  0.021516324  -0.39510353 -0.020107309   0.45405049    1.4098696    2.5249013 
  717000    11.113024    1.4790299    9.6339945  -0.27876139   0.98623888    1.3012284   0.77696032   -3.5502959            3    5.6680091    7.8898003    7.9816509    1.1325762 -0.0096259847 -0.038363942  0.028358537    5.4975543    5.4780111   0.38646623    3.0348079   0.20095455    1.0121619        0.075    2.0053047          0.5   0.11246243    4.4459293    2.8235647    30.801768 0.0068121963  -0.35051442 -0.0013191482     0.376564    2.4138497    1.4720903 
  718000    11.179179    1.5220536    9.6571259  -0.29545952    1.0149277    1.3063241   0.82136232   -3.5502959            3    5.5534596    7.8383004    7.9789258   0.84315255 -0.0021751026  0.040514109 -0.031386969    5.3732636    5.3627175  -0.87827707    1.0332206  0.046775832     1.017606        0.075     1.993774          0.5   0.11306733     4.422144    2.8066778    30.801768 -0.023705962  -0.46910597 -0.006133617   0.35495365   0.26781253    7.3033486 
  719000    11.135297    1.5155196    9.6197778  -0.30331486    1.0105708    1.3203339   0.80477973   -3.5502959            3    5.5441666    7.7867102    7.9208192    0.9249703 -0.023829615  -0.10070173 -0.013233097    5.3676085    5.3513789            0            0   0.18180305    1.0119021        0.075      1.98117          0.5   0.11243357    4.4470706     2.815383    30.801768  0.011160729  -0.37680217 -0.0097399232   0.30545416     1.158169    3.3655125 
  720000    11.110018    1.5124416    9.5975761  -0.29438425    1.0085183    1.3160833   0.80418948   -3.5502959            3    5.5514718    7.8408689    7.8718638   0.94168273  0.025941877  0.067818672  0.053212145    5.3750433    5.3593048   0.87339087     0.760081   0.26796777    1.0326927        0.075    1.9889169          0.5   0.11474364    4.3575401    2.8269132    30.801768  0.009313689  -0.36025606 0.0012704246   0.36769243   -1.0756332    3.7223288 
  721000    11.068904     1.482976    9.5859282   -0.3033736   0.98887022    1.3191013   0.76944852   -3.5502959            3    5.5020912    7.7723938    7.8979613    0.8359185 -0.017114672 -0.049376978  0.043190871    5.3332844    5.3094835  0.062051414   0.30011269  0.079225304    1.0127891        0.075    2.0255213          0.5   0.11253212    4.4431759    2.7764003    30.801768 0.0093926011  -0.33572663  0.054315561   0.39198406  -0.99402916  0.076645038 
  722000    11.125939    1.4906901    9.6352487  -0.29351503   0.99401407    1.2850132   0.80070537   -3.5502959            3     5.483483    7.7209269     7.836041   0.89348132 -0.036540869   -0.1214029 -0.034469973    5.3078189    5.2958527            0            0    0.3917072    1.0278781        0.075    2.0224686          0.5   0.11420868    4.3779511    2.8035923    30.801768 -0.001038481  -0.40305484 -0.0009923697   0.38859887   0.66393329    2.8408745 
  723000    11.132862     1.495951     9.636911  -0.26062506   0.99752213     1.285135   0.80646847   -3.5502959            3    5.4796477    7.7509731     7.900558   0.78741206 -0.011434533 -0.0028527654 -0.098176378    5.3027192    5.2919996   0.50408106   0.67397457    0.2689286    1.0035619        0.075    2.0567853          0.5   0.11150688    4.4840282    2.7867262    30.801768 -0.013173373  -0.36215926  0.018900027   0.36321446  -0.20832282    3.0885314 
  724000     11.12973    1.5052842    9.6244462  -0.28687799    1.0037456    1.2921576   0.81216239   -3.5502959            3      5.55002    7.8614409    7.9042739   0.88434519 -0.044069492   -0.2528224  -0.06243402    5.3718423    5.3613465   -1.1210401    1.3879929  -0.13134938    1.0115956        0.075    2.0523478          0.5   0.11239951    4.4484179    2.8024066    30.801768  0.030801103  -0.35081953 -0.024828831   0.34601756   -2.2551465   0.61658071 
  725000    11.154516    1.5111797    9.6433361  -0.29961975    1.0076768    1.2757699    0.8296185   -3.5502959            3    5.3355426    7.5933511    7.8007476   0.61252914  0.045710199  -0.14373992 -0.032497865    5.1535353    5.1492619 -0.055826874    2.8487773  0.070719259     1.008916        0.075    2.0164942          0.5   0.11210178    4.4602324    2.7941666    30.801768  0.011252046  -0.39053974 -0.00081144601   0.34192353    2.1312199  -0.46672656 
  726000    11.108998    1.5019913    9.6070066  -0.30830488    1.0015499    1.2980594   0.80457656   -3.5502959            3     5.365446    7.6651658     7.740315   0.69085718 -0.012221124   -0.2061516   0.16294389    5.1889326    5.1759107  -0.31126769    1.4913251 -0.034452165    1.0047098        0.075    2.0382496          0.5   0.11163443    4.4789051    2.7905298    30.801768 0.0028967332  -0.39076282 -0.0054707267   0.41437954    1.2312895   -1.3614724 
  727000    11.155375    1.5270077     9.628367  -0.28899055    1.0182312    1.2919444   0.83643628   -3.5502959            3    5.4733671     7.765312    7.8315993   0.82319001  0.023670176  -0.15081778 -0.041723779    5.2898641    5.2847247  -0.43158996    1.2003495   0.07761489    1.0069017        0.075    2.0476006          0.5   0.11187796    4.4691554    2.8190699    30.801768  0.018639574  -0.38899544 -0.016754104   0.30515474   -1.0689703    -5.960319 
  728000    11.133032    1.4930883    9.6399434  -0.28724719   0.99561323    1.2900708   0.80000332   -3.5502959            3     5.618492    7.8622304    7.9687373    1.0245083 -0.014505736  -0.21085935 -0.090772321    5.4429819    5.4301231            0            0   0.15953076    1.0119859        0.075     2.021874          0.5   0.11244288    4.4467022    2.8123339    30.801768 0.0082842343  -0.30082168 -0.0093418976   0.36841893   0.31369367    2.7839704 
  729000    11.131886    1.5030318    9.6288539  -0.29312598    1.0022437    1.2984306   0.80548533   -3.5502959            3    5.5255758    7.7774161    7.9235591   0.87575211  0.020432401   0.11399951  -0.10214685     5.348863    5.3359863            0            0 -0.0038492141    1.0309069        0.075    2.0157423          0.5   0.11454521    4.3650888    2.8190441    30.801768  0.032493217  -0.31560546  0.021808142   0.37280507   -2.6418397   -3.1814141 
  730000    11.102196    1.4987377    9.6034587  -0.32208118   0.99938033    1.2919576   0.80502329   -3.5502959            3    5.6450761    7.8237739     8.012633    1.0988215 -0.020331057  -0.10283109  -0.01802367    5.4684647    5.4564318   0.33097042    1.3092739   0.78825078     1.044415        0.075    2.0502487          0.5   0.11604611    4.3086321    2.8355275    30.801768 -0.00035139418  -0.40110263 -0.0014290175   0.33723101    2.1918529    2.2349079 
  731000    11.141492    1.5104111     9.631081  -0.29485549    1.0071643    1.3146212   0.80290693   -3.5502959            3    5.5183648    7.7801891    7.8734414   0.90146388 -0.024236401   0.02326197  0.056688686    5.3422176    5.3264112    1.4694441    3.3118457  0.058945512    1.0105884        0.075    2.0678741          0.5    0.1122876    4.4528516    2.7746094    30.801768 0.0033480894  -0.34131494 0.0017411537   0.35133765   -1.9096428     2.155663 
  732000    11.103309    1.5189138    9.5843951  -0.32189349    1.0128341    1.3348202   0.79890873   -3.5502959            3    5.5944806    7.8081056    7.9318923    1.0434439 0.0019801487 -0.0070721766  0.022877604    5.4192106    5.3995777  -0.85454829    2.6994433  -0.39816022    1.0197102        0.075    2.0533851          0.5   0.11330114    4.4130184    2.7727446    30.801768 0.0014708302  -0.38332129 -0.018598703   0.32303538  -0.43574105    7.2182108 
  733000    11.115457    1.4999141    9.6155429  -0.30022745    1.0001648    1.2773381    0.8160603   -3.5502959            3    5.6453988    7.8511496    7.9899146    1.0951322  0.015237898   0.17848024  0.054109358     5.466366    5.4588891            0            0  -0.51105593    1.0029287        0.075    2.0699471          0.5   0.11143652    4.4868595    2.8096404    30.801768 0.0094763494  -0.37622097 0.0025358395   0.33765073   -3.5294562    3.6104935 
  734000    11.093528    1.4773857    9.6161421  -0.28451289   0.98514251    1.2997991   0.77608511   -3.5502959            3    5.4603768     7.714561    7.8432855   0.82328391 -0.019095276  -0.20796595 -0.012043938     5.290114    5.2705875   0.34292429   0.51041531  -0.10938405    1.0200973        0.075    2.0686415          0.5   0.11334414    4.4113439    2.7986922    30.801768 -0.0021780593  -0.43484617 0.0035535365   0.34275119    1.0106322    1.6230271 
  735000    11.153644    1.5045714    9.6490728  -0.28187131    1.0032703    1.2959526   0.80884483   -3.5502959            3    5.6279422    7.8303464    8.0264068    1.0270735 -0.0037054719  0.082221418 -0.048004699    5.4504924    5.4387146  -0.64128983    2.0356266 -0.053882007    1.0102114        0.075    2.0551953          0.5   0.11224571    4.4545131    2.8202788    30.801768 -0.0070866531  -0.39049206   0.02307131   0.33075007     2.384672    5.1424404 
  736000    11.155352    1.5118657     9.643486  -0.29442917    1.0081343    1.3011533   0.81348642   -3.5502959            3    5.5172734    7.7524352    7.8705409   0.92884424 -0.0036644473  -0.52675864 -0.038832092    5.3388053    5.3272864            0            0  0.029607568     1.017933        0.075    2.0440516          0.5   0.11310367    4.4207232    2.7899182    30.801768 -0.012701704   -0.4456644 -0.023656855   0.34158483    3.8342885    5.5456103 
  737000     11.10975    1.4762902    9.6334597  -0.28270705   0.98441201    1.2999114   0.77479343   -3.5502959            3    5.5381815    7.8129444    7.9299745   0.87162574 -0.026794725    0.1419002 -0.047277681    5.3682021    5.3483758   0.73333203   0.25502715   0.66654845    1.0103903        0.075    2.0345714          0.5   0.11226559    4.4537243    2.8037357    30.801768  0.021518422  -0.35575789 -0.0067827979   0.39116441   -3.6404743  0.016444963 
  738000    11.149218    1.5082275     9.640991  -0.28844338    1.0057083    1.2804065   0.82325308   -3.5502959            3    5.8089966    7.9039876    8.1625756    1.3604266  0.018307423 -0.094600565 -0.0063571515    5.6283858    5.6220389  -0.67533568   0.62182331   0.89529254    1.0135087        0.075    2.0177098          0.5   0.11261208     4.440021    2.7926044    30.801768 -0.009212862  -0.37035092  0.022695268   0.40588656   -2.6486193    6.4847527 
  739000    11.136971    1.5201418    9.6168295  -0.28100567    1.0136529    1.3184416   0.81117373   -3.5502959            3    5.5987477    7.8707952    7.9752014   0.95024637  0.034541942 -0.027699046  0.029963972    5.4207869    5.4062363            0            0    0.2841254    1.0351375        0.075    2.0540242          0.5   0.11501527    4.3472487    2.8044635    30.801768  -0.01209191  -0.42544138 -0.031827817   0.45295992    2.4224625    4.2387959 
  740000    11.131599    1.5109337    9.6206656  -0.26273074    1.0075128     1.271415   0.83224371   -3.5502959            3    5.5855171    7.9087465    7.9278826   0.91992217  0.022005313  -0.12106698  0.028459224    5.4029338    5.3998723  -0.24319855      1.03136  -0.34781759    1.0014153        0.075    2.0279549          0.5   0.11126837    4.4936402    2.7984951    30.801768 -0.0068394031  -0.38733644  -0.01565912   0.34432171   0.74515313   -2.2964512 
  741000    11.104245    1.4956067    9.6086381  -0.30825565   0.99729256    1.2977114   0.79771569   -3.5502959            3    5.6303975    7.8087771     7.997953    1.0844624  0.019045171    -0.122981  0.016608812    5.4553892     5.440913  -0.23231612    1.0070498   0.48162623    1.0279367        0.075    2.0460145          0.5   0.11421518    4.3777016    2.7955797    30.801768  0.015895256  -0.41702447 -0.026171967   0.42185183   -2.4507327    2.9883601 
  742000     11.10324    1.4900403    9.6131993  -0.31153114   0.99358079    1.2866644   0.79888457   -3.5502959            3    5.2873614     7.539462    7.7154304   0.60719163  0.050448499 -0.016063487 -0.016267652    5.1120967    5.0994899    0.5328455   0.79970815 -0.054292181     1.008413        0.075    2.0294582          0.5   0.11204589    4.4624572    2.8006172    30.801768 0.00068211008  -0.31780128 -0.0068946064   0.38442872    1.6996499   -1.6656785 
  743000    11.142285    1.4908735    9.6514111  -0.30170638   0.99413638    1.2828555   0.80234518   -3.5502959            3    5.5738511    7.7323106     7.943435    1.0458077 -0.011382744  -0.20535008  0.041133023    5.3978272    5.3865358   0.31928753    1.4798514   0.45073648    1.0227121        0.075    2.0582662          0.5   0.11363467    4.4000654    2.7979163    30.801768 -0.046066201  -0.39495247 0.00078777684   0.32844976    4.9572677    6.6111005 
  744000    11.091673    1.4737111    9.6179615   -0.2830873   0.98269223    1.2655295   0.79481152   -3.5502959            3    5.6153919    7.9057042    7.9641016   0.97636979  0.013720608  -0.12476475  -0.11051001    5.4410207    5.4306064    1.0132906    1.0320708   0.19303763    1.0274287        0.075     2.029227          0.5   0.11415874    4.3798661    2.8317401    30.801768 0.00087541118  -0.32789434 -0.035473418    0.3850955   -1.8577109   -1.5735255 
  745000    11.107122    1.4924966    9.6146256  -0.29429349   0.99521869    1.2731153   0.81063095   -3.5502959            3    5.5049405    7.7746109    7.9023534   0.83785732 -0.019852608  -0.12381495 -0.086236174    5.3270988    5.3190474   -1.1680009    1.3596416  0.089078093    1.0223867        0.075    2.0742601          0.5   0.11359852    4.4014658    2.8006957    30.801768  0.050885716  -0.33867047 0.0090186847   0.30130133   -1.9757657  -0.56123299 
  746000    11.102566    1.4769821    9.6255841  -0.30505023   0.98487342    1.2713607   0.79456422   -3.5502959            3     5.661591    7.8392936    8.0021831    1.1432965 -0.025015015 -0.051108614  0.073599134    5.4872742    5.4759541  -0.20325695    1.1735506  0.067583742    1.0149896        0.075    2.0837386          0.5   0.11277662     4.433543    2.8150438    30.801768  0.045138989  -0.34606472 -0.023806883   0.35474495    1.7325519    4.2860138 
  747000    11.139218    1.5101244    9.6290939   -0.2903275    1.0069732    1.2760855   0.82823617   -3.5502959            3    5.4662478    7.7491869    7.8898833   0.75967311 -0.012911109   -0.1354359  0.057394725    5.2845437     5.279921   0.24359181   0.91159761   0.38757297    1.0350816        0.075    2.0785319          0.5   0.11500907    4.3474833    2.8064487    30.801768 0.00046394224  -0.34812647 -0.016977699   0.43275686    1.1231948    4.9988557 
  748000    11.088911    1.4869493    9.6019613  -0.28523534   0.99151969    1.2882814   0.79437473   -3.5502959            3    5.4545081    7.7247058    7.7994583   0.83936026  0.036006021  -0.12530552  -0.08593191    5.2802328    5.2664005   0.35169821   0.74119893  0.020781815    1.0114558        0.075    2.0968766          0.5   0.11238398    4.4490327    2.8090122    30.801768 -0.00046140276  -0.30878954 -0.013702593    0.3071506   -1.9455156  -0.52658742 
  749000    11.122903    1.5167858    9.6061175  -0.29418852    1.0114151    1.3192603   0.80690081   -3.5502959            3    5.4689324    7.7215012    7.8314421   0.85385385 0.0039687158  0.031014312  0.032781203    5.2919091    5.2763015  -0.36398817    2.8403229   0.45952611    1.0097676        0.075    2.0821812          0.5    0.1121964    4.4564708    2.7964198    30.801768  0.019912341  -0.37480809 -0.037393196   0.38352191   0.34147752    4.2102915 
  750000    11.166295    1.5228893     9.643406  -0.27862582     1.015485    1.3064628    0.8221984   -3.5502959            3    5.6896897    7.8816785    8.0548594    1.1325313 -0.012807748  -0.01196431 -0.032240649    5.5093103    5.4989274   0.35279205    2.4008774   0.41237108    1.0247751        0.075    2.0813606          0.5    0.1138639    4.3912074     2.823282    30.801768 -0.0069095736  -0.40866599 -0.013844362   0.41864498  -0.11014613    3.5793523 
  751000     11.16753    1.5103443    9.6571862   -0.3010176    1.0071198    1.3079426   0.80727772   -3.5502959            3     5.436743    7.6366162    7.8545675   0.81904538 0.0038570301 -0.010580023  0.022588636     5.259637    5.2457646   0.29782215   0.78324117    0.0501992    1.0213406        0.075    2.0545472          0.5   0.11348228    4.4059741    2.7987065    30.801768 0.0096087527  -0.34857344    -0.029413   0.38607413   0.59477573    6.0125547 
  752000    11.101458    1.4714241    9.6300339  -0.29183075   0.98116725    1.2991211   0.76991388   -3.5502959            3    5.4675573    7.8014967    7.8633317   0.73784353 -0.032514779  -0.31751652  -0.07397336    5.2986484     5.277867            0            0 -0.067510297    1.0283534        0.075    2.0363168          0.5   0.11426149    4.3759274    2.8059619    30.801768  0.024767907  -0.35983484  0.010416824   0.35355627    0.4988848   0.39284101 
  753000    11.075289    1.4982032    9.5770854  -0.29457853   0.99902395    1.3063062   0.79487977   -3.5502959            3    5.6270727    7.8709486    7.9811523    1.0291171 -0.0042104339   0.10809421  -0.10452117    5.4526866    5.4363332            0            0 -0.021459617    1.0185033        0.075    2.0527598          0.5   0.11316704    4.4182476    2.7983845    30.801768  0.021253462  -0.34055454 -0.001863794   0.35897276    -1.370948  -0.81832714 
  754000    11.121506    1.5059784    9.6155279  -0.30499135    1.0042086    1.2749233   0.82440411   -3.5502959            3    5.6398695    7.8176363    7.9981102     1.103862 -0.0078950197 -0.015295339 -0.078067173    5.4590062    5.4537124            0            0   0.17599072    1.0316245        0.075    2.0388439          0.5   0.11462494    4.3620524    2.7850467    30.801768 0.0098214482  -0.33564103  0.025182956   0.45359578   0.25739669    -3.143268 
  755000    11.119061    1.4953151    9.6237458  -0.28992087   0.99709812    1.2724221   0.81422326   -3.5502959            3    5.7007365    7.9589682    8.0294639    1.1137774 -0.0078102414 -0.098088088  0.037045597    5.5221067    5.5149446   0.66221815   0.53510615 -0.034674823    1.0314926        0.075     2.058659          0.5   0.11461029    4.3626101    2.8061658    30.801768  0.019054215  -0.30389463 -0.012117135   0.35581993    1.6676557     3.065511 
  756000    11.073179    1.4640838    9.6090952  -0.30291106    0.9762726    1.2771611   0.77637539   -3.5502959            3    5.5146893    7.7740559    7.8725547    0.8974572  0.025566369 -0.084722469   0.11239719    5.3443628    5.3282054  -0.34139572   0.69558858   0.21933884    1.0182878        0.075    2.0673659          0.5   0.11314309    4.4191829     2.790337    30.801768 -0.013528019  -0.45800287 -0.020217557    0.3470506    0.4389344    4.2317466 
  757000    11.092994    1.4992269    9.5937675  -0.29593755   0.99970653    1.2783526   0.81462159   -3.5502959            3    5.6341674    7.9410836    7.9220779    1.0393405 -0.0024539653 -0.092457857 0.0047449592    5.4554502    5.4475095  -0.92779754    2.2547974  0.078884324    1.0293509        0.075    2.0365007          0.5   0.11437232    4.3716873    2.8139822    30.801768 0.0050957712  -0.37767967 -0.0060172842   0.36857298   0.26733682    3.3164576 
  758000    11.113444    1.4924685    9.6209756   -0.2786612   0.99519996    1.2788513   0.80678207   -3.5502959            3    5.5747667    7.8189454    7.9566484    0.9487063 0.0056805951 0.0019148678  0.015084077    5.3977694    5.3880361  0.022322536   0.89583606 -0.080283138    1.0131761        0.075    2.0660905          0.5   0.11257513    4.4414785    2.8111711    30.801768 -0.0045713217  -0.30834756 0.0039380599   0.42425185   -2.6099146    5.8350849 
  759000    11.131359    1.5043674    9.6269915  -0.27790152    1.0031343    1.2796242   0.81948578   -3.5502959            3    5.7453976    8.0214322    8.0413765     1.173384 -0.023475499  -0.13965781 -0.073821731    5.5656132    5.5585541    1.5524531     1.128069   0.21806288    1.0272968        0.075     2.074272          0.5   0.11414409    4.3804283    2.8212745    30.801768 -0.020296803  -0.39687962 -0.024228046   0.41030727   -1.2566571    4.5385254 
  760000    11.072329    1.4777047    9.5946243   -0.2884548   0.98535525    1.2886158   0.78388265   -3.5502959            3    5.7645386    7.9851401    8.1521042    1.1563717 -0.010058364  -0.33315515 -0.0050612295    5.5925652    5.5763822   -0.6304634   0.47772771   0.21862781    1.0291114        0.075    2.0848201          0.5   0.11434571    4.3727043    2.8003039    30.801768 -0.018224659  -0.28643958  0.010308303   0.40215454    2.2554515      2.43336 
  761000    11.136832    1.5036508    9.6331811  -0.31466454    1.0026565    1.2771085   0.82036401   -3.5502959            3    5.5643903    7.7588918    7.9906728   0.94360633   -0.0234934  -0.12999988  0.025776306    5.3844133    5.3779142   0.56092129     2.245223 -0.050597989    1.0351455        0.075    2.0484873          0.5   0.11501617    4.3472149    2.8192856    30.801768  -0.02084214  -0.35082178 -0.010729322   0.28735083   0.91459493    2.5524277 
  762000    11.101253    1.4881524    9.6131004  -0.29417995   0.99232193    1.2676004   0.80947556   -3.5502959            3    5.6079762     7.824375    7.9958858    1.0036678 -0.016272377 -0.062648522  -0.11085574     5.430388    5.4228884  0.022532794    1.7306306   0.16268437    1.0269619        0.075    2.0622129          0.5   0.11410688    4.3818566    2.8255239    30.801768 -0.012098648  -0.28728818 -0.0074459866   0.40074181   -1.6999948    5.2660232 
  763000    11.072277    1.4814571    9.5908194  -0.30728339   0.98785737    1.2744091   0.79750641   -3.5502959            3    5.6181586    7.8522716    7.9702488    1.0319553 -0.020229652 -0.017881927  -0.03519684    5.4431962    5.4320766   0.43311177    0.3315514 -0.063588471    1.0366338        0.075    2.0709765          0.5   0.11518154    4.3409735     2.822114    30.801768 -0.013908167  -0.37307341 0.0017686804   0.36936203   0.61204593    4.7295324 
  764000    11.106825    1.4764755    9.6303496  -0.28891305    0.9845356    1.2369067   0.81693253   -3.5502959            3    5.4806995    7.7258107    7.8871134   0.82917452  0.007076875  -0.16158476  0.059947558    5.3014754    5.3000934   0.27319053    1.3449802   0.15915161    1.0131518        0.075     2.068132          0.5   0.11257243     4.441585    2.7758866    30.801768 -0.016139576  -0.34732737 -0.005700094   0.37704322   0.11244708    5.6449245 
  765000    11.048956     1.454358    9.5945976  -0.29346206   0.96978731    1.2592707   0.77747846   -3.5502959            3    5.5978387    7.8950868    7.9207008   0.97772834  0.029174011 -0.024298362 -0.010893471    5.4272702    5.4139671  -0.55907519    1.1297504  0.046712557    1.0304706        0.075    2.0622805          0.5   0.11449673    4.3669368    2.8004949    30.801768 -0.022249046  -0.31832885  -0.04108531    0.3981616    -2.853761    4.4623159 
  766000    11.056761    1.4575166    9.5992443   -0.3051614   0.97189351    1.2489325   0.78786791   -3.5502959            3    5.3817241    7.6194909     7.810472   0.71520941 0.0089472356  -0.08135494 -0.016922825    5.2088763    5.1993621  -0.19890601    1.1072238   0.12504004    1.0217166        0.075    2.0395661          0.5   0.11352406    4.4043526    2.7899339    30.801768  0.009752156  -0.40050389   0.01195644   0.33944862    4.0161253    1.9608123 
  767000    11.075192    1.4786807    9.5965117  -0.28684304   0.98600605    1.2683451   0.79845814   -3.5502959            3    5.4337673    7.7665242    7.8041184   0.73065924 -0.0086555881 -0.012260324  0.010622409    5.2585961    5.2485707            0            0   0.16116773    1.0289062        0.075    1.9959503          0.5   0.11432292    4.3735763    2.8342651    30.801768 -0.017667303  -0.32531737 -0.00039275486   0.36710979   -2.0181624    1.1595786 
  768000    11.111458    1.4693716    9.6420864  -0.28931377   0.97979862    1.2774235   0.78207482   -3.5502959            3     5.862677    8.0224111    8.0917307    1.4738893 -0.0058393677  -0.17778327 -0.060884903    5.6911002    5.6761549            0            0 -0.066986113    1.0358136        0.075     2.062439          0.5    0.1150904    4.3444112    2.8091021    30.801768 -0.0018295994  -0.38222676 -0.016249166   0.35011538    1.4116186    7.7889086 
  769000    11.072074    1.4729109    9.5991627  -0.29327678   0.98215866    1.2879696   0.77898746   -3.5502959            3    5.7586529    8.0041378    8.0549764    1.2168445 -0.0035100702 -0.056987484  -0.11834732    5.5877533    5.5705908   0.72632641    2.5507393 -0.063577987    1.0272841        0.075    2.0270434          0.5   0.11414268    4.3804823    2.7996947    30.801768 -0.032891191  -0.36833058 -0.0080974209   0.34769908   0.55941528    13.227765 
  770000    11.122432      1.50094    9.6214922  -0.29605935    1.0008489    1.2626075   0.82700398   -3.5502959            3    5.7920475     8.055286    8.1370041    1.1838525  0.022795888   0.14925102  0.049953042    5.6106138    5.6076887            0            0   0.35787748     1.027018        0.075    2.0290405          0.5   0.11411311    4.3816174    2.7939242    30.801768 -0.027547064  -0.35538269 0.0013844758   0.35065964   -2.2757685    6.5220561 
  771000    11.038122    1.4646163    9.5735059   -0.3031381   0.97662772    1.2499894    0.7950513   -3.5502959            3    5.4146347    7.7414784    7.8069771    0.6954485  0.017854593  -0.15543614 -0.0026277797    5.2402109    5.2321183   0.66469443    2.0343696   0.13915063    1.0256623        0.075    2.0651566          0.5   0.11396248     4.387409    2.8184915    30.801768 -0.023580687  -0.39802223  0.015000731   0.33757124    1.1959428    6.2511507 
  772000    11.071021    1.4826836    9.5883372   -0.2915887   0.98867525     1.266671   0.80401906   -3.5502959            3    5.6874256    7.9015511    8.0534093    1.1073164  0.026698856  -0.21219766 -0.045463291    5.5110345    5.5024734   0.62421916    0.8269151   0.13478098    1.0349771        0.075    2.0930896          0.5   0.11499746    4.3479223    2.8234925    30.801768 -0.032591904  -0.43045119 -0.0080478021   0.32878883   0.91392401    4.3716323 
  773000    11.130498    1.5126556    9.6178421  -0.30280894     1.008661     1.296433   0.81750557   -3.5502959            3    5.5507004    7.7655617     7.947702    0.9388374  0.012960595  0.011576966 -0.021119026    5.3713505    5.3614025  -0.75836737    1.1632203  -0.15940977    1.0351655        0.075    2.1033453          0.5   0.11501839    4.3471309    2.8059132    30.801768  0.026735504  -0.39687163 -0.010664885   0.29255952  -0.27283708    2.8806499 
  774000     11.13086    1.5117731    9.6190869  -0.30137547    1.0080726    1.3101857    0.8073721   -3.5502959            3     5.647427    7.7930555    8.0823097    1.0669156 -0.004953556 -0.029505532  0.032587672    5.4703002    5.4561211  -0.39991012    0.5334658 -0.0034858751     1.005415        0.075    2.0983508          0.5   0.11171277    4.4757639     2.777473    30.801768  0.016313476  -0.34626674 -0.0077366497   0.32529837   -3.0875669    6.4213927 
  775000    11.116692    1.5087047    9.6079873  -0.30280321    1.0060265    1.2961522   0.81330355   -3.5502959            3    5.6090723    7.7807007    8.0117032    1.0348128  0.017528425 -0.017246295  0.065911703    5.4306442    5.4198154            0            0  0.019569645    1.0384649        0.075    2.0777488          0.5   0.11538498    4.3333195    2.8280955    30.801768  0.029996524  -0.35721465   0.00705014   0.37471072    1.3605826     2.090155 
  776000    11.125833    1.4779297    9.6479038  -0.27449564   0.98550529    1.2467468   0.81199881   -3.5502959            3    5.6717034    7.9601515    7.9763557    1.0786029   0.01575186  -0.16953686  0.021499069    5.4935616    5.4896604   0.43513156   0.31056259    0.1580077    1.0052054        0.075    2.0809813          0.5   0.11168949    4.4766971    2.8112956    30.801768 0.0027021717   -0.3391437 -0.00070584543    0.4061063     2.843984    6.8663577 
  777000    11.152344    1.5327036    9.6196403  -0.30965532    1.0220293     1.306538   0.83305072   -3.5502959            3    5.6313586    7.7688516    7.9868936    1.1383308 -0.00033849635   0.22109809  0.017698755    5.4485983    5.4405854            0            0   0.27193197    1.0277488        0.075    2.0603086          0.5   0.11419432    4.3785017    2.7738672    30.801768 -0.0011608875  -0.41542613  0.011544292   0.43971276  -0.99505361   -0.4095707 
  778000    11.143151    1.5372965    9.6058544  -0.28492169    1.0250919    1.2944046   0.84622832   -3.5502959            3    5.4818565    7.7467571    7.8753477   0.82346465 -0.021362345  -0.36780447 -0.019454256    5.2962052    5.2928549  -0.20763575   0.28628319   0.19607675    1.0202249        0.075    2.0825435          0.5   0.11335833    4.4107921    2.7871721    30.801768  0.009266664  -0.46267438 -0.012152552   0.39792455    3.3304958     2.402096 
  779000    11.087535     1.444717    9.6428183  -0.29266206   0.96335856    1.2269639   0.78827065   -3.5502959            3     5.473751    7.6880348    7.9229701   0.81024821  0.013848068  -0.24223062  0.063262351    5.3008149    5.2945967  -0.35955021    1.1432202  0.028283423    1.0182295        0.075    2.0692386          0.5   0.11313661    4.4194358    2.8043227    30.801768  0.010660959  -0.35327306  0.023389618   0.31227557    2.7518407    3.5416505 
  780000    11.114127     1.505377    9.6087502  -0.30514903    1.0038076    1.2888374   0.81447538   -3.5502959            3    5.7128101    7.8608023    8.0879239    1.1897042   0.04964373   0.10887965  0.061160067     5.534125    5.5246214   0.13752865   0.62852106   -0.0108942    1.0274402        0.075    2.0673128          0.5   0.11416002    4.3798169    2.7768982    30.801768 -0.0004047149   -0.3018368 0.0013928932   0.35810687   -1.9873649    3.1179063 
  781000    11.100173    1.4825721    9.6176014  -0.30124182    0.9886009    1.2688327   0.80245649   -3.5502959            3    5.3904387     7.678957    7.7697223   0.72263682  0.012217342  -0.18005302 -0.055960665    5.2143904    5.2051709  -0.26112095    2.6665862  0.040794566    1.0073138        0.075    2.0444278          0.5   0.11192375    4.4673271    2.7986853    30.801768 -0.019330072  -0.35903244 -0.0046766091   0.24775106    2.9167701   -4.6486923 
  782000     11.11275    1.5067318    9.6060185  -0.31767404     1.004711    1.2942053   0.81240772   -3.5502959            3    5.4777034    7.6862785      7.84597   0.90086183  0.014769762  -0.11939167  0.042221581    5.2994719    5.2887309            0            0   0.17744038    1.0328318        0.075     2.052536          0.5   0.11475908    4.3569536    2.7974363    30.801768 0.0039458928  -0.41578858 -0.017285788   0.43492003   0.16120885    3.8692377 
  783000    11.085042    1.4755125    9.6095296  -0.29480812   0.98389342    1.2602811   0.80030575   -3.5502959            3     5.572899    7.8174978    7.9024096   0.99878955 -0.0053826908  -0.14993597   0.09008532    5.3973225    5.3888798    1.2003318   0.87919163 -0.027947277    1.0016823        0.075    2.0298312          0.5   0.11129804    4.4924423    2.8063849    30.801768 -0.0078916294  -0.36637581 -0.0003172339   0.34205101   0.83522847    5.5385462 
  784000    11.118434    1.4743173    9.6441162  -0.29460198   0.98309645    1.2694129   0.79290032   -3.5502959            3     5.664328    7.8598516    8.0011086    1.1320238  0.031330912  0.061348752 -0.042851296    5.4903762    5.4789755   0.87353149   0.79488369  -0.13422384    1.0441492        0.075    2.0570448          0.5   0.11601658    4.3097288    2.8189291    30.801768 -0.0063282164   -0.3980139 0.0040478799   0.30324397   -0.5945245    3.6661126 
  785000    11.108163    1.4802775    9.6278856  -0.28477435   0.98707082    1.2467218   0.81462351   -3.5502959            3    5.6111851    7.8926654    7.9758917   0.96499833 -0.0082196697  -0.26657562   0.02171349    5.4324675    5.4291459  -0.27501185    0.1705201  0.040166546    1.0194456        0.075    2.0552445          0.5   0.11327174    4.4141638    2.8025705    30.801768 -0.036215629  -0.41668128 0.0028166369   0.37220359    4.3735011    4.9531262 
  786000    11.096024    1.4996746    9.5963492  -0.27409012    1.0000051    1.2799251   0.81407235   -3.5502959            3    5.6476789    7.9431373    8.0133601   0.98653934 -0.032663943   0.14565171 -0.046710602    5.4690822    5.4607915            0            0   0.10085563     1.037375        0.075    2.0572356          0.5   0.11526388    4.3378722    2.8209274    30.801768   0.02706848  -0.35768077 0.0016586635   0.39955913    -1.324725    5.8222447 
  787000     11.09556    1.4895687    9.6059912   -0.2930636   0.99326632    1.2707393   0.80895973   -3.5502959            3    5.5368244    7.7940036    7.8972702   0.91919935 -0.017295011  -0.10727785  -0.14602348    5.3593493    5.3512782  -0.68948685   0.87780104 -0.015052437    1.0160643        0.075    2.0577804          0.5   0.11289603    4.4288536    2.8066511    30.801768   0.01802931  -0.30260977 0.0099824709   0.35844007    1.2858956   0.24502614 
  788000    11.110151    1.5038603    9.6062909  -0.30244367    1.0027962    1.2806658    0.8182292   -3.5502959            3    5.4165198    7.7043171    7.8138195   0.73142282 0.0086420963  0.077550283 -0.013124208    5.2370111    5.2295242            0            0   0.59457426    1.0322213        0.075    2.0613669          0.5   0.11469126    4.3595302     2.813756    30.801768 -0.0061084748  -0.38760711 0.0016138437    0.3841103 -0.064495774   0.24875715 
  789000    11.164124    1.5194691    9.6446547   -0.2805662    1.0132043    1.3052213   0.81922531   -3.5502959            3    5.3593462    7.6746722    7.7451464   0.65821986  0.022801093  -0.28627733 -0.020355608     5.179619    5.1687651  -0.31969962    1.6755053  0.072805564    1.0156675        0.075    2.1030576          0.5   0.11285194     4.430584    2.8264637    30.801768  0.041004072  -0.38934597 0.0014441882   0.29271729    0.4437482    2.0157998 
  790000    11.156759    1.5314567    9.6253027  -0.28366158    1.0211979    1.2827755   0.84748094   -3.5502959            3    5.6125244    7.7947031    7.9253315    1.1175386 -0.014864538  0.034593296   0.07377087    5.4265983    5.4252208            0            0   0.34726098    1.0209423        0.075     2.065173          0.5   0.11343803    4.4076929    2.7978404    30.801768 -0.030333782  -0.43365477 -0.035072724   0.40926953  -0.77285598   -1.3821446 
  791000    11.125264    1.4990203    9.6262434  -0.27612412   0.99956878    1.2969108   0.80204059   -3.5502959            3    5.6380781    7.8416281    8.0363102     1.036296   0.01740278  0.033319412  -0.02366783     5.462121    5.4487105  0.062919281    2.9251282   0.20721264    1.0210542        0.075    2.0635521          0.5   0.11345046    4.4072099     2.822271    30.801768 -0.017553004  -0.37507887 0.0074849598    0.3346974   0.31547803  -0.83413378 
  792000    11.121938    1.5037175    9.6182206  -0.29697773    1.0027009    1.2989419   0.80590674   -3.5502959            3    5.7688154    7.9659578     8.108139    1.2323494  0.028518591  -0.16173333  0.040200479    5.5920101    5.5791512            0            0   0.11168974    1.0229113        0.075    2.0825484          0.5   0.11365681    4.3992083    2.8081363    30.801768 -0.0073361141  -0.31190575 -0.014334858    0.4038739    2.5652149    1.9552083 
  793000     11.10819    1.4941653    9.6140246  -0.29173438   0.99633139    1.2500543   0.82783296   -3.5502959            3    5.4193786     7.755256    7.8257789   0.67710073  0.026112842  0.032764157   0.12029862     5.237763    5.2368527   0.15841423    1.0258209   0.17002778    1.0224701        0.075    2.0507289          0.5   0.11360779    4.4011065    2.8043214    30.801768  0.027296334  -0.41053168   0.01570256   0.37464977   -1.4857113    3.0834479 
  794000    11.112888    1.5028452    9.6100425   -0.2933019    1.0021193    1.2830309   0.81552741   -3.5502959            3     5.551902    7.8368033    7.9006175   0.91828525 -0.0028498388  -0.10810598  0.008221497    5.3729861    5.3645611   -1.5846493    1.8109307   0.20120036    1.0304669        0.075    2.0596211          0.5   0.11449632    4.3669524    2.8338589    30.801768 -0.0047777223  -0.29393536  0.018557944   0.38793111  -0.15100913    5.6228484 
  795000    11.061289    1.4742766    9.5870126  -0.29639716   0.98306932      1.26738   0.79420808   -3.5502959            3     5.460871    7.7016341    7.8963467   0.78463212  0.015553245   0.24596452  0.013492171    5.2866322    5.2758153            0            0  -0.09939006     1.034923        0.075    2.0719841          0.5   0.11499145    4.3481495    2.8094701    30.801768 -0.0043715159  -0.40279538 -0.0022099982   0.35541048   -1.5234673    1.0494113 
  796000    11.077932     1.478424    9.5995082  -0.31166867   0.98583491    1.2268406   0.82579668   -3.5502959            3    5.7015157    7.9133169    8.0237506    1.1674795  -0.01026227  -0.12160571  0.035517517    5.5203468    5.5223794    1.5394555    3.1927975  0.043733195    1.0152916        0.075    2.0814364          0.5   0.11281017    4.4322244     2.777256    30.801768 -0.0040906163  -0.33164388  0.016818722    0.3529692  -0.12534935    5.0047573 
  797000    11.060526    1.5137237    9.5468018  -0.31337686    1.0093732    1.2753209   0.83274339   -3.5502959            3    5.8816551    7.9764054    8.1924448    1.4761151 0.0015171464 -0.0050409382  0.034053096    5.6989623      5.69544   -1.0923605   0.71558504   0.10414203     1.032971        0.075    2.1195271          0.5   0.11477455    4.3563664    2.8089077    30.801768 0.0013686957  -0.32577275 -0.034440918   0.35458338  -0.92599551    2.0563389 
  798000     11.09109    1.4604347     9.630655  -0.29901586   0.97383932    1.2341811   0.80092737   -3.5502959            3    5.4365661    7.7373045    7.8367651   0.73562859 -0.0021445702  -0.16519719   0.01746797    5.2608532    5.2563579   0.23128954     0.612564   0.12258809    1.0322653        0.075    2.0444361          0.5   0.11469614    4.3593445    2.7914797    30.801768 -0.017611683  -0.46642389  0.013586938   0.36001011    2.2071496   -3.9634481 
  799000    11.113018     1.486619    9.6263987  -0.30085887   0.99129943     1.270089   0.80611587   -3.5502959            3    5.5870236    7.8243858    7.9808225   0.95586255 -0.031412556 -0.026684815  0.028818153    5.4101725    5.4015724  -0.23173895    1.4933459   0.34337244    1.0342044        0.075    2.0765433          0.5    0.1149116    4.3511708    2.8159081    30.801768 -0.015406696  -0.34653899 -0.002139589   0.32465392  0.070188021    1.8414357 
  800000    11.118526    1.4644072    9.6541187  -0.28406576   0.97648825    1.2633347   0.78593692   -3.5502959            3    5.7270845    7.9243417    8.0137045    1.2432073  0.012539112 -0.063716927    0.1317513    5.5546603    5.5426195   0.19144265   0.50192659  -0.25888256    1.0205094        0.075    2.0966859          0.5   0.11338994    4.4095623    2.8087298    30.801768  0.017758501  -0.35657911 -0.0047086101   0.31289584    1.7241056    8.2747077 
  801000    11.111691    1.4885327    9.6231587   -0.2754139   0.99257553    1.2603881   0.81469825   -3.5502959            3    5.6158928    7.8683154    7.9916357   0.98772715  0.018908969  -0.12967229 -0.021373981    5.4371588     5.431858            0            0  -0.56278975    1.0271156        0.075    2.0591735          0.5   0.11412396     4.381201    2.7870333    30.801768  0.015675451  -0.37422143 -0.025179477   0.38398809    -1.425917    5.5288807 
  802000    11.091524    1.4643149     9.627209  -0.29970642   0.97642673    1.2436305    0.7989487   -3.5502959            3    5.7448716     7.908174    8.1231851    1.2032557 -0.012843856   -0.2107641  0.026367661    5.5695928    5.5632837   -1.3565561     1.483933 -0.048287532    1.0351797        0.075    2.0804038          0.5   0.11501997    4.3470713    2.7988383    30.801768  0.017993465  -0.36887933  0.023658959    0.4397494    2.0277951    4.8612816 
  803000    11.116311    1.5003472    9.6159643  -0.28968101    1.0004536    1.2720092   0.82008802   -3.5502959            3    5.5214542    7.7273739    7.9157749   0.92121381 -0.020162901 -0.018055928  0.055342631    5.3415378    5.3357226            0            0   0.25121423    1.0199216        0.075    2.0655506          0.5   0.11332462    4.4121039    2.8132865    30.801768 -0.0078871055  -0.34983452   -0.0400952   0.37813221  -0.93124669    4.2712273 
  804000    11.092786    1.4863056    9.6064808  -0.30487137   0.99109043     1.250819   0.81859296   -3.5502959            3    5.6716657     7.842233    7.9935008    1.1792634  -0.01370673  -0.14575744  0.040733978    5.4920772    5.4890282   0.87120722   0.60356307  -0.21008525    1.0309214        0.075    2.0882076          0.5   0.11454682    4.3650274    2.8056615    30.801768  0.024060936  -0.38506053 -0.031190718   0.35605792    3.7334936    5.5365619 
  805000    11.083809    1.4757395    9.6080696  -0.29536285   0.98404483    1.2448399   0.81083498   -3.5502959            3    5.5975858    7.8086056    7.9926905   0.99146131 -0.026085278 -0.083394254  -0.11700155    5.4196993    5.4158213 -0.019996585   0.87560599  -0.42092871    1.0292836        0.075    2.0929113          0.5   0.11436484    4.3719731    2.8068171    30.801768  0.017494426  -0.34569548 0.0038035032    0.3458733   0.29649227    1.8588018 
  806000    11.074942     1.471881    9.6030612  -0.30403783   0.98147191    1.2322665   0.81491698   -3.5502959            3    5.5562992    7.8703847    7.9369392   0.86157389  0.015074815   -0.1990953  0.018996369    5.3775173    5.3763707            0            0 -0.092778504    1.0308964        0.075    2.0681073          0.5   0.11454405     4.365133    2.8211742    30.801768 0.0073084033   -0.3477066 -0.030546687   0.41465612   0.46256801    2.8852828 
  807000    11.070393    1.4853545    9.5850382  -0.29393192   0.99045624    1.2802422   0.79795366   -3.5502959            3     5.632043    7.7779728    7.9965549    1.1216011 -0.0029219961  -0.12818554 -0.011479557    5.4569825    5.4451092            0            0   0.27639571    1.0183049        0.075    2.1030588          0.5   0.11314499    4.4191086    2.7822099    30.801768 -0.005687522  -0.29229404  0.013019413     0.305205    1.7811708    3.0502441 
  808000    11.083699     1.469545    9.6141542  -0.30450968   0.97991426    1.2288923   0.81456776   -3.5502959            3    5.2672873    7.5399089    7.7329052   0.52904786  0.032024283  -0.15154975 0.0076487793    5.0885819    5.0878514  -0.43496457   0.40702937   0.15458449    1.0265462        0.075    2.0791003          0.5   0.11406069    4.3836313    2.8006158    30.801768 -0.026753695  -0.34466595 0.0050079509   0.35473206    1.2208392   -2.6430455 
  809000     11.04289    1.4310465     9.611843  -0.31625401   0.95424289    1.2190024   0.77838345   -3.5502959            3    5.3445696    7.6531606     7.797408   0.58314028 -0.023770319 -0.053685703  0.043598344    5.1738026    5.1665778   -0.3925732   0.87131761  -0.19069153    1.0280933        0.075    2.1028203          0.5   0.11423259    4.3770345    2.8258895    30.801768  0.022449404  -0.34778587 -0.011343889   0.32143234    3.6053636   0.51634038 
  810000    11.057371    1.4571056    9.6002652   -0.3006684   0.97161947    1.2544629    0.7837306   -3.5502959            3    5.7072658    7.9900152    8.0361677    1.0956146  0.040719787 -0.060534381  0.056555748    5.5353257    5.5240962   0.50851182   0.80140126   0.38673425    1.0552538        0.075    2.0903734          0.5   0.11725042     4.264377    2.8131685    30.801768  0.011306342  -0.42699289 0.0016328233   0.40298182   -4.5599807    2.1907283 
  811000    11.076256    1.4757298    9.6005261  -0.28526342   0.98403832     1.246272   0.80987098   -3.5502959            3    5.4004531    7.6946226     7.786547   0.72018967   0.03650611  -0.22908682  0.064103911    5.2227781    5.2184795   0.74126862   0.77860739  0.076896225    1.0178985        0.075    2.1025998          0.5   0.11309984    4.4208729    2.7844921    30.801768  0.018736277  -0.30588341  0.012369244   0.32730167     4.410169  -0.87835193 
  812000    11.051909    1.4724924    9.5794166  -0.30006564   0.98187958    1.2859471   0.77986862   -3.5502959            3    5.7279367    7.9135932    8.0418422    1.2283746 0.0099138659  -0.11607914 -0.028499922    5.5568438      5.54017  -0.12123308    0.1774132  0.097309168    1.0487611        0.075    2.1068996          0.5   0.11652901    4.2907772    2.7988722    30.801768  0.023719323  -0.32616328  0.001647713   0.31814009   -1.9480675    1.9598682 
  813000     11.08144    1.4691074     9.612333  -0.29059788   0.97962246    1.2745538   0.78369135   -3.5502959            3    5.5606386    7.7901064    7.9107536   0.98105585  0.018148508 -0.031273049 0.0051550607    5.3887071    5.3745355   0.58066212  0.027504549  0.017877491    1.0113392        0.075    2.0863126          0.5   0.11237102    4.4495457     2.804006    30.801768 -0.019687502  -0.31122682 -0.0024593775   0.44369651  -0.58867073  -0.14635864 
  814000    11.089876    1.5075519    9.5823244  -0.30563383    1.0052578    1.2938251   0.81357172   -3.5502959            3    5.6248702    7.7887983    8.0050735    1.0807387 -0.032679089   0.12988997 -0.010035065    5.4463833    5.4359531            0            0  -0.77980742    1.0322681        0.075    2.1008019          0.5   0.11469646    4.3593326    2.8178171    30.801768  0.014828361  -0.36490193 -0.025346563   0.33581948   -1.1719622    3.2332272 
  815000    11.130512    1.5063695    9.6241427  -0.28623203    1.0044693    1.3013493   0.80725049   -3.5502959            3    5.5467741    7.8492311    7.8417876   0.94930374 -0.001824277   -0.1545834  0.014786856    5.3696741    5.3567585            0            0 -0.099584729    1.0274034        0.075    2.0662623          0.5   0.11415594    4.3799736     2.803617    30.801768 -0.0056078683  -0.35268573 -0.0016154475   0.43892586    4.1026645    4.5731972 
  816000    11.052753    1.4933713    9.5593819  -0.30675885   0.99580197    1.2919887    0.7990413   -3.5502959            3    5.6914894    7.8900728    8.0181991    1.1661962  0.007488622 -0.025142939 -0.0071057816    5.5161903    5.5028405  -0.36264228   0.41204616 -0.094797743    1.0359962        0.075    2.0607593          0.5   0.11511069    4.3436451    2.8048561    30.801768 0.00014949115  -0.31240829 0.0078879941   0.37137182   -1.8793442    3.6210928 
  817000    11.113431    1.4958183    9.6176127  -0.29003862   0.99743369     1.280259   0.80956641   -3.5502959            3    5.5810072     7.795806    7.9410543    1.0061614 0.0034380517  -0.15452177  0.031769129    5.4033991    5.3940711   0.10373988   0.68311293    0.2777448    1.0234252        0.075    2.0616581          0.5   0.11371391    4.3969993    2.7785891    30.801768 -0.017577397  -0.42345555 0.0065748271   0.30794806  -0.84602626    3.9944225 
  818000    11.105822    1.5016273    9.6041947  -0.30239788    1.0013072    1.2571602   0.83139295   -3.5502959            3    5.4377251    7.6982111    7.8411782   0.77378605   0.03557495 -0.039459066 -0.058949546    5.2553285    5.2541617  -0.42910852   0.56273194  0.031596366    1.0267371        0.075    2.0902527          0.5    0.1140819    4.3828161    2.8088915    30.801768  0.004432369  -0.40060823  -0.01481409   0.44092423  -0.17014795    3.3801957 
  819000    11.079726    1.5018596    9.5778664  -0.30369479    1.0014621    1.2937611     0.807291   -3.5502959            3    5.6482944     7.832729    7.9861017    1.1260525 -0.0099905924   0.13382396 -0.059298196    5.4711854    5.4593867  -0.88328613   0.33136771  0.058318225    1.0227387        0.075     2.087943          0.5   0.11363763     4.399951    2.7965615    30.801768  0.010616863  -0.33262777 0.0060318632   0.37151533   -1.4860118     5.151377 
  820000    11.066557    1.4166539    9.6499031  -0.28432376   0.94464568    1.1676488   0.79657394   -3.5502959            3    5.5189473    7.7240443     7.948298   0.88449941  0.001492363   -0.2835802  0.036573843    5.3441895    5.3484538  -0.10534148    1.1868001   0.27488535    1.0102269        0.075    2.0772218          0.5   0.11224743    4.4544449    2.7910242    30.801768  0.005977615  -0.40877755 -0.041201873      0.41759   -1.8659437  -0.11888277 
  821000    11.049425    1.4597275    9.5896973  -0.28113895    0.9733678    1.2821366   0.76822476   -3.5502959            3    5.6678085    7.9182356    8.0116465    1.0735434  0.014972883   0.07368427 0.00077947762    5.4992702    5.4805982   0.19027402    0.5120018   0.18249089    1.0309629        0.075    2.0619715          0.5   0.11455144    4.3648514    2.8051868    30.801768  0.016378102  -0.37774461 -0.020781843   0.36573844   0.26713873   0.40417002 
  822000    11.084822    1.4778978    9.6069242  -0.29234809     0.985484    1.2517298   0.80864687   -3.5502959            3    5.6491315    7.8596956    7.9881085    1.0995904    0.0328349  -0.31501545 -0.0014362955    5.4717251     5.466361            0            0 -0.080279375    1.0254441        0.075    2.0984638          0.5   0.11393823    4.3883428    2.7938189    30.801768 -0.025626225   -0.3530778 -0.016544443   0.32892258  -0.39882506     1.895152 
  823000    11.054416    1.4801147     9.574301  -0.31017315   0.98696227    1.2825478   0.79059842   -3.5502959            3      5.41971    7.7202445    7.8291094   0.70977615  0.030939174  0.085488253  0.063176011    5.2462632    5.2324396   0.29486824    1.6039473  0.048410197    1.0459068        0.075     2.091893          0.5   0.11621187    4.3024865    2.7910441    30.801768 -0.0011734812   -0.3430418 0.0020334296   0.43232206  -0.33673241    1.9004564 
  824000    11.098693    1.5216166    9.5770763  -0.27642983    1.0146364    1.2981475   0.82631895   -3.5502959            3    5.6229523     7.896561    7.9252619     1.047034  0.014004983  -0.11135992  0.030335717    5.4416689    5.4334042   -0.2933545   0.90876118 -0.074603236    1.0127474        0.075    2.0507303          0.5   0.11252749    4.4433586    2.8001804    30.801768 -0.014934968  -0.39455032  0.023637671   0.35980578   -1.7712409    5.6776771 
  825000    11.085677    1.4829302    9.6027465   -0.2858666   0.98883966    1.2504327   0.81510045   -3.5502959            3    5.6015196    7.8178592    7.9455965    1.0411031 -0.0068031731 -0.051809053 0.0022419644    5.4226974    5.4189385            0            0  0.015082063    1.0351721        0.075    2.0895942          0.5   0.11501912    4.3471033    2.7956404    30.801768  0.032951973  -0.41509606 -0.015384755   0.35128221  0.069288673     4.172619 
  826000    11.022592    1.4541879    9.5684044  -0.29273069   0.96967392    1.2333449   0.79454462   -3.5502959            3    5.5886841    7.8381757    7.9489421   0.97893435 -0.0068626971 -0.017017373  0.024807354    5.4143715     5.408598            0            0  0.046332453    1.0152958        0.075    2.0975741          0.5   0.11281065    4.4322057    2.7725636    30.801768 -0.0027850586  -0.40487917 -0.054529841   0.44948528   -2.2978432    3.4992612 
  827000    11.059856    1.4844087    9.5754474  -0.29985483   0.98982554    1.2545157   0.81402542   -3.5502959            3    5.6446487    7.8686187    7.9685275       1.0968  0.028263967  -0.13438855  0.014808746    5.4660623    5.4614714            0            0   0.19935287    1.0358506        0.075    2.0944209          0.5   0.11509451    4.3442557    2.7989647    30.801768   0.01403257  -0.32226558 -0.0095159033   0.34026034    1.2395508    3.3761422 
  828000    11.076222    1.4625122    9.6137095  -0.29058519   0.97522464    1.2658954   0.78212753   -3.5502959            3    5.6670287    7.9255281     7.946164    1.1293941 -0.0040224952   0.21709045 -0.035086159    5.4954403    5.4821899    1.5421019    1.1321458   0.03122413    1.0278006        0.075    2.1203021          0.5   0.11420006    4.3782813    2.8006289    30.801768 0.0072564589  -0.39970714 -0.0043037384    0.4161047    -0.219606   -0.6608025 
  829000    11.073024    1.4692979    9.6037265   -0.3040785   0.97974943    1.2637509   0.79109278   -3.5502959            3    5.7278704    7.8935294    8.0782643    1.2118176 -0.0059162176 -0.047759023 -0.007254487    5.5543152    5.5433447   0.14842346  0.044126476  -0.43599131    1.0242569        0.075    2.1316656          0.5   0.11380633    4.3934288    2.8015855    30.801768 -0.015091824  -0.42589056 0.0070242063   0.31245756    2.0155278    5.5153174 
  830000      11.0778    1.4764419    9.6013581  -0.30109974   0.98451316    1.2763167   0.79066555   -3.5502959            3    5.3000833    7.6620697    7.7393292   0.49885091   0.01376004  0.003401124  0.033784033    5.1266217    5.1137227  -0.38320153    1.3367187   0.21053257    1.0274061        0.075    2.0943505          0.5   0.11415623    4.3799625    2.8266978    30.801768  0.029775066  -0.35513748 0.0093991197   0.45254325    -3.284701  -0.31744693 
  831000    11.099754    1.4717131    9.6280405  -0.29631838   0.98135995    1.2631675   0.79416408   -3.5502959            3    5.5407844    7.8254845    7.9067545   0.89011431 -0.018987254  -0.10653731 0.0092777971    5.3665554    5.3563439            0            0  0.062895206    1.0231001        0.075    2.0459169          0.5   0.11367779    4.3983965    2.8041866    30.801768   0.01363011  -0.33540712 -0.018410096   0.36281955    3.7470539  -0.95351455 
  832000    11.088581    1.4803362    9.6082453  -0.29331416   0.98710998    1.2364365   0.82153421   -3.5502959            3    5.6838177    7.9308106    8.0182297    1.1024129 -0.0018479784  0.041854537   0.12006021     5.503584    5.5032803  -0.22931301   0.48758388   0.10965855    1.0286622        0.075    2.0545039          0.5    0.1142958    4.3746141     2.809592    30.801768  0.027904052   -0.3450213  0.012774672   0.39863559  -0.60959529    3.5197614 
  833000    11.091348    1.4836312    9.6077169  -0.28708661    0.9893071    1.2864992   0.79187489   -3.5502959            3    5.5516504     7.857861    7.8974243   0.89966589  0.017786478 -0.076709425 -0.053201914    5.3779235    5.3638031            0            0   0.05904204    1.0370788        0.075    2.0984559          0.5   0.11523098    4.3391109    2.8453198    30.801768 -0.0047537279  -0.26846673 -0.052190808   0.43738003   0.33086955      1.97246 
  834000    11.078941    1.4687045    9.6102365  -0.30507782   0.97935375    1.2688457   0.78704274   -3.5502959            3    5.7290306    7.9445517    8.0170667    1.2254735 -0.021132717 -0.057513565  0.066045095    5.5563639     5.543761   0.33679715    3.1952639  0.020642312    1.0310732        0.075    2.0903854          0.5   0.11456369    4.3643847    2.7909061    30.801768 -0.016967349  -0.41411761  0.020205261   0.37116323   -1.6114693    6.6184515 
  835000    11.089459    1.4662277    9.6232312  -0.28922808   0.97770217    1.2473228   0.79861605   -3.5502959            3    5.6388034    7.8408325     8.012523    1.0630547 -0.023233819  -0.12689284  0.036037081    5.4635976    5.4566764            0            0 -0.027523907    1.0137559        0.075    2.0754505          0.5   0.11263955    4.4389382    2.7958268    30.801768 -0.019843714  -0.39264679  0.023029956   0.37915076   0.93350579    1.5163636 
  836000    11.050864     1.474517     9.576347  -0.31163871   0.98322966    1.2717504    0.7915665   -3.5502959            3     5.526496    7.8049979     7.946592   0.82789817  0.041655581  0.086522561  -0.10963825    5.3528368    5.3408023   0.54661824   0.63182289   0.16077137    1.0444263        0.075    2.1239833          0.5   0.11604737    4.3085855    2.8313045    30.801768 0.0099329895  -0.39396596 0.0024918029   0.42428163  -0.69408611     1.477271 
  837000    11.086004     1.495709    9.5902949  -0.27902421    0.9973608    1.2684943   0.81727506   -3.5502959            3    5.6607024    7.9165866    7.9601944    1.1053263 -0.038480761 -0.082776741 -0.0046178319    5.4814031    5.4754841            0            0   0.15425845    1.0208697        0.075    2.0645295          0.5   0.11342996    4.4080064    2.8246886    30.801768  0.028922165  -0.33647662  -0.02411972   0.36892319    0.8032688    1.2445563 
  838000    11.082467    1.4677963    9.6146703   -0.2947704   0.97874819    1.2700304   0.78524545   -3.5502959            3     5.692854    7.8660958    8.0547669    1.1576992 -0.0021585922  -0.14119903 -0.012467463    5.5205815    5.5074113   0.27877526     1.706229  -0.11381798     1.022937        0.075    2.0744308          0.5   0.11365966    4.3990981    2.8054201    30.801768  -0.01827685  -0.37075592 0.0062924189   0.41260117   0.24070034    4.3067779 
  839000    11.091635    1.4815685    9.6100662  -0.29776628   0.98793169    1.2739095    0.7979627   -3.5502959            3    5.3877543    7.7315538    7.7695481   0.66216108  0.006881889   0.14481098  0.056500894    5.2126919    5.2017453            0            0 -0.021803805    1.0398811        0.075    2.0863809          0.5   0.11554234    4.3274179    2.8283293    30.801768 -0.013864711  -0.33422902  0.021756995    0.4097524   -1.7124599   0.29685016 
  840000    11.081471    1.4441548    9.6373163  -0.28534948   0.96298368     1.235678   0.78184638   -3.5502959            3    5.5175969    7.8060709    7.9365417   0.81017821  0.028547993  -0.11471129   0.14233402    5.3460702    5.3371702            0            0  -0.11742245    1.0269675        0.075    2.0935535          0.5    0.1141075    4.3818328    2.7860466    30.801768 -0.0059965405  -0.36168584 -0.011106771   0.42176817    2.4340257    6.0472927 
  841000    11.094981    1.4953755    9.5996055   -0.2692899   0.99713837    1.2745544   0.81287116   -3.5502959            3    5.7526621    7.9789325     8.073168    1.2058858 -0.0042998946 -0.046851239  -0.02954348    5.5743289    5.5665589   0.14018185   0.58778617  -0.19418049    1.0202222        0.075    2.0919553          0.5   0.11335802     4.410804    2.7778004    30.801768 -0.0094284073  -0.44055558 0.0076259425   0.39231333   -4.5568796    5.5254009 
  842000    11.108569    1.4845583    9.6240103  -0.29463057   0.98992532    1.2608954   0.80994556   -3.5502959            3    5.7186029    7.8998271    8.0413105    1.2146711 -0.027392985 -0.011360191   0.11373837    5.5409116    5.5344941            0            0   0.14256725    1.0301385        0.075     2.059877          0.5   0.11445984    4.3683446    2.8282471    30.801768 0.0086810091  -0.35231353 0.0048073365   0.41084389    2.9930051    7.5427492 
  843000    11.120468    1.4931263    9.6273413  -0.28406888   0.99563857    1.2838878   0.80416069   -3.5502959            3    5.6066693    7.9208059    7.9017311   0.99747097  0.021342294  -0.10547227  0.088407229    5.4302471    5.4192033    -1.109643   0.38880959  0.018340868    1.0223309        0.075    2.0761821          0.5   0.11359232    4.4017062    2.8087691    30.801768 0.0091936072  -0.35836741 -0.011116322    0.4107846    2.0626344     2.439052 
  844000     11.10403    1.4874041    9.6166261  -0.29102571   0.99182295    1.2495369   0.82066662   -3.5502959            3    5.6165889    7.9030959    7.9212548     1.025416  0.013055579 -0.066808351  0.017201473    5.4365455    5.4341386            0            0    0.1623254    1.0188829        0.075    2.0794515          0.5   0.11320921    4.4166019    2.8148761    30.801768  0.029073645    -0.313221 0.0031835396     0.384891   -1.8787074    5.3772444 
  845000    11.104723    1.4909359    9.6137869  -0.28541764   0.99417798    1.2758546   0.80707403   -3.5502959            3    5.5762813    7.8347034    7.8652575    1.0288828  0.023905602 -0.0062439215  0.095487539    5.3992199    5.3899882            0            0   0.63395829    1.0060494        0.075    2.0772611          0.5   0.11178326    4.4729415    2.8204497    30.801768 0.0053849025  -0.33563571 0.0057621419   0.29942244   0.77194721   0.94340642 
  846000    11.145275    1.5044721    9.6408029  -0.28906246    1.0032041    1.2969725   0.80805576   -3.5502959            3    5.6652037    7.8303152    8.0268347    1.1384614  0.006612926 -0.025869452  0.032410134     5.487927    5.4758271            0            0  -0.47115875    1.0379619        0.075     2.100473          0.5    0.1153291    4.3354193    2.8253889    30.801768 -0.014212178  -0.48301318 -0.0069016431   0.42627224    1.6789823    7.5563812 
  847000    11.110957    1.5210417    9.5899156  -0.27019921     1.014253    1.3267183   0.80666484   -3.5502959            3    5.4714906    7.8292783    7.8190955   0.76609803  0.017233536 -0.026758868 -0.021053401     5.294519    5.2777707   0.28248166    1.6300245   0.25976714    1.0152362        0.075    2.0539221          0.5   0.11280402    4.4324662    2.7880496    30.801768  0.010176609  -0.31456713 -0.033756052   0.41194734   0.41932093    3.6972165 
  848000    11.135092    1.5310367     9.604055  -0.31396645    1.0209178    1.3190538   0.82286907   -3.5502959            3    5.6180979    7.8770227    7.9079907    1.0692803 -0.00015991018  -0.12202979 -0.0067547536    5.4375713    5.4254971  -0.86130103    1.7461677  0.051291719    1.0391283        0.075      2.06492          0.5    0.1154587    4.3305529    2.8074038    30.801768 -0.016406017  -0.45791834  -0.01710788    0.4263383 -0.0054562909    2.8975876 
  849000    11.099801    1.4909762    9.6088246   -0.3022284    0.9942049    1.2976233   0.79263056   -3.5502959            3    5.2572457    7.5771394    7.7388156    0.4557821 0.0059509507 -0.050823203  0.082748677    5.0833531    5.0677741 -0.061671045   0.80090133   -0.1084983    1.0119614        0.075    2.1045341          0.5   0.11244016    4.4468097    2.8054096    30.801768 -0.026460352  -0.39987574 -0.036230684   0.40064759  -0.25316005    -3.830188 
  850000    11.179466    1.5381442    9.6413214  -0.28390099    1.0256572    1.3232994    0.8279388   -3.5502959            3    5.6443584    7.8966778    8.0101374    1.0262599 -0.00068930908  0.088677898 -0.050084114    5.4627196    5.4511377   0.36683664    1.2460073  0.059568071    1.0342084        0.075    2.0869209          0.5   0.11491204     4.351154    2.8340224    30.801768 -0.0014095655  -0.36616097  0.029111176   0.37582841   -4.6072488    3.0502454 
  851000    11.144119    1.5045488    9.6395703   -0.2818079    1.0032553    1.2963986   0.80852298   -3.5502959            3    5.6375152    7.8145711    8.0169107    1.0810637   0.02332047  -0.19343869  0.080291349    5.4601359    5.4482224            0            0  0.061939474    1.0103271        0.075    2.0687387          0.5   0.11225857     4.454003    2.8313309    30.801768 0.0084722621  -0.35106412 -0.034302103   0.35526943     1.985957   0.50896378 
  852000    11.132247    1.4973809    9.6348664  -0.29878474   0.99847561    1.3011234   0.79741573   -3.5502959            3    5.4933041    7.7070471    7.9066881   0.86617694 -0.019943017   0.10663232  0.028943895    5.3183616    5.3033214   0.54783146   0.99564646  0.071246532    1.0244386        0.075    2.1009064          0.5   0.11382651    4.3926499    2.8136021    30.801768 -0.0083323801  -0.43298068 -0.019470426   0.35300536    -3.099901   0.51796738 
  853000    11.147957    1.4987384    9.6492189  -0.28538756   0.99938082    1.2798094   0.81310942   -3.5502959            3    5.4989022    7.7580659    7.8246149   0.91402572 -0.021312344  -0.09815672 -0.071963339    5.3205168    5.3120317    -1.428767    1.7284623 -0.043291645    1.0095476        0.075    2.0888659          0.5   0.11217196    4.4574419    2.8125057    30.801768   0.03265496  -0.33626137 -0.0057942036   0.25118509     2.830137    4.3673758 
  854000    11.124224    1.5168591    9.6073648  -0.31806615    1.0114639    1.3179312   0.80786677   -3.5502959            3    5.5024327    7.7068657    7.9196919   0.88074041 -0.042878338   0.20841516  0.035620784    5.3251974    5.3099958    1.7668072    1.8090436 0.0033159156    1.0314074        0.075     2.086128          0.5   0.11460082    4.3629706    2.8121222    30.801768 -0.001756827  -0.37138542   0.01800004   0.34423729   -1.9863214    3.6105427 
  855000    11.127134    1.4895597    9.6375739  -0.30269425   0.99326035     1.255133   0.81933666   -3.5502959            3    5.5051386    7.7341121    7.8563369   0.92496682 -0.0032010576  -0.22126829  0.069199537     5.325387    5.3218712   0.43019979    2.1812986   0.70924145     1.014363        0.075    2.0788184          0.5     0.112707    4.4362817    2.8262256    30.801768 -0.002312142  -0.32213388 0.00033911206   0.38905954    2.3712858    5.5601194 
  856000    11.152462     1.506078    9.6463836  -0.29179874     1.004275     1.310202   0.80103471   -3.5502959            3    5.6263713    7.8874961    7.9486979    1.0429199 -0.0012586556   -0.2293497  0.071169324    5.4506349     5.435063   0.70254822   0.55687865 -0.0051475745    1.0346058        0.075    2.0548557          0.5    0.1149562    4.3494826    2.8108341    30.801768 -0.020899263  -0.36759072 -0.0054318848   0.37782962  -0.87944581    3.6451477 
  857000     11.12122    1.4863451    9.6348749  -0.27767438    0.9911168    1.2666499   0.80810055   -3.5502959            3    5.3706973    7.6082086    7.8233817   0.68050151 -0.045552079  -0.15662341 -0.051021764    5.1934107    5.1857482    2.2934052   0.91740634  0.017841478    1.0084158        0.075    2.0673428          0.5    0.1120462    4.4624448    2.8020464    30.801768  0.012257641  -0.31408328  0.012234791   0.38964559    4.4026083    3.4037851 
  858000    11.147278    1.5288794    9.6183986  -0.29021718    1.0194793    1.3422946   0.80500451   -3.5502959            3    5.7542874     7.970754    8.0325438    1.2595643 -0.0065509587   0.05173214  0.036760712      5.57768    5.5582931  -0.13320223   0.62995528   0.29960187    1.0376695        0.075    2.0507569          0.5   0.11529661    4.3366409    2.7914879    30.801768 0.0094927542  -0.31564372 -0.022699027    0.4247002    1.2089535    3.3156311 
  859000    11.119075    1.4986721    9.6204026  -0.28456766   0.99933658    1.3051349   0.79618017   -3.5502959            3    5.5457755    7.7928684    7.9996091   0.84484885 0.0087053384  -0.23986049 -0.032312644    5.3711041     5.355207  -0.46677729   0.62959581   0.14924009    1.0029507        0.075    2.0766324          0.5   0.11143897    4.4867607    2.7784299    30.801768 -0.0015490729  -0.34650629 -0.0018917994   0.30121719    3.2239204     4.783695 
  860000     11.16697    1.5113949    9.6555756  -0.30907926    1.0078203    1.2948239   0.81717602   -3.5502959            3    5.4948469    7.6457929    7.9582948   0.88045289 -0.010495628  -0.02985667 -0.050182177    5.3155693     5.305784  -0.52378954   0.87282255   0.15539468    1.0408155        0.075    2.0931922          0.5   0.11564617    4.3235328    2.8019168    30.801768  0.016569233  -0.35082285 -0.015610705   0.35156478  -0.84856707    1.8970623 
  861000     11.06977      1.47368      9.59609  -0.30053504   0.98267151    1.2382591   0.81292703   -3.5502959            3    5.4807067    7.7162377    7.8629494   0.86293293 0.0099586655 -0.026959025  -0.01207603    5.3023613    5.2999031            0            0  0.096519299    1.0040459        0.075    2.1046665          0.5   0.11156066    4.4818668    2.8347464    30.801768  0.031271323  -0.35127033   0.01232001   0.40790688    1.3498768   0.96248181 
  862000     11.15508    1.5195684    9.6355119  -0.30515048    1.0132706    1.3034283   0.82052905   -3.5502959            3    5.6993313    7.9500674    8.0103293    1.1375973 0.0027788798  -0.17258885  0.056177818    5.5193181    5.5090121    1.7338467    1.4517623   0.15059214    1.0351895        0.075    2.0595033          0.5   0.11502105    4.3470302    2.7805648    30.801768  0.027038328  -0.46141509 0.0059413962   0.41045307    2.2690237    2.8932659 
  863000    11.124312    1.4907624    9.6335494  -0.28887537    0.9940623    1.2820393   0.80276503   -3.5502959            3    5.5996505     7.832691    7.9032124    1.0630481 -0.018931169  -0.15067803 -0.083576789    5.4235345    5.4124544  -0.63798717   0.45409059   -1.0575216    1.0107134        0.075    2.0399629          0.5   0.11230149    4.4523008    2.8254939    30.801768 -0.027564453  -0.35789603 -0.018443404   0.30231603   0.32194152    4.9051018 
  864000     11.14372    1.5164924    9.6272274  -0.28174052    1.0112194    1.3033945   0.81713443   -3.5502959            3    5.6106964     7.851519     7.934706    1.0458641 -0.0030301635 -0.0095945923   0.10598378    5.4314279    5.4203821   0.55223026   0.22099532 -0.031783082    1.0380019        0.075    2.0254026          0.5   0.11533354    4.3352524    2.8154683    30.801768 -0.019171128  -0.42586617  0.014048067   0.40055559    0.6654154    8.9383375 
  865000     11.09918    1.4904852    9.6086947  -0.29395348   0.99387747    1.2694448   0.81083944   -3.5502959            3    5.7028524     7.921976    7.9979154    1.1886658  0.037783409 -0.0021182258  0.024357689     5.524965    5.5174952     1.078177    1.2196351   0.21173187     1.011575        0.075    2.0794012          0.5   0.11239722    4.4485086    2.8005509    30.801768  0.011927749  -0.42292554 -0.00045387067   0.34193462   -3.4995725    3.2773901 
  866000    11.076422    1.4823012    9.5941212  -0.29049774   0.98842023    1.2950824    0.7846848   -3.5502959            3      5.55354    7.8306306    7.9267238   0.90326575 -0.0022915774  -0.15013239  0.030165916    5.3813906    5.3644394            0            0   0.45053406    1.0558579        0.075    2.0519438          0.5   0.11731754    4.2619372    2.8373765    30.801768 -0.023933081  -0.30405404  0.019392754   0.42198399   0.48162289    2.6410191 
  867000    11.080698    1.4885042    9.5921936  -0.28984578   0.99255651    1.2493474   0.82201483   -3.5502959            3     5.424398    7.7619998    7.8553723   0.65582177  0.010860973 -0.007867738  0.046713745    5.2440588    5.2419753 -0.030544535   0.23170111  0.072193741    1.0245601        0.075    2.0485867          0.5   0.11384001     4.392129     2.799885    30.801768 -0.013186893  -0.31904017 -0.0054039084   0.35219115    2.0232134    3.0876135 
  868000    11.108786    1.5008317    9.6079543  -0.30146761    1.0007767    1.2601921   0.82849121   -3.5502959            3    5.6044176    7.8364333    7.9743215    1.0024979  -0.01575104 -0.042305394  -0.04588448    5.4226576    5.4204114            0            0   0.03640453    1.0412949        0.075    2.0688936          0.5   0.11569943    4.3215425    2.8020553    30.801768 -0.029785353  -0.43211205 -0.0039936817   0.39233245   -0.2539605   0.46616441 
  869000    11.118302    1.4857342    9.6325676  -0.28248315   0.99070945    1.2512942   0.81764202   -3.5502959            3    5.5545207    7.8000746    7.9111362   0.95235125  0.035208064 -0.092390835 -0.029799118    5.3751409    5.3718138            0            0  0.074342624    1.0123042        0.075    2.1118657          0.5   0.11247825     4.445304    2.7994335    30.801768  -0.02283247  -0.36156428 0.0055911752   0.34469573   0.27307955    4.6411323 
  870000    11.103116    1.4740527    9.6290634    -0.285643   0.98292005    1.2565847   0.80114434   -3.5502959            3    5.6347686    7.9387075    7.9652243    1.0003738  0.016697199  -0.17566466   0.10075494    5.4590081    5.4512892  -0.41135745    1.9741902  -0.07627617    1.0344387        0.075     2.072911          0.5   0.11493764    4.3501851    2.7896021    30.801768  0.038123184   -0.3791457 -0.010450912   0.37318157   0.78994643    5.2109128 
  871000    11.130768     1.497494    9.6332745  -0.27547049   0.99855105    1.2878285   0.80638991   -3.5502959            3     5.585086      7.87837    7.8883043   0.98858374 -0.0088734649  -0.11325822 -0.023609875    5.4081747    5.3970446   -0.1750977   0.59532608   0.44719725     1.019323        0.075    2.0547914          0.5   0.11325811     4.414695    2.8023632    30.801768  0.026233976  -0.37198607   0.01690059   0.31635233   0.86367693  0.089669124 
  872000    11.107439    1.5015421    9.6058964  -0.28673216    1.0012504    1.2837588   0.81359538   -3.5502959            3    5.4998305    7.7210213    7.8768907    0.9015795 -0.0027543006  -0.26007792 -0.028885685    5.3213385    5.3123833            0            0   0.10617223    1.0160957        0.075    2.0745585          0.5   0.11289952    4.4287168    2.8050386    30.801768 0.0035440862   -0.4412839 -0.00016691447   0.33638075    1.3537267    1.2404966 
  873000    11.143365    1.5152232    9.6281421  -0.28294621    1.0103731    1.3125088   0.80965852   -3.5502959            3    5.6870153    7.9827827    8.0309099    1.0473534 -0.0099571278  0.014878053  -0.05863802     5.509387    5.4953702  -0.28950384   0.44978785  -0.10383281    1.0316423        0.075    2.0950325          0.5   0.11462693    4.3619768    2.8010133    30.801768 -0.015232533  -0.34353463 -0.015353965   0.30210099   -4.2127469     4.712486 
  874000    11.137865    1.5006921    9.6371726  -0.30834941    1.0006835    1.2646501   0.82536902   -3.5502959            3    5.5833544    7.7394626    7.9854464    1.0251544 -0.0017654551 -0.074881417 -0.035603669    5.4022794    5.3986974  -0.47418146    1.5299268   0.39081711      1.02291        0.075    2.0963094          0.5   0.11365667    4.3992138    2.8147179    30.801768 0.0056762444  -0.36725628 -0.0022205638    0.3586761   -1.5914353    2.8312936 
  875000    11.137219    1.5133016    9.6239173  -0.26959093    1.0090918    1.3069927   0.81119514   -3.5502959            3    5.7387651    7.9739534    8.0801154    1.1622264  0.017298233 -0.057466254 -0.044143687    5.5607996    5.5479254   0.14145939    1.8147217   0.12113219     1.025646        0.075    2.1128512          0.5   0.11396067    4.3874788    2.7896667    30.801768 -0.0020770657  -0.30835161  0.022521238   0.33753987    1.0702461    10.364356 
  876000    11.157802    1.5090574    9.6487448  -0.28476439    1.0062617    1.2781682   0.82566471   -3.5502959            3    5.7138931    7.9167248    8.1275561    1.0973984  0.024743682  -0.11918946 -0.018971369    5.5327532    5.5272622   -1.3584014   0.87408354  -0.35588091     1.017711        0.075    2.1246714          0.5     0.113079    4.4216875    2.8237485    30.801768   0.02095214  -0.33240939 -0.021532931   0.34048046     1.271108    8.4754226 
  877000    11.104082     1.497224    9.6068578  -0.29977905   0.99837098    1.2943764   0.80173189   -3.5502959            3      5.65612    7.8999194    7.9806064    1.0878342 -0.029381108 -0.025576537  -0.08643512    5.4802306    5.4671225   0.35395894    1.2372705 -0.073308999    1.0156607        0.075     2.106441          0.5   0.11285119    4.4306135    2.7966973    30.801768  0.011414091  -0.32596178 -0.026221259   0.29539604    1.3239475    7.9297795 
  878000    11.074826    1.4999476    9.5748786  -0.29602996    1.0001871    1.2936024   0.80527256   -3.5502959            3    5.5858221    7.8127115     7.958092   0.98666289 -0.002414642   0.11871001  0.033130029     5.409156    5.3969376  -0.19659568    1.3716711  -0.14529731    1.0160239        0.075    2.0976785          0.5   0.11289155    4.4290295    2.8093572    30.801768  0.015274963   -0.3850234 -0.0054015716   0.41611569   -1.7444009    5.1044868 
  879000    11.118057    1.4959483    9.6221083  -0.28096999   0.99752036    1.2703235   0.81632342   -3.5502959            3    5.6093016    7.8988457    7.9279893    1.0010696 0.0055932911 -0.068040032 -0.064329691     5.430211    5.4238161 -0.090441917     2.847921    0.1485266    1.0256375        0.075    2.0661879          0.5   0.11395972    4.3875152    2.8126988    30.801768  0.013918701  -0.42245924  0.031714812   0.36524704   0.56894841    5.7940491 
  880000     11.06419    1.4630478    9.6011422  -0.29569462   0.97558177    1.2490931   0.79390535   -3.5502959            3    5.4770899    7.7827981    7.8812554   0.76721611 -0.022919031 -0.0034359294 -0.053345362    5.3029176    5.2947044            0            0  0.050185063    1.0264953        0.075    2.0582617          0.5   0.11405503    4.3838487    2.8048246    30.801768 -0.015444465  -0.34936252  0.018985744   0.42276597   -2.0969536    2.4203898 
  881000    11.124237    1.4790585    9.6451787  -0.29351993     0.986258    1.2687436   0.79861265   -3.5502959            3    5.5150679    7.8077588    7.8857283   0.85171651 0.0038765561  -0.27569511  0.026443755    5.3398628    5.3298131   0.26356166     1.116948  -0.92141026    1.0388944        0.075    2.1209618          0.5   0.11543272    4.3315277    2.8190644    30.801768 0.0097249771  -0.35954664 -0.0027447002   0.32067207    3.6706125    5.4300916 
  882000    11.087716    1.4574685    9.6302479  -0.30386401   0.97186145    1.2427648   0.79191941   -3.5502959            3    5.4334335    7.7162435    7.8174436   0.76661341 -0.013175269  -0.10488712  0.016280053    5.2596969     5.251972  -0.37710004   0.61868121  0.058216171    1.0438649        0.075    2.1064163          0.5   0.11598498    4.3109029    2.8220163    30.801768 -0.012797091  -0.36537245 -0.0059942638   0.34689266    1.1894468    2.9116664 
  883000    11.067691    1.4562218    9.6114694  -0.29728489   0.97103015    1.2301021   0.79896229   -3.5502959            3     5.653733    7.8791993    8.0420027    1.0399971 0.0047741839 -0.061541772  0.075746221    5.4784513    5.4741205   0.47204218   0.86354094  -0.67342863    1.0283292        0.075    2.0968582          0.5    0.1142588    4.3760307    2.8079954    30.801768 -0.012940169  -0.34119733 -0.0039447604   0.34495648  -0.23612358    4.5757221 
  884000    11.072681    1.4618873    9.6107942  -0.28407047   0.97480797    1.2312616   0.80448414   -3.5502959            3     5.660147    7.9131843    8.0450052    1.0222517  -0.01757931  -0.17242632 -0.019310244    5.4836539    5.4803652  0.064004028     2.114096  0.075328663    1.0352402        0.075    2.1160383          0.5   0.11502669    4.3468171      2.82621    30.801768   0.00166752  -0.27006968 0.0054580457   0.36086208    3.6790334    2.3243827 
  885000    11.077838    1.4685329    9.6093047  -0.29386808   0.97923937    1.2588301   0.79351816   -3.5502959            3    5.7351212    7.8647862    8.1121496    1.2284279 -0.00033932581 -0.051174446 -0.0094259821    5.5610338     5.551314   0.57945557    1.2205573 0.0090664561    1.0257049        0.075    2.1196817          0.5   0.11396721    4.3872268    2.8005216    30.801768 -0.00067117508  -0.37608831  0.049607859    0.4129781   -1.2781356    7.6284248 
  886000    11.111461    1.5041567    9.6073043  -0.28834514    1.0029938    1.2486493   0.83986716   -3.5502959            3    5.4519483    7.7783059     7.861474   0.71606511 0.0024636014  0.071850326  0.042989616    5.2676926    5.2696276   0.25499978    3.2494335   0.12654995     1.030536        0.075    2.0633656          0.5     0.114504    4.3666595    2.8320201    30.801768  -0.01154819  -0.31197812  0.016106897   0.31748463  -0.79367327   -1.3346127 
  887000    11.137129    1.5096609    9.6274677  -0.29153805    1.0066641    1.2797383   0.82529015   -3.5502959            3    5.4105199    7.7453518    7.7934852   0.69272273 -0.0070047775  -0.22026506 -0.059543672    5.2294622    5.2236598            0            0  -0.21420745    1.0232318        0.075    2.0569065          0.5   0.11369243    4.3978304    2.8286733    30.801768  0.029637756  -0.31245047 0.0014869895    0.3854415    0.9818017    1.3838484 
  888000    11.082605    1.4585041    9.6241013   -0.2807716     0.972552    1.2783295   0.76939951   -3.5502959            3    5.9290195    8.0652677    8.1884883    1.5333025 0.0044829954 -0.086414366 -0.019857585    5.7602234    5.7423651  -0.11881699   0.46452087 -0.046387363    1.0327754        0.075    2.0691053          0.5   0.11475283    4.3571911    2.8228521    30.801768 -0.011744051  -0.43661281 -0.0061355826   0.36503487  -0.94616908    7.4533158 
  889000    11.170721    1.5388003    9.6319209  -0.29057054    1.0260947    1.2952861    0.8473121   -3.5502959            3    5.4882015    7.8146508     7.856473   0.79348069  0.017359142  -0.10410861  0.089898534    5.3023124    5.2990711            0            0 -0.094810964     1.020192        0.075    2.0748567          0.5   0.11335466    4.4109345     2.819931    30.801768  0.034170651  -0.36431709 -0.047285141    0.4232292   0.95056073    6.8198606 
  890000    11.129842    1.5078957    9.6219466  -0.30517652    1.0054871    1.3126627   0.80141619   -3.5502959            3    5.5163844    7.8162282    7.8955182   0.83740681 -0.061986657  0.084281658 -0.028920117    5.3405643    5.3247168            0            0 -0.050568108    1.0246517        0.075    2.0951658          0.5   0.11385019    4.3917364    2.8113076    30.801768 0.0067810099  -0.37627647  0.010505977   0.37224554    0.0621718    5.2715996 
  891000    11.087995    1.4762158    9.6117788   -0.2886649   0.98436243    1.2678205   0.79606913   -3.5502959            3    5.4606612    7.7536622    7.8689833   0.75933793 -0.021454068  -0.05060513 -0.030742647    5.2860141    5.2755412  -0.11844324   0.72668139   0.18383967    1.0200571        0.075    2.0890426          0.5   0.11333967    4.4115179    2.8050403    30.801768 0.0024142717  -0.30296974 0.0055912045   0.34462279   -1.9151764    3.0716212 
  892000    11.144092    1.5285723    9.6155194  -0.29784735    1.0192745    1.3027089   0.83100986   -3.5502959            3    5.6406726    7.8989316    7.9996252    1.0234611 -0.00083974168   0.09160087  0.041366324    5.4583601    5.4504584   0.45525995    3.0707245  0.099514072    1.0341403        0.075    2.0653189          0.5   0.11490448    4.3514403    2.8371775    30.801768  0.030628469  -0.34129681 -0.032846133   0.32538382   -1.5646233  -0.82645388 
  893000    11.126005    1.5022857    9.6237197  -0.28781827    1.0017462    1.3186568   0.79119481   -3.5502959            3    5.4941223      7.76268    7.8614589   0.85822799 -0.043197956 -0.048930207 -0.084089825    5.3205446    5.3015795            0            0   0.17041625    1.0134408        0.075    2.0774093          0.5   0.11260454    4.4403184      2.80037    30.801768 0.0089711025  -0.37523035 -0.026366061   0.40579142    2.2448479    6.4391647 
  894000    11.112124    1.4916281    9.6204959  -0.27944638    0.9946396    1.2998521   0.79187131   -3.5502959            3    5.6379834    7.8837562    7.9553802    1.0748139  0.027631165  -0.21623807  0.023219168    5.4642573    5.4481864   0.76421094    1.3144522   0.14733291    1.0126347        0.075    2.0659097          0.5   0.11251497    4.4438531    2.7949695    30.801768  0.030680203  -0.41459644 -0.010543774   0.37440705    1.9048579    4.0457365 
  895000    11.138833    1.5059248    9.6329083  -0.28810006    1.0041728    1.3124949   0.79933843   -3.5502959            3    5.4830301    7.7529633    7.8225934    0.8735336 -0.027565271   0.11616959 -0.031140928    5.3076659     5.291387 -0.039759289   0.38742589 0.0084754768    1.0140416        0.075     2.076994          0.5   0.11267129    4.4376877    2.8094531    30.801768 0.0075333665  -0.38368463 -0.032500275   0.35158318   0.80244313   -5.5887122 
  896000    11.205427    1.5417513    9.6636756  -0.26974603    1.0280625    1.3202047   0.83400551   -3.5502959            3    5.6907278    7.9653279    8.0784772    1.0283782 -0.025544818 -0.066333263   -0.1050517     5.507758    5.4979589   0.09540257   0.93442159  0.046778412    1.0206046        0.075    2.0433373          0.5   0.11340051    4.4091512    2.8281362    30.801768 -0.025611027   -0.4119443 -0.0016120505   0.37910923   -1.7297487  -0.63166854 
  897000    11.150049    1.5214595     9.628589  -0.29209895    1.0145316     1.317886   0.81300732   -3.5502959            3    5.5332969    7.8178264    7.9518044   0.83025984 -0.0062744507  -0.18711369  -0.18132917    5.3549338    5.3408666  -0.33530252      1.19522 -0.034313682    1.0220822        0.075    2.0727246          0.5   0.11356468    4.4027772    2.7964426    30.801768  -0.01140319  -0.40398702 -0.017554346   0.39018819    1.5641462   0.91747801 
  898000    11.122245    1.5220443    9.6002002    -0.282964    1.0149216     1.350976   0.79163374   -3.5502959            3    5.5622848     7.897559    7.9219833   0.86731196 -0.0060277913 -0.069770145  0.037276886    5.3886108    5.3650229            0            0 -0.084753014    1.0323831        0.075    2.0483381          0.5   0.11470923    4.3588471    2.8193936    30.801768   0.02425978  -0.36886689 0.0093942541    0.3906142   -1.1321543   -1.5096821 
  899000    11.123476    1.4853396    9.6381362  -0.26970497    0.9904463    1.2754894   0.80110036   -3.5502959            3    5.5271882    7.8522455    7.8611866   0.86813263 -0.011916074 -0.024271489 -0.072434758    5.3514374    5.3409485            0            0   0.27583168    1.0211825        0.075    2.0820024          0.5   0.11346472     4.406656    2.8203378    30.801768 0.00015161561  -0.34440762  0.034466052   0.38618711    1.1315508   0.44476395 
  900000    11.130626    1.5108377    9.6197878  -0.30019671    1.0074488    1.2962705   0.81559427   -3.5502959            3    5.4670168    7.6994925    7.8785954   0.82296249 -0.047129307   -0.0489416 -0.065833226    5.2880862    5.2777427            0            0   0.16009056    1.0305736        0.075    2.0733866          0.5   0.11450818    4.3665004    2.8225611    30.801768 -0.012636013  -0.35582149 -0.010736956   0.38650698    2.0292011    3.1219434 
  901000    11.145939    1.5081323    9.6378065  -0.29914374    1.0056448    1.2735814   0.82768987   -3.5502959            3    5.6588892    7.9553071    7.9881902    1.0331705  0.019582939  -0.13152675   0.06235601     5.477305    5.4729281   0.73626816    3.1479592 -0.085063449    1.0217866        0.075    2.0464632          0.5   0.11353184    4.4040508    2.8250799    30.801768 -0.00062483514  -0.33981023  -0.02925262   0.39755199   0.32912443     3.145994 
  902000    11.137749    1.4952165    9.6425326   -0.2927817   0.99703239    1.2633146   0.82017529   -3.5502959            3    5.3202906    7.5289511     7.732519   0.69940163 -0.0068576349  -0.06546746  0.025555638     5.140355    5.1358285   0.73986767    1.0580467  0.097266591    1.0203973        0.075    2.0603894          0.5   0.11337748     4.410047    2.7908166    30.801768 -0.010306021  -0.37292566 -0.0019829948    0.4061784    1.4466595  -0.46375926 
  903000    11.095655     1.502763    9.5928924  -0.30339419    1.0020645    1.2876443   0.81236562   -3.5502959            3    5.5361056    7.7674478    7.9279458   0.91292317  0.019065111 0.0078910223  0.011240777    5.3578833     5.348091            0            0   0.09846669    1.0341216        0.075    2.0535078          0.5    0.1149024    4.3515193    2.8175566    30.801768 0.0047470649    -0.410241 -0.038782604   0.34051122    -2.541081   -2.4117031 
  904000    11.089378    1.4966956    9.5926824  -0.28638346   0.99801865    1.2633321   0.82180673   -3.5502959            3    5.7393123    8.0343903    8.0172503    1.1662964 -0.052579116  -0.14395717  0.041473752    5.5590188    5.5548477   -1.2052056   0.64089577   0.18935199    1.0314136        0.075    2.0546929          0.5   0.11460151    4.3629441      2.81548    30.801768  0.031104848  -0.34526577  0.035891966   0.38172236    2.1341537    1.9797094 
  905000    11.060567    1.4715142    9.5890525  -0.28743485   0.98122733    1.2646874   0.79293155   -3.5502959            3     5.381264    7.6688451    7.8035234   0.67142361 -0.024046856  0.049922058  0.030982545    5.2073053    5.1966015  -0.53722866    1.6847699  0.023851459     1.016277        0.075     2.055044          0.5   0.11291967    4.4279265    2.8029316    30.801768  0.018257324  -0.31971092 -0.015301247   0.30658071   -1.4304402  -0.30272608 
  906000    11.079039    1.4725531    9.6064863  -0.28838384   0.98192009    1.2792419    0.7843988   -3.5502959            3    5.6850207    7.8983553     8.044199    1.1125078 0.00085858654  -0.14622575  0.082323137     5.512934     5.498233   0.97542589    1.5401741   0.22084775    1.0344473        0.075    2.0514395          0.5   0.11493859    4.3501492    2.7971077    30.801768  0.014683809  -0.38429209 -0.027827316   0.41868291   0.13142167    3.3936975 
  907000    11.083826    1.4538518    9.6299742   -0.3049376   0.96944979    1.2420313   0.78838999   -3.5502959            3    5.4686643    7.6821197    7.9179059    0.8059672 -0.0029641512  -0.24492836 -0.047242166     5.295702    5.2873099            0            0  0.063701698    1.0249773        0.075    2.0795035          0.5   0.11388636    4.3903412    2.8318585    30.801768 -0.010536695   -0.4366139 -0.00094387714   0.29535494   0.74150505    2.5413859 
  908000    11.102599    1.5009133    9.6016862  -0.30119401    1.0008311    1.2999134   0.80214506   -3.5502959            3    5.6465129    7.8315062    7.9727321    1.1353005 -0.012925427  -0.12966127  0.084782368    5.4705329    5.4567069  -0.50679717   0.35879102  0.021718565    1.0342158        0.075    2.0979919          0.5   0.11491286     4.351123    2.8152324    30.801768 -0.014030919  -0.33667933 0.0025239187   0.38807858  -0.33463586      7.27906 
  909000    11.133947    1.5175159    9.6164311  -0.27211821    1.0119019    1.2739375   0.83787672   -3.5502959            3    6.0013044    8.1716732    8.2219218    1.6103183  0.020613138  -0.26161665 -0.029987147    5.8174854    5.8152913            0            0   0.31466156    1.0099419        0.075    2.0498493          0.5   0.11221576     4.455702    2.7992212    30.801768 -0.025677224  -0.39901825 -0.012803791   0.36190015    1.0515224    3.9488212 
  910000    11.109101    1.5010251     9.608076  -0.30391865    1.0009056    1.3235397   0.78654461   -3.5502959            3    5.6370105    7.8592297    7.9629639    1.0888379 -0.017959251  -0.10415717  0.068487977     5.464453    5.4437547  -0.20835705    1.0446208   0.14958207    1.0394567        0.075    2.0616464          0.5   0.11549518    4.3291849    2.8422502    30.801768  0.011889433  -0.34392899 -0.025301357   0.34991884    1.6839038     7.051263 
  911000    11.114048    1.4611381      9.65291  -0.27009841   0.97430837    1.2696543   0.77809934   -3.5502959            3    5.5734674    7.8181053    7.9728971   0.92939967 -0.0091544272   0.17859777  0.040589599    5.4027627    5.3880796   0.17707945    1.2012794  0.049430352    1.0231431        0.075    2.0542671          0.5   0.11368256    4.3982119    2.8189253    30.801768 -0.005053929  -0.36219497  0.021853841   0.26518615   -1.4246258    3.4495399 
  912000    11.074822    1.4806912    9.5941311  -0.31910524   0.98734667    1.2666058   0.80184915   -3.5502959            3    5.6910768    7.8615382    8.0101465    1.2015457 -0.017265183  -0.41913746 -0.0048630369    5.5151617    5.5061342  -0.18575885   0.19286733 -0.085843071    1.0344289        0.075    2.0490221          0.5   0.11493654    4.3502265    2.8315803    30.801768 0.0095306532  -0.39623187 0.0084513441   0.34927062    4.4695125    4.9299603 
  913000    11.090184     1.503272    9.5869121  -0.29722882    1.0024039     1.275084   0.82129067   -3.5502959            3    5.6735736    7.9119245    8.0481053     1.060691 -0.0040529478   0.19209573 -0.002841539    5.4933933    5.4873931  -0.44462603    1.8320626 -0.071076394    1.0239436        0.075    2.0414515          0.5   0.11377151    4.3947732    2.7974003    30.801768  0.015523847  -0.28920051 -0.0038828089   0.37457353   -2.8894578   0.47528763 
  914000    11.052676    1.4546288    9.5980476  -0.28878407   0.96996786    1.2333411    0.7950369   -3.5502959            3    5.6665909    7.9488975    8.0095179    1.0413573 -0.0092831287  -0.10934766 -0.018272466    5.4921703    5.4865054   0.88519557   0.54648995 -0.096243166     1.041166        0.075    2.0592352          0.5   0.11568511    4.3220773    2.8179389    30.801768 0.0093884556  -0.36163037  0.015520054   0.37455926    1.1041983    3.8744685 
  915000    11.102572      1.48136    9.6212116  -0.27779603   0.98779267    1.2497785    0.8137917   -3.5502959            3    5.5515019    7.8111369    7.8697976   0.97357107  -0.02053477 -0.073679132 -0.068530755    5.3729667    5.3690163   -1.3256552    0.5173006 -0.058624557    1.0227102        0.075    2.0114977          0.5   0.11363447    4.4000734    2.7897203    30.801768 -0.015521572  -0.30763201 0.0076610316   0.40360754   -2.6215803    -1.471263 
  916000    11.084504    1.4636868    9.6208174  -0.30005899   0.97600787    1.2455832   0.79695127   -3.5502959            3    5.4456021    7.6988553    7.9038741   0.73407694 -0.020728366  0.063624622 -0.024797947    5.2707616    5.2637291            0            0  0.076873316    1.0418167        0.075    2.0435181          0.5   0.11575741    4.3193777    2.8245894    30.801768 -0.014927055  -0.32989663  0.037614827   0.37548838     2.722436    1.6037285 
  917000     11.13417    1.5202552    9.6139151  -0.29733336    1.0137285    1.2722962   0.84201208   -3.5502959            3    5.3564974    7.7166966    7.7543828   0.59841282 -0.047047901 -0.093961223 -0.072869858    5.1717711    5.1707239            0            0    0.1729957    1.0268697        0.075    2.0710124          0.5   0.11409663    4.3822503    2.8186912    30.801768  0.015253669   -0.3583606 -0.011115926   0.30294947   -2.6949974    1.3779681 
  918000     11.17613    1.5309195    9.6452107   -0.2851126    1.0208396    1.3106305   0.82834499   -3.5502959            3    5.5340786     7.822732    7.9118955   0.86760813 -0.0072735325   0.18002142  0.018250049    5.3523506    5.3427077 -0.038651888    0.7744719  0.099744172    1.0320943        0.075    2.0912769          0.5   0.11467714    4.3600669    2.8282931    30.801768  0.015713517  -0.36284196 -0.017506027   0.43848125   0.89018924    3.0443999 
  919000     11.11876    1.5023264    9.6164338  -0.29263685    1.0017734    1.2381173   0.84484362   -3.5502959            3    5.5835866    7.7693046    7.9532815    1.0281738  0.028659231 -0.090379074   0.25300986    5.3982391    5.4028037            0            0  0.054367832    1.0099476        0.075    2.0451669          0.5    0.1122164    4.4556769    2.8088331    30.801768 -0.013948748  -0.44286748 -0.014046222    0.3813606    0.5767164    6.4730424 
  920000    11.113353    1.4763611    9.6369921  -0.28989883   0.98445931    1.2527778   0.80624234   -3.5502959            3    5.7165614    7.9283789    7.9964507    1.2248545 -0.0082980867  0.044120886  -0.05558249    5.5396825    5.5336378   0.33568217    1.3489884   0.10497563    1.0216357        0.075    2.0281899          0.5   0.11351507    4.4047014    2.8093504    30.801768  0.010610101   -0.3786349 0.0020342632   0.38764279   0.63960314    2.6842444 
  921000    11.082633    1.4732922    9.6093409  -0.29159601   0.98241293    1.2583563    0.7991204   -3.5502959            3    5.5495491    7.8574965    7.9386467   0.85250399 -0.041288444   -0.1570301 -0.043492665    5.3742326     5.365811            0            0  0.033741553    1.0458944        0.075    2.0910289          0.5   0.11621049    4.3025376    2.8072722    30.801768  0.020177835  -0.41486955 -0.0019323226   0.46774612    1.1265116   0.57997746 
  922000    11.056425    1.4660364    9.5903883  -0.29556154   0.97757464    1.2860297   0.77264192   -3.5502959            3    5.5950246    7.8364845    7.9758585   0.97273086   0.01582171  -0.14523313 0.0021375761    5.4255172    5.4072458   0.68366419   0.79122514   0.25551824    1.0323717        0.075    2.0651773          0.5   0.11470797    4.3588951    2.8143443    30.801768 0.0026017305  -0.35401166 -0.026059071   0.34270257    1.2027052      5.41768 
  923000    11.084068    1.4694313    9.6146369  -0.29332253   0.97983845    1.2530853   0.79833963   -3.5502959            3    5.6055456     7.836683    8.0014656   0.97848825 -0.010984099  0.061748349   0.21339883    5.4304005    5.4225772   -1.2093432    1.2180972  0.082969372    1.0323671        0.075      2.06198          0.5   0.11470746    4.3589145    2.8144363    30.801768 -0.023666138  -0.42208267 -0.0026637045   0.38195094   -2.3867126    5.2891948 
  924000    11.093824    1.4752676    9.6185563  -0.28538661   0.98373016    1.2601596   0.80011463   -3.5502959            3    5.4208199    7.6472462    7.8571056   0.75810782 -0.021961818 -0.096252085  0.018609719    5.2452853    5.2368185  -0.35298954    1.3617307  -0.10851554    1.0178935        0.075    2.0521015          0.5   0.11309927    4.4208949    2.7804828    30.801768 -0.010503036  -0.36410814 -0.018044771    0.3707394    1.1009312    6.3436833 
  925000    11.071167      1.47393     9.597237  -0.28906765   0.98283819    1.2683444   0.79318123   -3.5502959            3    5.7361018    7.9374198    8.0831632    1.1877223  0.016712356  -0.21802357 -0.027980984    5.5620883    5.5509053  -0.57243807   0.82585643  0.033154181     1.023353        0.075    2.0509218          0.5   0.11370589    4.3973097    2.8070677    30.801768  0.010240828  -0.31182576 0.0036549378   0.38106734  -0.11823789     4.227325 
  926000    11.076044    1.4589435    9.6171001  -0.30302743   0.97284501    1.2537152   0.78626989   -3.5502959            3    5.5951243    7.8588805    7.9404523   0.98604003 -0.033488622   0.16020439   0.11281336    5.4226271    5.4120639  0.097210494    2.2093605 -0.0025812295    1.0346842        0.075    2.0494268          0.5   0.11496492    4.3491529    2.8012861    30.801768 0.0084910352  -0.35412131 -0.0052385622   0.35720032   -3.3096258    6.3081742 
  927000    11.066043    1.4680217    9.5980213  -0.29567291   0.97889846    1.2519265   0.79754495   -3.5502959            3    5.2906236    7.6463229      7.72827   0.49727793 -0.016372531  -0.25197074 -0.058452426    5.1156528    5.1078244  -0.95321887   0.45297907   0.13404018    1.0197601        0.075    2.0538768          0.5   0.11330668    4.4128025    2.7899061    30.801768 -0.0071359934  -0.34458729  0.033976354    0.4413531    2.2292795   -2.3252607 
  928000    11.035291    1.4605885    9.5747021  -0.30661831   0.97394191    1.2956866   0.76016289   -3.5502959            3     5.660491    7.8301466    8.0036956    1.1476307 -0.015008368   0.12148226  0.059917524    5.4937213    5.4713021    1.7573404     1.714698 0.0082502878    1.0447881        0.075     2.068822          0.5   0.11608757    4.3070934    2.8292855    30.801768 -0.0059841445  -0.36631318 -0.027828288   0.36210595    0.9830388    7.2373931 
  929000     11.06947    1.4602833    9.6091871  -0.28766263   0.97373837    1.2586679   0.78446185   -3.5502959            3    5.4694566     7.775458     7.827218   0.80569367 -0.027780348  -0.19296406  0.060715954     5.297356     5.285673   0.85263969   0.35448015  -0.94573567    1.0059835        0.075    2.0633644          0.5   0.11177594    4.4732345    2.7731936    30.801768 -0.022207831  -0.30846319 -0.028161883   0.27494692   0.31350494    4.5818149 
  930000    11.138945    1.4860281    9.6529165  -0.30225295   0.99090543    1.2812747   0.79801482   -3.5502959            3     5.784183    7.9539109    8.0943534    1.3042847 -0.011293519 -0.064144091 -0.073181969    5.6091091    5.5970985   0.10022297    1.0042418  -0.43398466    1.0289497        0.075    2.0682757          0.5   0.11432775    4.3733916    2.7940143    30.801768 -0.015591795  -0.32932747 -0.00019049258   0.42178381    1.3004226    1.8652703 
  931000    11.087543    1.4813791    9.6061635  -0.29586639   0.98780537    1.2806854   0.79324253   -3.5502959            3    5.7105893    7.9429907    8.0313672    1.1574102  0.027024997 -0.044257186  0.055991252    5.5365624    5.5235909   0.32531874    2.3662062   0.26636251    1.0346529        0.075      2.05429          0.5   0.11496143    4.3492847    2.8095748    30.801768  0.012684017  -0.27969458   0.01946641   0.36016035   -2.0683012    2.6710819 
  932000    11.084623    1.5172231    9.5673998  -0.31097086    1.0117067    1.2913485   0.82596353   -3.5502959            3    5.5427121     7.787919     7.971916   0.86830118  0.014523296  -0.17209625   0.12568548    5.3615066    5.3541567            0            0  0.086707157    1.0226961        0.075    2.0931367          0.5    0.1136329    4.4001342    2.7983551    30.801768 -0.021189075  -0.45467609 -0.013341116   0.35004692    2.5829944  -0.29902146 
  933000    11.154548     1.529902     9.624646  -0.30606681    1.0201611    1.2940366   0.83825889   -3.5502959            3    5.5442499     7.759129    7.9330231   0.94059748  0.013653019  0.059302488  0.046878603     5.360347    5.3553019   -1.2111557    1.9504444  -0.12066576    1.0237552        0.075    2.0879388          0.5   0.11375058     4.395582    2.7912309    30.801768 -0.034907353  -0.37785379 -0.013941534   0.28425247  -0.40155516     1.145454 
  934000    11.154084    1.4880972    9.6659863  -0.28755146   0.99228514    1.2894394    0.7948792   -3.5502959            3    5.5510106    7.7824394    7.9338548   0.93673752  0.011819268 0.0074617034 -0.060376683    5.3766246    5.3627339   0.83137613    1.2997886  -0.19498593    1.0259945        0.075    2.0552608          0.5   0.11399939    4.3859883    2.8041587    30.801768 0.0025394024  -0.40369312 -0.010868438   0.43895808   0.41609809    4.0121982 
  935000    11.125395    1.4996102    9.6257848  -0.28008464   0.99996214    1.2860711   0.80991033   -3.5502959            3    5.7126152     7.991735    8.0364659    1.1096446  0.016843493  0.098779222   0.12618495    5.5349316    5.5248303   0.13038831   0.71931112 -0.052963905    1.0254926        0.075    2.0496475          0.5   0.11394363    4.3881349    2.8052895    30.801768 0.00040513304  -0.45636092 -0.010265546   0.34776044  -0.80676765     3.285114 
  936000     11.06971    1.4519309    9.6177786     -0.30217   0.96816887    1.2562357   0.77680225   -3.5502959            3     5.508802    7.7398665    7.9602862   0.82625327 -0.014240699  -0.29649167 -0.052690263    5.3383819    5.3253736    1.3305424     1.827994   0.39396199     1.019606        0.075    2.0437666          0.5   0.11328955    4.4134696    2.8202751    30.801768 0.0095400108  -0.35783222 -0.014934321     0.334173    2.0498153    2.1066208 
  937000     11.10812    1.4951457    9.6129743   -0.3012956   0.99698515    1.2855564   0.80529343   -3.5502959            3    5.6294306    7.8442971    8.0065106    1.0374841  0.012200033  0.015561053 -0.041560572    5.4527599    5.4417209            0            0   0.76848121     1.050199        0.075    2.0458652          0.5   0.11668878    4.2849021    2.8225862    30.801768 -0.0072125194  -0.32257525 0.0079588211   0.43366506   -4.0010213    8.1501165 
  938000       11.069    1.4580393    9.6109606  -0.28524451   0.97224205    1.2306514   0.80061567   -3.5502959            3    5.6558447    7.8210328    7.9900405    1.1564608  0.045900817  -0.12350545  0.018315667    5.4802002    5.4761519            0            0  -0.17992458    1.0116204        0.075    2.0913009          0.5   0.11240227    4.4483087    2.7926866    30.801768 0.0022458556  -0.36568891 -0.013339811   0.38785522   0.70306544    6.9402084 
  939000    11.066501    1.4622324    9.6042687  -0.27010828   0.97503811    1.2639439   0.78311566   -3.5502959            3    5.6205044    7.9322418    7.9223828    1.0068885 -0.024990284   0.11805676 -0.00059678404    5.4486992    5.4359505   0.48757163    1.5128538  0.031214235    1.0501779        0.075    2.0602615          0.5   0.11668643    4.2849885    2.8118498    30.801768  0.013484863   -0.4778299  0.012485186   0.40385541    1.2621797    3.3606316 
  940000    11.101402     1.459623     9.641779  -0.28666428   0.97329812    1.2514122   0.78855748   -3.5502959            3    5.5294972    7.7183865    7.9279058   0.94219925  0.014063124  -0.29274814 -0.0014142164    5.3564981    5.3467731  -0.78457808    2.3735893   0.11004878    1.0160635        0.075    2.0727202          0.5   0.11289595    4.4288569    2.8171487    30.801768 -0.0059922147  -0.32256367  0.018279929   0.36410974    3.5935995    6.7297686 
  941000    11.102863    1.4895226    9.6133406  -0.30132078   0.99323559     1.279635   0.80298801   -3.5502959            3    5.6476755     7.823532    7.9928722    1.1266223 -0.0015093816 -0.079472582 -0.013801852    5.4715105    5.4608304  -0.20058528    1.5566456   0.17152217    1.0128486        0.075    2.0512945          0.5   0.11253873    4.4429148    2.7882614    30.801768 -0.019326007  -0.47047248  0.030066709   0.35282937  -0.14081125    10.233881 
  942000    11.129758    1.5202453    9.6095131  -0.28620849    1.0137219      1.28418   0.83409179   -3.5502959            3    5.5457075    7.8219671    7.8776795   0.93747579 -0.013811953  -0.16872699 -0.038568369    5.3627188    5.3581988   -0.8315029    1.0625603  -0.65567407    1.0185851        0.075    2.0696868          0.5   0.11317612     4.417893    2.8409299    30.801768 -0.0081541071  -0.33732494  0.019106911   0.35974221   -2.0440904    1.5384431 
  943000     11.10015    1.4793398    9.6208106   -0.2918046   0.98644558    1.2965804   0.78039817   -3.5502959            3    5.7000987    7.8850409    7.9605199    1.2547354  0.015939381 -0.019554876  0.025816335    5.5288897    5.5107794  -0.49713293     1.616439   0.12966016    1.0240712        0.075    2.0425953          0.5   0.11378569    4.3942256    2.8033253    30.801768 -0.035957975  -0.37233934 -0.017513415   0.34377368    1.7258407    4.7528478 
  944000    11.126134    1.4959886    9.6301453  -0.28720046   0.99754719    1.2730803    0.8145333   -3.5502959            3    5.5361229     7.806506    7.9507909   0.85107187 -0.033663424 -0.058123123  0.036813452    5.3574251    5.3502349  -0.75864622   0.70921385   0.03557313    1.0236628        0.075    2.0534361          0.5   0.11374031     4.395979    2.8053457    30.801768 -0.014673809  -0.35655678 0.0045285861   0.34853686   -2.6518556    7.5740318 
  945000    11.103471    1.4941475     9.609324  -0.29546348   0.99631951    1.2790385   0.80852254   -3.5502959            3    5.6277448    7.8209545    7.9979785    1.0643015 -0.0014401934  0.063562908   0.01550704    5.4503657    5.4409869  -0.26007589    2.8202015   -0.1245118      1.02581        0.075    2.0441323          0.5   0.11397889    4.3867772    2.8134725    30.801768 -0.024064436  -0.46599721 -0.0047664983   0.31147565    1.6665319    3.5127091 
  946000    11.114844    1.4939888    9.6208556  -0.29519245   0.99621369    1.2796163   0.80796172   -3.5502959            3    5.5309487    7.7825171    7.9024913   0.90783777   0.01514585  -0.16982112  0.032324902    5.3536926    5.3441064   0.11017732   0.70526738  -0.16037707    1.0205218        0.075    2.0426702          0.5   0.11339131     4.409509    2.7889212    30.801768 0.0094253882  -0.30858867 -0.018689219   0.31142479  -0.45547133    3.7429703 
  947000    11.101112    1.4536856    9.6474266  -0.30030315   0.96933898    1.2429092   0.78762106   -3.5502959            3     5.544294    7.7417834      7.94053   0.95056857  0.023476404  -0.31931039 -0.057661618    5.3715003    5.3628114   0.26261778   0.93546094    0.1680652    1.0236798        0.075     2.036278          0.5    0.1137422    4.3959059    2.8288749    30.801768 -0.014663142   -0.4324329 -0.018488629   0.39294653    3.2403964    2.4739457 
  948000    11.111931    1.4870092    9.6249214  -0.28282066   0.99155962    1.2611097   0.81252559   -3.5502959            3    5.5384128    7.8394594    7.8864339   0.88934506 -0.032338124   0.18043334  -0.01766818    5.3601554    5.3542727    0.5967437    1.0385512  -0.12284808    1.0061583        0.075    2.0544831          0.5   0.11179536    4.4724574    2.8075803    30.801768 -0.014408343    -0.413917 -0.017116715   0.38882789    -3.262936    4.8796318 
  949000      11.0886     1.513844     9.574756  -0.31616193    1.0094534    1.2973933   0.81818654   -3.5502959            3    5.8819087    8.0680729    8.1764539    1.4011993 -0.0042658795   -0.3170204  0.048870209    5.7024094    5.6924706  -0.72799289    1.2686935  0.055565719    1.0458888        0.075    2.0535732          0.5   0.11620987    4.3025606    2.8182502    30.801768  0.018698906  -0.34719102 0.0013372028    0.3598391    4.1720785    3.9517864 
  950000    11.041087    1.4658831    9.5752035  -0.29642432    0.9774724    1.2672799    0.7849507   -3.5502959            3    5.4864536    7.6678984    7.8710883   0.92037402  0.013392874 -0.059725378  0.033406379    5.3142458    5.3014125            0            0  0.024110056    1.0199763        0.075    2.1016855          0.5    0.1133307    4.4118674    2.8104194    30.801768  0.021287896  -0.40386372 -0.013835042   0.34549625    2.4851911    3.0424662 
  951000    11.138438    1.5047078    9.6337301  -0.29961303    1.0033613    1.2636984   0.83046337   -3.5502959            3    5.6585422    7.9381809    7.9866402    1.0508056 0.0029539324   0.01168526  0.021136628    5.4763496    5.4740242   0.46167743    1.1657181  0.019680833    1.0272884        0.075    2.0780175          0.5   0.11414315    4.3804642    2.7915292    30.801768 0.0014584222  -0.40426926 -0.0036696837   0.35949285   -2.0386613    3.2027765 
  952000    11.106518    1.4717801    9.6347377   -0.2835181   0.98140464    1.2591195   0.79693273   -3.5502959            3    5.6459399    7.9054207    7.9194403    1.1129587 -0.030044041  0.020659417   0.06648544    5.4711034    5.4620904   0.18599013    1.2074328  0.015077525    1.0167835        0.075    2.0785656          0.5   0.11297594    4.4257211    2.7957827    30.801768 -0.0098806514  -0.40210076 -0.0030625069   0.37375299    1.1333745    7.2289472 
  953000    11.107847    1.4965021    9.6113451  -0.30812773   0.99788959    1.2974192   0.79890483   -3.5502959            3    5.5641662    7.8694191    7.8797403   0.94333923 -0.010747045  -0.26914366 -0.0045533024    5.3888971    5.3747244    1.0938212    1.8204588    0.1828577    1.0359667        0.075    2.1045182          0.5   0.11510741    4.3437689     2.801246    30.801768 0.0094341453  -0.35712811 -0.021408067   0.41010152    2.0574341     3.814939 
  954000    11.115677    1.5054927    9.6101839  -0.28993232    1.0038847    1.2713092   0.82626984   -3.5502959            3    5.6066986    7.8381196    7.9497276    1.0322486 -0.0027370225 -0.046456636  -0.15680243    5.4254259    5.4210692 -0.050655774    1.2339556   0.47086973    1.0130653        0.075    2.0741821          0.5   0.11256281    4.4419644    2.8183437    30.801768  0.010397072  -0.40108791 -0.024423813   0.43087537  0.087293487   0.25963722 
  955000     11.15387    1.5199374    9.6339328    -0.285316    1.0135166    1.2749887   0.83986705   -3.5502959            3    5.4580713     7.788415    7.8470262   0.73877255 -0.032971886   0.14875078 0.0061352234    5.2738156    5.2719046            0            0   0.23579726    1.0360321        0.075     2.074912          0.5   0.11511468    4.3434948    2.8113855    30.801768  0.013373785  -0.39305063  0.013090401   0.41595626    -1.945989    1.1007642 
  956000    11.127526     1.499382    9.6281442   -0.3018813   0.99980997    1.2661669   0.82290419   -3.5502959            3    5.3847997    7.6048238    7.8033061   0.74626929 -0.0031622788  0.019646587 -0.085102606    5.2042655    5.1999212            0            0  -0.41437936    1.0044329        0.075     2.097905          0.5   0.11160365    4.4801401    2.8094277    30.801768  0.014783744  -0.33851029  0.012593419   0.31372441    1.9449415    2.0406634 
  957000    11.141312    1.5040468    9.6372654  -0.27452043    1.0029205    1.2918527    0.8109908   -3.5502959            3    5.5478949     7.828286    7.9555559   0.85984294 0.0013080691  0.031721871 -0.00020821277    5.3699743    5.3592659   0.42028789    0.4634317  0.032757596    1.0215469        0.075    2.1150246          0.5   0.11350521    4.4050843    2.8007228    30.801768 -0.021392535  -0.34510715 -0.051154652   0.35586423   0.46164912   0.48995424 
  958000    11.112133    1.5011909    9.6109417  -0.28271462    1.0010162    1.2910058   0.80838197   -3.5502959            3    5.7550129    7.9328936    8.1294011    1.2027439   0.02420308 -0.096889941  0.075747776    5.5776646    5.5665075   0.97563148   0.64887799   0.14684517    1.0279682        0.075    2.0711775          0.5   0.11421869    4.3775672    2.8291399    30.801768  0.048260256  -0.41987503 -0.021758435   0.39720376    -1.836882    5.6522228 
  959000    11.144391    1.4836557    9.6607349  -0.28578282   0.98932345    1.2912787    0.7887211   -3.5502959            3    5.7403304    7.9108988    8.0710729    1.2390195 -0.0024655214  -0.29292075 -0.0087045888    5.5672954    5.5517852  -0.12994623    2.3260676   0.16745677    1.0227213        0.075    2.0437205          0.5    0.1136357    4.4000256    2.8387319    30.801768 -0.0048618112   -0.3338651 -0.010245694   0.34164704    3.5940049    5.0464744 
  960000    11.123993    1.4992397    9.6247534  -0.29017401   0.99971507    1.3194242   0.78730032   -3.5502959            3    5.5207906    7.7901218    7.9259392   0.84631091 -0.0086186453   0.22556453 -0.014839799    5.3480674    5.3281358  -0.50105659    1.1123958   0.08143098    1.0306317        0.075     2.023152          0.5   0.11451464    4.3662541     2.809994    30.801768 -0.0034175508  -0.44145052 -0.0021419756   0.37600769    2.9570582    3.1305728 
  961000    11.175071    1.5135208    9.6615498  -0.26704086    1.0092379    1.2915183   0.82173766   -3.5502959            3       5.4595    7.7317504    7.8535061   0.79324341 -0.0021266101 -0.071308303 -0.0026857773    5.2792216    5.2709198            0            0  0.057728348    1.0045301        0.075    2.0356701          0.5   0.11161446    4.4797064    2.8116316    30.801768 0.0053513187  -0.31774816 -0.023542045   0.41482224  -0.73412774    7.8962728 
  962000     11.15335    1.5306125    9.6227376   -0.2941599    1.0206349    1.3236759   0.81932158   -3.5502959            3    5.7568794    7.9299108    8.0466879    1.2940394 -0.026347315 -0.0019323429 -0.058738426    5.5771311    5.5636037   0.30732468   0.71592002  0.093164132    1.0079456        0.075    2.0638015          0.5   0.11199395    4.4645268    2.7867541    30.801768 -0.013378682  -0.45159531 -0.012010877    0.3759349   -1.5449671    4.6743259 
  963000    11.141687     1.518961    9.6227263  -0.28822562    1.0128655    1.2827198   0.83363697   -3.5502959            3     5.327186     7.671184    7.7540504   0.55632368  0.025261828  -0.26499593 -0.073440755    5.1442971    5.1398905            0            0   0.10138101    1.0125397        0.075    2.0706708          0.5   0.11250441    4.4442703    2.7851612    30.801768 -0.019357292  -0.34398418  0.013166793   0.34298402    2.1035597    2.5861808 
  964000    11.100153    1.5082592    9.5918934  -0.31574437    1.0057294    1.3147002   0.80046391   -3.5502959            3    5.6000196    7.7631219    7.9150026    1.1219343 -0.021884098   0.21449237   0.04690845    5.4244085    5.4080545  -0.41947543   0.67580424    0.1755623    1.0265701        0.075    2.1016211          0.5   0.11406335    4.3835291    2.8339113    30.801768  0.025140081  -0.38796496 -0.0082801241   0.37552641   -1.4148376    5.6348827 
  965000    11.114444    1.4989916    9.6154522  -0.30589998   0.99954968    1.3131149   0.79122398   -3.5502959            3    5.6812918    7.8392822    8.0980001    1.1065932 -0.0062297467  0.060246604 -0.039049134    5.5077077    5.4895582            0            0  0.078867284    1.0322735        0.075     2.063067          0.5   0.11469705    4.3593099    2.7972659    30.801768 0.0007394949  -0.34170691 -0.0053163754   0.42485459   0.89428706   0.64615933 
  966000    11.172134    1.5148144    9.6573193  -0.28551882    1.0101006    1.2831222   0.82876286   -3.5502959            3    5.5380893    7.8088979    7.9364482   0.86892185 -0.0078893399  -0.10870473  0.033663323    5.3562697    5.3507351    1.3313137     2.401733  0.024191785    1.0236981        0.075    2.0510155          0.5   0.11374423    4.3958273    2.8155811    30.801768  0.022451088  -0.34888745  0.022256665   0.36144242   0.30926227    3.1868591 
  967000    11.112011    1.4908134    9.6211971  -0.29398605   0.99409633    1.3000318    0.7908467   -3.5502959            3    5.6621939    7.8589575    8.0055074    1.1221169 -0.0065260402 -0.023726787   0.10528954    5.4886926    5.4723706            0            0   0.15912089    1.0308591        0.075    2.0554806          0.5    0.1145399    4.3652912    2.8054074    30.801768 -0.018507499  -0.33218475 -0.015294812   0.36841863   -2.8415916    3.9907765 
  968000    11.106031    1.4767308    9.6293003  -0.28635096   0.98470585    1.2664524   0.79755181   -3.5502959            3    5.5957576    7.8794939    7.9470978   0.96068115 -0.012303719 -0.044001183  0.055026187    5.4207853    5.4108374  -0.57354251   0.80178211   0.21133344    1.0239778        0.075    2.0771308          0.5   0.11377531    4.3946266    2.8103426    30.801768 0.0013414322  -0.28593397 -0.00017734382   0.36343372   -1.0305504    4.1274416 
  969000    11.095147    1.4745741    9.6205728  -0.29985731   0.98326768    1.2677025   0.79432389   -3.5502959            3    5.4506732    7.7230132    7.8779713   0.75103516 -0.028790957  -0.27261558 0.0032269106    5.2764091    5.2655705   -0.9055267     2.066633  0.040179476    1.0334506        0.075    2.0587973          0.5   0.11482785    4.3543444    2.8094128    30.801768 -0.0020968908  -0.37289119  0.039227328   0.37467977    3.5999299    2.4270734 
  970000    11.045548    1.4672284    9.5783191  -0.29808584   0.97836952    1.2632704   0.78911373   -3.5502959            3    5.5184436    7.7542696    7.9117472   0.88931414  0.027621177  -0.20720461  0.035021191    5.3453225     5.333988   0.81844438   0.75271107  -0.11173033    1.0269327        0.075    2.0954635          0.5   0.11410363    4.3819814    2.8399196    30.801768  0.016192764  -0.44384451 -0.016481461   0.31645361   -1.5004942     3.751563 
  971000    11.125308    1.4995562    9.6257516  -0.28635859   0.99992611    1.2831691   0.81178176   -3.5502959            3     5.630881    7.8160815    7.9766642    1.0998973  0.013994431  -0.02589943 -0.052929042    5.4527868    5.4435199            0            0 -0.019018405     1.023494        0.075    2.0846414          0.5   0.11372155    4.3967039    2.8252478    30.801768  0.015051948  -0.36645229 -0.0078053191   0.39339953    3.6378326   0.30534525 
  972000    11.079678     1.498596    9.5810825  -0.30182464   0.99928589    1.2926671    0.8043937   -3.5502959            3    5.5481461    7.8344878    7.8744534   0.93549723  0.013986537  -0.03248692  -0.06187484    5.3716728    5.3593982            0            0   0.15759117    1.0285653        0.075    2.0686086          0.5   0.11428504    4.3750259    2.8180423    30.801768 -0.0096388448  -0.39209879 -0.026417964   0.31501016   -3.2681899    4.7513771 
  973000     11.12806    1.5160986     9.611961  -0.29891566    1.0109568     1.280827   0.83171696   -3.5502959            3    5.7262245    7.9242611    8.0569085     1.197504 -0.0040529217  0.043695489  0.035257954    5.5437568    5.5392054            0            0   0.59750406    1.0265094        0.075    2.0605117          0.5    0.1140566    4.3837885    2.7969813    30.801768 -0.0089340298  -0.37981044 -0.031121707   0.38961166   -1.2834199    3.5518462 
  974000     11.10221    1.5040816    9.5981279  -0.29992597    1.0029438    1.2744738   0.82259612   -3.5502959            3    5.6183931    7.8670669    7.9735267    1.0145855  0.033014657  -0.35734304  0.050086216    5.4379264    5.4323016            0            0   0.14972977     1.028926        0.075    2.0599299          0.5   0.11432511    4.3734923    2.8181757    30.801768 -0.0032375851  -0.40259614  0.041042835    0.4048852    1.1340217    1.3778219 
  975000    11.069379    1.4647716    9.6046069  -0.28469346   0.97673129    1.2473839   0.79695799   -3.5502959            3    5.6140364    7.8812429    7.9593917    1.0014744  0.016360252 -0.041676803  0.080652976    5.4391943    5.4319004  -0.15624746   0.22358112   0.15891973    1.0195445        0.075    2.0776874          0.5   0.11328272    4.4137357    2.8106205    30.801768 -0.024669733  -0.34183577  0.023871627   0.33551034   0.53491141    -2.308625 
  976000    11.076961    1.4750867    9.6018745  -0.29833449   0.98360949    1.2637692   0.79751117   -3.5502959            3    5.5664302    7.7934555    7.9045217    1.0013135 0.0016949243 -0.020942562 -0.065751203    5.3914668    5.3819018   -0.5908444     2.062315 -0.080901794    1.0272392        0.075     2.076355          0.5   0.11413769     4.380674    2.7803973    30.801768  0.010428618  -0.47767669 -0.0049664882   0.40368238   -2.2263586    4.1423184 
  977000    11.097343    1.4785783    9.6187652   -0.2777231   0.98593778    1.2579615   0.80525533   -3.5502959            3    5.6606139    7.9410245     7.975738    1.0650791 -0.030337431  -0.17502454  0.021126788    5.4839515    5.4769334 -0.065746493   0.63604913    0.1841783    1.0123689        0.075    2.0654809          0.5   0.11248544    4.4450199    2.8156998    30.801768 -0.0021505979  -0.31695095 0.0088593624   0.33092144    3.7535113    3.2220239 
  978000     11.11686     1.492818    9.6240423  -0.28313542   0.99543303    1.2754473   0.80943589   -3.5502959            3    5.5412683    7.7973258    7.8871041   0.93937501  0.036126615   -0.1421249 -0.017842104    5.3636888    5.3550347  -0.37911448   0.92674077  0.089089169     1.017199        0.075    2.0563131          0.5   0.11302211    4.4239133    2.7889914    30.801768 -0.028701074  -0.39604116  0.030734639   0.35537317   -1.5680712    3.6285891 
  979000    11.045793    1.4584351    9.5873583  -0.30196772   0.97250599    1.2367066   0.79702527   -3.5502959            3    5.4438601    7.7244932    7.8545914   0.75249573  0.010013422  -0.12468258  0.087760697    5.2690033    5.2632832  -0.51096511   0.44689282   0.10470711    1.0272017        0.075    2.0698388          0.5   0.11413352    4.3808341    2.8073259    30.801768 -0.037228326   -0.3947003  0.021168284    0.4325877   -2.1274412    2.8393952 
  980000    11.111584    1.4800626    9.6315218  -0.29790041   0.98692753    1.2498402   0.81230934   -3.5502959            3    5.6254311    7.8637012    7.9353411    1.0772511 -0.013143293  0.035101605  0.061341141    5.4472212    5.4429365 -0.045579257    4.1810933   0.27082362    1.0349592        0.075    2.0913801          0.5   0.11499547    4.3479975    2.8162224    30.801768 -0.014416761   -0.3919263 -0.022956138   0.32052294   0.94428128     1.737076 
  981000    11.056273     1.483922    9.5723511  -0.29816509   0.98950102    1.2712153   0.80237026   -3.5502959            3     5.588085    7.7447673    8.0227738   0.99671393 0.0052642499  0.015096435  0.016802709    5.4120556    5.4024693  -0.60847959   0.72054367   0.53557239    1.0113225        0.075    2.0866396          0.5   0.11236917     4.449619    2.7944999    30.801768 -0.022580353  -0.37881331 -0.0046763581   0.38543972    -2.061213   0.68605463 
  982000    11.123406    1.5101255      9.61328  -0.30452482    1.0069739    1.2763567   0.82805696   -3.5502959            3    5.5771229    7.8032788    7.9651221   0.96296786  0.023023095  -0.12642961 -0.0067195431    5.3954582    5.3907566   0.48107962   0.69864201 -0.064113015    1.0377923        0.075    2.1007738          0.5   0.11531025    4.3361278    2.8129235    30.801768  0.016627424  -0.38376922 -0.015576273    0.3143702     2.289712 -0.0017591288 
  983000    11.084941    1.4747006    9.6102405  -0.28987979   0.98335205    1.2778885   0.78768513   -3.5502959            3    5.5722246    7.8566251    7.9356941   0.92435447 -0.0046440177   -0.1434875 -0.027019413    5.3994169    5.3856345  -0.68736769   0.44668725  0.078494421    1.0351403        0.075    2.0928699          0.5   0.11501559    4.3472367    2.8161536    30.801768 0.0070710557  -0.35554091 -0.0048549724   0.35356087  0.076955253     4.763398 
  984000    11.087392     1.485372    9.6020198  -0.30056823   0.99046788    1.2598056   0.81157474   -3.5502959            3    5.6119508    7.8539105    7.9388289    1.0431129 -0.025272283 0.0060814595  0.017649927     5.433902    5.4280011  -0.22610726   0.67301083   0.28150037    1.0369735        0.075    2.0608229          0.5   0.11521927    4.3395518    2.8225269    30.801768 -0.013074644  -0.33466991 -0.025342646    0.4103673    1.3999937    3.0599675 
  985000     11.06779    1.4629793     9.604811  -0.29579778    0.9755361    1.2486299   0.79413757   -3.5502959            3    5.5493367    7.7994482    7.9490044   0.89955746 -0.027471795 -0.095197286 -0.079152916    5.3751134    5.3670188  -0.16898652     1.811554  -0.12465464    1.0341587        0.075    2.0929596          0.5   0.11490652    4.3513631     2.820694    30.801768  0.012004665  -0.30559679 -0.0051247492   0.34004571    1.9194617   -0.8350706 
  986000    11.092459    1.4753397    9.6171188  -0.29334979   0.98377826    1.2435353   0.81125912   -3.5502959            3    5.4272123    7.6949523    7.8652058   0.72147873 -0.0097490909  -0.14442484   0.10706416    5.2492328    5.2456383  -0.14325509   0.96757949   0.17152345    1.0347329        0.075    2.0713689          0.5   0.11497033    4.3489483    2.8282612    30.801768 -0.0015493775  -0.41100108 -0.011473886   0.33516594   -2.0482929   0.76537091 
  987000    11.052901    1.4605857    9.5923153  -0.30028991   0.97394001    1.2447561   0.79405684   -3.5502959            3     5.506596    7.7369033    7.9000237   0.88286094  0.014126305 -0.038011455 -0.060272542    5.3323904    5.3248437            0            0 0.0036721893    1.0252088        0.075    2.0964372          0.5   0.11391209    4.3893496    2.8022989    30.801768  0.012933325  -0.35222473  0.014070015   0.39549061    1.1961016    4.6656994 
  988000    11.075615    1.4868383    9.5887762  -0.29880567   0.99144566     1.278361   0.80085397   -3.5502959            3    5.7468068    7.9872346    8.0298653    1.2233204  0.016118714  -0.11346862 3.6310349e-05      5.57111    5.5601477            0            0   0.20532891    1.0180157        0.075    2.0539274          0.5   0.11311285    4.4203642    2.7953477    30.801768 0.0070271445  -0.28677303 -0.029560817   0.40781149  -0.82376448    6.7848461 
  989000    11.041354     1.466431    9.5749233  -0.31836604   0.97783775    1.2471815   0.79893595   -3.5502959            3     5.851973    8.0078936    8.1432723    1.4047531  0.013151867  -0.22682512  0.055698758     5.676697    5.6698666            0            0 -0.0088897074    1.0252399        0.075    2.0905526          0.5   0.11391554    4.3892168    2.8153412    30.801768 0.0091731314  -0.31891339 0.0015848299   0.37146727   -1.1305944    10.166981 
  990000    11.045779     1.442273    9.6035056  -0.29427707   0.96172889    1.2291527   0.78409897   -3.5502959            3    5.6930854    7.9205767    7.9918642    1.1668153 -0.026242078 -0.062219649  0.096886362    5.5210644    5.5136114   -1.0900524    1.8670745  0.017570253    1.0230829        0.075    2.0801225          0.5   0.11367588    4.3984706    2.7900133    30.801768 0.0024292723  -0.44056871  0.017863308   0.43044515     1.835158   -2.7043072 
  991000    11.083212    1.4876161    9.5955962  -0.30175683   0.99196429    1.2618597   0.81270059   -3.5502959            3    5.5701609    7.8620146    7.9070122   0.94145588  0.018860334  -0.11075976  0.068406015    5.3918652    5.3859113            0            0    0.1222831    1.0338317        0.075    2.0757327          0.5   0.11487019    4.3527395    2.7978131    30.801768 -0.0071370172  -0.32786426 -0.0094277556   0.41525957   0.51780863    5.5006145 
  992000     11.06553    1.4541929     9.611337  -0.30739063   0.96967719    1.2139305   0.80747147   -3.5502959            3    5.7254986    7.9269267    8.0533936    1.1961754 -0.003496811  -0.05937487  -0.03558979      5.54835    5.5482473  -0.39807563    4.0213958   0.32979676    1.0302554        0.075    2.0690076          0.5   0.11447282    4.3678492    2.8047306    30.801768 -0.0014633717  -0.35959207  0.024390734   0.35043508    1.3135712    4.3362051 
  993000    11.067167    1.5098128    9.5573542  -0.31079074    1.0067654    1.2871155   0.82054899   -3.5502959            3    5.6555503    7.8654826    8.0058139    1.0953545 0.0050803894  -0.20889717  0.022847136    5.4755327     5.467613            0            0  0.028302067    1.0458306        0.075    2.0916282          0.5    0.1162034    4.3027999    2.7931425    30.801768 -0.0040308997  -0.45315496 0.0070739757   0.33564147    3.1649177     6.266633 
  994000    11.080118    1.4943291    9.5857885  -0.32041692   0.99644066    1.2696644   0.81496339   -3.5502959            3    5.5707199     7.741368    8.0253705   0.94542121  0.015225015 -0.043030588  0.072900464    5.3919277    5.3853307  0.031864185     0.427282   0.15956925    1.0288776        0.075    2.1131621          0.5   0.11431973    4.3736982    2.8107388    30.801768  -0.00427041  -0.32679228 -0.015063383   0.33577284  -0.91098495    5.5000036 
  995000    11.110572    1.4844211    9.6261508  -0.29022085   0.98983385    1.2556438    0.8132884   -3.5502959            3    5.5404919     7.744487    7.9009266   0.97606224  0.012445473  -0.13676593 -0.083412802    5.3620672    5.3571499  -0.84393028    0.9501813    0.1197895     1.019712        0.075    2.0708468          0.5   0.11330133    4.4130109    2.7686746    30.801768 0.0043845383  -0.46217878 -0.010235265   0.38192752     1.396812    5.1992797 
  996000    11.105414    1.4837664    9.6216475  -0.30288155    0.9893973     1.263903   0.80706418   -3.5502959            3    5.4423878    7.6917396    7.8572504   0.77817344 0.0097679228 -0.078983126 -0.017170307    5.2653286    5.2578398    1.1055993   0.51281828   -0.4956414    1.0310982        0.075    2.1293157          0.5   0.11456647    4.3642787    2.8251359    30.801768 -0.015203874  -0.36585931 0.0044238296   0.38613517    1.8042472    3.6532535 
  997000    11.077265    1.4580618    9.6192028  -0.29245922   0.97225705    1.2225601   0.80602586   -3.5502959            3    5.7618188    7.9202967    8.0923547    1.2728049 0.0090203692 -0.079312252  0.078754889    5.5849874    5.5833075  -0.58052375   0.67988322   0.17216061    1.0168995        0.075    2.0970656          0.5   0.11298883    4.4252161    2.8010774    30.801768 0.0056876045  -0.37573068 -0.0055233065   0.26124734    0.8366825    11.882507 
  998000    11.073042    1.4788243    9.5942178  -0.29726596   0.98610181    1.2613878   0.80324819   -3.5502959            3    5.5025675    7.7680353    7.8932677    0.8463996   -0.0296808  -0.31191539 -0.0090811994    5.3263455    5.3183868  -0.24049702   0.69967392   0.13340921    1.0242636        0.075      2.06417          0.5   0.11380707    4.3934001    2.8005028    30.801768  0.011189878  -0.40443825 -0.0058715051   0.30289942    2.2420802    5.3691073 
  999000    11.120229    1.4800812    9.6401474   -0.3038678   0.98693995    1.2387824   0.81968966   -3.5502959            3    5.4282281    7.6108805    7.7813248   0.89247884 -0.017791215 -0.024129815 -0.026922788     5.248399    5.2473481            0            0   0.12765872    1.0204938        0.075    2.0801325          0.5    0.1133882    4.4096301    2.7741315    30.801768 -0.0096182143  -0.35408111 0.0056620764   0.37145478   -1.1800177   -2.0363119 
 1000000     11.09871    1.4921501    9.6065598   -0.3013949   0.99498767    1.2600935   0.81891278   -3.5502959            3    5.7549688     7.966466    8.0931421    1.2052983 0.0060101832  -0.18473126  0.099571543    5.5753102    5.5709771            0            0   0.43924156    1.0277796        0.075    2.0819759          0.5   0.11419773    4.3783708    2.8151499    30.801768 -0.027208186  -0.37007503 -0.0075149096   0.35463592    1.3948641    3.9773091 
 1001000    11.063172    1.4723667    9.5908058  -0.28822891   0.98179576     1.278116   0.78494105   -3.5502959            3    5.4404626    7.7010545    7.8301843   0.79014915 -0.0072991408  -0.15259563 -0.016689589     5.268257    5.2538394  -0.57174809   0.22808099 0.0031716866    1.0138931        0.075    2.1185717          0.5   0.11265479    4.4383378     2.784218    30.801768 -0.016633729  -0.44703985  0.014703853   0.37321508    0.1809202   -4.2429355 
 1002000     11.11126    1.4831617    9.6280986   -0.2784215   0.98899406    1.2879843   0.79036493   -3.5502959            3    5.7218598    7.9097972    8.0315693    1.2242128 -0.017060163 -0.047251304  0.030340525    5.5484642    5.5337956            0            0  0.071044691    1.0448929        0.075    2.0887039          0.5   0.11609921    4.3066615    2.8152144    30.801768  0.018055833  -0.36707603   0.02370853   0.42686171   0.55456379    1.3588473 
 1003000    11.097861    1.4731769     9.624684  -0.27704059   0.98233601    1.2664005    0.7936384   -3.5502959            3    5.5654679     7.839551    7.9064738   0.95037876  0.016714159  -0.18186637   -0.1069867    5.3913541    5.3805552            0            0  0.028116179    1.0125465        0.075    2.1057019          0.5   0.11250517    4.4442403    2.7854464    30.801768 -0.033511473  -0.35337944 -0.034868726   0.30358392   -2.6579825    1.9304163 
 1004000      11.1256    1.5188331    9.6067669  -0.31710711    1.0127803    1.2870548   0.83060966   -3.5502959            3    5.5413691    7.7055289    7.9583001   0.96027818 0.0094087518 -0.067150236  -0.02857306    5.3591443    5.3534406  -0.29123324    1.4270658   0.11370053    1.0263176        0.075    2.0942555          0.5   0.11403529    4.3846075    2.8042021    30.801768 -0.029151173   -0.3240616  0.011969839    0.3650496   0.70132869    6.0324283 
 1005000     11.12469    1.4909407    9.6337496   -0.3089725   0.99418122    1.2929175   0.79572308   -3.5502959            3    5.5563822     7.784092    7.9272068   0.95784771  0.022994498 -0.075311619 -0.018762423    5.3818111    5.3675977            0            0   0.16036201    1.0324838        0.075    2.1152661          0.5   0.11472042    4.3584218    2.8057893    30.801768 -0.014178838  -0.37678559  0.018102244   0.36652547    0.9343071    6.2596466 
 1006000    11.140326    1.4951629    9.6451636  -0.28413653   0.99699662    1.2826278    0.8072617   -3.5502959            3    5.6277129    7.8471136    7.9594937    1.0765314  0.018663507 -0.081808347  0.015260393    5.4506104    5.4404309   0.38350772    1.3493986   0.12006282    1.0203827        0.075    2.0987101          0.5   0.11337586    4.4101099    2.8192683    30.801768  0.013696123  -0.33103728 -0.014531776   0.36029433    1.3430235    4.3476486 
 1007000    11.078985    1.4761609    9.6028246  -0.29842817   0.98432578    1.2789088   0.78862819   -3.5502959            3    5.5662273    7.8657796    7.9162382   0.91666412  0.020468086  -0.06296465  0.044177921    5.3932127    5.3794883            0            0  0.015459237    1.0375629        0.075    2.0520573          0.5   0.11528477    4.3370865    2.8306499    30.801768 -0.0079305966  -0.31824259 -0.004970431   0.34758108   0.49865885    2.0156092 
 1008000    11.119328    1.4879577    9.6313701  -0.29409546   0.99219208    1.2789295   0.80171913   -3.5502959            3    5.6501795    7.9030041    7.9554801    1.0920544  0.061714651  -0.20579181  0.019030938     5.474293    5.4634375            0            0   -0.1089363    1.0305956        0.075    2.0708669          0.5   0.11451062    4.3664071    2.8014593    30.801768  0.015111309   -0.3139871 0.0033343559   0.33759139    1.4200103    2.2643735 
 1009000    11.106468    1.4815359    9.6249322   -0.3116949   0.98790996    1.2810835   0.79315178   -3.5502959            3    5.5956341    7.7244182    7.9490281    1.1134561 -0.011639369 -0.0076283823 -0.038788758    5.4216271    5.4085775  -0.70749044    1.0123237 -0.076861434    1.0380339        0.075    2.0815823          0.5    0.1153371    4.3351185    2.8405952    30.801768  0.012889197  -0.37485904 -0.013558401   0.36226961   -2.7589882    5.9969326 
 1010000    11.079009    1.4724019    9.6066068  -0.28536469   0.98181923    1.2508961    0.8030965   -3.5502959            3    5.4295236    7.6835453    7.8368813   0.76814403 -0.019413281  -0.11549951  0.027442117    5.2533348    5.2468748  -0.24787541    1.0875022  0.033532861    1.0193061        0.075    2.0683118          0.5   0.11325623    4.4147683    2.8117244    30.801768  0.028133142  -0.35992337 0.0051348603   0.36964277   0.98685163    1.5306048 
 1011000    11.084203    1.4820354    9.6021675  -0.29565261   0.98824299    1.2940136   0.78510089   -3.5502959            3    5.3974921    7.6668686    7.8498128   0.67579506  0.047403265  0.038896152  0.024942428    5.2252514    5.2085476  -0.52031839    1.9110962  0.036411282    1.0401947        0.075    2.0649863          0.5   0.11557719    4.3261132    2.8223468    30.801768 -0.013324052  -0.34150819 -0.0021703385    0.4074418   -4.7913732    -1.971358 
 1012000    11.092929     1.482474    9.6104555  -0.29115997   0.98853545    1.2538622   0.81231117   -3.5502959            3    5.7133209    7.9075633    8.0470632    1.1853361 -0.021048978 -0.085639417  0.024438607    5.5351106     5.530239            0            0   0.18034246     1.010704        0.075     2.072972          0.5   0.11230044    4.4523423    2.8188404    30.801768  0.026399504  -0.30972126 -0.017444963   0.33900362    1.1338729    6.5609476 
 1013000    11.099587    1.4908962    9.6086905  -0.30867866    0.9941515     1.309617    0.7845591   -3.5502959            3    5.5302919    7.8323789    7.8579382   0.90055858 -0.013506887  -0.10029774 -0.044681723      5.35817     5.339069  0.057972564     2.144864   0.17295806    1.0279418        0.075    2.0651386          0.5   0.11421575      4.37768    2.7835922    30.801768  0.014355254    -0.297814 -0.024517441   0.31889289  -0.42762293  -0.82196035 
 1014000    11.103017    1.4825348    9.6204819  -0.29185297     0.988576    1.2689055   0.80236652   -3.5502959            3    5.7061059    7.8967502    8.0125711    1.2089965 -0.0041330786  0.094869498  0.055086352    5.5300773    5.5208275            0            0  0.084471635    1.0081096        0.075    2.0708918          0.5   0.11201217    4.4638005    2.7803245    30.801768 -0.020522291  -0.32504405 -0.017368086     0.383426   -1.2239549   0.87324355 
 1015000    11.075238    1.4756395    9.5995985   -0.2999828   0.98397815    1.2721035   0.79257841   -3.5502959            3    5.6814676      7.85188    8.0458058    1.1467171 -0.0048717237  -0.13724302 -0.035696819    5.5075864    5.4957223  -0.32352264   0.82812208 -0.053852511    1.0329407        0.075    2.0345408          0.5   0.11477119    4.3564939    2.8004202    30.801768 0.0068945176  -0.37088616  0.016368631   0.38944294   -3.2238038   0.48087018 
 1016000    11.091707    1.4583589    9.6333485  -0.28526017   0.97245516    1.2176723   0.80960903   -3.5502959            3    5.8109483    7.9519274    8.0544547    1.4264627  0.033050735  0.051459518  0.042609114    5.6333308    5.6331506   -1.1093709    2.3994559    0.2879327    1.0176662        0.075    2.0381353          0.5   0.11307402    4.4218821    2.7732357    30.801768   0.01421759  -0.42382139  0.035843206   0.40969309   -1.1454003     7.135245 
 1017000    11.077402    1.4772323    9.6001701  -0.28454192   0.98504023    1.2642242   0.79959188   -3.5502959            3     5.505451    7.7899069    7.8551333   0.87131289   0.01933884  -0.12257542 -0.027128872    5.3300311    5.3208562    1.2292461    1.9822713 -0.031851862     1.031962        0.075    2.0390767          0.5   0.11466244    4.3606258    2.8066315    30.801768  0.023737139   -0.4298103  0.010127304   0.45049427   -2.5530891  -0.17376411 
 1018000    11.052212     1.466101    9.5861113  -0.32166308   0.97761774    1.2604337   0.78974932   -3.5502959            3    5.5024752    7.7181799    7.9381879    0.8510579 -0.0062734415  -0.18973007  0.020753539    5.3292147    5.3184338            0            0   0.14293411    1.0120295        0.075    2.0631933          0.5   0.11244772    4.4465109    2.7877762    30.801768 0.0076630582  -0.35620143 -0.0048620882   0.30369194    2.0287545    6.9348308 
 1019000    11.094111    1.4768589    9.6172526  -0.29064321   0.98479128    1.2744388   0.79237874   -3.5502959            3    5.5653507    7.8059578    7.9571122   0.93298218 -0.0051793339  -0.27281504 -0.015795681    5.3915133    5.3792644  -0.24335966  0.038999026   0.61467642    1.0338376        0.075    2.0978009          0.5   0.11487084    4.3527146    2.8124466    30.801768  0.013516654  -0.38844786 -0.0023059983   0.35803417    0.1517592    1.8332196 
 1020000    11.126317    1.5022381    9.6240787  -0.26946028    1.0017145    1.2912535   0.80938045   -3.5502959            3     5.847953    8.1364981    8.1643426    1.2430183 -0.040535433 -0.046510576 -0.011262156    5.6703856    5.6594115            0            0   0.12083692    1.0310301        0.075    2.0760146          0.5    0.1145589    4.3645672    2.8227891    30.801768 -0.00063062944  -0.31012553 -0.022809191   0.33081943    2.2693737     3.667618 
 1021000    11.128217    1.4822276    9.6459897  -0.28615827    0.9883712     1.247781   0.81608489   -3.5502959            3    5.7327186    7.8762021    8.0218837      1.30007 0.0027877595   0.11603961  0.058984519    5.5536804    5.5505247  0.098801238   0.27051427 -0.065864012    1.0186918        0.075    2.0952534          0.5   0.11318797    4.4174304    2.8232874    30.801768  -0.02208145  -0.35088178 -0.028149422   0.35406716   -1.4419543   0.79548501 
 1022000    11.124425    1.5218636    9.6025615  -0.30267023     1.014801    1.2970011   0.82735633   -3.5502959            3    5.5728295    7.7977173    7.9538622   0.96690898  0.017822069 -0.098972169  0.052933894    5.3913185    5.3834487    1.7636207    2.0645194 -0.051485998     1.022636        0.075    2.0879634          0.5   0.11362622    4.4003927    2.8168455    30.801768  0.034873063  -0.32822678 -0.013230056   0.41721797    -2.808955    3.2008987 
 1023000    11.100772    1.4731876    9.6275839  -0.29043987   0.98234317     1.262772   0.79606528   -3.5502959            3    5.5928117     7.856335    7.9352504   0.98684971  0.007526566 -0.069370089 -0.023776454    5.4181655    5.4084289    -1.851903     1.964111   0.17221348     1.023154        0.075    2.0962761          0.5   0.11368378     4.398165    2.8194818    30.801768  0.013018373  -0.33405872 -0.017612258   0.41354087    1.2166765    1.3250924 
 1024000    11.140427    1.5243372    9.6160895  -0.30087199    1.0164505    1.2942588   0.83192929   -3.5502959            3    5.5944321    7.8177858    7.8835513    1.0819591   0.01999427  -0.34325763  0.063111514    5.4119178    5.4054517   0.21272385     1.685237  -0.14663773    1.0262578        0.075    2.0899573          0.5   0.11402864    4.3848633    2.8097817    30.801768 0.00085740702  -0.40139065 -0.022954166   0.37374518        2.333    3.1275901 
 1025000    11.103822    1.4920441    9.6117783  -0.29847113   0.99491695    1.3030536   0.79020255   -3.5502959            3    5.5849381     7.833333    7.9363872   0.98509414  0.030413983  0.023318519 0.0063642843    5.4115781    5.3946736  -0.12395985   0.27491437  0.026298376    1.0227089        0.075    2.0746089          0.5   0.11363432     4.400079     2.812806    30.801768 -0.027302356  -0.37367718 0.0081248399   0.28264376    1.7021875    4.9988202 
 1026000    11.076665    1.4528043    9.6238606  -0.28542261    0.9687513    1.2447063   0.78544598   -3.5502959            3    5.4573853    7.7645052    7.8441832   0.76346737  0.019956794  0.075655573  0.018225517    5.2850688    5.2756403    1.0790979    1.5066959   0.25996853    1.0321147        0.075    2.0669757          0.5   0.11467941    4.3599805    2.8384705    30.801768 -0.016664796  -0.33750817 0.0096252959   0.43117485   -4.3465442    4.6209088 
 1027000    11.068219    1.4596353    9.6085838  -0.30473038   0.97330629    1.2836542   0.76711224   -3.5502959            3    5.5262862    7.8141144    7.9002549   0.86448935  0.021350321  -0.19395036  -0.02439131    5.3579919    5.3388543            0            0  -0.72213544    1.0424077        0.075    2.1024155          0.5   0.11582307    4.3169291    2.8042811    30.801768  0.034888524  -0.37149736 -0.002784157   0.29115069    1.8969367    2.5364912 
 1028000    11.130758    1.5040533    9.6267051  -0.27597384    1.0029249    1.2432804   0.84332568   -3.5502959            3    5.6978998    7.9600008     8.027544    1.1061547  0.012041633  -0.19553336 -0.063274833    5.5128853    5.5163631   0.68900841    1.1274932   0.18865631    1.0112422        0.075    2.0798119          0.5   0.11236025    4.4499724    2.8101761    30.801768  0.017454511  -0.35067712 -0.011436475   0.32504009  -0.78323629    1.2007907 
 1029000    11.105596     1.513734    9.5918621  -0.31856731    1.0093801    1.3135584   0.80730561   -3.5502959            3    5.5680682    7.7562114    7.9971854   0.95080791  0.036133679 -0.022073121  0.031665793    5.3909561    5.3762699   0.18955783    1.1296654  0.026689145    1.0415616        0.075    2.0885086          0.5   0.11572907    4.3204357    2.8057356    30.801768  0.010670015  -0.39686092 -0.0035649498   0.36653282    1.8905053    5.6207872 
 1030000    11.074898    1.4821757    9.5927222  -0.29728992   0.98833658    1.2796382   0.79482445   -3.5502959            3    5.4566919    7.7152745    7.8899153   0.76488573   0.01083294 -0.079790441 -0.055892061    5.2823179    5.2698463  -0.36045381     1.773688 -0.0070142423    1.0195906        0.075    2.0856534          0.5   0.11328785    4.4135361    2.8137812    30.801768  0.012927506  -0.34312318  -0.01764253   0.33180334   -3.6869033   0.58520909 
 1031000    11.080707    1.4862626    9.5944442  -0.30108096   0.99106179    1.2892344   0.79297765   -3.5502959            3    5.6314147    7.8502909    8.0028533    1.0410999 -0.0059166955  -0.04642182  0.030682437    5.4574459     5.443168 -0.094469406   0.92250653 -0.078578032     1.036353        0.075    2.0978512          0.5   0.11515033      4.34215    2.7962438    30.801768  0.002515899  -0.32966875  -0.03001301   0.48414123    1.0450766    3.6736895 
 1032000    11.112035    1.5246529    9.5873817  -0.30417975     1.016661    1.2883699   0.83619945   -3.5502959            3     5.648144    7.8999788    8.0079161    1.0365372  0.010116353  -0.35990159   0.02436559     5.464693    5.4600236  -0.71296858   0.59788261  0.054268491    1.0309733        0.075    2.0838627          0.5   0.11455259    4.3648075    2.8088619    30.801768 -0.032447806  -0.40013923 -0.005288037   0.27139987    2.1473404    5.7854732 
 1033000    11.066204    1.4574874    9.6087171  -0.27686454   0.97187405    1.2837432   0.76466697   -3.5502959            3    5.6358349    7.8899427     7.971688    1.0458741  0.011970078  0.082146937 -0.012942504    5.4680771      5.44839  -0.30356523   0.33770788  -0.16197015    1.0178101        0.075    2.0647479          0.5   0.11309001    4.4212568    2.7959375    30.801768  0.011938075  -0.40320033 -0.018025832   0.43559992   -2.2057956    2.1293655 
 1034000     11.16327    1.5124796    9.6507902  -0.28848267    1.0085436    1.2876966    0.8231246   -3.5502959            3    5.6011194    7.8277448    7.9508955    1.0247177 -0.0001230267 -0.069728143 -0.041403668    5.4205367    5.4130972  -0.75971896    1.0110578  0.091664792    1.0324453        0.075    2.0788756          0.5   0.11471615    4.3585842    2.7881273    30.801768 -0.011648825   -0.3489178 -0.0016894494   0.38588777     -2.94829    6.3871264 
 1035000    11.102173    1.4765435    9.6256299  -0.29338395   0.98458095    1.2525808   0.80657611   -3.5502959            3    5.5052405     7.712655    7.9076945   0.89537215  0.036962233  -0.34899887  0.043862691    5.3282884    5.3223458  -0.26995731    3.5091962   0.38804361    1.0074191        0.075    2.1160623          0.5   0.11193545    4.4668599    2.7747017    30.801768 -0.033036133  -0.28003159  0.015060681   0.36089263    3.4188921    6.4853788 
 1036000    11.098623    1.4794078    9.6192157  -0.28436507   0.98649088     1.293643   0.78242865   -3.5502959            3      5.46251    7.7369221    7.8399809   0.81062692 -0.012798702  -0.13920124  0.043761591    5.2908555    5.2736195            0            0   0.12860242    1.0138488        0.075    2.0809537          0.5   0.11264987    4.4385317    2.7815123    30.801768  0.014880229  -0.40301061 -0.028157542   0.41050221    1.9533906   0.19348856 
 1037000    11.129671    1.5186019    9.6110687  -0.30102285    1.0126261    1.3119579   0.81377841   -3.5502959            3    5.5549604    7.8251417    7.9404921   0.89924753  0.001288004  0.020235227 -0.052721754    5.3764282    5.3633958   -1.4784591   0.60738814 -0.041765463    1.0163564        0.075    2.0672359          0.5   0.11292849    4.4275806    2.8136273    30.801768 -0.034073748  -0.38021302 -0.015631917   0.38326203   -3.4011694   0.62368164 
 1038000    11.140624    1.5235584    9.6170658   -0.2920056    1.0159312    1.3056085   0.82351034   -3.5502959            3    5.4415894    7.7089273    7.8858552    0.7299856 -0.0087845228  -0.17857961  0.017235305    5.2609221    5.2509518  -0.62408955   0.57492752  0.052310815     1.026391        0.075    2.0681633          0.5   0.11404345    4.3842939    2.8212031    30.801768 -0.0065773706  -0.39183864 0.0099760762    0.4098611    0.9749713    1.8883943 
 1039000    11.156418    1.5240098    9.6324077   -0.2769386    1.0162322    1.3055939   0.82402149   -3.5502959            3      5.60346    7.9000764    7.9393424   0.97096124   0.01628928   -0.2968108   0.03008195    5.4226806    5.4128246  -0.08775411    2.3421295   0.17750256    1.0242417        0.075    2.0463036          0.5   0.11380463    4.3934944    2.8059229    30.801768  0.018855157  -0.32248067  0.047709998   0.42296624    2.8101122     4.841543 
 1040000    11.157148    1.5096279    9.6475196  -0.29818651    1.0066421    1.3165469   0.80075531   -3.5502959            3     5.478415    7.7455044    7.8919019   0.79783866  0.030627273   0.11822099  0.019634753    5.3027399    5.2861803            0            0  0.089643639    1.0248807        0.075    2.0669089          0.5   0.11387563    4.3907551    2.8308415    30.801768 0.0077246357   -0.3066819 0.0070438732   0.42076136   -2.4182383    2.2105256 
 1041000    11.158781    1.5163935    9.6423871  -0.28092898    1.0111535    1.2971251   0.82119731   -3.5502959            3    5.6222478     7.860986     8.023298   0.98245932 -0.00052104589   -0.1498794  0.061660772     5.442088    5.4328489            0            0 -0.0040648121    1.0222666        0.075    2.0661263          0.5   0.11358518    4.4019826    2.8083667    30.801768  0.020496846  -0.40671064  0.011352331   0.37013674   0.50301598     8.290076 
 1042000    11.120311      1.48235    9.6379609   -0.2903374   0.98845281    1.3028875   0.77954433   -3.5502959            3    5.4324606     7.732033    7.8403854   0.72496329  0.013167205  0.041119502   0.06457497    5.2614389    5.2422203            0            0   0.81270329    1.0250089        0.075    2.0565814          0.5   0.11388988    4.3902056    2.8187416    30.801768 -0.020591847  -0.30879805 -0.010933703   0.28933588   -2.2233669    1.7091435 
 1043000    11.164817    1.5124169    9.6524002  -0.29382206    1.0085018     1.262577   0.83977351   -3.5502959            3    5.5137924    7.7118854     7.908138   0.92135374 -0.018314965 -0.091839375 -0.079038289    5.3295572     5.329438    1.2869532   0.75393763   0.25765741    1.0267991        0.075    2.0881925          0.5   0.11408879    4.3825516    2.8158429    30.801768 -0.010567463  -0.33339841 0.0047388623   0.51346254  -0.29625809  -0.19504772 
 1044000    11.103836    1.4980721    9.6057643  -0.30145045   0.99893655     1.288952   0.80628434   -3.5502959            3    5.6073535    7.7781075    7.9644987    1.0794544 0.0081701057  -0.25708845  -0.10222507    5.4304654     5.419148            0            0  -0.69136495    1.0187483        0.075    2.0965259          0.5   0.11319426    4.4171853    2.8028478    30.801768 0.0097246335  -0.33536954 -0.017166265     0.366125    1.6060584    1.0426967 
 1045000    11.104413    1.4782436    9.6261694  -0.30115808   0.98571458    1.2832546   0.78804947   -3.5502959            3    5.7064943    7.9170864    7.9938512    1.2085452 -0.035793438 -0.013912476  0.014702727    5.5336067    5.5191207  -0.94826056     2.298964  0.036902238    1.0250384        0.075    2.0832426          0.5   0.11389315    4.3900795    2.8126899    30.801768 0.0098775238  -0.41492608  0.024608617   0.39831467   0.42673212  -0.98704358 
 1046000    11.153592    1.5051026    9.6484895  -0.28852218    1.0036246    1.2961601   0.80929689   -3.5502959            3    5.4784375    7.6906869    7.8823448   0.86228079 -0.011127903 -0.083315318  0.055904844    5.3008885    5.2891795            0            0   0.30587965    1.0224838        0.075    2.0892596          0.5   0.11360932    4.4010476    2.8339454    30.801768 -0.015224279   -0.4055864 -0.0056019216   0.41789001   -1.3085051    1.5531964 
 1047000    11.146323    1.5077086    9.6386146  -0.29936809    1.0053623    1.2933852   0.81403863   -3.5502959            3    5.4205545    7.6508299    7.8235007   0.78733281  0.050201733  0.044548501 -0.015732638    5.2419652    5.2317017            0            0 0.0057725276     1.022437        0.075    2.0914423          0.5   0.11360411    4.4012492      2.80641    30.801768 -0.0069340831  -0.30094549 -0.016270279   0.34473611   -2.4657709     3.003385 
 1048000    11.153255    1.4958514    9.6574035  -0.28565034   0.99745576    1.2622822   0.82156771   -3.5502959            3    5.4644765    7.7756961    7.8121764   0.80555695 0.0063971642  -0.12747405  0.065726293    5.2842354    5.2801652            0            0 -0.041877289    1.0159672        0.075     2.059323          0.5   0.11288525    4.4292767    2.8045838    30.801768 0.0059149032  -0.31605444  0.013759413   0.36066784   0.88172393    2.2485041 
 1049000    11.119118    1.4955533    9.6235646  -0.29440584   0.99725697    1.2849657   0.80613939   -3.5502959            3    5.7059926    7.9240004    8.0549593    1.1390182  0.024314811 -0.079172858  0.016033037    5.5291363    5.5183692            0            0  0.073418057    1.0292103        0.075    2.0996511          0.5    0.1143567    4.3722843    2.8227489    30.801768   0.06803312  -0.38055543 -0.004251648   0.42518609   -3.1188429    5.6851723 
 1050000    11.107945    1.5005158    9.6074292  -0.28400777     1.000566    1.3126571   0.79322184   -3.5502959            3    5.5425584    7.7673489    7.9351158   0.92521033 0.0045006998  -0.06118306   0.14857057     5.368536    5.3508916   0.22208163   0.61364687   0.23710628    1.0309774        0.075    2.0612348          0.5   0.11455304    4.3647902     2.814685    30.801768  0.019562764  -0.34380659 -0.0038353517   0.38169846  -0.84549872    2.9629399 
 1051000      11.0705    1.4828706    9.5876296  -0.31150557   0.98879995    1.2848685   0.79211532   -3.5502959            3     5.451681    7.6605841    7.8036401   0.89081857 -0.045947051 -0.067106771 -0.087777379    5.2779013    5.2640717   -1.3804848   0.28491497   0.76128245    1.0187211        0.075    2.0156457          0.5   0.11319124    4.4173031    2.8109523    30.801768 -0.0032439722    -0.358604 0.00024907905   0.34506561  -0.55262291   -1.8800697 
 1052000    11.086702    1.4881559    9.5985463  -0.31099137   0.99232427    1.2794566   0.80158853   -3.5502959            3     5.458187    7.7011307    7.8754664   0.79796384  0.003692654  -0.29303141   0.12678862    5.2823291     5.271368   0.22500119    2.5745929  -0.45154448     1.029033        0.075    2.0480608          0.5     0.114337    4.3730375    2.8247622    30.801768  0.016257516  -0.38237431  -0.04125493   0.37935582   -3.0453291    1.9408004 
 1053000    11.067107    1.4594943    9.6076127  -0.29104951   0.97321228      1.24094   0.79538436   -3.5502959            3    5.7085259    7.9143296    8.0357798    1.1754683 -0.010175046   0.04846476  0.041353124    5.5340291    5.5273309   0.23797528   0.58723069   0.16350539    1.0165363        0.075    2.0237639          0.5   0.11294848    4.4267972    2.8196002    30.801768 0.0075463862  -0.38929079 0.0098849308   0.35581022   -0.6935853    4.4066173 
 1054000     11.04299    1.4705536    9.5724366  -0.29268792   0.98058681    1.2431168   0.80622099   -3.5502959            3    5.7763087    7.9943782    8.1269938    1.2075542  0.029612747  0.075620868 -0.088729817    5.5994345    5.5947959            0            0  0.070135969    1.0386621        0.075    2.0648455          0.5    0.1154069    4.3324966    2.8060529    30.801768 -0.0061010073  -0.36170581 -0.0041119005    0.3633875   -1.4623127    4.0570428 
 1055000    11.101059    1.4856524    9.6154064   -0.2972614   0.99065487    1.2444647   0.82209651   -3.5502959            3    5.6871782    7.9112978    8.0580082    1.0922288 0.0078707264 -0.034835489 -0.079178813    5.5068212    5.5054685  -0.82036132   0.90719611   0.28593483    1.0190585        0.075    2.0692155          0.5   0.11322873    4.4158405    2.8088987    30.801768 -0.0087666694  -0.39484437  0.034489723   0.36479626   -1.9660581    4.2388402 
 1056000    11.095891    1.4854272     9.610464  -0.27913701   0.99050473    1.2814853   0.79720707   -3.5502959            3    5.6397794    7.9131451    7.9686392    1.0375539 -0.0096306497   0.13727148 0.0045189479    5.4648827    5.4526642            0            0   -0.4802107      1.03952        0.075    2.0888747          0.5   0.11550222     4.328921    2.8088756    30.801768 -0.013065377  -0.32583369 -0.0033232988   0.43406283    3.5016962    1.9451806 
 1057000    11.110444    1.4911659    9.6192783  -0.29776462   0.99433136    1.2761046   0.80716316   -3.5502959            3    5.6024449    7.8668843     7.939374    1.0010765 -0.016692126  -0.19750356   0.13726984     5.425364    5.4161154   0.18888495    1.9219102 -0.017457209    1.0267437        0.075    2.1094005          0.5   0.11408263    4.3827881    2.8026534    30.801768  0.027721261  -0.31501248 0.0017466957   0.35553558   -1.4952247    1.6746854 
 1058000    11.105775     1.493417    9.6123582   -0.3045981   0.99583241     1.286359   0.80283885   -3.5502959            3    5.5426827    7.8745892     7.918021   0.83543809 -0.0035778844  -0.13703499 -0.015098417    5.3665505    5.3548559    0.7541526    1.3158092   0.24427883    1.0432523        0.075    2.0718793          0.5   0.11591693    4.3134339    2.8261667    30.801768 -0.015167402  -0.33512204 -0.013732244   0.37030407   -2.1247071   0.84164892 
 1059000    11.110979    1.4992081    9.6117707  -0.29428126     0.999694    1.2837204   0.81102817   -3.5502959            3    5.5038576     7.773506    7.8902628   0.84780405 -0.020179407  -0.24895135  0.015930266    5.3259288     5.316416  -0.93102399   0.39729819   0.22659306    1.0235262        0.075    2.0557944          0.5   0.11372513    4.3965655    2.7794311    30.801768 -0.023921914  -0.36260035 -0.0030347317   0.38532919   0.96222624    7.1087145 
 1060000    11.078068     1.460669    9.6173986  -0.29140855   0.97399555    1.2565589   0.78629393   -3.5502959            3    5.7234386    7.9315309    8.0096978    1.2290871  0.044777256 -0.093796866  -0.13344503    5.5509361     5.539963   0.89491327    1.3244882   0.11484059    1.0197187        0.075    2.0851774          0.5   0.11330208    4.4129817    2.7934002    30.801768  -0.02359644  -0.41409539  0.029714895   0.44824622  -0.54470259     8.817073 
 1061000     11.10785    1.4931883    9.6146616  -0.28898864   0.99567991    1.2724144   0.81186573   -3.5502959            3    5.6382295    7.8216189     8.043194    1.0498757  0.014728333 -0.017264675  -0.10850238    5.4601169    5.4524388 -0.044308062   0.55404482  0.017606667    1.0229933        0.075    2.1194295          0.5   0.11366593    4.3988556    2.8156165    30.801768 -0.0094141712  -0.37900004  0.023442236    0.3929406  -0.97250939    6.6465167 
 1062000     11.09941    1.4933824    9.6060281  -0.29090066   0.99580937    1.2856516   0.80327131   -3.5502959            3    5.4746103    7.7624664    7.8649779   0.79638667  0.011164541  -0.24131836  0.075621011    5.2983832    5.2868868            0            0   0.11087894    1.0378357        0.075    2.0800642          0.5   0.11531508    4.3359463    2.8361598    30.801768 -0.0047985164  -0.37319095 -0.022309877   0.34171948   0.61334607    4.1505234 
 1063000    11.079687    1.4760646    9.6036219  -0.29031312   0.98426159    1.2828628   0.78588964   -3.5502959            3    5.5155008    7.7298213    7.9188315   0.89784954 0.00024612963 -0.029588449 -0.023151126     5.343087    5.3281844   0.39629408    1.0776916  0.045076259     1.025619        0.075    2.0793094          0.5   0.11395766    4.3875944    2.8004449    30.801768 0.0094012655  -0.41980621 -0.00013311159   0.29247639 -0.018586837    3.4334563 
 1064000    11.114063    1.4994022    9.6146606  -0.31152179   0.99982342    1.2795818   0.81399825   -3.5502959            3    5.8320542    7.9256236    8.1622948     1.408244  0.016931872 -0.061815442  0.066928484    5.6534737    5.6452169   0.34347465     0.714472   0.10974641    1.0252676        0.075    2.0696041          0.5   0.11391862    4.3890981    2.7648008    30.801768 -0.0054541259  -0.42380154 -0.0037229729   0.38175883   -0.1783689    8.0447851 
 1065000    11.051501    1.4636856    9.5878152  -0.29103166   0.97600708    1.2356092    0.8035882   -3.5502959            3    5.6560062    7.9137683    7.9995892    1.0546612  0.032820667  0.014380903  0.033601113    5.4797096    5.4755896  -0.23486051   0.59577626   0.18934995    1.0294642        0.075    2.0477162          0.5   0.11438492    4.3712057    2.8098496    30.801768 -0.011620215  -0.34812339 0.0011425894   0.41715798    3.3979664    3.0387203 
 1066000    11.070573    1.4781215    9.5924512  -0.29801097   0.98563317    1.2339741   0.82071282   -3.5502959            3    5.6067712    7.8471103    7.9043558    1.0688475 -0.0014273575   -0.1218904  0.037469819    5.4267177    5.4265933  -0.14007541   0.87712068   0.12468156    1.0265173        0.075    2.0991151          0.5   0.11405748    4.3837547    2.7666747    30.801768 0.0027492188  -0.44252197 0.0050470699   0.45252229   -2.3725531   0.63003157 
 1067000    11.087154    1.4585916    9.6285625    -0.297347   0.97261036    1.2565334   0.78400329   -3.5502959            3    5.7119478    7.9214567    8.0174301    1.1969566  0.017242546 -0.076916992   0.02960834    5.5399478    5.5284759 -0.023822152    1.7335057   0.52115857    1.0382121        0.075    2.1163758          0.5    0.1153569    4.3343745    2.8029741    30.801768 -0.018627072  -0.37121827 0.0039109109   0.45550699    1.7124167    3.0493833 
 1068000      11.0844    1.4845021    9.5998978  -0.29178199   0.98988786    1.2615875   0.80942256   -3.5502959            3    5.5105596    7.7686117    7.8864419   0.87662527 0.0068576907 0.0051084879  0.053714958     5.332983    5.3263497            0            0   0.11758367    1.0362403        0.075     2.097838          0.5   0.11513781    4.3426222    2.8470263    30.801768  0.033272156  -0.34645502 -0.019999644    0.4768449   -3.5225584   -0.8586839 
 1069000    11.065575    1.4659911    9.5995839  -0.30429721   0.97754444    1.2743634   0.78035621   -3.5502959            3    5.4749864    7.7708309    7.7919097   0.86221875 -0.0016058774   0.18314532  0.013959858    5.3037866    5.2889111 -0.047985166   0.29502523   0.31595531    1.0332227        0.075    2.0797332          0.5   0.11480253    4.3553048    2.7964197    30.801768 -0.019170181  -0.35259535 -0.018579278   0.39433548   -1.5494848  0.001970686 
 1070000    11.100161    1.4974312    9.6027296  -0.29835745   0.99850916    1.2750073   0.81485334   -3.5502959            3    5.7270907     7.889181    8.0560814    1.2360098 0.0081413087  -0.45318073   0.11410387    5.5483227    5.5409214   0.34144047   0.65339208   0.59348898    1.0255896        0.075    2.0946545          0.5    0.1139544    4.3877201    2.8043469    30.801768 -0.0056766414  -0.34096358 -0.0024968756   0.33847986    2.7126409   0.94115443 
 1071000    11.083701    1.4913888    9.5923124  -0.30423045      0.99448    1.2640746   0.81541743   -3.5502959            3    5.4706709    7.7445158    7.8747844   0.79271247 -0.0025975345 0.00027081155  0.031391743    5.2917791    5.2860979    2.0945316     1.961518   0.19585964    1.0212181        0.075     2.083801          0.5   0.11346868    4.4065024    2.7982875    30.801768 -0.0024269721  -0.32045088 0.0079811858   0.35972441   -3.1977673   0.68797245 
 1072000    11.093057    1.4729747     9.620082  -0.28273388   0.98220122    1.2628174   0.79579858   -3.5502959            3    5.5835287    7.8496873    7.9620679   0.93883085 -0.010051424  -0.11417636 -0.0019134033     5.408941    5.3991392 -0.040252265   0.59845756  -0.25990429    1.0326744        0.075    2.1122475          0.5    0.1147416    4.3576174     2.844464    30.801768 0.00043709148  -0.36486879  -0.02729085   0.33644081    2.8311763     4.604786 
 1073000    11.094196    1.5295734    9.5646228  -0.29653545    1.0199421    1.3518288   0.79942997   -3.5502959            3    5.5946888    7.9064479    7.9233988   0.95421969 0.00093840582   0.17300966  0.058777708    5.4193044    5.3973024            0            0 -0.019229502    1.0420668        0.075    2.0605073          0.5    0.1157852    4.3183412    2.8107985    30.801768 0.0014676086  -0.35771606 -0.0033451836   0.34358432   -2.6214211    4.4424897 
 1074000    11.131495    1.5227687    9.6087264  -0.28424322    1.0154046    1.3179566   0.81441466   -3.5502959            3    5.6730264    7.9426053    8.0147572    1.0617167 -0.026827286  -0.23331037  0.035137708    5.4943546    5.4805858   0.17894002    2.0169179  0.064104113    1.0281305        0.075    2.0672742          0.5   0.11423672    4.3768763    2.8342585    30.801768 -0.016186774  -0.40125747 0.0024977198   0.32443253    2.3271223   0.63349354 
 1075000    11.081793    1.4714188    9.6103737  -0.29358263   0.98116371    1.3049947   0.76599879   -3.5502959            3    5.7132617    7.9288613    8.0409185    1.1700054  0.027386455  0.022665615  -0.13292508    5.5452117    5.5227138   -1.0120685    0.9779411  0.079576792    1.0116476        0.075    2.0881456          0.5   0.11240529    4.4481892    2.8005115    30.801768  0.027973957  -0.34397778 -0.013040801   0.40205578    1.0907202    3.4209057 
 1076000    11.096712    1.4993484    9.5973637   -0.2859085   0.99978755    1.3153968   0.79010153   -3.5502959            3    5.6962464    7.8990599    8.0269477    1.1627318  0.013837709 -0.017771904  0.036862791    5.5229086    5.5041796    0.2699919   0.98560012  -0.18775571    1.0162236        0.075    2.1122401          0.5   0.11291374    4.4281592    2.7944234    30.801768 -0.011891393  -0.39695944  0.021945208   0.39027329   -1.0912128    9.7388199 
 1077000    11.100235    1.5072389    9.5929963   -0.2978858    1.0050491    1.3123433   0.80089909   -3.5502959            3    5.6130162    7.8056725    8.0004695    1.0329065 -0.0002938496 -0.017680673  0.049386263    5.4373095    5.4213952   0.68488631   0.94391979   0.22760858    1.0267838        0.075    2.1011762          0.5   0.11408709     4.382617    2.8043135    30.801768 -0.00044190456  -0.43338332 -0.0071460504   0.31890817  0.093388219     3.412848 
 1078000    11.168798    1.5293613    9.6394365   -0.2786005    1.0198006     1.279433   0.84737781   -3.5502959            3    5.4956018     7.739068    7.8769335   0.87080383 -0.0030971868  -0.17668457  0.031740943    5.3096983    5.3087862            0            0 -0.049732832   0.99861238        0.075     2.115491          0.5   0.11095693     4.506253    2.7939823    30.801768 -0.0031926156  -0.32840548 -0.010458688   0.34990052   -0.1273226    1.8957469 
 1079000    11.169533    1.5289182    9.6406145  -0.28630742    1.0195051     1.332823   0.81135146   -3.5502959            3    5.5386297    7.8577888    7.9056979   0.85240234 -0.015943553 -0.029866196 -0.029265569    5.3606299    5.3440184  -0.28322437    1.1346561  -0.86599328     1.042799        0.075    2.0741943          0.5   0.11586655    4.3153091    2.7840881    30.801768  0.014030207  -0.40730965  -0.00322864   0.37851191   -0.3327212    6.8301517 
 1080000    11.072932    1.4768523    9.5960802  -0.28530358   0.98478681    1.2589266   0.80269557   -3.5502959            3    5.7186074    8.0280439    8.0126305    1.1151479 0.0014940106 -0.053639189  -0.06592344    5.5425066    5.5347861   0.42476315   0.53248702   0.52802488    1.0090921        0.075    2.0718452          0.5   0.11212134    4.4594543     2.813592    30.801768  0.017469908  -0.33634565 0.0082850951   0.36088144   -1.2885482    6.4060567 
 1081000    11.128717    1.4881901    9.6405271  -0.27623488   0.99234706    1.2617911   0.81338388   -3.5502959            3    5.5382193    7.7555241    7.9338841   0.92524967  0.012834878 -0.0030810787  0.032787015    5.3597736    5.3539797  -0.35952765    1.1933632  -0.15448294    1.0372984        0.075    2.1001299          0.5   0.11525538    4.3381924    2.8293779    30.801768 -0.037063659  -0.44067934  0.012014863   0.36193466  -0.30654367    5.2170597 
 1082000    11.106429    1.4894764     9.616953   -0.2797016    0.9932048    1.2672129   0.81120432   -3.5502959            3    5.4052371    7.7098453    7.8031403   0.70272557 -0.011934733  -0.22425322  -0.05297945    5.2272696    5.2202058    0.6434872    0.8594961 -0.062973859    1.0217919        0.075    2.0931327          0.5   0.11353243     4.404028    2.8078115    30.801768  0.029123848  -0.38288288 -0.023893118   0.40718329    1.9681085    5.2182765 
 1083000    11.084834    1.4628782    9.6219561  -0.30892594   0.97546872    1.2240994   0.81035178   -3.5502959            3    5.6796657    7.8765225    7.9755766    1.1868979   0.01156616 -0.010158208 0.0097782479    5.5018852    5.5009296            0            0   0.26527243    1.0405221        0.075    2.1045668          0.5   0.11561357    4.3247519    2.8206095    30.801768 0.0025812101  -0.32306782 0.0082113836   0.35597219  -0.92094671    4.0546681 
 1084000    11.037329    1.4660077    9.5713216  -0.31241814   0.97755548    1.2660287   0.78592186   -3.5502959            3    5.2953319    7.6005421    7.7339668   0.55148683 0.0049759933  0.026305393 -0.028088218    5.1229111    5.1104736  -0.19984891    1.1825768  -0.33070986    1.0268269        0.075    2.1038171          0.5   0.11409188     4.382433    2.7930995    30.801768 -0.0030156826  -0.41746814 -0.00083633739   0.36377568   0.95148686   -0.9174363 
 1085000    11.103152    1.4671641    9.6359877  -0.29532804   0.97832664    1.2317612   0.81001348   -3.5502959            3    5.5236959    7.7848622    7.9405168   0.84570863 0.0029489322  0.049091092 -0.086499748    5.3459897    5.3438411  -0.81329306    2.0801723  0.082891811    1.0159711        0.075    2.1085187          0.5   0.11288568    4.4292598    2.8088187    30.801768 -0.0046240345  -0.32718162 -0.013478573   0.37992027    2.2960866   -1.5791114 
 1086000    11.051496    1.4874158    9.5640803  -0.31329012   0.99183075    1.2768415   0.80250687   -3.5502959            3    5.6217455    7.8287303    8.0071298    1.0293766  0.018277828 -0.059697499 -0.011042475    5.4456862    5.4353084            0            0  0.064564614    1.0486865        0.075    2.0524634          0.5   0.11652072    4.2910822    2.8325019    30.801768 -0.00049569419   -0.3957834 -0.00048967847    0.3257417   -2.8961633    5.5426762 
 1087000    11.027366    1.4446017     9.582764  -0.29640573   0.96328168    1.2377264   0.78097951   -3.5502959            3    5.6652837    7.8811798    8.0178782    1.0967933 -0.031513805  -0.19812713 -0.070057574    5.4939472    5.4845579  -0.59737191    0.4210842   0.16126506    1.0274441        0.075    2.0581327          0.5   0.11416045    4.3798005    2.7955321    30.801768 -0.032435254   -0.3697276   0.02912696   0.38582207    2.5772231    4.9484955 
 1088000    11.075345    1.4695189    9.6058261  -0.30513769   0.97989682    1.2474065   0.80221644   -3.5502959            3    5.5058876    7.8258142    7.9351862   0.75666246  0.002532336  -0.11710016 -0.029785244     5.329892    5.3237484            0            0  -0.65106636    1.0332822        0.075    2.0835744          0.5   0.11480913    4.3550542    2.7915732    30.801768 0.0058348219  -0.34174679 0.0067970658    0.3347343    1.5045887   -3.9853231 
 1089000    11.060783    1.4986043    9.5621785  -0.29331273    0.9992914     1.281706   0.81169814   -3.5502959            3    5.6666624    7.9297875    8.0122266    1.0579731  0.012752667  -0.20359597  -0.01408394    5.4885866    5.4795149  -0.24206006   0.34507377  0.077145764    1.0457734        0.075    2.0890037          0.5   0.11619704    4.3030356    2.7978616    30.801768 -0.017119439  -0.40209167  0.033654805   0.43663664    1.0827063    4.1365741 
 1090000    11.072392    1.4642503    9.6081415  -0.29657622   0.97638365    1.2163591   0.81702759   -3.5502959            3    5.5921263    7.8714985    7.9457899   0.95909061 -0.0044566506  -0.24358606   0.15343178    5.4128813    5.4145205  -0.62160453   0.85551439   0.10588638    1.0239121        0.075    2.0839061          0.5   0.11376801    4.3949086     2.812406    30.801768 -0.033144297  -0.44391914 0.0024794028   0.38350971    2.9937642    2.2788052 
 1091000    11.062613    1.4576549    9.6049585   -0.2906101   0.97198571    1.2412071   0.79316316   -3.5502959            3    5.6525331    7.8500145      8.04749    1.0600947  0.034651941  0.070823619 -0.069753246    5.4785236     5.471299   0.86613683   0.87664456  -0.34254448    1.0306124        0.075     2.100853          0.5   0.11451249     4.366336    2.8109467    30.801768    -0.048122  -0.45476514 0.0088106981   0.32449684   -2.1156431     5.744572 
 1092000     11.05497    1.4822061    9.5727636   -0.3202443   0.98835685    1.2590252   0.80857736   -3.5502959            3     5.271737    7.5186166    7.7476426   0.54895189 -0.018268413   -0.2245703 -0.039346014    5.0943459    5.0879013   0.19582637    1.1757319   0.34022906    1.0239251        0.075    2.0804761          0.5   0.11376946    4.3948526    2.8004444    30.801768 0.0057731078  -0.41237139 -0.0089193904   0.42718936   0.14353534    2.2793094 
 1093000    11.112734    1.4761923    9.6365412  -0.30778548   0.98434677    1.2489184   0.80862348   -3.5502959            3    5.6982012    7.8450153    8.0933881    1.1562003  0.029532998  0.039512416  -0.02474777    5.5207999    5.5158412   0.97577778   0.55461196  -0.85004575    1.0153519        0.075    2.0565331          0.5   0.11281688     4.431961    2.8185115    30.801768 1.2161085e-06  -0.28966292 -0.022196071   0.31002332   0.55077796    9.3767762 
 1094000    11.119811    1.4879834    9.6318274  -0.30100795   0.99220925    1.2863125   0.79683394   -3.5502959            3    5.5351236    7.7625516    7.8842784    0.9585407 -0.0070517831   -0.1533695   0.18969104    5.3603088    5.3473035  -0.26877737    1.3146726   0.10554406     1.025694        0.075    2.0738804          0.5     0.113966    4.3872736    2.8081954    30.801768  0.016664212  -0.31865885  0.024062201   0.37608744    1.1737296    6.3566171 
 1095000    11.088301    1.4567238    9.6315771  -0.28906195   0.97136488    1.2406695   0.79248674   -3.5502959            3    5.5300234    7.7980332    7.8849755   0.90706141   0.01288783   0.15457759   0.08406985    5.3561623    5.3488678   0.95285787   0.35131873   0.12468554    1.0294088        0.075    2.0687834          0.5   0.11437875    4.3714414    2.8268078    30.801768 -0.028270488  -0.37871457 -0.014573811   0.36902149    -5.598946     4.246866 
 1096000    11.101893    1.4756832    9.6262094  -0.27502873   0.98400725    1.2316415   0.81955665   -3.5502959            3    5.5069388    7.8485686    7.8729072   0.79934048  0.045795375  -0.27898942  0.068292955    5.3271389    5.3271014            0            0   0.90974389    1.0344885        0.075    2.0572205          0.5   0.11494317    4.3499757    2.7918091    30.801768 -0.012439558  -0.38542289  0.026043961   0.32391709    2.4266366    1.5509808 
 1097000    11.087822    1.4982471     9.589575  -0.28613534   0.99905322    1.2809395   0.81181152   -3.5502959            3    5.5969549    7.9402903    7.9203359   0.93023834 -0.0030127848  -0.07074245  -0.02070755    5.4188542    5.4099193    0.4717949   0.71492485 -0.013312937    1.0408608        0.075    2.0430052          0.5    0.1156512    4.3233448    2.7948073    30.801768 -0.0075651978  -0.31841083 -0.013005689   0.30902501   0.75121166   0.88009998 
 1098000    11.069562    1.4653574    9.6042044  -0.28037003   0.97712188    1.2406898   0.80206394   -3.5502959            3    5.4683595    7.7540931     7.869607   0.78137846 -0.016053189 -0.060336703 -0.025419939    5.2923973     5.287201    1.9757481    2.0647798   0.47466081    1.0164967        0.075    2.0707875          0.5   0.11294408    4.4269696    2.8161326    30.801768  0.018623115   -0.3672462 -0.013607991   0.28481004   0.19840743    5.7112592 
 1099000    11.123468     1.519247    9.6042212  -0.29766731    1.0130563    1.2948419   0.82588673   -3.5502959            3    5.6119829    7.8533414    7.9981733   0.98443404 0.0077492588 0.0034618938 -0.021481608    5.4307943    5.4229174   0.81510909    2.4230285  0.078723509    1.0438729        0.075    2.1004273          0.5   0.11598588    4.3108697    2.8005903    30.801768   0.02259739  -0.41156917  0.013623555    0.3242747  0.035932297     7.183716 
 1100000    11.093743    1.4939374    9.5998058  -0.28727074   0.99617947    1.2541832   0.82483189   -3.5502959            3      5.43927    7.7780805    7.9163016   0.62342797 -0.013420741  -0.08605159  0.028216015    5.2583128    5.2561413    1.5344437    1.1164806  -0.25057196     1.034372        0.075    2.0962696          0.5   0.11493022    4.3504658    2.8136292    30.801768 0.0078191112   -0.4685073 -0.011581614   0.37533671    2.5202064    1.4549084 
 1101000    11.039519    1.5080166     9.531502  -0.30568481    1.0055676    1.2847848   0.82010477   -3.5502959            3     5.740529    7.9491997    8.0714897    1.2008976  0.023845636  0.017837286 -0.070905131    5.5606089     5.552932  -0.39362014   0.39718296   0.20614945    1.0319906        0.075     2.072075          0.5   0.11466563    4.3605047    2.8132728    30.801768  0.020337701  -0.41239354 -0.027740985   0.37815537   -3.9278465    2.9117943 
 1102000     11.07418    1.4766119    9.5975677  -0.28507636   0.98462657    1.2381095   0.81628356   -3.5502959            3    5.5996689    7.8192404    7.9233138    1.0564526 -0.0020848307  -0.06599042  0.012674026    5.4205871    5.4188872            0            0  0.034836538    1.0257899        0.075    2.0955428          0.5   0.11397666     4.386863    2.8131841    30.801768  0.029178994  -0.38707807 -0.011101814   0.37644621    1.5605277    1.4400711 
 1103000    11.058497    1.4643249    9.5941722  -0.28938664   0.97643337     1.229741     0.808204   -3.5502959            3    5.9434547    8.1501494    8.2064748    1.4737399  0.016428621 -0.029706203 -0.086965677    5.7661455    5.7638949   0.22159554    2.0778431  -0.44791244    1.0393479        0.075     2.057902          0.5    0.1154831    4.3296379    2.8091631    30.801768  0.011579886  -0.41841526  0.017070253   0.37030425   -4.2962696    4.5774354 
 1104000    11.035086     1.437554    9.5975322  -0.29767963   0.95858216     1.204101   0.79553004   -3.5502959            3    5.4302515     7.707416    7.8399118   0.74342661  0.012390708  -0.15129354  0.026041724    5.2557227    5.2544355  -0.67715948   0.48249138 -0.055275039    1.0227903        0.075    2.0719733          0.5   0.11364336     4.399729    2.8077589    30.801768 0.0032921959  -0.38150391 -0.016732188   0.34307655    1.1448033   -2.4881512 
 1105000    11.074462    1.5084981    9.5659636  -0.29341438    1.0058887    1.2704547   0.83017715   -3.5502959            3    5.6403251    7.8832962    8.0336108    1.0040683  0.019107235  -0.18207051 -0.008809955    5.4581952    5.4548205            0            0  0.093959283    1.0349445        0.075    2.1016698          0.5   0.11499383    4.3480592     2.793363    30.801768  0.029451072  -0.29920293 -0.0088950542   0.35588065  -0.93526417    3.5479988 
 1106000     11.10475    1.4939657    9.6107845  -0.29407297    0.9961983    1.2726518   0.81257138   -3.5502959            3    5.7577281    7.8622295    8.1809962    1.2299587  0.027903932   0.23781573 0.0016890872    5.5794607    5.5719027            0            0   0.17130781    1.0348058        0.075    2.0796114          0.5   0.11497842    4.3486421    2.8265144    30.801768  0.012670494  -0.32892258 -0.026884328      0.32839    -2.382803    3.0129874 
 1107000    11.112092    1.4917309    9.6203606  -0.29637977   0.99470809     1.287659   0.80010064   -3.5502959            3    5.4753199    7.6877965    7.9187675   0.81939572  0.028372749  -0.25014113 -0.036354764    5.2997884    5.2873032     0.654894   0.53334736  0.029580613    1.0338337        0.075    2.0934952          0.5   0.11487041    4.3527309    2.8095717    30.801768 -0.021241374  -0.41846885 0.00074820525   0.30746712     3.265323    4.5169789 
 1108000    11.080634    1.4689618    9.6116725  -0.29928955   0.97952533    1.2480104   0.80119565   -3.5502959            3    5.5510761    7.7219591     7.915085    1.0161843  0.024191922  -0.14599741  0.044192688    5.3753044    5.3688487   0.21685069   0.83373342   0.14879062    1.0304951        0.075    2.1044355          0.5   0.11449946    4.3668328    2.7872408    30.801768  0.016514371  -0.40315142  0.013383719   0.36992507   -2.3475789   -3.6325512 
 1109000     11.06885    1.4517907    9.6170596  -0.29352774    0.9680754     1.242519   0.78577571   -3.5502959            3    5.4887394    7.7390709    7.9012774   0.82587003   0.01095662 -0.058467155 -0.061349705    5.3163507    5.3073138            0            0   0.15188956    1.0182283        0.075    2.0817047          0.5   0.11313647    4.4194412    2.8137596    30.801768 -0.0071211718  -0.31799183  0.003629777   0.35617328   -1.1349722  -0.27513597 
 1110000    11.061622    1.4521192    9.6095027  -0.28759387   0.96829448    1.2186444    0.8020306   -3.5502959            3    5.4456899    7.7610865    7.8633063   0.71267699  0.033151964  -0.10942824  0.030704176    5.2697351    5.2677504  -0.28329388    0.5317807  -0.12414421    1.0514899        0.075    2.0925251          0.5   0.11683221    4.2796417    2.8418074    30.801768  0.010980708  -0.40261781 -0.010082624   0.35271241   0.24973081   -3.2733295 
 1111000    11.065079     1.455005    9.6100744  -0.28975155   0.97021876    1.2588886   0.77845151   -3.5502959            3    5.6375866    7.9437017    7.9975702   0.97148783   0.02066109  -0.12963435  0.051711737    5.4668046    5.4537708  -0.24873755   0.35017677 -0.048031696    1.0299136        0.075      2.05605          0.5   0.11443485    4.3692984    2.8288213    30.801768 -0.017008717  -0.32129425  -0.03016031   0.30933911    1.5081441   0.19021475 
 1112000    11.106949    1.4923673    9.6145817  -0.29885811   0.99513247    1.2546603   0.82277015   -3.5502959            3    5.6548577    7.9069679    7.9443226    1.1132826 -0.010132466  0.017251652 -0.082224996    5.4743528    5.4716593   0.24083207    1.1176922  0.013726867    1.0359382        0.075    2.0483734          0.5   0.11510424    4.3438885    2.8116712    30.801768  0.012641809  -0.36263386 -0.0010329557   0.34187492     -0.19566   -2.4213181 
 1113000    11.103553     1.492537    9.6110165  -0.29393815   0.99524564    1.2350862   0.83598629   -3.5502959            3    5.2977248    7.6422824    7.7514816   0.49941033  0.044606957 -0.064514667 -0.072693163    5.1143204    5.1173844  -0.41420013   0.42427783 -0.0033895261    1.0265902        0.075    2.0969876          0.5   0.11406558    4.3834433    2.7930194    30.801768  0.010403183  -0.42785585 0.0066993955    0.2997515    1.7990507    3.2493572 
 1114000    11.045645    1.4837719    9.5618734  -0.30862611   0.98940096    1.2888415   0.79047234   -3.5502959            3      5.79126    7.9899113    8.0978857     1.285983 -0.022639423 -0.057290093 -0.058696923    5.6178408    5.6030706            0            0   0.92929789    1.0272577        0.075    2.0733201          0.5   0.11413975     4.380595    2.7873733    30.801768  0.016516818  -0.38851168 0.0048449183   0.31209445    1.7943544    2.4654963 
 1115000    11.114219     1.506256    9.6079626  -0.28685301    1.0043937     1.264403   0.83171433   -3.5502959            3    5.4691312     7.802114    7.8445249   0.76075456 -0.000465023  0.098846396 -0.075596577    5.2866641    5.2845102            0            0   0.18345624     1.034953        0.075    2.0844566          0.5   0.11499478    4.3480235      2.82747    30.801768 -0.0089691496  -0.28765078 -0.012512846   0.33904478   0.63021626   -0.1831913 
 1116000     11.09405    1.4796733     9.614377  -0.30045237   0.98666791    1.2330693   0.82303884   -3.5502959            3     5.431245     7.681886    7.8484449   0.76340401 0.0040928586  -0.22541574 -0.0038019271    5.2506812    5.2511992            0            0   0.18478461    1.0144387        0.075    2.1021204          0.5   0.11271541    4.4359508    2.7954089    30.801768 -0.022307096  -0.33678622  0.026386499   0.34014273  -0.68195476    4.0706617 
 1117000    11.113055    1.5072044    9.6058509   -0.3111449    1.0050261    1.2909667   0.81508814   -3.5502959            3    5.6222766    7.8244031    7.9349445    1.1074823  0.012115468  -0.19976784 0.00015979212    5.4434571    5.4337769  -0.11982353    2.8814743   0.14188432    1.0161092        0.075    2.0611051          0.5   0.11290102     4.428658    2.7806796    30.801768 -0.012255505  -0.41950814 -0.017630797   0.34038177    2.0865246   0.12405736 
 1118000    11.082422    1.4627791    9.6196429  -0.29065037    0.9754026    1.2403342   0.79943643   -3.5502959            3    5.4783361    7.6965212    7.9146204   0.82386657  0.014340477  0.052299078  -0.11232968    5.3029503    5.2972295  -0.29072811    1.2982117   0.08075764    1.0181232        0.075    2.0699253          0.5    0.1131248    4.4198972    2.7884241    30.801768 -0.020223199  -0.33168815  -0.01684917   0.40375669   -1.8851883    1.3943032 
 1119000    11.109205    1.5197562    9.5894488  -0.30836524    1.0133958    1.2914837   0.82868738   -3.5502959            3     5.604106    7.8602202    7.9627628   0.98933498 -0.028804836  -0.16115442 -0.0071471253    5.4223029    5.4155308            0            0   0.25080287    1.0337008        0.075    2.0193944          0.5   0.11485564    4.3532907    2.7946059    30.801768 -0.0092088308  -0.40368766  0.014216593   0.35360552     0.338335    1.1292722 
 1120000    11.101301    1.4847438    9.6165576  -0.28522581   0.99004898    1.2499123    0.8174615   -3.5502959            3    5.6002965     7.834783    7.9336757     1.032431  0.023824499   -0.1386904  0.083403025    5.4209563    5.4177914  0.081043326    2.0114968  0.035234548     1.018656        0.075    2.0299658          0.5     0.113184    4.4175857    2.8164174    30.801768 -0.013495696  -0.39028117 -0.00092651857   0.34641888    3.1051409    4.2140935 
 1121000    11.095343    1.5054984    9.5898443   -0.2969801    1.0038885    1.2851148   0.81708784   -3.5502959            3    5.5628179    7.8489188    7.9651083   0.87442667 -0.027309816  0.089786338  0.014586416    5.3835597    5.3751727  -0.19787969    1.7405289  -0.34260727    1.0391793        0.075    2.0475923          0.5   0.11546436    4.3303404    2.7989521    30.801768 -0.016071936  -0.33589691 -0.001371259   0.33711268   -1.3164212    3.8324174 
 1122000    11.060336     1.462788    9.5975485  -0.27846942   0.97540853    1.2398663   0.79975771   -3.5502959            3    5.7526421    8.0208741    8.0015619    1.2354901  0.014153986  -0.29184661 -0.058538639    5.5771858    5.5716038   0.82608071   0.65686329   0.59854966    1.0231259        0.075    2.0794215          0.5   0.11368065    4.3982859    2.7916945    30.801768 0.0014463274  -0.36702983  0.013062523   0.36190853    1.3814756    10.670218 
 1123000    11.073276    1.4718492    9.6014266  -0.29837926   0.98145074     1.261754    0.7952561   -3.5502959            3    5.6429568    7.8456138    7.9504161    1.1328404 -0.021568437 -0.048795727  0.079506323    5.4684881    5.4587226            0            0     0.163197     1.034213        0.075    2.1316486          0.5   0.11491255    4.3511348    2.8112194    30.801768 -0.00092769464   -0.3085996 -0.0049149209   0.36685879   -3.0474718    1.3176973 
 1124000    11.083138    1.4649836    9.6181548   -0.2937836   0.97687264    1.2516042    0.7943846   -3.5502959            3    5.7433719    7.9641106    8.0338446    1.2321604   -0.0152651  -0.22110834  0.050778133    5.5690944    5.5606197   0.25183968    0.5627919   0.22334848    1.0233726        0.075    2.0887879          0.5   0.11370807    4.3972252    2.8264074    30.801768 -0.0052491092  -0.35519782 0.0084935627    0.4229859    1.5436709    4.0755987 
 1125000    11.159978    1.5231543     9.636824  -0.29016933    1.0156617     1.277356   0.84186505   -3.5502959            3    5.4140175    7.6652277     7.808083   0.76874172    0.0179252 -0.0043145746 0.0083383521    5.2293234    5.2275052  -0.81629091    2.9781811   0.13376688    1.0384384        0.075    2.0908259          0.5   0.11538205    4.3334297    2.8106651    30.801768 -0.005080642  -0.39785704 0.0033617561   0.33340553   -2.0820704   -2.0463077 
 1126000    11.131083    1.5099864    9.6210964  -0.28198201    1.0068812    1.2735054   0.82980008   -3.5502959            3    5.6960299    7.9676213    7.9889347    1.1315339  0.015798807 -0.050399564 0.0011313785    5.5139828    5.5100799            0            0   0.21406512    1.0141779        0.075    2.0561994          0.5   0.11268643    4.4370914    2.7966211    30.801768 -0.0077011129   -0.3529793 0.0097009868   0.36114357    1.4216739    4.1051235 
 1127000    11.060155    1.4701594    9.5899961  -0.31470036   0.98032393    1.2455395   0.80417057   -3.5502959            3     5.441165     7.671225    7.8350632   0.81720682  0.016340887 -0.0057495198  0.021483034    5.2647406    5.2592984  -0.51384261    3.7325612   0.51481556    1.0270073        0.075    2.0793808          0.5   0.11411193    4.3816629     2.781461    30.801768  0.008943143  -0.37612009 0.0063452236   0.41292656   -1.2564348   0.47073636 
 1128000    11.089164    1.4743112    9.6148525  -0.28918835   0.98309243    1.2740181   0.78982858   -3.5502959            3    5.7303272    7.9605019    7.9916521    1.2388277 -0.0026724719  0.021886047  0.065205581    5.5570493    5.5443023   0.76614685    1.2751996   0.53475465    1.0151938        0.075    2.0468079          0.5   0.11279931    4.4326511    2.7824296    30.801768 0.0070907018  -0.36658123 -0.0068488823   0.34927292   -1.3823457     8.983875 
 1129000    11.102902    1.4861032    9.6167992  -0.27806576   0.99095547    1.2506213   0.81849973   -3.5502959            3    5.7744625    7.9843603    8.0853943     1.253633  0.014870169  -0.18373273 -0.071466715    5.5948945    5.5918539  -0.75120598    1.3935085   0.10833814    1.0333674        0.075    2.0360885          0.5    0.1148186    4.3546953    2.8166123    30.801768 -0.014688363  -0.42358874  -0.02517978   0.35234493    2.9973601   -2.8216952 
 1130000    11.137466    1.4909996    9.6464666  -0.29271755   0.99422048     1.244557   0.82797514   -3.5502959            3    5.7254088    7.9227481    8.0925681    1.1609102  0.014587722  -0.14111928  0.024284133     5.543762    5.5436856   -0.6072693   0.41475466     0.328714    1.0357841        0.075    2.0442493          0.5   0.11508712    4.3445348    2.7967353    30.801768  0.026243861  -0.30660908  0.004643161   0.41299901   0.49825112    4.8497936 
 1131000    11.088688    1.4929601     9.595728  -0.30885204   0.99552778    1.2809038   0.80596218   -3.5502959            3     5.355011    7.6313393    7.7760671   0.65762672  0.024466588 -0.022554198  0.091972519    5.1781936    5.1679807   0.11225358   0.96264482  0.065543623    1.0113553        0.075    2.0735647          0.5   0.11237281    4.4494751    2.7913152    30.801768  0.011089452  -0.34932487 -0.022084341   0.33082594    2.6628956    1.4509625 
 1132000    11.079521    1.4931819    9.5863387  -0.30292255   0.99567566    1.2886599   0.80104634   -3.5502959            3    5.5392274    7.7800884    7.9375374    0.9000563 -0.024757249  -0.04764728  -0.03389928    5.3634884    5.3510645  -0.62232712   0.92433167 -0.0071898605    1.0320885        0.075    2.0738337          0.5    0.1146765    4.3600911     2.815917    30.801768 -0.0033923483  -0.32486449 -0.0087550973   0.39640482   -1.9715843    3.6148111 
 1133000    11.086005    1.4935787    9.5924264  -0.30543753   0.99594023    1.2753378   0.81035375   -3.5502959            3    5.6080678    7.8398338    7.9481102    1.0362594  0.017155415  -0.15263249  -0.13012614    5.4302869    5.4218502            0            0   0.31162548    1.0214636        0.075    2.0665695          0.5   0.11349596    4.4054431    2.8183089    30.801768 0.0036094339  -0.30629155 -0.011167709   0.33823453    1.8568532    5.3809707 
 1134000    11.136545      1.53061    9.6059352  -0.29886036    1.0206333     1.293084   0.83967943   -3.5502959            3    5.4443046    7.6782541    7.8624126   0.79224709 0.0094060551 -0.0065306136   0.12014793    5.2600901    5.2554958            0            0     0.020076     1.029121        0.075    2.0428391          0.5   0.11434678    4.3726636    2.8025361    30.801768  0.034053758  -0.34262725  0.011968963   0.35816243   0.63803426    7.0508738 
 1135000    11.122023    1.5284869    9.5935356  -0.31110424    1.0192176     1.309406    0.8264578   -3.5502959            3    5.4547909    7.6745602    7.8727723   0.81704015 -0.021012098  -0.21959308  0.011825791     5.273477    5.2635988    1.0219451   0.70036247   0.10277889    1.0234718        0.075    2.0468466          0.5   0.11371909     4.396799    2.8196962    30.801768 -0.00099982569  -0.38605336 -0.018357477   0.29971145    1.8749855   0.74923015 
 1136000    11.070281    1.4674299    9.6028515  -0.28833047   0.97850385    1.2557979   0.79431094   -3.5502959            3    5.7361773    7.9632567    8.0306083    1.2146668  0.011484226 -0.0063769919  0.010695875     5.561916    5.5528128  -0.89191871    1.4967725 -0.038043895    1.0277442        0.075    2.0734862          0.5    0.1141938    4.3785215     2.779047    30.801768 -0.0097472499  -0.40640724 0.0035481328   0.44874785  -0.87833158    12.716093 
 1137000     11.09427    1.4550573     9.639213  -0.27524253   0.97025361    1.2374685    0.7927659   -3.5502959            3    5.5188422    7.7942535    7.8574585   0.90481455  0.027917557 -0.075176766    0.1397723    5.3449198     5.338154   0.89780311    2.0013923  0.012401404     1.015363        0.075    2.0452484          0.5   0.11281811    4.4319127    2.8032532    30.801768  0.011154953  -0.40905637  0.034072567   0.38141867  -0.80463575    4.5966135 
 1138000    11.116971    1.5005931    9.6163777  -0.28673877    1.0006176    1.3122969   0.79354748   -3.5502959            3    5.5990629    7.8698725    7.9582484   0.96906766 -0.0032403366 -0.00091642126  -0.10103621    5.4249691    5.4074487   -1.9041537    1.0727706    -0.181833    1.0332003        0.075    2.0598246          0.5   0.11480003    4.3553994     2.833157    30.801768 -0.0020650087  -0.34932062 0.0013598934   0.35321518   -0.1693553  -0.92415245 
 1139000    11.107549    1.4928439    9.6147054  -0.30402863   0.99545029    1.2932799   0.79759604   -3.5502959            3    5.7095566    7.8756019     8.094978    1.1580898  0.014955817  -0.17216447 -0.093887573    5.5345746    5.5207192            0            0  -0.37715467    1.0180506        0.075    2.0650372          0.5   0.11311673    4.4202126    2.8318881    30.801768 -0.011162019  -0.38643712 -0.0062822677   0.34853225    1.9443914    5.6812598 
 1140000    11.095463    1.4767352     9.618728  -0.30056053   0.98470874    1.2694953   0.79553144   -3.5502959            3    5.7206227    7.9044441    8.0345782    1.2228459 0.0016393516 -0.073831873  -0.10636697    5.5460937    5.5352582            0            0  0.075041253    1.0311424        0.075    2.0472876          0.5   0.11457137    4.3640918    2.7947279    30.801768 0.0031567299  -0.37436315 -0.016188039   0.44764987    1.3449846    6.5796515 
 1141000    11.122621     1.497493    9.6251276  -0.29012866   0.99855035    1.2817567   0.81042984   -3.5502959            3    5.7129609    7.8974659    8.0446888    1.1967279 -0.030623251    -0.108794  0.097966536    5.5351633     5.525806  -0.67008489    1.6666341   0.40958789    1.0274101        0.075    2.0882985          0.5   0.11415667    4.3799454    2.8290935    30.801768  -0.00519522  -0.33699379  0.021745575   0.36555582   0.27027176      3.83357 
 1142000    11.100316    1.4584846    9.6418311  -0.30399634   0.97253898    1.2561064   0.78416856   -3.5502959            3    5.4872591    7.7277722    7.8341196   0.89988564 0.0040822473  0.015429832  0.073668075     5.315223    5.3038496  -0.50817618   0.66316638   0.62962536     1.022101        0.075    2.0427411          0.5   0.11356678    4.4026959    2.7986142    30.801768 0.0068373757  -0.42925587  0.010346458   0.32289064   -1.1931203   -1.3741201 
 1143000    11.111259    1.5043416    9.6069178  -0.29655984    1.0031171    1.2866863   0.81475676   -3.5502959            3    5.6370935    7.8423233    7.9394159    1.1295413 -0.053167197  -0.38884905 -0.030428468    5.4583467    5.4492189  -0.37453939      1.93759 0.0073314218    1.0099649        0.075    2.0497683          0.5   0.11221832    4.4556006    2.8257443    30.801768  0.015016774  -0.39035769 -0.018698983   0.34617289    1.2739793    4.2070001 
 1144000    11.133894    1.4975169    9.6363769  -0.28699259   0.99856632    1.2922724   0.80345764   -3.5502959            3    5.6233403    7.8466454    7.9766059    1.0467697 -0.017802657   0.12253545 0.0092172546    5.4470724      5.43465            0            0  -0.14248401    1.0283829        0.075    2.0348342          0.5   0.11426477     4.375802    2.8078801    30.801768 -0.014260398  -0.38825513 -0.014692751   0.34987679  -0.22701794    6.3374126 
 1145000    11.119701    1.4804198    9.6392812  -0.28900115   0.98716572    1.2840876   0.78991254   -3.5502959            3    5.5956789    7.7937792    7.9347391    1.0585183 0.0045503742   -0.1211561  0.026229087    5.4223825    5.4081837  0.081482044   0.23667097  0.032091087    1.0260502        0.075    2.0699575          0.5   0.11400558    4.3857503     2.823507    30.801768 0.0074676163  -0.32058437 -0.018720823   0.36724887   -1.8283365    7.3528525 
 1146000    11.109109    1.5021408    9.6069686  -0.28026443    1.0016496     1.293972   0.80746309   -3.5502959            3     5.742791    8.0090333    8.0264394    1.1929002 -0.035353864 -0.034401777 -0.040040168    5.5656443    5.5538525  -0.51300906    1.3535342   0.12063037    1.0251249        0.075    2.0649755          0.5   0.11390276    4.3897091    2.8460338    30.801768   0.04743602  -0.31832825  0.013661561    0.3805515    3.0096657    2.1854411 
 1147000    11.148198    1.5356189     9.612579  -0.29212275    1.0239733     1.306499   0.83631525   -3.5502959            3    5.2538974    7.5767838    7.7782944   0.40661396 0.0035263098    0.1681227   0.14011528    5.0704209    5.0631298    1.1096068    2.7819354  -0.16456485     1.021149        0.075     2.035818          0.5     0.113461    4.4068006    2.8194435    30.801768 -0.012367765  -0.36242721  0.014471603   0.44336122   -2.7679071   -6.1092297 
 1148000    11.131737    1.5032226    9.6285145  -0.28611155     1.002371    1.3149112   0.79472854   -3.5502959            3    5.2750649     7.586439    7.7125109    0.5262449  0.017429483  -0.13009682  0.028540574     5.100712     5.083069            0            0   0.38675515    1.0113977        0.075    2.0711938          0.5   0.11237753    4.4492882    2.8161478    30.801768  0.036965675  -0.31327609 0.0056145078   0.38316833   -1.0948377   -1.3988092 
 1149000    11.139781    1.5140032    9.6257774  -0.29190473    1.0095596    1.3169726   0.80533236   -3.5502959            3     5.601034    7.7990229    7.9376049    1.0664742 -0.018472896   -0.1799565   0.05823288    5.4243547    5.4087371  -0.22293733   0.88209387   0.13414623    1.0353469        0.075    2.0551552          0.5   0.11503855    4.3463692    2.8090368    30.801768 -0.0090832604  -0.39432062 0.0017994272   0.37722994  -0.77728245    3.5636956 
 1150000    11.124091    1.4873581    9.6367333  -0.27894277   0.99179225    1.2687827    0.8078063   -3.5502959            3     5.436175    7.7240612    7.8418103   0.74265348 -0.0016735333  -0.17534396 -0.047808972     5.258953    5.2509145            0            0  -0.13040502     1.009229        0.075    2.0308366          0.5   0.11213655    4.4588493    2.8241067    30.801768  0.012176834  -0.36273933 -0.046446944   0.33367313  -0.19888251    2.4270405 
 1151000    11.108061    1.5053984    9.6026627  -0.29876218    1.0038218    1.3047205   0.80392807   -3.5502959            3    5.5991908    7.8666941    8.0330918   0.89778664 -0.0067246894  0.048028073 -0.094211166    5.4228197    5.4086829  -0.29491723    2.2702101   0.25291266    1.0266023        0.075    2.0334472          0.5   0.11406692    4.3833916     2.820021    30.801768 -0.0054484072  -0.33123261 0.0044623814   0.34110239    2.5698558    1.4557635 
 1152000    11.126789    1.5284048    9.5983841  -0.29990114    1.0191628    1.3009492   0.83199501   -3.5502959            3     5.766639    7.9652308    8.0668356    1.2678505  0.032078842 -0.0067205516 -0.022884851    5.5841103    5.5766817  -0.11931657    2.0078864  -0.38334984    1.0305192        0.075    2.0310596          0.5   0.11450213    4.3667311    2.7965764    30.801768  0.016908526  -0.41268091  0.013118276   0.34051643   0.82839569    6.9445764 
 1153000     11.09052    1.4927534    9.5977668  -0.28683019   0.99538996    1.2542283   0.82348657   -3.5502959            3    5.5979398    7.8522921    8.0263924   0.91513485   0.03864265 -0.091459193 -0.005759086    5.4172777    5.4148044   0.22572823    1.0578367 -0.096434867    1.0243808        0.075    1.9860826          0.5   0.11382008    4.3928979    2.8130822    30.801768  0.015399053  -0.38746678 -0.029892511   0.31013877  -0.47975351    6.6621693 
 1154000    11.060435    1.5106837     9.549751  -0.32327659    1.0073462    1.2958918    0.8156753   -3.5502959            3    5.4986789    7.7914015    7.8232973   0.88133789 -0.030554567 -0.047924323 -0.058188954    5.3197306    5.3094601            0            0   0.19223586    1.0373108        0.075    2.0083892          0.5   0.11525675    4.3381407    2.7912061    30.801768  -0.03531157  -0.37308507 -0.024589713    0.4047679   0.03311236   0.22981149 
 1155000    11.068044    1.4820801    9.5859637  -0.30436177    0.9882728    1.2590495   0.80842113   -3.5502959            3    5.6235453     7.832395     8.011786    1.0264549 0.0037308026  -0.22514136    0.1403154    5.4461884     5.439706  -0.77205164   0.51462893  -0.30757531    1.0347407        0.075     2.031566          0.5   0.11497119    4.3489157    2.8196701    30.801768 -0.020233857  -0.40531767 -0.039388458   0.33717869   -1.4146792    9.3096938 
 1156000    11.116012    1.4844455    9.6315669  -0.28614825   0.98985013    1.2666523   0.80598876   -3.5502959            3    5.4033581    7.6847701    7.7479944   0.77730977  0.011140942  -0.13495807 -0.051679771    5.2265348    5.2184087            0            0   0.15730037    1.0179858        0.075    2.0825017          0.5   0.11310954    4.4204937    2.7897427    30.801768 0.0067671564  -0.34672214 -0.0092574569    0.3208051   0.49771696    1.2703372 
 1157000    11.077321    1.4860103    9.5913112   -0.3052556   0.99089351     1.298018    0.7868513   -3.5502959            3    5.6155392    7.8121285      8.01896     1.015529 0.0042241942  -0.21305504   0.16752097    5.4429144    5.4260099   0.83513087    1.2299555   0.85136803    1.0363501        0.075    2.0551033          0.5   0.11515001    4.3421619    2.8208615    30.801768  0.020561421  -0.37420289  0.006490483   0.36975307     1.743409    1.3708825 
 1158000    11.080681    1.4579934     9.622688  -0.29061911   0.97221146     1.234275   0.79815294   -3.5502959            3    5.3423638    7.7153894     7.753998   0.55770388 0.0070677675 -0.0099201132   0.16954886    5.1672596    5.1621419            0            0  -0.25463766    1.0324236        0.075    2.0222997          0.5   0.11471373     4.358676    2.8091683    30.801768  0.016151641  -0.36295112 -0.0082345047   0.37536285    0.2379401  -0.39623622 
 1159000    11.105504    1.4895926    9.6159115  -0.29344621   0.99328227    1.2775416   0.80445899   -3.5502959            3    5.7962168    7.9497973    8.1580575    1.2807956 -0.016525276  0.059603187 -0.052796552    5.6197292    5.6096774   -1.2530808    1.7047629   0.26380609    1.0376445        0.075    2.0434016          0.5   0.11529383    4.3367454    2.8011334    30.801768 -0.012103353  -0.42965637 0.0012932735   0.39328625  -0.93993731    2.6426383 
 1160000    11.123524    1.4807974    9.6427269  -0.29252907   0.98741747    1.2847772   0.78987301   -3.5502959            3    5.6852091      7.91375    8.0374621    1.1044153  0.016332816 -0.0041800261  0.045675819    5.5119215    5.4976132   -1.0662488    3.6876037   0.11435154    1.0288903        0.075    2.0498516          0.5   0.11432114    4.3736441     2.801932    30.801768 -0.018730598  -0.38812304  0.022803751   0.46835082     2.401984    4.1711211 
 1161000    11.080869    1.4916558    9.5892136  -0.28474997   0.99465807    1.2954112   0.79485779   -3.5502959            3    5.5725978    7.9085568    7.9427299    0.8665068 0.0027456982  -0.19865788 0.0050665417    5.3982166    5.3834492   0.83708768   0.48260779   0.72986793    1.0164355        0.075    2.0046972          0.5   0.11293728     4.427236    2.8030995    30.801768  0.018426198  -0.38527102 0.0063955026    0.3424003    2.3801453  -0.14937468 
 1162000    11.089798    1.4826658    9.6071319  -0.28682566   0.98866336    1.2909766   0.78782251   -3.5502959            3    5.8492243    8.0116824    8.1450163    1.3909743 0.0061136642 -0.099829332   0.10540778    5.6763865    5.6607232            0            0  0.079049046    1.0274158        0.075    2.0491217          0.5   0.11415731    4.3799208    2.8123585    30.801768 0.0017838867  -0.36661247 0.0081162971   0.36979103   -2.2060861    3.8346987 
 1163000    11.104557    1.4951194    9.6094377  -0.28767399   0.99696761    1.2617603    0.8211019   -3.5502959            3    5.5474077    7.8024093    7.9078519   0.93196176 0.0079691777  -0.02047833  0.075137541    5.3672688    5.3631726            0            0 -0.00044750015    1.0281549        0.075    2.0588555          0.5   0.11423943    4.3767726      2.82377    30.801768  0.021220848  -0.35110757 -0.014682638   0.39011577    1.8950424    4.6104377 
 1164000    11.101062    1.5145922    9.5864699  -0.29961197    1.0099524    1.2999408   0.81732226   -3.5502959            3    5.4970303    7.7307348    7.9755587   0.78479729 0.0010212646  -0.32327958 -0.081599223    5.3177206    5.3072203            0            0 -0.055401137     1.038904        0.075    2.0985028          0.5   0.11543377    4.3314879    2.8130997    30.801768  -0.02879955  -0.40437513 -0.015932988   0.39971264    -2.575871   0.20577228 
 1165000    11.129251    1.4926457     9.636605   -0.2847508    0.9953181    1.2826611   0.80444322   -3.5502959            3    5.6433513    7.8870601    7.9893153    1.0536785 -0.036037403 -0.018416491  -0.08128344    5.4668671    5.4560644  -0.27602534   0.80679673  0.031405219    1.0205479        0.075    2.0716266          0.5   0.11339421    4.4093962    2.7835316    30.801768 -0.0016978011  -0.28304057 -0.022381541   0.37133705    1.4209682    1.5473006 
 1166000    11.127682    1.5085118    9.6191702  -0.29007729    1.0058979    1.2873199   0.81896767   -3.5502959            3    5.3580964    7.7174817    7.7407031   0.61610434 -0.022400011  -0.10977783  -0.13217903    5.1784257    5.1701292    1.5785611    1.1197779   0.17546209    1.0405377        0.075    2.0581434          0.5   0.11561531    4.3246869     2.796996    30.801768 -0.011438084  -0.35054844 -0.014133801   0.41695542  -0.69617456    3.4487923 
 1167000    11.061786    1.4563648    9.6054213  -0.28574111   0.97112548    1.2643142   0.77635103   -3.5502959            3    5.4515639    7.7610495     7.896342   0.69730027 0.0077042718 0.0036819291  -0.11354975    5.2812428    5.2669559  -0.32015732    1.3496763   0.12918738    1.0407368        0.075    2.0184178          0.5   0.11563743    4.3238597    2.8181593    30.801768 0.0025369493  -0.35755566 0.0076440957   0.41925984    2.0591447   0.80966273 
 1168000    11.086789      1.47832     9.608469  -0.30260249   0.98576553    1.2705151   0.79661319   -3.5502959            3    5.6882646    7.9546083    7.9943856    1.1157998  0.020800113  0.039070419 -0.020644454    5.5134982    5.5027512  -0.41793271   0.36173154   0.04182028    1.0282961        0.075    2.0351801          0.5   0.11425512    4.3761714    2.7966095    30.801768 0.0057107406  -0.33637658 -0.016601674   0.31522627   -2.7630803    2.0451234 
 1169000    11.050499    1.4566025    9.5938962  -0.30090652   0.97128395    1.2359038   0.79552374   -3.5502959            3    5.5434186    7.7740647    7.9486305   0.90756055 -0.014881639  -0.21896776  0.048259719    5.3688912    5.3629589    1.4174995    1.4672808  0.039126429    1.0235024        0.075    2.0433578          0.5   0.11372249    4.3966676    2.7687758    30.801768 0.0010868321  -0.39175407 -0.0045212097   0.41253086     7.154891      5.37392 
 1170000    11.054685    1.4554149    9.5992702  -0.28017691   0.97049207    1.2474799   0.78649996   -3.5502959            3    5.6361816    7.8818012    8.0258406     1.000903 0.0075792863   0.11789009 -0.013205426    5.4636339    5.4540316  -0.47238158   0.73358357  0.070087159    1.0414579        0.075    2.0490367          0.5   0.11571755    4.3208658    2.8120642    30.801768 -0.0033946415  -0.44929799 -0.0066378905    0.3090467  -0.24896458  -0.46037886 
 1171000    11.087033    1.4909956    9.5960379  -0.29908261   0.99421778    1.2660335   0.81367681   -3.5502959            3    5.3064213    7.7283064    7.6471215   0.54383593  0.014611238 -0.066366962  0.049124747    5.1279114    5.1215622            0            0   0.51183073    1.0296586        0.075    2.0829877          0.5   0.11440651    4.3703807    2.7919802    30.801768 -0.0070780134  -0.34551127 -0.018384995   0.33162342    1.8633079  -0.71868681 
 1172000    11.071262    1.4789992    9.5922631   -0.2965624   0.98621841    1.2796643   0.79127835   -3.5502959            3    5.5302855    7.7530774    7.9829383   0.85484062  0.019540987  -0.31107739  0.023608095    5.3566895    5.3434361            0            0   0.10878801    1.0252968        0.075    2.0862427          0.5   0.11392186    4.3889732    2.7735095    30.801768  -0.01756998  -0.39863838 -0.0095927522   0.33752895    4.2845352    2.9551762 
 1173000    11.071031    1.4680031    9.6030278  -0.30084425   0.97888607    1.2495229   0.79912403   -3.5502959            3    5.6315032    7.7819917    8.0168078    1.0957101 -0.016441191  0.032329256 -0.0080443259     5.456186    5.4490549  -0.64662377   0.15534564   0.26958143    1.0081281        0.075    2.0630015          0.5   0.11201423    4.4637185     2.797983    30.801768  -0.01367427  -0.42392325 0.0039013982    0.3675625    -1.654587    1.0676684 
 1174000    11.112687    1.5093413    9.6033457  -0.30944982     1.006451    1.2900408   0.81807819   -3.5502959            3    5.5127753    7.7189239    7.9091419   0.91026015  0.026303845  -0.10847928   0.08929011    5.3332998    5.3244109  -0.60210878   0.76000121  0.036478483     1.030531        0.075    2.0905892          0.5   0.11450345    4.3666807    2.8065207    30.801768 -0.0077395945  -0.37093153 -0.026834877   0.42392482   0.26121335    2.5478652 
 1175000    11.082261    1.4881034    9.5941576  -0.28700726   0.99228922     1.267624    0.8094054   -3.5502959            3    5.5246413    7.8490374    7.8486182   0.87626825 -0.029290096 -0.084941435  -0.04094144    5.3470684      5.33955            0            0   0.21301612    1.0189919        0.075     2.042004          0.5   0.11322133    4.4161292    2.8027177    30.801768 0.0059208297  -0.39701206 0.0078734411   0.30133757    3.1968974     1.849923 
 1176000    11.118134    1.5175271    9.6006066  -0.29956378    1.0119094    1.2974505   0.82223994   -3.5502959            3    5.5820476    7.7501221    7.9229802    1.0730405  0.014803347  -0.38756355 -0.0036311457    5.4016591    5.3926012    1.0425815   0.74668924   0.62905161    1.0350625        0.075    2.0472472          0.5   0.11500694    4.3475637    2.7975727    30.801768 -0.021634028  -0.36084887  0.043695942   0.41199209   0.73481812    3.0911198 
 1177000    11.097733    1.4871537    9.6105788  -0.29825278   0.99165599     1.252022   0.81873447   -3.5502959            3    5.5745709    7.8042094     7.950443   0.96906046  0.040534134 0.0031980963 -0.002035887    5.3949514    5.3917578  -0.87176113   0.54111907   0.20482415    1.0173704        0.075    2.0570324          0.5   0.11304116    4.4231678    2.8122483    30.801768  0.023811317  -0.37715405 -0.025932946    0.4273451   -1.4314872   -1.1016643 
 1178000    11.146176    1.5172309    9.6289452  -0.27435912    1.0117119    1.2896655   0.82709226   -3.5502959            3    5.7139638    7.9821879    8.0544891    1.1052143 0.0075027062 -0.037055916  -0.02387324    5.5325107    5.5256541   -1.7436609    2.4077265  0.076700703    1.0163113        0.075    2.0634658          0.5   0.11292348    4.4277772    2.8046388    30.801768 -0.018924458  -0.34342144 -0.013557389   0.35217924    1.8540446    6.4956651 
 1179000    11.052894    1.4756535    9.5772409  -0.29267106   0.98398748    1.2769957   0.78933791   -3.5502959            3    5.4331294    7.7107998    7.9141873   0.67440118 0.0080958115  -0.10235262 -0.049211851    5.2599591    5.2466697            0            0    0.2127062    1.0289569        0.075    2.0526852          0.5   0.11432854     4.373361    2.8149576    30.801768  0.001196777  -0.29867319   0.02707958   0.40230518  -0.15043246    1.9780001 
 1180000    11.081203    1.4659543    9.6152482  -0.29079014   0.97751993    1.2363136    0.8056397   -3.5502959            3    5.3459763    7.6741086    7.7591088   0.60471152 0.0058163395   0.17392262  0.048695665    5.1692296    5.1654568   0.58580619    2.1102783   0.22070334    1.0399618        0.075    2.0037367          0.5   0.11555131    4.3270821    2.8216522    30.801768 0.0095430857  -0.42055965  0.020425705   0.35969469   -1.0997994    1.9828352 
 1181000    11.085131    1.4993476     9.585783  -0.29887054   0.99978706    1.2549002   0.83036466   -3.5502959            3    5.7300928    7.9212954    8.0566984    1.2122845 -0.0074415767  0.032986146 -0.026273574    5.5479218    5.5468593   -0.4469859    1.1324538    0.1223274    1.0274892        0.075    2.0692866          0.5   0.11416547    4.3796079    2.8022237    30.801768 -0.0026074212    -0.361895 0.0006581143   0.46667992  -0.72902636    8.4440222 
 1182000     11.08903    1.4957975    9.5932322  -0.29431894   0.99741979    1.2715075   0.81536786   -3.5502959            3    5.4969245    7.7560839    7.8902886   0.84440112 0.0039690834  0.056790425 -0.018861366    5.3180436    5.3112662  -0.76814831   0.74432258  -0.13007546    1.0188524        0.075    2.0819225          0.5   0.11320582    4.4167339    2.8083715    30.801768  0.015517888  -0.32161964  0.011794695   0.35350062   -3.8995206    3.6458358 
 1183000    11.092571    1.4759557    9.6166151  -0.29160471   0.98418897     1.255584   0.80392426   -3.5502959            3    5.9146094    8.0515408    8.1764846    1.5158029 -0.014072952  -0.16963129 -0.060913398    5.7382391    5.7312761  0.051008613     1.630412   0.42995047    1.0343708        0.075    2.0198811          0.5   0.11493009     4.350471    2.8157777    30.801768 0.0043548669  -0.39278753 -0.012148708   0.32431246     2.013502    4.2027653 
 1184000     11.07925    1.4851885    9.5940616  -0.27779423   0.99034556    1.2826488   0.79616756   -3.5502959            3    5.3112787     7.700845    7.7211281   0.51186293 -0.017496458  -0.27086521  0.026881168    5.1366101    5.1239936            0            0 -0.055210886    1.0126027        0.075    1.9677034          0.5   0.11251141    4.4439936    2.8048897    30.801768 0.0061173844  -0.34658427  -0.01853909   0.33544337    2.8688572    2.1030258 
 1185000    11.114975    1.5043433    9.6106317   -0.2986617    1.0031183    1.2883774   0.81363325   -3.5502959            3    5.8927769    8.1123109    8.1621324    1.4038876 0.0038032797   -0.2319919  0.012897644    5.7142766    5.7046554   0.01821448   0.24401159  0.057291482    1.0394428        0.075    2.0083783          0.5   0.11549365    4.3292425    2.8015409    30.801768 -0.021684089  -0.34337873 -0.024032455   0.41958073   0.26394928      4.09232 
 1186000    11.093656    1.4608914    9.6327647  -0.28682093   0.97414388    1.2538211   0.78836318   -3.5502959            3    5.4772252    7.7755027    7.8402886   0.81588432  0.044135683  0.034742488  0.056916217    5.3042688    5.2941493    1.1085233    1.6444896 -0.00077410788    1.0349186        0.075    2.0459308          0.5   0.11499095    4.3481681    2.8194615    30.801768  0.041783408  -0.33475683 -0.0053924412   0.26562345    0.6237473    6.0786337 
 1187000    11.109406    1.5080985    9.6013075  -0.29962999    1.0056223    1.2901937   0.81659589   -3.5502959            3    5.5894552    7.8799346    7.8895434   0.99888756 -0.016573813  -0.20596942    0.0852677    5.4103048    5.4010684    1.6815054   0.75712809 -0.0095037249    1.0178981        0.075    2.0739071          0.5   0.11309979    4.4208747    2.8015846    30.801768 -0.0018689258  -0.35516533 -0.021871242   0.31006464 -0.022096505   -2.0990056 
 1188000    11.091012    1.4907148    9.6002973  -0.30013643   0.99403059    1.2455278   0.82701263   -3.5502959            3    5.7294825    7.9537125    8.0587664    1.1759686 0.0011288247 -0.0011174879 -0.00047868594    5.5480469    5.5476176  -0.66799873    1.6065463 -0.065219374    1.0166609        0.075    2.0661776          0.5   0.11296233    4.4262544    2.7996539    30.801768 -0.0015436036  -0.31403963 -0.00074169579   0.33326206   -2.3106066    3.3185923 
 1189000    11.108856    1.5121263    9.5967293   -0.3065105    1.0083081    1.2627642   0.83932611   -3.5502959            3     5.594454    7.8457755    7.9381415   0.99944515  0.038511423  -0.15251283 -0.066133641     5.410317    5.4100724  -0.66560631    1.1620887  -0.15013946    1.0309111        0.075    2.0573175          0.5   0.11454568    4.3650706    2.8300242    30.801768 -0.0036189037   -0.3480803 -0.039220537   0.34283754   0.49071766    4.9738759 
 1190000    11.087672    1.4981142    9.5895581  -0.30357718   0.99896458     1.262697   0.82380528   -3.5502959            3    5.7442579     8.016176    8.0140368     1.202561 0.0075969789  -0.10455639 -0.033943933     5.563526    5.5598861            0            0 -0.077593752    1.0171296        0.075    2.0528496          0.5    0.1130144    4.4242151    2.8045556    30.801768 -0.0039645677  -0.33315484 0.0047150155   0.40503811    2.9931579    5.1097879 
 1191000    11.113928    1.4702063    9.6437214  -0.28073437    0.9803552    1.2423748   0.80632899   -3.5502959            3    5.5037281    7.7214114    7.9122336   0.87753945  0.028605936  -0.15535792 -0.020523856    5.3268302    5.3223236            0            0   0.10437022    1.0356312        0.075    2.0690623          0.5   0.11507014     4.345176    2.8512712    30.801768 -0.015082511  -0.32664135 -0.0018765576   0.40028024  -0.82356778  -0.84630959 
 1192000    11.075192    1.4817591    9.5934328  -0.28533545   0.98805875    1.2740439   0.79808496   -3.5502959            3    5.5178282    7.7849061     7.928908   0.83967047  0.012832241 -0.094674673 -0.040784583    5.3427389    5.3317995            0            0   0.14136517    1.0342952        0.075    2.0713836          0.5   0.11492169    4.3507887    2.8158436    30.801768 -0.025843586  -0.36797578 -0.033445199   0.38308786    1.8392087    4.6151543 
 1193000    11.079812    1.4635813    9.6162307  -0.29012875   0.97593752    1.2263307   0.80964767   -3.5502959            3    5.6395915    7.8535443    7.9727337    1.0924965 -0.0011791446  -0.13683325 -0.0062071376    5.4619655    5.4605296  -0.13195836  0.081966395  -0.04093428    1.0226731        0.075    2.0633419          0.5   0.11363034    4.4002331    2.8087612    30.801768 0.0096037497  -0.40224225 -0.013366416   0.32818988  -0.96766388    5.3936274 
 1194000    11.112006    1.4889553    9.6230512   -0.2904783    0.9928573     1.251031   0.82139536   -3.5502959            3    5.4755837    7.7195811    7.9015212   0.80564893 0.0077339881  0.062135657   0.02095763    5.2953805    5.2929153   -1.0728438     1.001742   0.24019416    1.0371528        0.075    2.0580973          0.5    0.1152392    4.3388013    2.8195655    30.801768  0.024385422  -0.32790345 -0.018115207   0.34881585    1.0077394     3.008385 
 1195000    11.086623    1.4891558    9.5974669  -0.29853201     0.992991    1.2842368   0.79951773   -3.5502959            3    5.3555051     7.645869    7.7900779   0.63056861  0.033940171  -0.19109072  0.054338024    5.1801015    5.1679882   0.39863463    0.3060701  -0.56686997    1.0304908        0.075     2.104174          0.5   0.11449898    4.3668512    2.8166844    30.801768 -0.0082183195  -0.35965964 -0.016338772   0.32878997    -1.337853    2.8887557 
 1196000    11.093316    1.4651254    9.6281904  -0.27566132   0.97696716    1.2645729   0.78591064   -3.5502959            3    5.5166376    7.8102129    7.9032195   0.83648051 -0.012311656   0.12172478  0.015149377    5.3442192    5.3319919   0.82057247   0.70788333   0.33189835    1.0225878        0.075    2.0815773          0.5   0.11362087    4.4006001    2.7986125    30.801768  0.022008606  -0.31213167 -0.013389975   0.34871918  -0.56546051   -1.2103626 
 1197000    11.070908    1.4735154     9.597393  -0.29407944   0.98256173    1.2797391   0.78513681   -3.5502959            3    5.5830911    7.7994754     7.951037   0.99876077  0.017243302  -0.21060599  0.042442849    5.4108424    5.3962308            0            0 -0.0085996664    1.0191791        0.075    2.0759106          0.5   0.11324213     4.415318    2.7832067    30.801768 -0.00097877671  -0.41549097  0.013650912   0.31483563    3.2390022    5.5699902 
 1198000    11.093308    1.4874671    9.6058409  -0.29479709   0.99186498     1.264689   0.81065206   -3.5502959            3    5.4500938    7.6668425    7.8896809   0.79375804  0.044501594  -0.14435254  0.097074178    5.2722475    5.2654311            0            0   0.02253156    1.0160209        0.075    2.0726573          0.5   0.11289121    4.4290428    2.8007875    30.801768 0.0063935722  -0.33878907 -0.012749817    0.3780563    1.6325799    1.1719742 
 1199000     11.14111    1.4955553    9.6455543  -0.28945664   0.99725825    1.2869009    0.8048536   -3.5502959            3    5.6684303    7.8687098    8.0065181    1.1300631 -0.012758363 -0.079194598   0.11064558    5.4918561    5.4805244            0            0   0.05425067    1.0411105        0.075    2.0621997          0.5   0.11567895    4.3223076    2.8255168    30.801768  0.010199241  -0.42560192 -0.003510506   0.29931835    4.2351284  -0.39395856 
 1200000    11.114972    1.4751851    9.6397866   -0.2758329   0.98367515    1.2631768   0.79801483   -3.5502959            3    5.3960026    7.6823352    7.8076227   0.69804989 -0.011905723   0.12729663  0.011239478    5.2209287    5.2115607   -0.1663583   0.44708506    0.1725963   0.99814806        0.075    2.0388841          0.5   0.11090534    4.5083492    2.7947973    30.801768 0.0010500682  -0.34691663  0.018752452   0.35873669  -0.66602232    2.9400501 
 1201000    11.137328      1.50687    9.6304579  -0.27840785    1.0048031    1.2970302   0.81068111   -3.5502959            3    5.5844761     7.874347    7.9252243   0.95385701  0.011671555  -0.15278679  0.087494502    5.4066234    5.3950911  -0.20887919    0.8406213  -0.02655046    1.0171094        0.075    2.0211724          0.5   0.11301216    4.4243026    2.7758837    30.801768 -0.017463627  -0.42998122 -0.019784649   0.33610085    1.8737272    6.6303214 
 1202000     11.12454    1.4871445    9.6373952  -0.28695749   0.99164983    1.2714935   0.80576482   -3.5502959            3    5.6433895     7.914609    7.9524559    1.0631034 -0.029664467   0.03176112  0.075919936    5.4666153    5.4577332  -0.53728195   0.66162088 -0.092646374    1.0074645        0.075    2.0581649          0.5   0.11194049    4.4666588    2.7925003    30.801768 0.00091140686  -0.36646474 -0.0066389873   0.37931011   0.67767857    4.8373249 
 1203000    11.126488    1.5235507    9.6029376  -0.29233367     1.015926    1.3196955   0.81412602   -3.5502959            3    5.6388757    7.8865524    8.0476424   0.98243218  0.011149902 0.0070490845  -0.18896693    5.4602672    5.4461812            0            0  0.080689488    1.0318777        0.075    2.0520163          0.5   0.11465307    4.3609821    2.8630837    30.801768 -0.010513502  -0.34710589 -0.010833441   0.28720181     0.556168    5.2582214 
 1204000     11.12135    1.4936473    9.6277032  -0.27672017     0.995986    1.2871704   0.80255476   -3.5502959            3    5.6939176    7.9216191    8.0619228     1.098211  0.019323432  -0.15412375 -0.0098251422    5.5178478    5.5059723 -0.051535009   0.19441859  0.062107666    1.0264657        0.075    2.0565102          0.5   0.11405175    4.3839749    2.8055152    30.801768 -0.023676932  -0.34446381   -0.0343187     0.345752    1.0125583    2.2538057 
 1205000    11.140001     1.483027     9.656974   -0.2784467   0.98890421    1.2523199   0.81395193   -3.5502959            3    5.3858667    7.7047089    7.7612125    0.6916788 -0.0049227549 -0.051099087 -0.054169475    5.2072965      5.20301   0.14602462   0.75388401   0.29386681    1.0238533        0.075    2.0803906          0.5   0.11376148    4.3951609    2.8137955    30.801768  0.014699338  -0.47721261 -0.0026908134   0.31746827     1.104731    3.8991391 
 1206000    11.097647    1.4877543    9.6098924  -0.28313969   0.99205644    1.2741246   0.80469106   -3.5502959            3    5.4814808      7.73408    7.8672953   0.84306696 0.0048964302  0.063860432 -0.059774475    5.3049422    5.2954403  0.032257926   0.10809339    0.1797879    1.0103749        0.075    2.0547442          0.5   0.11226388    4.4537923    2.8037248    30.801768 0.0087268467  -0.39849253  0.043810764   0.32569468   -2.7071818    6.8967911 
 1207000    11.117152    1.4881712     9.628981  -0.29564197   0.99233446    1.2503752   0.82096084   -3.5502959            3    5.5452954     7.763552    7.9454247   0.92690961  0.010575521 -0.053430324 -0.034015994    5.3651875    5.3627227    1.1520278    1.8113592  0.069769356     1.033441        0.075     2.087182          0.5   0.11482678     4.354385    2.8039498    30.801768 0.0046756145  -0.33541188 -0.0084538879   0.34879556   -2.0936108    1.6943038 
 1208000    11.135498     1.506424    9.6290736  -0.27526541    1.0045057    1.2501881   0.84136177   -3.5502959            3    5.4640771    7.7602842    7.9491576   0.68278936 0.00084132395  0.017119582 -0.085714881    5.2794934    5.2815317  -0.26152975    1.3606103    0.1237759    1.0111051        0.075    2.0426253          0.5   0.11234501    4.4505761    2.7962747    30.801768  0.025567165  -0.36202327    0.0147237   0.34527507   -2.2707279   0.25308015 
 1209000     11.10083    1.4958134    9.6050162  -0.27741777   0.99743038    1.2561436   0.82561105   -3.5502959            3    5.6767044    7.9941426    7.9916247     1.044346 -0.0072879184 -0.0046008272  0.039288363    5.4955763    5.4932894   -1.1638583   0.25867492  0.024927672    1.0344501        0.075     2.073959          0.5    0.1149389    4.3501374    2.7984215    30.801768 -0.0011125412  -0.39877525 -0.013364817   0.37661145   -2.1656607    4.2853705 
 1210000    11.102391    1.5138749    9.5885159  -0.32523419    1.0094741    1.2910366   0.82245173   -3.5502959            3    5.3604873    7.6781652     7.756749   0.64654771  0.014874139  -0.27396753 -0.035166289    5.1800523    5.1719774  -0.49847332   0.59876512   0.15128319    1.0232429        0.075     2.096564          0.5   0.11369365    4.3977829    2.8126959    30.801768  0.020812833  -0.33898287 -0.0081149595   0.34571184    3.0333516    -1.537175 
 1211000    11.112397    1.4987285    9.6136684  -0.29381874   0.99937423    1.2801883   0.81284624   -3.5502959            3    5.5688504    7.8734598    7.9686826   0.86440892 -0.00083817538  -0.34327451  0.006771097    5.3905227    5.3819246   0.28579968    1.5869843  0.094784978    1.0209688        0.075    2.0596397          0.5   0.11344098    4.4075783      2.82476    30.801768 -0.012491583  -0.31091693 -0.027889569   0.33888994   0.68312781     3.651646 
 1212000    11.072909     1.467289    9.6056201  -0.30080474   0.97840991    1.2616659   0.79024891   -3.5502959            3    5.6489771    7.8617765    8.0214491    1.0637056   0.01752844 -0.081175021  -0.15806065    5.4756069    5.4647557    1.2679268     1.536383   0.15493743    1.0362848        0.075    2.0761687          0.5   0.11514276    4.3424356    2.7974287    30.801768 -0.013331465  -0.38508993 -0.039780211   0.40514133   -1.6957723    3.6980599 
 1213000    11.077475    1.5033353    9.5741398  -0.29603553    1.0024461    1.2897154   0.81162292   -3.5502959            3    5.6072233     7.877809    7.9871575   0.95670335 0.0071790767  -0.13481702  0.026375729     5.429164    5.4189063            0            0  0.091299999    1.0232452        0.075    2.0769371          0.5   0.11369391     4.397773    2.8111336    30.801768 -0.015629518  -0.39392292 -0.017264999   0.34426453  -0.47573493    5.7883693 
 1214000    11.097761    1.5047836    9.5929769  -0.29576172    1.0034118    1.2807494   0.81919916   -3.5502959            3    5.2891564    7.5542849    7.7867416   0.52644276 0.0055889476  0.062698823 -0.014311371     5.109435    5.1021486   0.42059215    1.2429963  -0.18367993    1.0193712        0.075    2.0314019          0.5   0.11326346    4.4144863    2.8106074    30.801768   0.01034463  -0.38233995  0.012206725   0.44840946   -1.2415812  -0.46163002 
 1215000    11.103342    1.4732493    9.6300924  -0.29126502   0.98238432    1.2560265   0.80062334   -3.5502959            3     5.697265    7.9084907    7.9423963    1.2409081 -0.024584059  -0.15154729  0.018714416    5.5216189    5.5138671   0.28247758    1.1538583   0.37746483    1.0104277        0.075     2.054762          0.5   0.11226974    4.4535598    2.8048168    30.801768  0.025784197  -0.39762747 -0.00088623688   0.40105096  -0.45588119    5.1171253 
 1216000    11.094135      1.49552    9.5986149  -0.29775595   0.99723476    1.2822497   0.80791008   -3.5502959            3    5.7503788    7.9152014    8.0884768    1.2474583 -0.005250976  -0.15252016  -0.11105791     5.573134    5.5631519  -0.16226296   0.80500393  0.022553343    1.0229662        0.075    2.0718542          0.5   0.11366291    4.3989724    2.7832686    30.801768 -0.006480457  -0.34541028 -0.019693167   0.38409112     2.565707    3.3903965 
 1217000    11.107998    1.4957939    9.6122042  -0.28597134   0.99741737    1.2667448   0.81853365   -3.5502959            3    5.4533199    7.7507147    7.8153498    0.7938953 -0.011891486  -0.34456779  0.023176831    5.2737445     5.268357   0.11959278   0.84342966 -0.081537521    1.0388217        0.075    2.0597427          0.5   0.11542464    4.3318308    2.8320783    30.801768 -0.036538981  -0.38220034 -0.018589564   0.42646246    2.8355156  -0.71628809 
 1218000    11.095722    1.5023456    9.5933759  -0.30105358    1.0017862    1.2699653   0.82366835   -3.5502959            3    5.5635846    7.7901009    7.9218523   0.97880071  0.018878973   0.14099417  -0.04839166    5.3828827    5.3781515  -0.51533123    1.9744766 0.0057334841    1.0376537        0.075    2.0968979          0.5   0.11529486    4.3367069    2.8175203    30.801768 -0.0086391699  -0.33604695 0.0078161585   0.33057793   -2.1945873   -1.6261436 
 1219000    11.031061    1.4328248    9.5982366  -0.30318151   0.95542867    1.2177522   0.78119096   -3.5502959            3    5.4260536    7.6887038    7.8138673   0.77558972 -0.029545951   0.11848966 -0.016592941    5.2546706    5.2482443  -0.73488722    1.3681181   0.19343821    1.0233496        0.075    2.0883968          0.5   0.11370551    4.3973243    2.7888271    30.801768  0.021036882  -0.38229979   0.01889747   0.32763408    1.0248664    5.1085321 
 1220000    11.099876    1.4920716    9.6078046  -0.30692427   0.99493528    1.2683243   0.81334745   -3.5502959            3    5.4329419    7.6919017    7.8359526   0.77097121 -0.016109887  0.053143249 -0.021134162    5.2545042    5.2477483   0.11018404   0.63133674  0.037368101    1.0218887        0.075    2.0781162          0.5   0.11354319    4.4036105    2.8213901    30.801768   0.01929053   -0.3654855 -0.015412047    0.3559373    -1.716693   -3.4027958 
 1221000    11.150905    1.5275931     9.623312  -0.28653691    1.0186216     1.340931   0.80448319   -3.5502959            3    5.5094487    7.7229492    7.9072597    0.8981372  0.025298655  0.036083293  0.033257586    5.3329558    5.3136536            0            0  -0.28232109      1.01588        0.075    2.0738828          0.5   0.11287555    4.4296572    2.7882519    30.801768  -0.02697547  -0.44854966 -0.0022079707    0.2761815   0.21235129    2.1969198 
 1222000    11.126533    1.5168553    9.6096776  -0.28660419    1.0114614    1.3413056   0.79230561   -3.5502959            3    5.5440074    7.8252795    7.8615472   0.94519559  0.012401099  -0.20140993 -0.0034629712    5.3701861    5.3481576   0.46310364    1.0867555   0.10327153    1.0148155        0.075    2.0958994          0.5   0.11275728    4.4343034    2.7932539    30.801768 0.0018266849  -0.36123032  0.022884395   0.38046736    0.7141517    2.5453904 
 1223000    11.149771    1.5457499    9.6040214  -0.29958397    1.0307288     1.347774   0.82009854   -3.5502959            3    5.6252531    7.8015758    7.9500661    1.1241174  0.003899765 -0.0039844083  0.036850044    5.4453344    5.4284588  -0.48552309    1.2540533   0.16598929    1.0204244        0.075    2.0569528          0.5   0.11338049    4.4099297    2.8188266    30.801768 0.0044790991  -0.35485431 -0.022022919   0.38479042   -1.1271601    3.6190664 
 1224000    11.152661    1.5023928     9.650268  -0.29268004    1.0018176    1.3064523   0.79943652   -3.5502959            3    5.5762403    7.8522588    7.9462688   0.93019326  0.020645236 0.0064176648 -0.099450268    5.4008545    5.3854795  -0.02147416   0.34317864  0.045642524    1.0103119        0.075     2.063471          0.5   0.11225688    4.4540699     2.806375    30.801768 0.0021328833  -0.35841496  0.031728504   0.45034506     1.490817   0.33657075 
 1225000    11.175651      1.52816    9.6474914  -0.28627509    1.0189996    1.3252948   0.81551968   -3.5502959            3    5.5124632    7.7894649    7.8941636    0.8537611 -0.0069104159 -0.028260545 -0.051374994     5.333549    5.3189511   -0.8111346   0.66782656 0.0097325034    1.0271635        0.075     2.048453          0.5   0.11412928    4.3809967    2.7969027    30.801768  0.017662486  -0.41169117   0.01042195   0.37809053  -0.89635496    3.2385566 
 1226000    11.162634    1.5230856    9.6395485  -0.30039234    1.0156159    1.3282257   0.80793202   -3.5502959            3    5.2000016    7.5394627    7.6783716   0.38217061  0.017007634  -0.27918034  0.034674717     5.022752    5.0060616  -0.21648005    2.1069751   0.17247102    1.0168886        0.075    2.0553789          0.5   0.11298763    4.4252633    2.8236599    30.801768 0.0097912658  -0.35834172  -0.01528439    0.3969887    1.5086633   -1.7777148 
 1227000    11.139216    1.4861782    9.6530375  -0.28702684   0.99100548    1.3071464   0.78096236   -3.5502959            3    5.5640535    7.7835737    7.9320405   0.97654622 -0.075399838  -0.14621394  0.025561901    5.3927207    5.3731913  -0.60145226    2.5298093  0.067183334    1.0192936        0.075    2.1121786          0.5   0.11325484    4.4148223    2.8337056    30.801768  0.019607589  -0.36958786 -0.0032884337   0.36779919    1.7095319    5.0790252 
 1228000    11.117669    1.4784889    9.6391798  -0.28900218   0.98587816    1.2895521   0.78413067   -3.5502959            3    5.4726586    7.7264756    7.8505595   0.84094088  0.026675164 -0.0020381927 -0.011619885    5.3006308    5.2843655   -0.4131097    1.1047852  -0.22042584    1.0144865        0.075    2.1022658          0.5   0.11272072    4.4357417    2.8085982    30.801768 -0.012807759  -0.37667829 -0.010794633   0.46008608    1.5559668    4.1917812 
 1229000    11.115812    1.4745784    9.6412334  -0.28250139    0.9832706     1.272246   0.79130485   -3.5502959            3    5.5641866    7.8856807    7.9189725   0.88790664 0.0042873316 0.0031210847 -0.080706487    5.3905848    5.3784205            0            0   0.12432188    1.0317274        0.075    2.1112203          0.5   0.11463638    4.3616173    2.8224371    30.801768 -0.027651022  -0.33766768 -0.034785115   0.33741381    2.5740026    5.8925368 
 1230000    11.153148    1.5011927    9.6519552  -0.27579833    1.0010174    1.2889167    0.8097744   -3.5502959            3    5.7527327    8.0049401    8.1050423    1.1482156  0.019481624   -0.1191323  0.042426477    5.5750789    5.5645324   0.27504345   0.41631553  0.047543558    1.0146715        0.075    2.0688193          0.5   0.11274128    4.4349329    2.8002191    30.801768 -0.0086719136  -0.32131515 -0.022881502   0.37797085    2.2938876    6.0817391 
 1231000    11.112446    1.4992853    9.6131606  -0.30460807   0.99974547    1.3018589   0.79904169   -3.5502959            3    5.4216449    7.6990627     7.798601   0.76727096  0.013858035 -0.014816762  0.086250396    5.2463457    5.2315548   0.13559581     1.922714  0.081066324    1.0143383        0.075    2.0948106          0.5   0.11270425    4.4363898    2.7813353    30.801768 0.0014235453  -0.39955735 -0.0088007031     0.404055   -3.1248698     1.996488 
 1232000    11.101071    1.4991267    9.6019438  -0.29044888   0.99963977    1.2997527   0.80026738   -3.5502959            3    5.5658445    7.7869899    7.9355201   0.97502334  0.008466924   -0.1570124  -0.10209604    5.3902764    5.3760619     1.424479    1.7718558   0.07821302    1.0178531        0.075    2.0704176          0.5   0.11309479    4.4210701    2.8136771    30.801768 -0.0035842914  -0.33946198 -0.0068917955   0.36606728    2.3411247    1.2462631 
 1233000    11.112122    1.4928017    9.6193198  -0.28605822   0.99542217    1.2766284   0.80863172   -3.5502959            3    5.5398402    7.8305221    7.9390213   0.84997715  0.010271311  0.059708857 -0.076272297    5.3624371    5.3534341            0            0  -0.01497666    1.0256704        0.075    2.0876292          0.5   0.11396337    4.3873745     2.792399    30.801768 -0.00072068648  -0.30102544   0.01791767   0.40031674    2.3542231    1.2050833 
 1234000    11.084296    1.4824434    9.6018529  -0.31674313   0.98851507    1.2664553   0.80389574   -3.5502959            3    5.4349038    7.5797011      7.87127   0.85374041  0.010515319  -0.13484523 -0.087219108    5.2585398    5.2499832   0.72037607   0.66787595  0.006017141    1.0156038        0.075    2.0708763          0.5   0.11284486    4.4308619    2.8009659    30.801768  0.016539286  -0.38203841 -0.015821553   0.40336208   0.54656567    2.0560439 
 1235000    11.119706    1.4986209    9.6210854  -0.28437502   0.99930245    1.2696016   0.81977269   -3.5502959            3    5.4224086    7.7452975    7.7968934   0.72503471 0.00075848537 0.0022919354 -0.041997808    5.2425613    5.2370285  -0.75633959   0.63110139  -0.42101499    1.0290231        0.075    2.0914583          0.5    0.1143359    4.3730798    2.7917321    30.801768 -0.008410581  -0.35342455 -0.022920521   0.34757336   0.38177042    3.6054878 
 1236000    11.094064    1.4728247    9.6212393  -0.28968927   0.98210116    1.2596852   0.79771655   -3.5502959            3    5.7199635    7.9090377    8.1130215    1.1378314 0.0028794272  0.027051733  0.018325523    5.5449551    5.5360314    -1.029097     1.394958  0.050069842    1.0242019        0.075    2.0708976          0.5   0.11380021     4.393665    2.8083233    30.801768 0.00062503373  -0.35586561  -0.01764317   0.38694302     0.603959    1.3712832 
 1237000    11.107031    1.4565166    9.6505148   -0.3002231    0.9712267    1.2537432   0.78355525   -3.5502959            3    5.3684829    7.6083627    7.8241167   0.67296935 -0.0042822514  -0.19816022  0.072283408    5.1965813    5.1854184   0.55951728    1.5816369 -0.026348061    1.0307438        0.075    2.0728195          0.5   0.11452709    4.3657792    2.8216448    30.801768  0.037172786  -0.32014156 -0.014753958   0.34335843   -1.3340487    -4.171599 
 1238000    11.087313    1.4872182    9.6000946  -0.29484568   0.99169895    1.3093727   0.78063592   -3.5502959            3    5.9019605    8.0581627    8.1786395    1.4690792 -0.028045615 -0.018587863 -0.003878493    5.7306993    5.7107733            0            0   0.19761098    1.0269301        0.075    2.0539301          0.5   0.11410334    4.3819925    2.8041309    30.801768  0.017690513   -0.3834688  0.034883438   0.37889867    2.5835953    3.5347694 
 1239000    11.097436    1.4538232    9.6436125  -0.27468796   0.96943072    1.2209459   0.80239173   -3.5502959            3    5.5041884    7.8159775    7.9094995   0.78708818 0.0048110617 -0.051200887   0.04461735    5.3281543    5.3259128     1.077361   0.48472515 -0.044150801    1.0223721        0.075    2.0356738          0.5    0.1135969    4.4015286    2.8322426    30.801768 0.0064529903  -0.27499899 0.00048183559   0.37184106   -2.5134637    4.6069947 
 1240000     11.07647     1.477636    9.5988341  -0.29262458   0.98530945    1.2624456    0.8012241   -3.5502959            3     5.663303    7.9193513    7.9839198     1.086638  0.017812857  -0.25603433   0.10303963    5.4875251    5.4789678   0.82797592    1.5342969    0.1425147    1.0371293        0.075    2.0447167          0.5   0.11523659    4.3388995    2.8024333    30.801768 -0.011334903  -0.35305904 -0.019762793   0.36074932     1.511807    7.2748462 
 1241000    11.116583    1.5127966    9.6037864  -0.29166406     1.008755    1.3000074   0.81528328   -3.5502959            3    5.4731807    7.8179084    7.8549519   0.74668177  0.016189538   0.17475232  0.045166526    5.2943183     5.283361  -0.53343971    1.1316967 -0.066895348    1.0326073        0.075    2.0858593          0.5   0.11473414    4.3579007    2.7986438    30.801768  0.012796913  -0.33422186 -0.039263777   0.31922673   -1.0930567    2.3727147 
 1242000     11.14635    1.5337908    9.6125596  -0.28995617    1.0227543    1.2936453   0.84283929   -3.5502959            3    5.5110009    7.7360427    7.9508338    0.8461261 -0.00051403944  -0.35663482  0.063247432    5.3260931    5.3221101  -0.38979916    1.5982077 0.0023318842    1.0399414        0.075    2.0940374          0.5   0.11554905    4.3271668    2.8169164    30.801768   0.01494825  -0.38655403 0.00098217399   0.39930974    1.5235281    2.3754918 
 1243000    11.129294    1.4854881    9.6438054  -0.28442121   0.99054532    1.2790132   0.79892005   -3.5502959            3    5.5289879    7.7837713    7.8660575   0.93713469 -0.034265444 -0.0069904133  0.065026713    5.3537154    5.3422336 -0.026144869   0.85248748  0.082404895    1.0220119        0.075     2.085375          0.5   0.11355687    4.4030801    2.8359398    30.801768  0.013353772  -0.41468427 -0.018765657    0.3416556     1.170604    1.8282604 
 1244000    11.157283    1.5368939    9.6203889  -0.29762463    1.0248234    1.2935337   0.84636066   -3.5502959            3    5.5350436    7.7874675     7.915598   0.90206534  0.011688143 -0.093768172  -0.00131157    5.3493633    5.3461691    1.2413109    1.3170967   0.15622622    1.0329273        0.075    2.1134142          0.5   0.11476971    4.3565504     2.810346    30.801768  -0.02385744  -0.43943744 0.0011804047   0.37044492    1.3953828    6.5738621 
 1245000    11.084685    1.4636709    9.6210146  -0.30513512   0.97599731    1.2762828   0.77650137   -3.5502959            3    5.4682761    7.6733711    7.9053921   0.82606499 -0.0047405211  -0.03537943  0.050277751     5.297922    5.2819205            0            0   0.61987787    1.0236991        0.075    2.0996973          0.5   0.11374435    4.3958228    2.8052826    30.801768  0.003947501  -0.30764065 -0.013089836    0.3627126    2.7002582     2.614908 
 1246000    11.126856    1.4986865    9.6281695  -0.30255011   0.99934622     1.295488   0.80261673   -3.5502959            3    5.4478073    7.6900824    7.8724555    0.7808839 -0.0055775674  -0.12419965 -0.040976752    5.2717238    5.2586474  -0.49091232    1.1843052   0.24279551    1.0370583        0.075    2.0570639          0.5    0.1152287    4.3391967    2.8214769    30.801768 0.0044660288  -0.35679118 -0.026582531   0.42669098  -0.61878105  -0.71391688 
 1247000    11.066259    1.4811036    9.5851557  -0.28890704   0.98762169    1.3012032   0.77928075   -3.5502959            3    5.4888983     7.772249     7.816184   0.87826184 -0.0041584489 -0.064842548 -0.063198814    5.3179344     5.298904  0.038804082   0.62574903   0.20781834     1.023387        0.075    2.0357359          0.5   0.11370966    4.3971636    2.8170746    30.801768  0.019789915  -0.45159959 -0.023530616   0.42921676    2.7676984    3.1641447 
 1248000    11.130664    1.5048114    9.6258529  -0.28610407    1.0034304    1.2940661   0.81036708   -3.5502959            3    5.6520998    7.8444976    8.0269784    1.0848233 0.00069685099 -0.094311668 0.0005887214     5.474316    5.4631476   0.36054605   0.61811134   0.23814714    1.0377913        0.075    2.0609795          0.5   0.11531014     4.336132    2.8450937    30.801768 -0.0081313656  -0.31176681  0.026596895   0.35025745   -1.0305848    4.1262791 
 1249000    11.112238    1.5068914    9.6053469   -0.2863425    1.0048174    1.2907451   0.81488796   -3.5502959            3    5.6628034    7.9054338    7.9753173    1.1076589 -0.017789118  -0.16198559 -0.041848366    5.4840277     5.474336   0.54548866   0.73852171  0.013595865    1.0274763        0.075    2.0829819          0.5   0.11416404    4.3796629    2.7897573    30.801768   -0.0106932  -0.35725607  0.010219497   0.42201927   -2.3331085    7.8510731 
 1250000    11.138804    1.4925556    9.6462479  -0.29767473   0.99525805    1.2833772   0.80386663   -3.5502959            3    5.5819812    7.7681328    7.9570076    1.0208032 -0.0038219756 -0.051326157 -0.076468744    5.4056235    5.3945897   0.37103312   0.78931857   -0.6993966     1.042149        0.075    2.0765093          0.5   0.11579433    4.3180008    2.8362867    30.801768 -0.0033634872   -0.3719193   -0.0214802   0.37884667    1.9968859    1.6864424 
 1251000    11.137333    1.5396916     9.597641  -0.30844723     1.026689    1.3060155    0.8411612   -3.5502959            3    5.5094279    7.7848995     7.881228     0.862156 -0.0065614401  -0.18067565  0.019226963    5.3248882    5.3187309            0            0   0.27096646    1.0214287        0.075    2.0753059          0.5   0.11349207     4.405594    2.8044857    30.801768  0.030427754  -0.37169078 -0.0064416673   0.36072047   0.33553285    2.8324801 
 1252000    11.138486    1.5161194    9.6223665  -0.30082937    1.0109707    1.2882752   0.82678283   -3.5502959            3     5.392474    7.6835547    7.7846387   0.70922857 -0.008086019  0.080045449 -0.0089730225    5.2110888    5.2043673  -0.42798442    2.4947278  -0.11635574    1.0212281        0.075    2.0890076          0.5   0.11346979    4.4064592    2.8235736    30.801768 -0.003563483  -0.34335875 0.0032522768   0.34950175   -2.2405689    2.3959094 
 1253000    11.135852    1.4846622    9.6511897  -0.29086037   0.98999459     1.272019   0.80265756   -3.5502959            3    5.4765719    7.7631206     7.839552   0.82704297 0.0098600549  -0.37792707    0.1371719    5.3004794    5.2908388  0.014698773     1.006001  -0.15739926    1.0328396        0.075    2.0837198          0.5   0.11475996    4.3569204    2.8242016    30.801768 -0.0041955743  -0.27993983  0.032970408   0.39892019    3.0467721    2.5565929 
 1254000     11.13783     1.509084    9.6287456   -0.2915984    1.0062794    1.2930584   0.81578401   -3.5502959            3    5.6306076    7.8657782    7.9732059    1.0528388 -0.008462186  0.063476823  0.072085162    5.4516354    5.4418026  -0.15129029   0.68255403 -0.058722332    1.0164967        0.075    2.0808841          0.5   0.11294407    4.4269697    2.7932311    30.801768 0.0035937252  -0.34551734 0.0084241555   0.33008386   -2.1893612    1.2758177 
 1255000    11.114696    1.4748262    9.6398696  -0.28312869   0.98343582    1.2873319   0.78153952   -3.5502959            3    5.4736663    7.6791562    7.8430026   0.89884007 -0.034423868  -0.10390729 -0.095548203    5.3022069    5.2856974  -0.35665778   0.83101092  -0.06773695     1.015101        0.075    2.1257552          0.5     0.112789    4.4330566    2.8036272    30.801768 -0.018174718  -0.38276907 -0.018883648   0.44171008    3.6924531     2.150796 
 1256000    11.052866    1.4568483     9.596018   -0.3034968   0.97144791    1.2941977   0.75699901   -3.5502959            3    5.7506248    7.9142545    8.0392646    1.2983554 -0.014876994  0.021196381  0.054611357    5.5845493    5.5616534   0.28046241    1.7189053   0.24255534     1.024247        0.075    2.0946945          0.5   0.11380522    4.3934716    2.8051959    30.801768  0.018032224  -0.42438449 -0.048127378   0.36897431   0.81920538    9.2553951 
 1257000    11.110873    1.4972823     9.613591  -0.29759951   0.99840986    1.2578636   0.82609804   -3.5502959            3    5.5909073    7.8522665     7.920516   0.99993933 -0.020304042 -0.057392682  0.077967285    5.4096723    5.4072411   0.45115801   0.77314402  0.078789243    1.0181272        0.075     2.041505          0.5   0.11312525    4.4198797    2.7791534    30.801768  0.016754817  -0.36526942 -0.034934992   0.42045662   -1.7671438    4.9117813 
 1258000    11.111969    1.5021956    9.6097736   -0.3066954    1.0016861    1.2926212   0.80842292   -3.5502959            3    5.6494506     7.791812    8.0022226     1.154317 -0.013694635  -0.12307068  0.020138307    5.4720933    5.4607093    1.6190991    1.7401281  0.091390796    1.0240219        0.075    2.0737933          0.5   0.11378021    4.3944372    2.7987519    30.801768 -0.019790592  -0.40333298 -0.016904372   0.39694697   0.19801614    4.8680376 
 1259000    11.066881     1.461664    9.6052166  -0.30098537   0.97465909    1.2625913   0.78338444   -3.5502959            3    5.5519797     7.784972    7.9393159   0.93165122 -0.064030649   -0.3234843 -0.034775817    5.3801155    5.3676233  -0.24558749    2.0583368   0.12218234    1.0234203        0.075    2.0711922          0.5   0.11371337    4.3970204    2.7921965    30.801768  0.026935963  -0.33704453 -0.023497753   0.41848268   -1.6772507    4.1799865 
 1260000    11.061018    1.4845534    9.5764642  -0.29164149   0.98992204    1.2787932   0.79802809   -3.5502959            3    5.5670325    7.8097612    7.9531994   0.93813684 0.0052456209   0.12285333  0.044673971    5.3919557    5.3803103   -1.2853068    2.8109786  -0.13468399    1.0350113        0.075    2.0927553          0.5   0.11500126    4.3477785    2.7902843    30.801768 -0.004207311  -0.40991069  0.010115794   0.35114563  -0.34233586    4.4286835 
 1261000    11.109467    1.5073981    9.6020685  -0.29518946    1.0051552    1.2787295    0.8234479   -3.5502959            3    5.3389139    7.5982051    7.7956633   0.62287329   0.01444724  -0.11545176  -0.04561731    5.1582603    5.1522011   0.61130997    1.5495425   0.49551409    1.0166183        0.075    2.0867948          0.5   0.11295758    4.4264403    2.7902902    30.801768 -0.0072460198  -0.33906432  0.031140553   0.43655031     3.260948    2.0423626 
 1262000    11.110002    1.4928304    9.6171711  -0.29125595    0.9954413    1.2622691   0.81822051   -3.5502959            3    5.6175871    7.8132151    8.0113428    1.0282034 -0.039977543  -0.13118906  -0.11725959    5.4380804    5.4332777    1.0816881   0.40824954  0.025244054    1.0196467        0.075    2.0954775          0.5   0.11329407    4.4132935    2.7823361    30.801768  0.016430323  -0.38473587 -0.035742361   0.26880827   0.51518468    2.9039032 
 1263000    11.102368    1.4747069     9.627661  -0.29093259   0.98335629    1.2652409   0.79610991   -3.5502959            3    5.6305577    7.8896519    7.9968963    1.0051251  0.029011313 -0.0043204674  -0.03863457    5.4559018    5.4458144  0.053216028    2.7167876   0.14818017    1.0453827        0.075    2.0680891          0.5   0.11615363    4.3046436    2.8076324    30.801768 -0.0053001162  -0.32657622 -0.0048136324   0.38149605  -0.86311121     3.671005 
 1264000    11.083851    1.4747036    9.6091477  -0.29162912   0.98335407    1.2487175   0.80710346   -3.5502959            3     5.577922    7.7881332    7.9134404    1.0321926 -0.0053780402 -0.068473469 -0.031683381    5.4008542    5.3955914   0.13775506   0.21542093 -0.072425287    1.0185774        0.075    2.1120174          0.5   0.11317527    4.4179264    2.7825923    30.801768 -0.0080288356  -0.34431669  0.014941665   0.46351418  0.049901193    2.9812104 
 1265000    11.046764    1.4689458    9.5778181  -0.30190395    0.9795147     1.234896   0.80990628   -3.5502959            3    5.6103257     7.814037    7.9801056    1.0368346 -0.0066349001 -0.048617086  0.021899972     5.432643    5.4300132            0            0   0.59620212    1.0334475        0.075    2.0688472          0.5    0.1148275    4.3543576    2.8463303    30.801768 0.0036181131  -0.37126278 0.0032000418    0.3318412   0.31510017    5.3643931 
 1266000    11.076226    1.4654266    9.6107993  -0.30179977   0.97716804    1.2476467   0.79751066   -3.5502959            3    5.4640384    7.7257276    7.8313818   0.83500566 -0.017949058  -0.19904955  0.099185081    5.2890751     5.281864            0            0  0.054147912    1.0339267        0.075     2.096588          0.5   0.11488075    4.3523393    2.8255349    30.801768 -0.011030054   -0.3309981   0.01089959   0.31331277    2.0861206    2.9681088 
 1267000     11.08243    1.4742501    9.6081804  -0.28940666   0.98305168    1.2760304    0.7884214   -3.5502959            3    5.5826683     7.866897    7.9225163   0.95859178 0.0067512887  -0.42008563 -0.095759751    5.4096991    5.3963496   0.36274157   0.94888822  0.029234728    1.0404941        0.075    2.0745555          0.5   0.11561046    4.3248683    2.8226445    30.801768  0.038347222  -0.37414621 0.0097910103   0.27452125    3.0536792    4.9687978 
 1268000    11.080495    1.4893183    9.5911762  -0.29221449   0.99309935    1.2658211   0.81195495   -3.5502959            3    5.4352995    7.7334214    7.8668574    0.7056196 -0.018241717   0.10493527   0.02767442    5.2571673    5.2504714   -2.7442633     2.922107  0.030202836    1.0378716        0.075    2.1126423          0.5   0.11531907    4.3357965    2.8220153    30.801768   0.03615714  -0.33882026 -0.0080413178   0.40150635   -2.3769103    5.3348169 
 1269000    11.146752    1.5191874    9.6275641  -0.31175304    1.0130165      1.26776   0.84384507   -3.5502959            3    5.9023944    8.0338525    8.1651214    1.5082092  0.009524465  -0.16549022 -0.00067326262    5.7172659    5.7172832  -0.12680275   0.74452607 -0.0083903572    1.0261359        0.075    2.1124478          0.5    0.1140151     4.385384    2.8153512    30.801768    0.0331523  -0.40828751  0.011987725   0.38207678  -0.63202132    3.3059806 
 1270000    11.119412     1.508452    9.6109602  -0.28862587     1.005858    1.2778351   0.82521387   -3.5502959            3    5.5906826    7.8676705    7.9592198   0.94515745  0.012561232  0.080264568  0.026722339    5.4096416    5.4041003  -0.22878739    1.3933895  0.059965661    1.0249023        0.075    2.0846429          0.5   0.11387804    4.3906623    2.8281604    30.801768 -0.010318748  -0.30493622 0.0062674894   0.32741377  -0.80381104    3.8797729 
 1271000    11.117977    1.4918743    9.6261027  -0.28851663   0.99480372    1.2687894   0.81281871   -3.5502959            3    5.3365168     7.647157    7.7709728   0.59142065 -0.014891182 -0.068519792 -0.037097527    5.1581951    5.1512553   0.29197014    0.5400008  0.084172473    1.0311104        0.075    2.0952995          0.5   0.11456783     4.364227    2.8360733    30.801768  0.013784514  -0.33446959 -0.00086611309   0.37758381    1.5240325    -2.231597 
 1272000    11.102752    1.4994289    9.6033227  -0.29489591   0.99984123    1.3036595   0.79800282   -3.5502959            3    5.7385727    7.9467064    8.0053712    1.2636405 -0.024584499  -0.20267203  -0.16466004    5.5635015    5.5482197    2.1060329     1.698358  0.088714159    1.0212242        0.075     2.064026          0.5   0.11346936    4.4064759    2.8056621    30.801768  -0.02901449  -0.30989908 -0.0031110566   0.39735645    2.5238218    1.5376155 
 1273000    11.105101    1.4969666    9.6081347  -0.28882158   0.99819938    1.2880655   0.80564633   -3.5502959            3    5.5313484    7.8253873    7.9089231   0.85973479 0.0080938919    0.1721498  0.018160566    5.3546003    5.3432724 -0.020866913    1.1994003  -0.20478431    1.0261032        0.075    2.0911308          0.5   0.11401147    4.3855238    2.8012662    30.801768  0.012421932  -0.43041474 -0.025502959   0.39177067   -3.1051024   -1.9562261 
 1274000    11.111393    1.4894448    9.6219481  -0.28460414   0.99318371    1.2889538   0.79669936   -3.5502959            3    5.6210073    7.8415624     8.005882    1.0155774 -0.029637357 -0.095565749 -0.038357511     5.446222    5.4328016   0.43261224   0.57093826   0.19414229    1.0229479        0.075    2.0914406          0.5   0.11366088     4.399051    2.7909432    30.801768 -0.0083119727  -0.38692189 -0.014399649    0.2812766   0.93705812    4.3306706 
 1275000    11.062376    1.4547598    9.6076161  -0.27647886   0.97005522    1.2484636   0.78511754   -3.5502959            3    5.5922735    7.8430994    7.9793584    0.9543626 0.0068671311   0.10615652 -0.081902711    5.4200291    5.4099799  -0.62269481   0.79685555   0.22372854    1.0146917        0.075     2.093541          0.5   0.11274353    4.4348445    2.8081833    30.801768 -0.024734158  -0.36351351 -0.0019202515   0.37141088   -3.2905762    4.8412803 
 1276000    11.083895    1.4893372    9.5945574  -0.30396021   0.99311195    1.2517544   0.82133809   -3.5502959            3    5.5735735    7.8038463    7.9515062   0.96536807 0.0024260875  -0.17339337  0.010009936    5.3933828    5.3907994            0            0 -0.064841937    1.0353864        0.075    2.0846927          0.5   0.11504293    4.3462036    2.8240403    30.801768   0.02332815  -0.42816249 -0.018593974   0.38364466    3.5658737    5.2904121 
 1277000    11.096542    1.4828724      9.61367  -0.30209916   0.98880114    1.2811651   0.79458214   -3.5502959            3    5.4787165    7.7436363    7.9419003   0.75061283 -0.017018049  0.019639582   0.18516917    5.3043957     5.291648  -0.63005078   0.54388417   0.40979145    1.0207766        0.075    2.1132813          0.5   0.11341963    4.4084081    2.8085312    30.801768 -0.002597037  -0.36036707  0.021852519   0.34193651   -2.1866495    1.4732104 
 1278000    11.104537     1.473591    9.6309458  -0.30578102   0.98261213    1.2899832   0.77840277   -3.5502959            3     5.529995    7.7037957    7.8887108   0.99747848 -0.027881161  -0.19314859    0.0604075    5.3592237    5.3416389   0.77341853   0.76269679  0.026385684    1.0202719        0.075    2.0880419          0.5   0.11336355    4.4105889    2.8095472    30.801768 -0.020575465  -0.42614586 -0.0078280711   0.32157322   0.68926218    4.4841857 
 1279000    11.064117    1.4613682    9.6027485  -0.28708269   0.97446182    1.2909915   0.76415384   -3.5502959            3    5.6791766     7.895526    8.0520417     1.089962   0.02861474  0.061862927  0.025325821    5.5115313    5.4906733            0            0   0.55269383    1.0176065        0.075    2.1088451          0.5   0.11306738    4.4221417    2.8130289    30.801768  0.020086164  -0.32565166 -0.011147293   0.44954492    2.4331867     3.170246 
 1280000    11.100815    1.4681627     9.632652   -0.2818798   0.97899249    1.2665422     0.787974   -3.5502959            3    5.7601922    8.0204625    8.0639453    1.1961687 0.00070539318  0.031658448 -0.061042766    5.5873211    5.5752588  -0.34039099   0.53413324  -0.31825854    1.0249661        0.075    2.0406334          0.5   0.11388512    4.3903891    2.7929791    30.801768 0.0048578495  -0.38374112 -0.014094183   0.39707781  -0.54579054    3.2694838 
 1281000    11.161485     1.529649     9.631836  -0.29863166    1.0199925    1.3097167   0.82754193   -3.5502959            3     5.552556    7.8489389    7.9816351   0.82709392  0.014969601  0.065649422  0.053144519    5.3710042    5.3613186            0            0 -0.0098531008    1.0218389        0.075    2.0888799          0.5   0.11353766    4.4038252    2.8009485    30.801768  0.013772657  -0.36898278 0.0007624793   0.31633272    1.1250099    8.5116569 
 1282000    11.100163    1.5004468    9.5997163  -0.31133286      1.00052    1.3039395   0.79894732   -3.5502959            3    5.4811892    7.7189579       7.8877   0.83690975  0.010509322  -0.11195222   0.10155192    5.3059108    5.2907954  0.083093462    3.5200423   0.44333405    1.0273733        0.075    2.0960968          0.5   0.11415259    4.3801021    2.8231586    30.801768   0.02740122  -0.38799346 -0.015156998    0.3355312  -0.22145593  -0.72389942 
 1283000    11.103636    1.4818841    9.6217516  -0.29264943   0.98814215    1.2541566      0.81146   -3.5502959            3    5.6586329    7.9091647    7.9516023    1.1151317 -0.012386312   -0.1005299 -0.023318385    5.4806093    5.4755081  -0.09313545    0.8735415  0.060385549    1.0180245        0.075    2.1029224          0.5   0.11311383    4.4203258    2.7935867    30.801768  0.013396596  -0.31235159 -0.012961079    0.2816333    1.8559104    2.3241347 
 1284000    11.121801     1.493962    9.6278387    -0.296968   0.99619587    1.2776955   0.80921046   -3.5502959            3    5.6814244    7.8834208    8.0020792    1.1587734 -0.0034983353  -0.09584709   0.05452884    5.5038944    5.4948626  -0.66940439    1.4353711   0.48152208    1.0217357        0.075     2.091205          0.5   0.11352619    4.4042701    2.7830041    30.801768 -0.0045620238  -0.41272121 -0.0059043971   0.39742788    2.3154517    4.7425002 
 1285000    11.108888    1.4884808     9.620407  -0.30177829   0.99254091    1.2950725   0.79155617   -3.5502959            3    5.5645597    7.7840867    7.9273288   0.98226374 0.0044007764  -0.12403066 -0.039888036    5.3909028    5.3754606   0.83012837   0.97721019  0.098041051    1.0142508        0.075     2.098012          0.5   0.11269453    4.4367726    2.7917787    30.801768 0.0031017551  -0.28913867  0.011809142    0.3586352  -0.41379446    7.7929217 
 1286000    11.094412    1.4970251    9.5973873  -0.30531052   0.99823835    1.2935831   0.80203897   -3.5502959            3    5.4660907    7.7083756    7.9025018   0.78739459 -0.028170685 -0.059810376 -0.026149654    5.2901339     5.277209            0            0   -0.1989875    1.0109429        0.075    2.0701751          0.5   0.11232698    4.4512902    2.7915732    30.801768 0.0085430717  -0.33966432 -0.0037916657   0.34638917   0.62193434    1.4773414 
 1287000    11.120456     1.522312    9.5981438  -0.30619233       1.0151    1.3338462   0.80333191   -3.5502959            3    5.7243804    7.9899218    8.0471339    1.1360857  0.022804617 -0.049171219  0.048487379    5.5481401    5.5296198   0.34800919    1.7434914  -0.87874644       1.0453        0.075    2.0742445          0.5   0.11614445    4.3049841    2.7950202    30.801768 -0.0026716454  -0.45614246  0.026259688   0.37452842   -1.8999147    6.2369711 
 1288000    11.119595    1.4919866    9.6276083  -0.27837381   0.99487865    1.2836453   0.80305612   -3.5502959            3    5.5323143    7.8284458    7.8678318   0.90066531  0.018724036 -0.084640728   0.10689559    5.3561344    5.3448837    0.2629299   0.81206099   0.23771175      1.02397        0.075    2.0843397          0.5   0.11377444    4.3946601    2.8260242    30.801768   0.01952212    -0.427871 -0.018391474   0.32354529   0.46517458   -2.0595988 
 1289000    11.066842    1.4817049    9.5851369  -0.30641959   0.98802263     1.265235   0.80388758   -3.5502959            3    5.5978179    7.8467626    7.9459012    1.0007898  0.028028482  -0.20855989  0.075382728    5.4214556    5.4130754   0.67603609   0.72416056 -0.082448236    1.0329032        0.075    2.1158664          0.5   0.11476702    4.3566521    2.8081701    30.801768 -0.014124614   -0.3794125 -0.030439748     0.395293    1.1059586    4.0560435 
 1290000     11.11763    1.4825817    9.6350479   -0.2694351   0.98860727    1.2950758   0.78500081   -3.5502959            3    5.5587462    7.8876182    7.8647345   0.92388586 -0.0042714475   -0.1048602  0.090057101    5.3865274    5.3696465  0.062239246    1.6546023   0.63737013    1.0276742        0.075    2.0838394          0.5   0.11418602    4.3788198    2.8063746    30.801768 0.0027019746  -0.38637324 -0.0041389949   0.37864192  -0.83200754    3.9392879 
 1291000    11.134785     1.523637    9.6111478  -0.29278635    1.0159836    1.2946963   0.83086031   -3.5502959            3     5.665507    7.9340182    7.9583501    1.1041527 -0.0029310936 -0.054245811  0.019938335    5.4832273    5.4764628            0            0  0.085757841    1.0320423        0.075    2.0858654          0.5   0.11467137    4.3602863    2.8043892    30.801768  -0.01844774  -0.40313064 0.0023655883   0.33905071   0.25210829    4.4103616 
 1292000    11.086002    1.4647175    9.6212844  -0.30323075    0.9766952    1.2465635   0.79744385   -3.5502959            3      5.58149    7.7520344     7.984377    1.0080585   0.00279781 -0.064278256  0.056186502    5.4065414    5.3994738   0.22535419   0.35920471   0.43195469    1.0274975        0.075    2.1077693          0.5   0.11416639    4.3795726    2.8033431    30.801768 -0.0092873177  -0.33835117 -0.010242161   0.33765171    2.9913671    3.6256268 
 1293000    11.048385    1.4816884    9.5666969  -0.28972447   0.98801165    1.2765166   0.79636075   -3.5502959            3     5.608481    7.9105497    7.9213773   0.99351614  0.045524135  -0.23626267 -0.011228924      5.43377    5.4220913            0            0     0.150916    1.0241771        0.075    2.0691557          0.5   0.11379745    4.3937714     2.797894    30.801768 0.0086252731   -0.3445864 -0.0032817615   0.38786421    1.6210026    7.6234201 
 1294000    11.125029    1.5060008    9.6190283  -0.30464817    1.0042235    1.2646244   0.83128335   -3.5502959            3    5.5156333    7.7579201    7.8859422   0.90303757 9.8629075e-05 -0.044808433 -0.037121248    5.3332607      5.33098  -0.57990149    1.3506778  0.032830255    1.0461159        0.075     2.086992          0.5    0.1162351    4.3016267     2.822756    30.801768 -0.0070933472  -0.36101095 0.0085357074   0.41222738   0.49091138    1.1898064 
 1295000    11.109625    1.4878692    9.6217555  -0.28464788    0.9921331    1.2446903   0.82440898   -3.5502959            3    5.4169685    7.7960545    7.7839354   0.67091553 -0.0069351856  0.086516764   0.04381669    5.2361041    5.2352258            0            0  -0.22946397     1.021386        0.075    2.0861752          0.5   0.11348734    4.4057779    2.7799028    30.801768  -0.01713334  -0.36217859  0.021526372   0.34490109    1.1056068   -1.1253379 
 1296000    11.070255    1.4800067    9.5902488  -0.32172329   0.98689022    1.2638284   0.80293723   -3.5502959            3    5.5276789    7.7141089    7.9228217   0.94610626 -0.0028450063   -0.2435584  0.036018242    5.3515251    5.3431419   0.23111663   0.91019084   0.23559619    1.0410613        0.075    2.1310511          0.5   0.11567348    4.3225119    2.8232193    30.801768 -0.024447887  -0.37291562 -0.0016989751   0.37426113   0.58389421    1.2031371 
 1297000    11.062684    1.4918341    9.5708503  -0.28694416   0.99477691    1.2841118   0.80257615   -3.5502959            3    5.5501594     7.832561    7.9531465   0.86477082 0.00065242518  -0.10289709  0.059095821    5.3740849    5.3626607            0            0    0.7316758    1.0366308        0.075    2.1087107          0.5    0.1151812    4.3409862    2.8057047    30.801768  -0.03027076  -0.34459459 -0.0024545959   0.33930564   0.10704554    4.2011663 
 1298000    11.048058    1.4677861    9.5802715  -0.30575029   0.97874136    1.2357583   0.80804411   -3.5502959            3    5.8020182    8.0327113    8.0677699    1.3055733 -0.0019425757   0.12958414  0.037263297     5.624744    5.6215798   0.72007796   0.53131359  -0.17591676    1.0423737        0.075     2.045606          0.5    0.1158193    4.3170697    2.8173578    30.801768  -0.02614551  -0.35280555 -0.017266683   0.33687006   -3.1676656    7.6472935 
 1299000    11.073306     1.461457    9.6118487  -0.30665484   0.97452104    1.2393145   0.79864652   -3.5502959            3    5.5172564    7.7570817    7.8751414   0.91954613   0.04518787 -0.039833373  0.089295432     5.342044    5.3362987            0            0 -0.032855622    1.0333165        0.075    2.0823947          0.5   0.11481294    4.3549097    2.8029076    30.801768   0.03082384  -0.34659703 -0.023005444   0.37979715   0.08780151   -1.7515552 
 1300000    11.103524    1.4632106    9.6403134  -0.29125802   0.97569034    1.2474916   0.79515213   -3.5502959            3    5.7111505    7.8488655    8.0729749     1.211611 -0.0021076813  0.098480354 -0.072366683    5.5367046    5.5289988   0.99682306   0.73748739   0.14203463    1.0218652        0.075    2.0803073          0.5   0.11354058    4.4037121    2.8170917    30.801768 0.00042092733  -0.33638544 0.0044986881   0.36154776  -0.20824651    8.1476689 
 1301000    11.098641    1.4946048    9.6040363  -0.30050152   0.99662445     1.284661   0.80528846   -3.5502959            3    5.3413203    7.6108429     7.770693   0.64242495 0.0075042385 -0.084635591  -0.05959474    5.1646507    5.1537414   0.69739421    1.0523703 0.0082537945    1.0308868        0.075    2.0976314          0.5   0.11454298    4.3651735    2.8262281    30.801768  0.003105597  -0.28693173   0.00670356   0.38883713  -0.50997824     2.191367 
 1302000    11.072246    1.4795409    9.5927047  -0.30796097   0.98657967    1.2643278    0.8020875   -3.5502959            3    5.5714442    7.7609478    7.9439361    1.0094486 -0.00075192985  -0.16232726 -0.0099079789    5.3954768    5.3868342   0.74984507   0.95762855  -0.93950032    1.0246494        0.075    2.0721887          0.5   0.11384994     4.391746     2.792058    30.801768 -0.0076763509  -0.35607258  -0.02306409   0.42567205  0.082021789    2.5918702 
 1303000    11.068588    1.4665806    9.6020073  -0.28472671   0.97793755    1.2474198   0.79894363   -3.5502959            3    5.5963091    7.9184248    7.9106402   0.95986224 -0.0043129622  0.064105919  0.065181437    5.4210315    5.4141679  -0.62252081   0.32763873   0.18752082    1.0235891        0.075    2.0814889          0.5   0.11373212    4.3962954    2.7914604    30.801768 -0.0022566594  -0.34292622 -0.0091222877   0.31386507   -1.3448756    1.3806302 
 1304000    11.055053    1.4630244    9.5920284  -0.29025263   0.97556618    1.2366508   0.80216048   -3.5502959            3    5.3178937    7.6924459    7.7045005   0.55673458 -0.010497374  -0.32694571 -0.037510759    5.1419103    5.1373249    0.1111062    3.4231774   0.07812529    1.0299489        0.075    2.0635532          0.5   0.11443876     4.369149    2.8055456    30.801768  0.011162363  -0.40803394 -0.040284028   0.36900524    3.0450463  -0.95082108 
 1305000    11.067403    1.4432128    9.6241904  -0.30806817   0.96235554    1.2226125   0.78949581   -3.5502959            3    5.6273948    7.8374397    7.9478436    1.0969012 -0.024771188 -0.082746141  -0.13668005    5.4541899    5.4488759   -1.6236365    1.7456607  0.022600523        1.039        0.075    2.0632465          0.5   0.11544445    4.3310874    2.8138533    30.801768  0.036610049  -0.36338789 -0.0088084907    0.2655503    1.3583736    5.3337313 
 1306000     11.05906    1.4744848     9.584575  -0.29615804   0.98320818    1.2553584   0.80244047   -3.5502959            3    5.5940402     7.855666    7.9087439    1.0177106  0.017328971   0.26399612  0.025604276    5.4179953    5.4107398   -0.3731514   0.23904972  0.026624209    1.0162407        0.075    2.0694229          0.5   0.11291563    4.4280848    2.7783387    30.801768  0.012666085  -0.30072987 -0.0024932266     0.400107   -1.3285074     1.439925 
 1307000    11.093499    1.4641361    9.6293627   -0.2987185    0.9763075    1.2472028   0.79637249   -3.5502959            3    5.6972842    7.8595921    8.0618703    1.1703901  0.028920032 -0.034418875 -0.044046187    5.5225706    5.5151747   0.27573881    0.3430023 -0.023087253    1.0412549        0.075    2.0420671          0.5   0.11569499    4.3217083    2.7967453    30.801768  -0.02443942  -0.41775578 0.0084531902   0.43950355  -0.65277413    5.8793428 
 1308000    11.067667    1.4625072    9.6051595  -0.27965077   0.97522135     1.241157    0.7985869   -3.5502959            3    5.5547424     7.849852    7.9779787   0.83639648  0.012842873  -0.10419756 -0.039321504     5.379543    5.3735157   -0.9511487    1.1874381  0.053740488     1.022434        0.075    2.0507035          0.5   0.11360377    4.4012622    2.8313743    30.801768 0.0002602246  -0.38252061 -0.0019731918   0.32242087    3.8368392    1.7125368 
 1309000    11.115961    1.4885717    9.6273897  -0.29521931   0.99260152    1.2589733   0.81568318   -3.5502959            3    5.4208599    7.6421692    7.8087305   0.81167987 -0.044712119  -0.21974642 -0.029522124    5.2419098    5.2370317  -0.12935761   0.81110753  0.049081803    1.0278303        0.075    2.1054865          0.5   0.11420336    4.3781548    2.8078857    30.801768  0.013822261  -0.32295536 0.0010335329   0.30927632  -0.85020629  -0.26645415 
 1310000    11.040665    1.4589245      9.58174  -0.27771325   0.97283236    1.2850542    0.7653909   -3.5502959            3    5.6344704    7.9152803    7.9892156    0.9989153 -0.0055948893  0.043882853  -0.13063683    5.4665538    5.4468341   0.69444331   0.47019309   0.14152567    1.0222804        0.075    2.0752596          0.5   0.11358671    4.4019235    2.8218798    30.801768  0.016291071  -0.39688604 -0.011285741   0.32024905   -1.3561581    3.3181448 
 1311000    11.072127     1.476334    9.5957927  -0.32549738   0.98444125    1.2569768   0.80341757   -3.5502959            3      5.68091    7.8065706    8.0778629    1.1582965  0.013052431  -0.19490653  0.072318344    5.5046508    5.4973734    0.3913546    1.4159002  -0.01504105    1.0451727        0.075    2.1110157          0.5    0.1161303    4.3055085    2.8049946    30.801768 -0.010367279   -0.3166643 -0.020761868   0.33994099   0.28439431    2.8459677 
 1312000     11.05273    1.4720031    9.5807272  -0.28843214   0.98155332    1.2502391   0.80309083   -3.5502959            3    5.6408545     7.914337    8.0048492    1.0033773  0.030329593 -0.077080193  -0.12074615     5.464667    5.4583016            0            0  -0.17607111    1.0394753        0.075    2.0896113          0.5   0.11549726    4.3291072    2.8037981    30.801768 0.0070447384  -0.41762915 -0.016483208   0.33803839    1.3354861    2.1063711 
 1313000    11.055546    1.5019551    9.5535911  -0.30176536    1.0015257    1.2918871    0.8086443   -3.5502959            3    5.5491583    7.8566939    7.8748818    0.9158993  0.017270328  -0.10178477 -0.030951806    5.3717525    5.3605243  -0.74712585   0.65710927   0.84563515    1.0428961        0.075    2.0901894          0.5   0.11587734    4.3149074    2.8309394    30.801768 -0.010284076  -0.33046368  0.011386301   0.40611381   -1.1350485    4.0723755 
 1314000    11.109512    1.5060202    9.6034913  -0.28942084    1.0042365    1.2970912    0.8096965   -3.5502959            3    5.4859822    7.6979952     7.926963   0.83298829 0.0014431159   0.13717742  0.076453469    5.3083455    5.2965882    1.2262921   0.71082738  0.087699914     1.024542        0.075    2.0911043          0.5     0.113838    4.3922065     2.803967    30.801768  0.029237471  -0.31082125 -0.00078704103   0.31420099    1.3055704    1.3094624 
 1315000    11.094876    1.4960976    9.5987784  -0.31055076   0.99761989    1.2827777   0.80820025   -3.5502959            3    5.4825156    7.7805941    7.8974277   0.76952501 -0.00077978906  -0.06920986   0.10277305    5.3052072    5.2952117   0.83839994    2.5501566  0.016082022    1.0325529        0.075    2.0939764          0.5    0.1147281    4.3581303    2.8070817    30.801768 -0.0088009796  -0.37150876 -0.0013983066   0.35391101   0.43627264    1.2080168 
 1316000    11.107322    1.5211342    9.5861878  -0.30816843    1.0143146    1.3145599   0.81485967   -3.5502959            3    5.5502461    7.7535106    7.9804978   0.91672987 0.0048330784 -0.042361612 -0.033775458    5.3714767    5.3583015            0            0   0.22221593    1.0145713        0.075    2.0845004          0.5   0.11273015    4.4353708    2.7793133    30.801768  0.042729562  -0.34330375 -0.021197802    0.3655265   -1.5810378     1.931847 
 1317000    11.165486    1.5073234    9.6581628  -0.27726422    1.0051055    1.3114956   0.80155728   -3.5502959            3    5.4860346    7.7682857    7.9169215   0.77289658  0.020827429 -0.0020832763  0.066535187    5.3101835    5.2945374   -2.0459342    1.2561846  -0.57144716    1.0225255        0.075    2.0795266          0.5   0.11361394    4.4008684    2.8501056    30.801768 0.0041818059  -0.29436586  0.015371398   0.36282106   -5.6483062    3.8985154 
 1318000    11.118696    1.4917786    9.6269178  -0.27356579   0.99473993    1.2924315   0.79697731   -3.5502959            3    5.4709316     7.816329    7.8214846   0.77498133 -0.014854626 -0.033603672  0.083895417    5.2960854    5.2822181   0.49982303   0.42806382  -0.14540225    1.0380688        0.075     2.049449          0.5   0.11534098    4.3349726    2.8446316    30.801768 -0.0061411822  -0.34111909 -0.00047331419    0.3807972    3.9229132    2.4245802 
 1319000    11.116498    1.4795209    9.6369775  -0.29591215   0.98656628    1.2958813   0.78106457   -3.5502959            3    5.4153423    7.6674791    7.8472411   0.73130677  0.029234787 -0.027521651  0.044201379    5.2439871    5.2261251            0            0 -0.048704141    1.0165451        0.075    2.1019025          0.5   0.11294945     4.426759     2.807145    30.801768 -0.023481882  -0.30274438 -0.0086560178    0.3194117    1.8602455  -0.90421977 
 1320000    11.123294    1.5337259    9.5895681  -0.29434958     1.022711    1.3414614   0.81094284   -3.5502959            3    5.5609482    7.8159331    7.9375235    0.9293879   0.01288938  -0.10322135  0.064971126     5.383038    5.3650755  -0.36615125    2.4412373   0.14124661    1.0245183        0.075    2.0740458          0.5   0.11383536    4.3923082    2.8095078    30.801768 0.0055709765  -0.36382213 -0.038071696   0.42867281   -2.0756049    1.8120414 
 1321000    11.135361    1.5367279    9.5986326  -0.27915114    1.0247128    1.3328543   0.82000621   -3.5502959            3    5.4363269    7.7192119    7.8916988   0.69806978 -0.031420553  -0.13862445  0.029387637    5.2564284     5.241711  -0.84068841   0.42472405   0.12277483     1.027693        0.075    2.0774798          0.5   0.11418811    4.3787397    2.8174885    30.801768 0.0068377019  -0.33865419  0.012947971   0.39163901   -1.1766948   -0.7533382 
 1322000    11.090857    1.4892984    9.6015583  -0.31124036    0.9930861    1.2882521   0.79700377   -3.5502959            3    5.6348096    7.8832281    8.0259515   0.99524924 -0.015041137  -0.28608589 -0.037790778    5.4599575    5.4467063  0.071371504   0.61447527 -0.031897732    1.0281303        0.075    2.0528483          0.5    0.1142367    4.3768771    2.8209639    30.801768 -0.042598718  -0.36763361 -0.00097791895   0.35268411     3.549678   0.85412333 
 1323000    11.166033    1.5160421    9.6499911  -0.28707236    1.0109192    1.2895378   0.82585665   -3.5502959            3    5.6606962    7.7889722    7.9654134     1.227703 -0.0074204651  -0.23290948 -0.013036659    5.4795142    5.4724052   0.36564157    1.1405389 -0.059294754    1.0111749        0.075    2.1050458          0.5   0.11235277    4.4502687    2.7920766    30.801768  0.037521048   -0.4122516  0.023816468   0.38128998   -2.3349406    2.9620231 
 1324000    11.118315    1.4828819    9.6354332  -0.29719967   0.98880744    1.2610041    0.8080109   -3.5502959            3    5.5767489    7.7845801     7.937995    1.0076717 -0.0050505828   0.13890769    0.1280837     5.399482    5.3926242            0            0   0.13418603    1.0340526        0.075    2.0660631          0.5   0.11489474    4.3518094    2.8407222    30.801768  -0.03300927  -0.37142805 -0.013657378   0.34585424   -2.1233651    3.8736759 
 1325000    11.095478    1.4764287    9.6190494  -0.30615326   0.98450436    1.2672143   0.79670905   -3.5502959            3    5.3625091    7.6024441    7.7555216   0.72956171 -0.014655031  -0.34813382   0.14040434    5.1877217    5.1774777   0.40393589   0.82741818  0.084699474    1.0146928        0.075    2.0766081          0.5   0.11274364    4.4348399    2.8068236    30.801768 -0.014646945  -0.39183203   0.01351043   0.33555959    3.0178484  -0.18197076 
 1326000    11.084679    1.4659241     9.618755  -0.29259335   0.97749977    1.2578495   0.79127274   -3.5502959            3    5.5278021    7.7477791    7.8989525   0.93667462 -0.031884071 -0.053214368 -0.0042402813    5.3542073     5.344138   0.47809527     2.741185   0.10378713    1.0207697        0.075    2.0619226          0.5   0.11341886     4.408438    2.7881889    30.801768  0.023824109  -0.40815906 0.0067522226   0.31715051   -0.7702764  -0.54973178 
 1327000    11.074014    1.4469534    9.6270608  -0.28158848   0.96484983    1.2611303   0.76801531   -3.5502959            3    5.3779631    7.7917982    7.7156233   0.62646775 -0.035604757  -0.12915003  0.038245115    5.2094707      5.19382     1.829637    2.9591875  0.040812174    1.0126018        0.075    2.0566434          0.5   0.11251131    4.4439978    2.8117643    30.801768 -0.00066853448  -0.33509229 -0.022488953   0.37792037    1.3620171  -0.50212611 
 1328000    11.102775    1.4771902    9.6255851  -0.27896671   0.98501216    1.2736596    0.7932653   -3.5502959            3    5.6352903    7.9261682    7.9865784   0.99312421   0.01387547  -0.16001499 -0.010509898    5.4612584    5.4493177            0            0 -0.012578858    1.0194517        0.075     2.029697          0.5   0.11327242    4.4141373    2.7938615    30.801768 0.0095774826    -0.398534   0.00110697   0.36054935   -0.9335817    1.8062904 
 1329000    11.082594    1.4899347     9.592659  -0.29437409    0.9935104    1.2767673   0.80535442   -3.5502959            3    5.6442757    7.9246268    7.9641401    1.0440603 0.0054593102 -0.0030681314  0.087396069    5.4675916    5.4578494    0.5791494    1.8191221  -0.12240437     1.041492        0.075    2.0259556          0.5   0.11572133    4.3207244    2.8348767    30.801768 -0.025484352  -0.36146439 -0.0020766979   0.40793286   0.48189102    2.8430149 
 1330000    11.130177    1.5163477    9.6138293  -0.29529195    1.0111229    1.2893503   0.82632086   -3.5502959            3     5.475285    7.7225175    7.8964528   0.80688468  0.024937334  -0.14956251 -0.053644715    5.2940011    5.2870213    1.2019894   0.46932628   0.23595545    1.0444836        0.075     2.062909          0.5   0.11605373    4.3083492    2.7948044    30.801768  -0.01650063  -0.36338601 -0.015299382   0.34985268   -1.4221976   -1.6880432 
 1331000    11.073698    1.4896996    9.5839981  -0.29903125   0.99335358    1.2752555   0.80609934   -3.5502959            3    5.5569867      7.78736    7.9533837   0.93021633 -0.0040980585 -0.067372736 -0.052566716    5.3801391    5.3707811            0            0   0.15681919    1.0170324        0.075    2.0529898          0.5    0.1130036    4.4246378    2.7928727    30.801768 -0.030254996   -0.4118343 0.0014658712   0.38490174    2.2460326    4.8992259 
 1332000    11.110147    1.5174211    9.5927254    -0.307131    1.0118387    1.2773792   0.83548085   -3.5502959            3    5.8514427    8.0485836    8.1159458    1.3897987 0.00042531898 -0.0010485898  0.043396956    5.6681492     5.664927    2.6109421    1.1439233   0.16197926    1.0329655        0.075    2.0454092          0.5   0.11477394    4.3563894    2.8034927    30.801768 0.0035032332   -0.3569481 0.0047859624   0.35808894   -4.2072657    7.6636134 
 1333000    11.121557    1.4774904    9.6440671  -0.29294962   0.98521232    1.2412964   0.81513833   -3.5502959            3    5.5089099    7.7348892    7.8956082    0.8962324  0.014711497  -0.27468301  0.027140345    5.3300794    5.3276629    1.0026544    0.8323225   0.12808776    1.0042358        0.075    2.0470272          0.5   0.11158175    4.4810193    2.7819904    30.801768  0.015354201  -0.33647967  0.028023993   0.39702517    2.7509816    1.6425019 
 1334000    11.105324    1.4976513    9.6076728  -0.29628748   0.99865594    1.3124399   0.79018438   -3.5502959            3    5.6692401    7.9517109    7.9663955    1.0896139 -0.053162634 -0.0046122818 -0.033251373    5.4958841    5.4776051  -0.87368528   0.31620884   0.52081798    1.0363369        0.075    2.0237178          0.5   0.11514854    4.3422174    2.7920184    30.801768 -0.024111699  -0.35642753  0.026685551   0.42740577    1.0729844    4.3801472 
 1335000    11.128194    1.4905392     9.637655  -0.28023753   0.99391349    1.2608038   0.81665058   -3.5502959            3    5.4809573    7.7243728    7.9159295   0.80256948 -0.0030689713 -0.026291108  0.036325021    5.3017949    5.2968618            0            0  0.075268482    1.0140579        0.075    2.0444715          0.5    0.1126731    4.4376166    2.8207847    30.801768  0.022576326  -0.28822599 -0.0047483391   0.35453565    2.6255177   -2.8101679 
 1336000    11.124229    1.5037619    9.6204672  -0.29719086    1.0027306    1.2756356   0.82146775   -3.5502959            3    5.3854338    7.6925514    7.8173738   0.64637601 0.0031133791 -0.075387035  0.034728649    5.2052146    5.1991727            0            0   0.12490926    1.0279665        0.075    2.0497838          0.5    0.1142185    4.3775746    2.8321399    30.801768  0.012327327  -0.36484681  0.026100815   0.30360583   -1.5949365    1.3780925 
 1337000    11.090762    1.4700941    9.6206678  -0.28606459   0.98028039    1.2995046   0.76818119   -3.5502959            3    5.4099515    7.7223932    7.8522007   0.65526054  0.018142992  0.095211018    0.0401909    5.2414227    5.2202052            0            0   0.16153491    1.0324628        0.075    2.0469354          0.5   0.11471809    4.3585105    2.8135528    30.801768  0.030009002  -0.33825875 0.0076309898   0.39152765   -1.0149778   -5.4885665 
 1338000    11.085699    1.4840042    9.6016951  -0.28554047   0.98955582    1.2621302   0.80850821   -3.5502959            3    5.6229473    7.8770955     7.931707    1.0600394 -0.050483106  0.018023736  -0.16015531    5.4455713    5.4386582     0.448631     1.894239   0.21727425    1.0232916        0.075    2.0358579          0.5   0.11369907    4.3975735    2.8077902    30.801768 -0.0053045275  -0.33078818  0.016436697    0.3472581   0.70988929    1.3921674 
 1339000    11.092091    1.4913122    9.6007791  -0.29672378   0.99442894    1.2983846    0.7924971   -3.5502959            3    5.6229744     7.834009    7.9599425    1.0749715  0.039065529   0.13594351 -0.072780589     5.449111    5.4333916    0.2764521   0.60548683 -0.059793632     1.040966        0.075    2.0739236          0.5   0.11566289    4.3229079    2.8037425    30.801768 -0.016806078  -0.40411098  0.022038749   0.34959843  -0.46955666     4.771001 
 1340000    11.114704    1.4923481    9.6223556  -0.29003063   0.99511971    1.2499563   0.82587967   -3.5502959            3    5.3671758    7.6399985    7.7781362    0.6833926  0.026820917 -0.067083335  0.032960262    5.1859887    5.1846642   0.27542437   0.47657397   0.12837981    1.0081689        0.075    2.0944868          0.5   0.11201876     4.463538    2.8164731    30.801768  0.015249981   -0.3591962 -0.021180533   0.34814024    1.5639691    3.5843837 
 1341000    11.119487    1.4919586    9.6275288  -0.28309993   0.99485998     1.272601   0.81037561   -3.5502959            3    5.5806911    7.8291412    7.8962289    1.0167031 -0.021203333  -0.11708791 0.0072645531    5.4029054    5.3948731  0.035075789   0.37240582   0.32060974    1.0134056        0.075    2.0513733          0.5   0.11260062    4.4404728    2.8068344    30.801768   0.01372923  -0.44046053 -0.017032579   0.32203381    -1.378367   -3.4474035 
 1342000    11.128308    1.4922448    9.6360633  -0.29480864   0.99505082     1.295524   0.79543702   -3.5502959            3    5.4614668     7.763125    7.8351281   0.78614721 0.0015222208  0.042689843 -0.031986838    5.2869584    5.2723017   -2.0242397   0.81449094   0.48495364     1.036555        0.075    2.0528117          0.5   0.11517277    4.3413038    2.8390793    30.801768 -0.017608967   -0.3717818 0.0096497164   0.42314794     1.266656  -0.56184876 
 1343000    11.100061    1.5176045    9.5824561  -0.29262682     1.011961     1.323906   0.80471828   -3.5502959            3    5.5505783    7.8473344    7.9151638   0.88923672 -0.014703066  -0.16445437   0.00900088    5.3740338     5.357269   0.18623724    1.7879979  -0.27419459     1.025957        0.075    2.0752814          0.5   0.11399523    4.3861485    2.8051022    30.801768  0.032305897  -0.35991564 0.0041499402   0.36382749   -1.2008147    1.0422863 
 1344000    11.124706    1.4755021    9.6492035  -0.29329658   0.98388651    1.2641823   0.79769773   -3.5502959            3    5.7772691    7.9676246    8.0342436    1.3299391 -0.0088096073 -0.061807676  0.023506128    5.6022648    5.5926803  -0.50995984   0.81322924   0.10863793    1.0226377        0.075    2.0663125          0.5   0.11362642    4.4003852     2.781425    30.801768  0.013874797  -0.36499813 -0.021684038   0.34219554  -0.78743954    3.6156691 
 1345000    11.105687    1.5179941    9.5876929  -0.30884478    1.0122208    1.3180407   0.80905486   -3.5502959            3    5.5648436    7.7960718    7.8729178    1.0255412 -0.0027372299  -0.20396701   0.04219941    5.3873477    5.3723908            0            0  0.088616321    1.0317173        0.075    2.0760084          0.5   0.11463526    4.3616599    2.7931389    30.801768 -0.011759212  -0.36194186  0.030145117   0.38031108  -0.14559051    6.0080869 
 1346000    11.094491    1.4862619    9.6082287  -0.29173303   0.99106132    1.2753677   0.80220593   -3.5502959            3    5.9191896     8.197106    8.1060519    1.4544109 -0.014777341  -0.16378826  0.054907111    5.7431963    5.7329676   -1.5561209   0.94193101  0.079491335    1.0320187        0.075    2.0549843          0.5   0.11466875     4.360386    2.8337217    30.801768 -0.032909582  -0.36509804  0.016112754    0.3264588    1.6632398    10.096389 
 1347000    11.095003    1.4959533    9.5990493  -0.29988209    0.9975237    1.2553709   0.82628078   -3.5502959            3    5.5706835     7.857354    7.9317502   0.92294627 -0.0052823607 -0.070481678 -0.067695802    5.3894084    5.3873813            0            0  0.069255646    1.0231427        0.075     2.073523          0.5   0.11368252    4.3982134     2.807195    30.801768 -0.0038838348  -0.37208372 0.0090867096   0.30744062  -0.22919047    4.8084306 
 1348000    11.090915    1.4928318    9.5980833  -0.30001302   0.99544223    1.2789939   0.80709078   -3.5502959            3    5.5508321    7.7616174    7.9726206   0.91825831 -0.0016166887  -0.17424624  0.017609608    5.3737671    5.3640806   0.31815521   0.83869373     0.272311    1.0219598        0.075     2.098057          0.5   0.11355109    4.4033041    2.7731638    30.801768  0.027342657  -0.38246392 -0.028947941   0.34904993  -0.39047422 -0.084280602 
 1349000    11.082994    1.4898834    9.5931101  -0.29740245   0.99347619    1.2617057   0.81532175   -3.5502959            3    5.2266853    7.5164051    7.6822675   0.48138317  0.007441473 -0.067138829 -0.041243668    5.0478145    5.0424581  -0.50832075   0.63593869   0.07030741    1.0131591        0.075    2.0956847          0.5   0.11257324    4.4415531    2.7905517    30.801768 -0.0098943992  -0.32208327  0.014361396   0.43366378    1.0639735 -0.013950287 
 1350000    11.085452    1.5078389    9.5776136  -0.30757648    1.0054492     1.309781   0.80327101   -3.5502959            3    5.6279981    7.9085056    7.9743373    1.0011514 -0.0049244975  0.016768364   0.10304855    5.4517711    5.4367513  -0.21019056   0.72392125  -0.12177571    1.0526803        0.075    2.0595659          0.5   0.11696448    4.2748022    2.8063219    30.801768 -0.019862613  -0.41134049 -0.019050626   0.35871738  0.083996903  -0.80871518 
 1351000    11.074896    1.4625702     9.612326  -0.29699062   0.97526331    1.2609958   0.78545293   -3.5502959            3    5.5394729     7.857559    7.9032226   0.85763709 -0.019329539   0.25021391 -0.026156024    5.3671549    5.3553494            0            0   0.10645555    1.0130863        0.075    2.0449642          0.5   0.11256514    4.4418724    2.7939766    30.801768 -0.015073436  -0.29961735 -0.016728002   0.35811586   -2.7789905     0.406801 
 1352000    11.096184    1.4940005    9.6021831  -0.29935326   0.99622155    1.2882179   0.80224994   -3.5502959            3    5.7772633    7.9539314    8.0885378    1.2893206  0.029940417   -0.1291628  -0.01566619    5.6012603     5.589165   -1.1224901   0.73436821  -0.11887767    1.0352125        0.075     2.100261          0.5   0.11502361    4.3469335    2.7946348    30.801768 0.0023852795   -0.3245528 0.0033075374   0.36191604    1.1438369    2.9088249 
 1353000    11.120142    1.4973733    9.6227691   -0.2781105   0.99847055    1.2635871   0.82238979   -3.5502959            3    5.7819759    8.0060182    8.0452623    1.2946473  0.010049595   0.11388926  -0.15610431    5.6015545    5.5974741   0.37104536    1.2232327  0.091986189    1.0213847        0.075    2.0716969          0.5   0.11348719    4.4057835    2.7802078    30.801768   0.02194595  -0.33072323 -0.005195401   0.37735532   -1.5534983    3.1388183 
 1354000     11.11559    1.5021477    9.6134423  -0.30127512    1.0016542    1.2700284   0.82340646   -3.5502959            3     5.460632    7.7814876    7.8446368   0.75577145  0.019160137  0.014243616   0.03277157    5.2799875    5.2751896  0.071345577    0.7489744   0.25883086    1.0304523        0.075    2.0687439          0.5   0.11449471    4.3670142    2.8119863    30.801768  0.023276634  -0.35535701 0.0087849897   0.33127408    1.1431071   -2.2498804 
 1355000    11.077382    1.4680554     9.609327  -0.29733089   0.97892091    1.2680301   0.78686448   -3.5502959            3    5.5624938    7.8271025    7.9132242   0.94715478 -0.024281441  -0.44025426  0.021787918    5.3898662    5.3773432  0.091259316    1.5829081 0.0046665749    1.0245328        0.075     2.088109          0.5   0.11383698    4.3922457    2.8270325    30.801768 -0.031992777  -0.37073969  0.036614638   0.34748181    2.6881999    4.0619086 
 1356000    11.117669    1.4994994    9.6181693  -0.31402085   0.99988824    1.2855429   0.81013879   -3.5502959            3    5.4177413    7.6505365    7.8224294   0.78025809   0.01700365 -0.021362356 0.00078094185    5.2400076    5.2300336  -0.73383366    1.5977544   0.14960526    1.0270905        0.075    2.0930551          0.5   0.11412116    4.3813082    2.8189002    30.801768 0.0019855696  -0.34571292 -0.049488248   0.40198648   -2.0263957   -4.0298285 
 1357000    11.100583    1.4889739     9.611609  -0.28984131    0.9928697    1.2815168   0.80112601   -3.5502959            3    5.6728539    7.9380989    8.0092762    1.0711867 -0.041695461 -0.057597225  0.043547648    5.4970975    5.4857341  -0.22024324   0.54488955   0.41815774    1.0122232        0.075    2.0743469          0.5   0.11246925    4.4456598    2.8184553    30.801768  0.013515792  -0.36308174 -0.011152694   0.33807193    2.5667906    2.9612852 
 1358000    11.116664    1.4762947     9.640369  -0.32268111   0.98441505    1.2709681    0.7940619   -3.5502959            3     5.555507    7.8014812    7.9615342   0.90350546  0.030990679  -0.15525571 -0.0054434319    5.3813003    5.3699274            0            0   0.12839838    1.0366462        0.075    2.0739315          0.5   0.11518291    4.3409218    2.7960326    30.801768 0.00057444202  -0.30765261 -0.034534093   0.35536474  -0.91021723    5.2180325 
 1359000    11.103065     1.502824    9.6002406  -0.30331199    1.0021052    1.2741147   0.82143818   -3.5502959            3    5.4201699    7.7425236    7.7871029   0.73088313 -0.0054178859  0.088168646 -0.053308099    5.2399572    5.2341309            0            0  0.079455982    1.0163491        0.075     2.055677          0.5   0.11292768    4.4276124    2.7940678    30.801768 0.0056724064  -0.39047849 0.0053817762   0.32116377   -2.5186496    5.4079608 
 1360000    11.108938    1.4949706    9.6139672  -0.28142636   0.99686838    1.2688843   0.81619512   -3.5502959            3    5.5722629    7.9051859    7.9338691   0.87773363  0.011575699 -0.031355514 -0.039608634    5.3932005    5.3869876            0            0  -0.10109734    1.0242044        0.075    2.0697425          0.5   0.11380049    4.3936544    2.8194043    30.801768 0.0054082477  -0.34262221   0.01443122   0.36891788   -1.4176318  -0.19215681 
 1361000    11.076525    1.4632104    9.6133146  -0.29218383   0.97569022    1.2676798   0.78171552   -3.5502959            3    5.7475616    7.8961723     8.090798    1.2557145  0.012086997  -0.23690278 -0.074694296    5.5760635    5.5624621   0.18687321    1.0982577   0.13065455    1.0304624        0.075    2.0746134          0.5   0.11449583    4.3669714    2.8042129    30.801768 -0.0015701198   -0.3872643 0.0054282092   0.36549135    1.6605046    3.9184902 
 1362000    11.067487    1.4530282    9.6144586  -0.31132149   0.96890055    1.2314111   0.79454335   -3.5502959            3    5.4753084    7.7206113    7.9367068   0.76860708  -0.03109531   0.19343902   0.02253943    5.3009961    5.2955047   0.60202584   0.57466142    0.2209846     1.037535        0.075    2.0784926          0.5   0.11528167    4.3372029    2.8143784    30.801768 0.0059126889  -0.33387589  0.010239765   0.32357709   -1.3435999    5.0976245 
 1363000    11.086365     1.506559     9.579806   -0.3007821    1.0045957    1.2918327   0.81379482   -3.5502959            3    5.5771325    7.8215905    7.9615756   0.94823144 -0.0033758888 -0.097714366 -0.033571684    5.3985967    5.3885064   0.88844527    1.8711947  0.074493362    1.0288258        0.075    2.1199397          0.5   0.11431398    4.3739183    2.7920863    30.801768 -0.00040056355   -0.3083064 -0.028528989    0.3370097    2.8407381    4.1468724 
 1364000    11.136749    1.4729534    9.6637951  -0.27932192   0.98218702    1.2496047   0.80456874   -3.5502959            3    5.5433262    7.7508582    7.9316177   0.94750285 -0.032597239 0.0083630835  0.025559956    5.3668145     5.360866            0            0  -0.25136564    1.0168273        0.075     2.104457          0.5   0.11298081    4.4255304    2.8170296    30.801768 -0.022134938  -0.41140111  0.015203877   0.44878169   -6.0276442    3.7555187 
 1365000    11.121997     1.533508    9.5884888  -0.29138113    1.0225657    1.3285669   0.81928284   -3.5502959            3    5.5104892    7.7241141    7.9511674   0.85618619  0.015089331  -0.25300462 -0.029096136    5.3307494    5.3164994            0            0   0.34847103    1.0163491        0.075    2.1183608          0.5   0.11292768    4.4276125     2.788284    30.801768  0.014428658  -0.40441795  0.012014656   0.38110152    2.6167728    2.4492178 
 1366000    11.097736    1.4962876    9.6014487  -0.29371992   0.99774656    1.3249253   0.78035965   -3.5502959            3    5.5051029    7.7629534    7.8783301   0.87402515 0.0028270007   0.19716424  0.057244201    5.3339023    5.3116448            0            0  -0.30275015    1.0125887        0.075    2.1050114          0.5   0.11250985    4.4440552     2.808474    30.801768  0.039073648  -0.39941409 -0.027314993   0.36343631  -0.63541236    4.8947377 
 1367000    11.161821    1.5122985     9.649522  -0.27960305    1.0084229    1.3229978   0.79942853   -3.5502959            3    5.4765321      7.72522    7.8304638   0.87391255 -0.00066177468  0.050547508   -0.1062822    5.3011481    5.2833555  -0.39575446    1.7967648  -0.51197234    1.0052125        0.075    2.1089573          0.5   0.11169028    4.4766654    2.7871022    30.801768  0.014210708  -0.36956309 -0.011035223   0.33142281    -1.139396    1.5388499 
 1368000    11.150704    1.5142602    9.6364437  -0.30703159     1.009731    1.3082945   0.81139357   -3.5502959            3    5.5074667    7.7339146      7.83434   0.95414553 0.0042215582  -0.14909742  0.048756178    5.3294577    5.3164369   0.25881244    2.1511407    0.2790762    1.0239118        0.075    2.0930241          0.5   0.11376798    4.3949097    2.8094945    30.801768 -0.029039751  -0.37171797  0.010484307    0.3852147   0.72923596    1.4063401 
 1369000    11.153566    1.5134547    9.6401116  -0.27770947    1.0091939    1.2949407   0.81938647   -3.5502959            3    5.3779808    7.7195927     7.714973    0.6993768 0.0030041507  -0.12256785  -0.14156184    5.1982183    5.1889009            0            0  -0.55017227    1.0180823        0.075    2.1183077          0.5   0.11312025    4.4200751    2.8342133    30.801768  -0.01740588   -0.2739497  0.021661002   0.37657926    2.9853923  -0.52688304 
 1370000     11.18119    1.4991469    9.6820428  -0.28261523   0.99965319    1.2993151   0.80058098   -3.5502959            3    5.6487479    7.8626565    7.9681295    1.1154578   0.02255053   0.10015339  0.044195438    5.4731111    5.4590293  -0.16837452    0.8924317   0.26111386    1.0140922        0.075    2.1223832          0.5   0.11267691    4.4374665    2.7856264    30.801768  0.013760247  -0.31028359 0.0038103335   0.34233499   0.92151889    2.5052064 
 1371000    11.155509    1.4952275    9.6602814   -0.2844024   0.99703967    1.3098177     0.789237   -3.5502959            3    5.5561571    7.8259523    7.9261237   0.91639534 0.0045479817  -0.25922243 -0.060383178     5.383009    5.3649049   -1.8598171    2.4695216  -0.29352562    1.0171558        0.075    2.1042893          0.5   0.11301731     4.424101    2.8015205    30.801768 -0.0044793862  -0.39054483 0.0075863141   0.30830814  -0.57825648    3.5676754 
 1372000    11.125454     1.507793     9.617661  -0.30512884    1.0054186    1.3209437   0.79579061   -3.5502959            3    5.5458526    7.7527666    7.9453298   0.93946146 -0.031069699  -0.11425771  0.014703707    5.3712667    5.3529759            0            0   0.23110201    1.0040527        0.075    2.1636291          0.5   0.11156141    4.4818364    2.7701261    30.801768 -0.0061635136  -0.30003507 -0.0011414308   0.33666189    3.2660856    4.2853304 
 1373000    11.133762    1.4896593    9.6441031   -0.3052084   0.99332675    1.3095434   0.78323414   -3.5502959            3    5.4181077    7.6962802    7.7999119   0.75813098  0.015326863   0.11497257 -0.044213453    5.2462765    5.2268956  -0.65757705     1.893526  0.097519859    1.0290918        0.075    2.0975455          0.5   0.11434353    4.3727878    2.8303537    30.801768  0.034464743  -0.36406886 -0.015866131   0.31230764   0.59994221   -1.7577313 
 1374000    11.120289    1.4877836    9.6325052   -0.2896988   0.99207601    1.2777282   0.80232529   -3.5502959            3    5.5396359    7.7195704    7.9422326   0.95710472 -0.0070607161  -0.14700741  0.025306571    5.3636164    5.3530693            0            0   0.10351018    1.0204897        0.075    2.1067168          0.5   0.11338774    4.4096478    2.8115964    30.801768 -0.015436663  -0.39475529  0.010872981   0.38439306   -1.7265448   0.19871101 
 1375000    11.125078    1.5019203    9.6231573  -0.27789631    1.0015026    1.3270998   0.78516966   -3.5502959            3    5.7315262    7.8944729    8.0691736    1.2309322 -0.012958072   0.12296927   -0.0157298    5.5592704    5.5377506   0.36506738    2.3925338  0.088591385    1.0109992        0.075    2.0909283          0.5   0.11233324    4.4510421    2.7856857    30.801768  0.045430658  -0.35025777 -0.022003056    0.3635268   -3.5379033    3.8846182 
 1376000     11.17522    1.5420563    9.6331635  -0.28139275    1.0282658    1.3360834    0.8237762   -3.5502959            3     5.355844    7.6500184    7.7762081   0.64130543 0.0027993294  -0.31675951  0.037806873    5.1751184    5.1607566            0            0   0.04667678    1.0057721        0.075     2.060665          0.5   0.11175245    4.4741747    2.7965022    30.801768  0.014225067  -0.32633807  0.011115346   0.36004799   -1.0466443    1.2753664 
 1377000    11.175654    1.5440196     9.631634  -0.28747517     1.029575    1.3295354   0.83031522   -3.5502959            3    5.6038063    7.8588317    7.9477124    1.0048747 -0.0080017825  -0.18820447 -0.0013151662    5.4216461     5.409675   0.31269736    1.6165023   0.26526464    1.0330333        0.075    2.0527884          0.5   0.11478148    4.3561034     2.815349    30.801768 -0.011181184  -0.34565742 -0.0021759546   0.38733369    3.1739087   0.27028711 
 1378000    11.099719    1.4961575    9.6035618  -0.29183925   0.99765981    1.2918132   0.80225313   -3.5502959            3    5.3993772    7.7388334    7.7865377   0.67276053 0.0038026035   0.24891711    0.1108235    5.2233735    5.2107539            0            0   0.13615097    1.0215944        0.075    2.0451098          0.5   0.11351048    4.4048795    2.8228558    30.801768 -0.0045314969  -0.33294666 -0.016979592   0.34601239   -2.9414318    3.4307474 
 1379000    11.115859    1.5109205    9.6049383  -0.29277736     1.007504    1.3009788   0.81255261   -3.5502959            3    5.5537284    7.8870323    7.8949189   0.87923385 -0.016894253  -0.37576258  0.034444558    5.3754651    5.3637668   -1.2310205   0.65975941   0.21774742     1.032731        0.075    2.0691038          0.5   0.11474789    4.3573788     2.810283    30.801768  0.024878398  -0.37512543 -0.0028012083   0.38198561    3.2782695    3.2796594 
 1380000    11.137461    1.5066418    9.6308188   -0.3042046    1.0046509    1.2745527   0.82538761   -3.5502959            3    5.5475628    7.7349024    7.9063357    1.0014503 -0.021442616  0.063498496 -0.037022539    5.3664837    5.3614598            0            0  -0.07920244    1.0216136        0.075     2.105881          0.5   0.11351262    4.4047967    2.8417985    30.801768 0.0057868601   -0.3442708  -0.01374992   0.34319256   -3.5873821    6.7283653 
 1381000    11.132088    1.5116574    9.6204302  -0.28581554    1.0079954    1.2998294   0.81413627   -3.5502959            3    5.7439821    7.9726215      8.03812    1.2212047 -0.0016746459  -0.21780992 -0.083363508    5.5653714    5.5541883   0.66750266    1.9388397  -0.13409451    1.0264403        0.075    2.0618925          0.5   0.11404892    4.3840835    2.8156534    30.801768 -0.0091544071  -0.47169745 -0.033742611   0.40071251   0.65386761    3.4811691 
 1382000    11.107808    1.4731039    9.6347046  -0.27882574   0.98228733    1.2884892   0.77885599   -3.5502959            3    5.5072556    7.7853686    7.9396766   0.79672156 -0.035020092 -0.042119225  0.065371889    5.3363849    5.3191177  -0.28510534    0.7542335 -0.039381839    1.0191824        0.075    2.0554989          0.5   0.11324248     4.415304    2.8118051    30.801768 -0.010304092  -0.32305224 -0.0033143804   0.38665212    2.1293617    7.1897148 
 1383000    11.102314    1.4721699    9.6301443  -0.28771541   0.98166454     1.284704   0.78033774   -3.5502959            3    5.5082118    7.7262955    7.9787324   0.81960745 -0.028105749  -0.12882015  0.083484662     5.337016    5.3206266  -0.34867806    0.9256663   0.40183264    1.0223422        0.075    2.0723669          0.5   0.11359358    4.4016571     2.811409    30.801768  0.020510266  -0.32527561 -0.015508122   0.29891053    1.2975817    2.2982365 
 1384000    11.147002    1.4888724    9.6581295  -0.28927817   0.99280206    1.2734844    0.8063593   -3.5502959            3    5.6873073    7.9213627    8.0287689    1.1117902 0.0054899557   0.12944618  0.040195725    5.5104027    5.5013603            0            0  0.065613207    1.0319448        0.075    2.0653362          0.5   0.11466053    4.3606984    2.7873945    30.801768 -0.017325295  -0.30724473 0.0044373409   0.32173634  -0.84648888     4.680071 
 1385000     11.11412    1.4908187    9.6233012   -0.2849617   0.99409988    1.2746753   0.80772878   -3.5502959            3    5.5383614    7.7520188    7.9135743    0.9494911 -0.012755916    -0.207544 -0.026379728    5.3611564    5.3522405   -0.2439399   0.11562894 0.0056432835    1.0266413        0.075    2.0553339          0.5   0.11407126    4.3832251    2.8222428    30.801768 -0.014686643  -0.36356501 -0.013668908   0.38458274   0.71856705    4.0610965 
 1386000    11.140286    1.4821262    9.6581596  -0.28052554   0.98830358    1.2401907   0.82102401   -3.5502959            3    5.9035251     8.095114    8.1265802    1.4888812  0.015920373   -0.2646451 -0.083342151    5.7234033    5.7224395            0            0   0.11110214     1.026909        0.075     2.016297          0.5     0.114101    4.3820826    2.8158104    30.801768 -0.017207977  -0.37172748 -0.022046497   0.31569632    1.2710016    0.4632167 
 1387000    11.083021    1.4844865    9.5985349  -0.30619953   0.98987745    1.2897592   0.79065531   -3.5502959            3    5.4211464     7.647186    7.8254969   0.79075614 -0.016249755 -0.014987834 -0.042043724    5.2476871     5.232823   0.53054955   0.90838098   0.38448623    1.0252369        0.075    2.0254699          0.5   0.11391521    4.3892296    2.8368619    30.801768 -0.0054134156  -0.34832501 -0.015614212   0.37526495   0.39387094    3.0411892 
 1388000    11.064485    1.4800156    9.5844697  -0.29384218   0.98689616    1.2722727   0.79732698   -3.5502959            3    5.6179628    7.9260696    7.9095763    1.0182426 -0.002644243   -0.1615442 -0.0012648695    5.4430398    5.4321928    1.1993723    1.2357409   0.19124113     1.009667        0.075    2.0330425          0.5   0.11218522     4.456915     2.787702    30.801768 -0.020376162  -0.34392578 0.0049570055   0.36967861    4.3826571    2.8620264 
 1389000    11.107245    1.4875889    9.6196565  -0.29610118   0.99194618    1.2537444   0.81807157   -3.5502959            3    5.4777517    7.8024392    7.8654366   0.76537923 -0.0016029718  -0.21240162 -0.027689592    5.2982776     5.294687  -0.15821373      1.61784   0.18779197    1.0342894        0.075     2.074044          0.5   0.11492104    4.3508133    2.7967874    30.801768 -0.014328186  -0.41774791  0.012796894   0.40544355   -2.6416485    1.7506746 
 1390000    11.139705    1.4974593    9.6422454  -0.29495744   0.99852787     1.280741   0.81106844   -3.5502959            3    5.4831687    7.6996419    7.8739308   0.87593339 0.0050919446 -0.012558558  0.019582221     5.305231    5.2961622  -0.51320676    1.3219451  0.052997625    1.0355156        0.075    2.0750394          0.5   0.11505728    4.3456614    2.8367882    30.801768 -0.013398647  -0.35217871 -0.0032049295   0.39541805   0.49389653   0.94635614 
 1391000    11.076853    1.4396781    9.6371752  -0.29294569   0.95999853    1.2045544   0.79758788   -3.5502959            3    5.4272991    7.6798465    7.8447722   0.75727848  0.029623085  -0.11751779 -0.001916084    5.2523188    5.2514168            0            0   0.11837097    1.0099576        0.075     2.061431          0.5   0.11221751    4.4556325    2.7898141    30.801768  0.014374419  -0.36387087 -0.036289409   0.34175388   0.16929707    3.2291529 
 1392000     11.13083    1.5180578    9.6127725  -0.30475749    1.0122633    1.3008735    0.8205513   -3.5502959            3    5.6006046    7.8178103    7.9613074     1.022696 -0.043905725 -0.039314105  0.014290308    5.4205865    5.4106584   -1.1161157   0.71517467 -0.021283932    1.0453688        0.075    2.0627302          0.5   0.11615209    4.3047009    2.8163318    30.801768 -0.010473218  -0.37718359 -0.045246858   0.42917631   -0.4099637     1.460021 
 1393000    11.076258    1.4924543    9.5838033  -0.26902368   0.99519052    1.2939722    0.7967025   -3.5502959            3    5.5799148    7.8504675    7.8875717    1.0017051  0.024922546  -0.14187648  0.017713001    5.4051288    5.3909763   0.31958815    1.9172767  0.090623571   0.99940787        0.075    2.0755442          0.5   0.11104532    4.5026662    2.7714169    30.801768 -0.00027046188  -0.35390719 -0.013531247   0.41902837   -1.3722787    1.6636802 
 1394000     11.07949    1.5125334     9.566957  -0.30650305    1.0085795    1.3179652   0.80303895   -3.5502959            3    5.6262451    7.8265416    8.0085813    1.0436124 -0.012213396  0.017532523 -0.080920016     5.450069    5.4338033            0            0 -0.040946227    1.0551915        0.075    2.0427644          0.5    0.1172435    4.2646288    2.8195738    30.801768 -0.027220715   -0.3977924 -0.0075428068   0.37219441   0.75616655    6.3958512 
 1395000    11.058895    1.4468893    9.6120057  -0.28855169    0.9648071     1.258196   0.76989705   -3.5502959            3    5.8729484    8.0903402    8.0808222     1.447683 -0.00010356687  -0.21973477  0.046827318    5.7040432    5.6892338   -1.4235815     2.514307 0.0031889621    1.0044258        0.075    2.0550246          0.5   0.11160287    4.4801715    2.7984807    30.801768 -0.029302056   -0.2915003 -0.003627567   0.36722667    2.8763548    7.4200856 
 1396000    11.091574     1.478341     9.613233  -0.29742235   0.98577956    1.2863576    0.7860925   -3.5502959            3    5.4670112    7.8000213    7.8139427   0.78706956 0.00099366007 -0.049118189  0.030837052    5.2945529    5.2791845   0.18925944   0.33357049   0.21468152    1.0389251        0.075    2.0304893          0.5   0.11543612    4.3313998    2.8056982    30.801768 0.0036256762  -0.42848248 -0.019700146   0.37803083  -0.76011076    1.9154458 
 1397000    11.080683    1.4756723    9.6050112   -0.2820773        0.984     1.258744   0.80150633   -3.5502959            3    5.6431307    7.8921532    8.0168493    1.0203896 -0.0002730419    0.1022351 -0.072059184    5.4672908     5.459336  0.050362243    1.8594331   0.20297542    1.0158076        0.075    2.0331667          0.5   0.11286751     4.429973    2.7965729    30.801768 -0.022223329  -0.38987463 -0.027015881   0.30900828    1.2137491 -0.018099167 
 1398000    11.078036    1.5085624    9.5694738  -0.29050284    1.0059316    1.3178571   0.79869967   -3.5502959            3    5.7143634    7.9967112    7.9795634    1.1668156 -0.010372512  -0.11794161 -0.066657942    5.5391393    5.5219374   0.16602587   0.36863811   0.10143913    1.0287575        0.075    2.0089624          0.5   0.11430639    4.3742086    2.7664832    30.801768  0.024293568  -0.42317656 -0.0040064878    0.3613863    2.1417048     6.234548 
 1399000    11.089288     1.459126    9.6301617   -0.2865457   0.97296669    1.2419588    0.7942971   -3.5502959            3    5.4661905    7.7361716    7.8625967   0.79980311 -0.017411083 0.0032673671  -0.05372763    5.2919322    5.2848467            0            0   0.13975689    1.0252799        0.075    2.0271111          0.5   0.11391999    4.3890454    2.8084728    30.801768 1.5009749e-05  -0.43023769 -0.010884855   0.33790899   -2.2611045    3.4845979 
 1400000    11.099032    1.4979418    9.6010904  -0.29443894   0.99884961    1.2885962   0.80637635   -3.5502959            3    5.6510207    7.8767049    8.0091336    1.0672236 0.0061657382  0.065281657 -0.098219694    5.4741124    5.4628671  0.007430712   0.78243912   0.10974803    1.0443448        0.075    2.0310203          0.5   0.11603832    4.3089216    2.8113123    30.801768 -0.016207066  -0.44029341 -0.026138243   0.40013948   -1.1392284    6.1399611 
 1401000    11.087711    1.4723237    9.6153868  -0.28521571   0.98176711    1.2481471   0.80483933   -3.5502959            3    5.5500587    7.7966453    7.8822358    0.9712951 -0.0039219278  -0.12734649 -0.075926636    5.3734876    5.3678114   -1.0160494    1.9079258  0.052008104    1.0213801        0.075    2.0597364          0.5   0.11348667    4.4058036    2.8213776    30.801768  0.012033629  -0.35177039 -0.0074962246   0.36007576    2.3611454    3.0233989 
 1402000    11.117309    1.5085637     9.608745  -0.29533929    1.0059325     1.289175   0.81779064   -3.5502959            3    5.7902044    8.0164023    8.0262897    1.3279213  0.059687999  -0.17510679  0.071539621     5.610792    5.6019664            0            0 -0.099815732    1.0409643        0.075    2.1013311          0.5    0.1156627     4.322915     2.790704    30.801768   -0.0186221   -0.4726729 -0.0074920631   0.33874782   -1.5502114    6.0303266 
 1403000    11.068005    1.4585035    9.6095014  -0.28519944    0.9725516    1.2217379   0.80706374   -3.5502959            3    5.5501631    7.8560642    7.9524767   0.84194832 -0.027631872  -0.12043713  0.060587752     5.373104    5.3717718  -0.52489793   0.82301365   0.91302305    1.0192197        0.075    2.0743398          0.5   0.11324663    4.4151425    2.8120551    30.801768  0.017634724  -0.33163463 0.0015282261   0.41950321  -0.36660274    2.5175391 
 1404000    11.133683    1.4994555    9.6342271  -0.29281104     0.999859    1.2830385   0.81175687   -3.5502959            3    5.6038715    7.7941328    8.0002064    1.0172753  0.047389375  -0.13638719  0.022107765    5.4257828    5.4165295   0.32452653    1.9897794   0.21733187     1.041007        0.075    2.1053207          0.5   0.11566745    4.3227374    2.8071861    30.801768 0.00063860271  -0.43809362 -0.025588106   0.30312186   0.32899998    2.0801284 
 1405000    11.099133    1.5033934    9.5957399  -0.30799561    1.0024848    1.2501229   0.83803853   -3.5502959            3    5.4297098    7.7088042    7.8210781   0.75924717  0.014312745  -0.17707698  0.033572794    5.2458553     5.247174  -0.22476974    2.2902853 -0.059469416    1.0148874        0.075    2.1141384          0.5   0.11276527    4.4339893     2.801724    30.801768  0.013193706  -0.43194049 0.0086058967   0.37787156  0.029469877    1.9921747 
 1406000    11.111918     1.493702    9.6182155  -0.29888012    0.9960225    1.2949067   0.79746659   -3.5502959            3    5.7843575    7.9199388    8.0821014    1.3510323 -0.0026779283 -0.086509488  0.028020863    5.6094039    5.5952826            0            0   0.22670913    1.0287845        0.075    2.0999991          0.5   0.11430939     4.374094    2.7982841    30.801768  0.011151568  -0.42737469  0.011006898   0.46454561  -0.94964589    7.8657483 
 1407000    11.098131    1.4747874    9.6233435  -0.28133999   0.98340994    1.2563999   0.80208344   -3.5502959            3    5.4147185    7.6851001    7.8295212    0.7295343 -0.0095106061 -0.042113122  0.096475821    5.2387521    5.2312661    0.9028738   0.21772333  0.083594515    1.0293394        0.075    2.0955112          0.5   0.11437104    4.3717361     2.804763    30.801768 -0.022683859  -0.37605725 0.0043505401    0.3477183    2.2348798    1.5651015 
 1408000    11.089782    1.5010673    9.5887146  -0.29568259    1.0009337    1.2981043   0.80352018   -3.5502959            3    5.5415692    7.8098052    7.9245555   0.89034698  0.010413199  0.030277937 -0.036934414    5.3652875    5.3520274  -0.24467887   0.65529528  0.018384833    1.0264266        0.075    2.0767764          0.5    0.1140474    4.3841422    2.8049664    30.801768 -0.0095729141  -0.35653955 0.0027570407   0.32120435  -0.12694517    1.4157453 
 1409000    11.077272    1.4767399    9.6005318  -0.29438953   0.98471188    1.2856352   0.78479464   -3.5502959            3     5.511213    7.7302931    7.8718562   0.93148979  0.021981608  -0.14163038 -0.085127341    5.3390395    5.3234918            0            0 -0.040438836    1.0239407        0.075    2.0843534          0.5   0.11377119    4.3947856    2.8056858    30.801768 -0.010104162  -0.45440259 -0.0068257825   0.36646108   0.41775582  -0.12116421 
 1410000    11.115233    1.5230306    9.5922021  -0.31185383    1.0155792    1.3193039   0.81380898   -3.5502959            3    5.8164922     7.966399    8.1156714    1.3674061  0.026520081  -0.20229606  0.015384387    5.6379532    5.6238549  0.013186323    1.1007225   0.17805689    1.0188164        0.075    2.1063465          0.5   0.11320183    4.4168898    2.7782381    30.801768  0.025292728  -0.30776331 0.0014333406   0.30997319   -1.1544724    3.0059633 
 1411000    11.096162    1.4785091    9.6176534  -0.29226014   0.98589161    1.2823544   0.78894354   -3.5502959            3    5.4164618    7.6589205    7.8264828   0.76398199 -0.034852753 -0.015936821  0.058158466     5.243378    5.2292196  0.094837847    1.1381078   0.24034187    1.0260936        0.075    2.0923359          0.5    0.1140104    4.3855649    2.8218508    30.801768  0.011375679  -0.34772899 -0.010386894   0.41935524   0.56317667    2.1506455 
 1412000    11.082245    1.4794718    9.6027733  -0.28747838   0.98653356    1.2760558   0.79420506   -3.5502959            3    5.6518764    7.9025541    8.0184423    1.0346329 -0.038934822  -0.10371812 -0.065642161    5.4776383     5.465554  -0.19572867   0.33747531   0.15627366    1.0151074        0.075    2.0851526          0.5   0.11278971    4.4330284    2.8027837    30.801768 -0.015902832  -0.40951549 -0.018798816   0.34717476       1.3965    4.5003896 
 1413000    11.125401    1.4830107    9.6423899  -0.29701277   0.98889336    1.2624773   0.80717356   -3.5502959            3    5.6763015    7.9076719    8.0202459    1.1009866  0.024400105  -0.22026668  0.049575717    5.4992183    5.4919617   -2.2170064    1.6206269   0.14122822    1.0176401        0.075    2.0646658          0.5   0.11307112    4.4219955    2.8051434    30.801768 -0.027106522  -0.38442854 0.00087839641   0.36764371   0.44296247    4.5788245 
 1414000    11.109849    1.5035146    9.6063348  -0.30309401    1.0025657    1.2974001   0.80670754   -3.5502959            3    5.4878967    7.6763032     7.906766   0.88062098 -0.003483101  0.048290053 -0.033279129    5.3109158    5.2984577  0.016140487    1.0108696   0.15583574    1.0045566        0.075    2.0939045          0.5    0.1116174    4.4795883    2.7982291    30.801768 -0.0059554291  -0.37790346 -0.016678987   0.33506633   -1.6721394   -3.0373602 
 1415000    11.146472    1.5400014    9.6064704  -0.30555127    1.0268956    1.3181961   0.83339855   -3.5502959            3    5.5940227    7.8354797    7.9070554    1.0395331 -0.031621325    0.1142125 -0.053899737    5.4111861    5.4015472            0            0   0.18091344    1.0234143        0.075    2.0847562          0.5    0.1137127    4.3970463    2.8243618    30.801768 0.0065774628  -0.41883583  0.004894204   0.33434406   -1.2455526   0.49784171 
 1416000    11.104518    1.4873147     9.617203  -0.28729807    0.9917633    1.2868371   0.79574186   -3.5502959            3    5.6990325    7.9476525    8.0158436    1.1336015  -0.01449338  -0.19118168 -0.031941439    5.5244573    5.5111359  -0.63587225   0.58171149   0.35817212    1.0232541        0.075    2.0829028          0.5    0.1136949    4.3977345    2.7965921    30.801768  0.013616433  -0.42133206 -0.010744485    0.4092278    1.1725666    4.3487262 
 1417000    11.086406    1.4867036    9.5997019  -0.28845871   0.99135586    1.2737025   0.80380487   -3.5502959            3    5.6147539    7.9126766    7.9406173    0.9909678  0.014551993   -0.2747073  0.017490261    5.4384097     5.428775  -0.26936468   0.92341824   -0.4120112    1.0367713        0.075    2.1037419          0.5   0.11519681    4.3403981    2.8376116    30.801768  0.006889353  -0.33928686  -0.02217287   0.44043683  -0.24146454 -0.027924466 
 1418000    11.134661    1.5310819     9.603579  -0.28666884     1.020948    1.3289928   0.81630434   -3.5502959            3    5.5613819    7.8184212    7.9541555   0.91156908 0.0069489563 -0.028767705 0.0059767207    5.3822956    5.3673299  -0.46233833   0.34974551  0.039162877    1.0425361        0.075    2.0888732          0.5   0.11583734    4.3163974     2.819677    30.801768  0.019653494  -0.36902493   0.02705941   0.37556291   -1.0210546    -2.661671 
 1419000    11.140032    1.5000061    9.6400263  -0.28805429    1.0002262    1.2648546   0.82447097   -3.5502959            3    5.4965863    7.8027553    7.8348348   0.85216871 -0.0087171683 -0.031870607 -0.045216806    5.3157083    5.3118994            0            0   0.13050819    1.0360586        0.075    2.1068678          0.5   0.11511762    4.3433838    2.8239092    30.801768  0.025689682  -0.32816794 -0.037818353   0.40580857    1.1612065   0.98631125 
 1420000    11.102119    1.4808922    9.6212264  -0.29885456   0.98748072    1.2812139   0.79234992   -3.5502959            3    5.5707887    7.7554137    7.9913563   0.96559606  0.018187951  0.030223284  0.036440341    5.3969576    5.3837131   -1.2759916    1.0861343   0.12172671    1.0273496        0.075    2.1104735          0.5   0.11414996     4.380203    2.8060086    30.801768  0.024388317  -0.34396917 0.0020576184   0.38379295    2.3359261    4.8265374 
 1421000     11.08537    1.4618433    9.6235267  -0.28607784   0.97477861    1.2684949    0.7796544   -3.5502959            3    5.4463074    7.6980145     7.832187   0.80872057  0.013545761 -0.061845984 -0.051925312    5.2752615    5.2610889   -1.0076864    3.7418766   0.62866127    1.0104518        0.075    2.0586576          0.5   0.11227242    4.4534535    2.8004407    30.801768  -0.02792603  -0.35739477 0.0093168382    0.3331121   -2.9809328    1.5393427 
 1422000    11.112888    1.4854971    9.6273914  -0.30698244   0.99055131    1.2778309   0.79971691   -3.5502959            3    5.5017096    7.8143872    7.8782661   0.81247533  0.019958804  -0.17893359 -0.060842976    5.3262623    5.3151279  -0.18076533   0.27171431  0.077472603    1.0372471        0.075    2.0721065          0.5   0.11524968    4.3384067    2.8184784    30.801768 0.0022996901  -0.34162154 -0.019316822   0.42177306    3.5991482    3.9384549 
 1423000     11.09045    1.4655488    9.6249007  -0.28081051    0.9772495    1.2351401   0.80597021   -3.5502959            3    5.6727101    7.9059928    7.9807728    1.1313647 -0.0074004199 -0.017979342  -0.01860617    5.4958909    5.4923619 -0.019974599   0.46462988   0.19166906    1.0231521        0.075    2.0323057          0.5   0.11368357     4.398173    2.8180429    30.801768 -0.0017556823  -0.33150457 0.0038905594    0.2819254   -1.4989704   0.27515684 
 1424000    11.093059    1.4822577    9.6108018  -0.29406046   0.98839122    1.3004354   0.78107375   -3.5502959            3    5.6510606    7.8584694    7.9979407    1.0967717 0.0046093461   0.13273136  0.019286298    5.4797034    5.4611784   0.88627138   0.66958653  -0.12880241    1.0438294        0.075    2.0829246          0.5   0.11598105    4.3110491     2.830189    30.801768 -0.021320953  -0.49256846 0.0057706886   0.37302992   -2.3848882   -1.7251244 
 1425000    11.042587    1.4994596    9.5431276  -0.31177844   0.99986174    1.3144536   0.79085291   -3.5502959            3    5.5090341    7.7497068     7.895193   0.88220251 -0.022128575  0.096410098  0.065524617    5.3355315     5.317105   -1.6024997    3.0145711  0.070656767    1.0212213        0.075    2.0641856          0.5   0.11346904    4.4064884    2.7968879    30.801768 -0.049791412  -0.35741417  0.006995206   0.33482548   -3.2980743    7.3806427 
 1426000    11.062282    1.4481156    9.6141665  -0.29795916   0.96562477    1.2731782   0.76128774   -3.5502959            3    5.6210619    7.8929893    7.9340806    1.0361158 0.0057281736 -0.045335689 -0.047694861    5.4540455    5.4351597            0            0  0.052639281    1.0135042        0.075     2.075124          0.5   0.11261158    4.4400408     2.795573    30.801768  0.014708894  -0.36495083 -0.028476702   0.35100471   0.66365276    6.6708141 
 1427000    11.116641    1.5181412    9.5985002  -0.28997431    1.0123189    1.3038486   0.81866388   -3.5502959            3    5.6954388    7.9528254    8.0103583    1.1231326  0.020197837  0.047822527   0.10453261    5.5158348    5.5050582  -0.48587614    2.1140668   0.17537324    1.0329593        0.075    2.0760663          0.5   0.11477326    4.3564156    2.8088868    30.801768  0.020134912  -0.41232525 -0.013370129   0.40499195   -1.5531419    3.0426491 
 1428000    11.108414    1.4909704    9.6174441  -0.29183381   0.99420101    1.2993748   0.79145835   -3.5502959            3    5.3452066    7.6959553       7.7156   0.62406456  0.018945812   0.01632112  0.040150972    5.1715711    5.1554793  -0.56491591      1.61463   0.31189472    1.0073968        0.075    2.0949471          0.5   0.11193298    4.4669587    2.8029312    30.801768 -0.029621566  -0.33606235 -0.032282529   0.37720055  -0.28974919     2.117046 
 1429000    11.123611    1.4955474    9.6280631  -0.29909169   0.99725304    1.2653244   0.81920525   -3.5502959            3    5.7237635    7.8731917    8.0577071    1.2403918  0.026722768  -0.17785121  0.094479336    5.5440407     5.539008            0            0   0.35140048    1.0106312        0.075    2.0994382          0.5   0.11229235     4.452663    2.7879935    30.801768 -0.026918675  -0.36209197 0.00072643787   0.34694618      2.23507    5.9905864 
 1430000    11.119758    1.4990706    9.6206876  -0.28941877   0.99960233    1.2858062   0.80948717   -3.5502959            3    5.8088394    8.0370709    8.0792108    1.3102366  0.007493357  -0.23672385 0.0045938526    5.6312487    5.6210933   -0.8504722    2.1118839  0.087821513    1.0268463        0.075    2.0688766          0.5   0.11409403    4.3823501    2.7931802    30.801768  -0.02388758  -0.39660486  0.015661414    0.4419538  -0.21000079   0.22574831 
 1431000    11.055939    1.4551657     9.600773    -0.288325   0.97032587    1.2739247   0.76862257   -3.5502959            3    5.5529382    7.9005707     7.859004   0.89923995  0.004843672 -0.029879261  0.025103136    5.3843126    5.3669269   0.64435089   0.83815393   0.12380502    1.0153864        0.075     2.044296          0.5   0.11282072    4.4318102    2.8268634    30.801768 -0.029005587  -0.38498402  0.003814404   0.34747092  -0.63686024      3.43464 
 1432000    11.128304    1.4917368    9.6365674  -0.29396954   0.99471206    1.2845073   0.80220488   -3.5502959            3    5.6834286    7.9147151    8.0091745    1.1263962 -0.0037948764  -0.23880141   0.02771437    5.5074355    5.4958721    1.2180289   0.99873663   0.53716296    1.0109983        0.075    2.0795479          0.5   0.11233314    4.4510462    2.7848188    30.801768 0.0097947821   -0.3453855 -0.016994515   0.32529237    3.1125518    3.2524348 
 1433000    11.131144    1.4841309    9.6470132  -0.27696375    0.9896403    1.2830493   0.79472611   -3.5502959            3     5.725585    7.9883898    8.0281417    1.1602234  0.016161207 -0.062121075  0.069787823    5.5512326    5.5382414    0.3081072     1.164146  -0.15300172    1.0137527        0.075    2.0397667          0.5   0.11263919    4.4389522    2.8196789    30.801768  0.017499309  -0.35776809 -0.0019718711     0.331245   -2.5753289    1.5997038 
 1434000    11.113937    1.5026238    9.6113128  -0.31201596    1.0019716    1.2959129   0.80670775   -3.5502959            3    5.5366277     7.797316    7.8843313   0.92823579 -0.0086528443  -0.15932686 -0.037221014    5.3596467    5.3474058  -0.48976583    1.0803827  -0.13760124    1.0201936        0.075     2.062705          0.5   0.11335484    4.4109276    2.8082114    30.801768 -0.023096479   -0.3861024 -0.0079595606   0.36351018     1.682082    5.1617119 
 1435000     11.09107    1.4724795    9.6185901  -0.28937731   0.98187101    1.2843108   0.78094337   -3.5502959            3    5.4960847    7.8074678    7.8140804   0.86670582  0.013083905  -0.11879377  0.055729527     5.324756    5.3085568            0            0  -0.11448891    1.0184969        0.075    2.0968784          0.5   0.11316632    4.4182756    2.7932586    30.801768 -0.006764832  -0.34161494 0.0055910758   0.35352473  -0.15312802    2.8220509 
 1436000    11.146958    1.5203995     9.626558  -0.29005709    1.0138247    1.3154811   0.81343038   -3.5502959            3    5.7759766    7.9833805    8.0823629    1.2621864 -0.001457745 -0.024600475   0.10180756    5.5975207    5.5838975            0            0   0.13664156    1.0323216        0.075     2.093147          0.5    0.1147024    4.3591066    2.8266078    30.801768 -0.010587332  -0.36347333  0.014176862   0.37334064     1.486394    3.9150685 
 1437000    11.084138    1.4790849    9.6050528  -0.28714608    0.9862756    1.2799871   0.79115882   -3.5502959            3    5.4509133    7.7702349    7.8699454    0.7125596 -0.011661278  -0.13737386  0.042675702    5.2773435    5.2640168    0.8138455    2.4795527   0.19369007    1.0187149        0.075    2.0624456          0.5   0.11319055      4.41733    2.8131096    30.801768  0.021824164  -0.32093792 -0.0010496173   0.54161974    1.8822068    1.7893905 
 1438000    11.123926    1.4901619     9.633764  -0.30351121   0.99366189    1.2782853   0.80459644   -3.5502959            3    5.5821462     7.775102    7.9908539   0.98048262  0.013777598 -0.090874154 -0.064232375    5.4056284    5.3954982   -1.1060861    1.4156912  0.038429085    1.0180972        0.075    2.0971909          0.5   0.11312191    4.4200104    2.8027512    30.801768 -0.017039017  -0.38859824 -0.043632067   0.34143181  -0.80968462      1.69676 
 1439000    11.139567    1.5268476    9.6127194  -0.29369746    1.0181244    1.3246261   0.81450684   -3.5502959            3    5.5217498    7.8028166    7.9287524   0.83368025 -0.015169986  0.059000677  0.035840729    5.3430577    5.3283353   0.22874819    1.5206697   0.45628712     1.028132        0.075    2.0675992          0.5   0.11423689    4.3768698    2.8092444    30.801768 -0.012092563  -0.36749643 -0.030446818   0.35389364   -1.0687002    3.8289129 
 1440000    11.093847    1.4727434    9.6211036  -0.27054607   0.98204697    1.2810336   0.78341771   -3.5502959            3    5.5149291    7.7970695    7.9277212   0.81999659  0.026122136  -0.24373372  0.040615981    5.3430576    5.3278798   -0.4622992     1.281363 0.0096225156    1.0169413        0.075    2.0598402          0.5   0.11299348     4.425034    2.8072459    30.801768 -0.014258345  -0.25738863  0.001249689    0.3909825  -0.14155578   0.50415556 
 1441000    11.115105    1.4970624    9.6180424  -0.29767713   0.99826324    1.2838887   0.80853262   -3.5502959            3    5.5387531    7.8046517    7.9439393   0.86766823  0.045609499  -0.35555739 -0.019997894    5.3613717    5.3512869   -1.1831259   0.92364778   0.19037712    1.0131621        0.075    2.0727649          0.5   0.11257357    4.4415398    2.8345576    30.801768 -0.0048907985   -0.3048687 -0.017587436   0.34024935   0.12353972    1.0414528 
 1442000    11.156839     1.526121    9.6307176  -0.30146173    1.0176399    1.3275912   0.81172623   -3.5502959            3    5.6673777     7.878278    8.0515238    1.0723311  0.046103661    0.1581563 -0.079397619    5.4892957    5.4735303   0.50829003    1.1630256  0.049641078    1.0257041        0.075    2.1184322          0.5   0.11396712    4.3872304    2.7912288    30.801768 0.0075877889  -0.40349637 -0.014628096   0.36088024     2.274077    3.6418744 
 1443000    11.152412    1.5130019    9.6394097  -0.29555892     1.008892    1.2953771   0.81859307   -3.5502959            3    5.5495346    7.7849382    7.9360358   0.92762996 -0.021198823  -0.36202763   0.05388396    5.3699462     5.360391            0            0   0.11039905    1.0201118        0.075    2.1015322          0.5   0.11334576    4.4112811    2.8213388    30.801768 -0.011562642  -0.32919196  0.010377756   0.35220866    3.1478737     2.649906 
 1444000     11.14559    1.5166597    9.6289306  -0.30015993     1.011331    1.2974406   0.82128297   -3.5502959            3    5.6262108    7.8372062    8.0124604    1.0289657 -0.0011122394 -0.080786174   0.05699533    5.4460322    5.4367659            0            0  0.070962379    1.0284157        0.075    2.0754537          0.5   0.11426841    4.3756626    2.8108521    30.801768 0.0067761591  -0.42073915 -0.022782872   0.36842569   0.63330044    4.4948778 
 1445000    11.124748    1.5037196    9.6210288  -0.29230816    1.0027024    1.3042706   0.80236253   -3.5502959            3    5.7161908    7.9008853    8.0139375    1.2337495 -0.010240175  0.011915905  -0.07208119     5.540163    5.5257485   0.50245634    1.8277673  0.082955532    1.0103263        0.075    2.0845251          0.5   0.11225847    4.4540068    2.8156018    30.801768 -0.013902059  -0.41026001 -0.0097882279    0.3012231   -3.2962705    8.8698828 
 1446000    11.187118    1.5294153    9.6577026  -0.29457902    1.0198366    1.2824709   0.84541592   -3.5502959            3    5.6140755    7.8667613    7.9121289    1.0633362  -0.01731418  -0.22040628 -0.0082984917    5.4286024    5.4268163  -0.71373988    1.3206257  0.062524664    1.0267383        0.075    2.0849786          0.5   0.11408203    4.3828112    2.7917778    30.801768  0.021308273  -0.39833192 -0.016432982   0.33585858     2.101622     1.971739 
 1447000    11.109969    1.4651209    9.6448484  -0.28770815   0.97696418    1.2729832   0.78030817   -3.5502959            3    5.8642828    8.0521418    8.1500286     1.390678  0.022871866  -0.13131556   0.12870209    5.6930935     5.678409   0.63462399   0.68384604 -0.010347657    1.0121213        0.075     2.086611          0.5   0.11245792    4.4461074    2.7909801    30.801768 0.0042229042  -0.28965945 -0.013766744   0.30493614   0.43603293    5.8173037 
 1448000    11.145238    1.5022448    9.6429936  -0.27923886    1.0017189    1.3002113   0.80342594   -3.5502959            3    5.6213487    7.8038044     8.029418    1.0308237 -0.0048848579  0.011072197  0.011601702    5.4450877    5.4314992    0.5314282    1.5621925 -0.013572312    1.0276364        0.075    2.0503459          0.5   0.11418182    4.3789807     2.791187    30.801768 -0.012449102  -0.32337721 -0.010036234   0.35212628   -1.0540864   -1.8494715 
 1449000    11.124869    1.4769537    9.6479157  -0.29980679   0.98485444    1.2771022   0.79071129   -3.5502959            3    5.6538901    7.8765163    8.0082435    1.0769106 -0.014152947   -0.1994984  0.031287987    5.4804185    5.4674149   0.56819739   0.60745391 -0.068910746    1.0352713        0.075    2.0844374          0.5   0.11503014    4.3466868    2.8411732    30.801768 -0.0054487968  -0.34900915  0.032570705   0.37449243  -0.25388163    6.4543009 
 1450000     11.07399    1.4890412    9.5849491  -0.29161412   0.99291455    1.2722961    0.8073376   -3.5502959            3    5.7113414    7.9173107    8.0207424     1.195971 -0.032045313  -0.01324917  0.021876305    5.5342222    5.5255679   0.36997595   0.90357841   0.26052391    1.0248476        0.075    2.0837831          0.5   0.11387196    4.3908967    2.8024326    30.801768  0.016092863  -0.41566424 -0.0097413684   0.36957137   -0.4071802    4.1041925 
 1451000     11.08511    1.4875489    9.5975616  -0.29818834   0.99191947      1.26885   0.80797345   -3.5502959            3      5.54466    7.8433834    7.8654047   0.92519187 0.0086046519 -0.034802233 0.0081284153    5.3674013    5.3593897  -0.35676666   0.55200977 -0.054751726    1.0163047        0.075    2.0431869          0.5   0.11292274     4.427806    2.8086155    30.801768  -0.02597403  -0.36936113 -0.011808375   0.33626756    2.9242173    1.6268847 
 1452000     11.05942     1.470523    9.5888968  -0.29161013   0.98056635    1.2480511   0.80290282   -3.5502959            3    5.5465176    7.8509629    7.8804419    0.9081478  0.027433549 -0.0075035809  0.044866709    5.3703713    5.3642842   0.48049611    1.8709969   0.18339588    1.0374897        0.075    2.0419341          0.5   0.11527664    4.3373923    2.8286498    30.801768 0.0032089601  -0.38817421 0.0052586181   0.31289789  -0.94935118    1.8973903 
 1453000    11.066992    1.4787793     9.588213  -0.30725377   0.98607181    1.2799846   0.79082095   -3.5502959            3    5.7715103     7.967469    8.1005695    1.2464925 0.0015621297  -0.19552676  0.056091872    5.5980147    5.5846142   0.87107609   0.39283421  -0.35544965    1.0353724        0.075    2.0785034          0.5   0.11504138    4.3462623    2.8049158    30.801768  0.010348356  -0.30138272 -0.012752637   0.33293379  -0.12275521    4.8281684 
 1454000    11.089088    1.5006594     9.588429  -0.30451221    1.0006618    1.2680196   0.82309019   -3.5502959            3    5.5711564    7.8015981    7.8993447    1.0125265 0.0026586246  0.029455186  0.052918637    5.3905813    5.3860074  -0.36748138   0.16232321   0.10854995    1.0243483        0.075    2.0547768          0.5   0.11381648    4.3930371    2.8193964    30.801768 -0.020868943  -0.33908913 -0.018906221   0.31551406   0.65241147 -0.081784201 
 1455000    11.056908    1.4671368    9.5897715   -0.3025613   0.97830842    1.2481671   0.79906407   -3.5502959            3    5.4843133    7.7421888    7.9278726   0.78287862  0.036845872  0.044996907  0.081267581    5.3090093     5.302063            0            0 -0.065094296    1.0340962        0.075    2.0537982          0.5   0.11489958     4.351626    2.8257119    30.801768 -0.014459105  -0.32468719  0.023725327   0.36887145   -3.4302372    1.8548161 
 1456000     11.04613    1.4688486    9.5772811  -0.31280818   0.97944985    1.2721845   0.78498065   -3.5502959            3    5.6190657    7.8433624    7.9510925    1.0627422  0.016860461  -0.24331476  0.022179602    5.4468513    5.4333085  -0.77855947      1.81815   0.41810539     1.029574        0.075    2.0483388          0.5   0.11439711    4.3707398    2.8343238    30.801768 -0.010489117  -0.39388174 -0.0015427219   0.31620874    2.5790192    3.1299164 
 1457000    11.020232    1.4582712    9.5619613   -0.2985393   0.97239668    1.2746875    0.7715647   -3.5502959            3    5.5305428    7.7796612    7.8829824   0.92898481 -0.0040452106  -0.17113566 -0.020540461    5.3612717    5.3444201            0            0 0.0042686568    1.0255847        0.075    2.0771286          0.5   0.11395386    4.3877408    2.8064622    30.801768  0.023159153  -0.46521768 -0.054678592   0.36614635  -0.63575827    4.4725909 
 1458000    11.080585    1.4587597    9.6218248  -0.28932272   0.97272244    1.2440425   0.79250343   -3.5502959            3    5.5869615    7.7947251    7.9438095      1.02235  0.030710613 -0.059731022  0.059788715    5.4130968    5.4053135            0            0    0.6737025     1.031066        0.075    2.1302699          0.5   0.11456289    4.3644151    2.7950432    30.801768 -0.011773263   -0.3497701  -0.01761031   0.41860545    -1.019775    1.3102638 
 1459000    11.051312    1.4647518    9.5865598  -0.30322652   0.97671807    1.2762505   0.77772357   -3.5502959            3    5.3852139    7.6893827    7.7684796   0.69777933  0.039304783  0.075844493 -0.052257362    5.2145916     5.198863  -0.18393518   0.80851015   0.17529818    1.0216035        0.075    2.1210473          0.5    0.1135115    4.4048399    2.7948574    30.801768 -0.029520692  -0.41200904  0.007815509   0.33540677    2.0437625    6.9170688 
 1460000    11.113956    1.5240162    9.5899399   -0.3129036    1.0162364    1.3015078   0.82674805   -3.5502959            3    5.7267471    7.9448406    8.0381392    1.1972614 -0.0059164462  -0.24102595  0.066326526    5.5453695    5.5367083  -0.44394349   0.55030471  0.010715955    1.0417501        0.075    2.0980557          0.5   0.11575001     4.319654    2.8143669    30.801768  0.018464377   -0.3927389 -0.012252026   0.43306225   0.94709317    1.3372592 
 1461000    11.084681    1.4957016    9.5889795  -0.30589989   0.99735581    1.2881607   0.80417763   -3.5502959            3    5.6227389    7.8497263    7.9509012    1.0675891 -0.013217204   0.13360106 -0.056800691    5.4463129    5.4346489            0            0  -0.10246035    1.0111841        0.075    2.1072507          0.5   0.11235379     4.450228    2.7884605    30.801768  -0.02210323  -0.42581577   0.02553051     0.320942   -2.0961157    3.1358089 
 1462000    11.115052    1.5227699    9.5922825  -0.30198185    1.0154054     1.309566   0.82000041   -3.5502959            3    5.5752662    7.8475322    7.9805223   0.89774423  0.033072669 -0.060869763  0.017203178     5.395369    5.3840508   -0.5173526    0.9260408 -0.00059322574    1.0386164        0.075    2.0990334          0.5   0.11540182    4.3326874    2.8172333    30.801768 0.0097904829   -0.3026879 0.00059539897   0.34954192  -0.69524716   -3.0384461 
 1463000    11.024258     1.466678    9.5575795  -0.30606071   0.97800249    1.2880888   0.77198427   -3.5502959            3    5.5281041    7.7498799     7.957889   0.87654348  0.020224009  0.029604758 -0.087365448     5.358741    5.3400247            0            0 -0.064301014    1.0187696        0.075     2.070582          0.5   0.11319662    4.4170928    2.8035287    30.801768 0.0037248965  -0.36981161 -0.011563829   0.27092012   -1.8955356  0.067044814 
 1464000     11.10669    1.5142619    9.5924279  -0.29421672    1.0097321    1.3031894    0.8147932   -3.5502959            3    5.4844707    7.7758941    7.8749097   0.80260824 -0.0099435273  -0.37372572 -0.030817933    5.3057159    5.2941863  -0.39339431     1.250681  0.027390176    1.0389312        0.075    2.0701411          0.5    0.1154368    4.3313745    2.8293327    30.801768 -0.009722111  -0.35389174 -0.031398756   0.44313006    5.9459312   -4.0616321 
 1465000    11.124691    1.5429233    9.5817679  -0.29403039     1.028844    1.2812267   0.86124955   -3.5502959            3    5.6062308    7.8584149    7.9012319    1.0590454 -0.016094855   0.15392165 0.0026273354     5.417284    5.4191533            0            0  0.086961013     1.024749        0.075    2.0872942          0.5     0.113861    4.3913192    2.8118321    30.801768 0.0033747728  -0.41653138  0.025868397   0.38021796    -1.485659   -1.2552874 
 1466000    11.092117    1.4834979    9.6086188  -0.29595853   0.98921822    1.2653387   0.80581034   -3.5502959            3     5.580457    7.8681475     7.916579   0.95664451  0.015222485   -0.1466358  0.048790483    5.4036729    5.3956994    1.3857908   0.18050537   0.31585051    1.0372296        0.075    2.0858921          0.5   0.11524774      4.33848    2.8127478    30.801768 -0.015961625   -0.3202219 -0.020247252   0.39198316    -1.428594    1.4913015 
 1467000    11.080117    1.4624122    9.6177049  -0.30182324   0.97515797    1.2591517   0.78650478   -3.5502959            3    5.6099205    7.7767019    8.0086498    1.0444098 -0.029407696  -0.19424087    0.1442491    5.4373718    5.4260663            0            0  -0.13310125    1.0189914        0.075    2.1058352          0.5   0.11322127    4.4161313    2.7889918    30.801768  0.030865937  -0.36643642 -0.010125863   0.34319334    3.4058951    7.0967222 
 1468000    11.074904    1.4545331     9.620371  -0.31010391   0.96990411    1.2421388   0.78907531   -3.5502959            3    5.3687599    7.6207636    7.7794921   0.70602411  0.037810433  -0.14828308  0.022515539    5.1956473    5.1873899     -0.52381    1.4740298   0.11184715    1.0336337        0.075    2.0953181          0.5   0.11484819    4.3535732    2.8331704    30.801768 0.0067190094  -0.35133539 -0.0098301228   0.41830844   -1.4449634   0.24161419 
 1469000    11.079644    1.4866403    9.5930039   -0.2954302   0.99131364    1.2658644   0.80895125   -3.5502959            3    5.4233981    7.7176684    7.8110994   0.74142646  0.028499573  -0.15656479 -0.035118127    5.2459249    5.2385637            0            0  0.065112785    1.0145773        0.075    2.0769873          0.5   0.11273081    4.4353446     2.797008    30.801768 -0.013124053  -0.42507089 -0.003690202    0.3851848    2.0942944   -1.1658253 
 1470000    11.137589     1.500811    9.6367779  -0.28419513    1.0007629    1.2689091   0.82266654   -3.5502959            3    5.6496531    7.8595901    7.9588763     1.130493 0.0050466255  -0.16939339   0.03135249     5.469171    5.4643742  0.059737863   0.69322079  0.038398162    1.0269697        0.075    2.0688177          0.5   0.11410774    4.3818236     2.788771    30.801768  0.014315872  -0.43515107 -0.025385785   0.39353176   -2.5685806    3.0067893 
 1471000    11.146881    1.5167153    9.6301656  -0.28580246    1.0113681    1.3024114   0.81803643   -3.5502959            3    5.7556172    8.0152999    8.0674746    1.1840771  0.028614537  -0.17947784 -0.010648686    5.5761508    5.5654465            0            0   0.48755836    1.0086118        0.075    2.0482351          0.5   0.11206798    4.4615779    2.8040967    30.801768  0.016181776  -0.26359535 -0.012046675   0.36965146   -1.8629947    2.2173421 
 1472000    11.121716    1.4986944    9.6230214  -0.29108635   0.99935146    1.2884201   0.80732956   -3.5502959            3      5.38837    7.6873516    7.7491426   0.72861584  0.020084261  -0.14180846 -0.053083968    5.2112526    5.2002422   0.24120699   0.70956404  0.047082581    1.0204133        0.075    2.0137058          0.5   0.11337925    4.4099779    2.7930139    30.801768 -0.026629263  -0.34924789 0.0014117255   0.35801546  -0.23426315  -0.46462793 
 1473000    11.159592    1.5107207    9.6488709  -0.30653586    1.0073708    1.2562663   0.84208935   -3.5502959            3    5.6043439    7.7514652    7.9804923    1.0810741  0.020880102  -0.03696033 -0.031033151    5.4196006     5.420911            0            0 -0.035950376    1.0237268        0.075    2.0596728          0.5   0.11374742    4.3957041    2.8017449    30.801768  0.015661758  -0.37096856 0.0040107546   0.33345898    1.7328648   0.95189349 
 1474000    11.106926    1.4895017    9.6174241  -0.31326214   0.99322165    1.2627401   0.81420925   -3.5502959            3    5.2745336    7.5401429    7.7656719   0.51778592  0.037115119  0.036399116    -0.136371    5.0959068    5.0901554  -0.13032202    4.5543862   0.12035876    1.0246005        0.075    2.1042834          0.5    0.1138445    4.3919558    2.8289908    30.801768 0.00043701314  -0.37055271 -0.012512272   0.28449058   -1.6980684   -1.9384201 
 1475000    11.092372    1.4900629    9.6023094  -0.29791847   0.99359587    1.2716207   0.80892216   -3.5502959            3    5.6252559    7.8905027    7.9727921     1.012473  0.028051826  -0.34689243    0.0571618    5.4477891    5.4395811     1.518807    1.4900113   0.24524551     1.023013        0.075    2.1035058          0.5   0.11366811    4.3987711    2.7980653    30.801768 0.0029829062  -0.41496347  0.025090767   0.31094843    1.6138884   0.72961514 
 1476000    11.059107    1.4406637    9.6184428  -0.30139937   0.96065577    1.2421404   0.77366717   -3.5502959            3    5.5101146    7.6793894    7.8675636   0.98339085 0.0077329179  -0.25170732  -0.13833172    5.3403823    5.3287443 -0.082086412   0.75547876   0.40258802    1.0120966        0.075    2.0831138          0.5   0.11245517     4.446216    2.8011286    30.801768 0.0047567478   -0.4482545 -0.0074265752    0.3720284    2.4978999   -2.0029361 
 1477000    11.105531     1.477318    9.6282134  -0.28118836    0.9850974    1.2758862   0.79192541   -3.5502959            3    5.4964181    7.7704176    7.8538395   0.86499702  0.002484853   0.12043664  -0.11163284    5.3226801    5.3101204            0            0   0.29840554    1.0160861        0.075    2.0980322          0.5   0.11289846    4.4287584     2.790316    30.801768 0.0041019615  -0.34251563   0.01674066   0.36309737  -0.62953193  -0.93929252 
 1478000    11.119139    1.4863007    9.6328386  -0.30682934   0.99108718    1.2751279   0.80240863   -3.5502959            3    5.4117404    7.6356338    7.8472558   0.75233158  0.029843156 -0.087115848 0.0039840767    5.2357025    5.2255534    1.6083755    4.2267247   0.52559557    1.0224063        0.075    2.1021781          0.5    0.1136007    4.4013812    2.8195755    30.801768  0.022692008  -0.35311276 -0.0032805686   0.36064242  -0.68214193    2.3263262 
 1479000    11.121653    1.4934712    9.6281821  -0.29047609    0.9958686    1.2879741   0.80182422   -3.5502959            3    5.6972457    7.8859912    8.0646506    1.1410953  0.020739368  -0.12967787 0.0032545945    5.5213361     5.509183    0.9019936   0.48009297  0.060935988    1.0301909        0.075    2.0863725          0.5   0.11446566    4.3681223    2.7966667    30.801768 -0.011357379  -0.38062899  0.023371974   0.37635363  -0.67054824    8.8582231 
 1480000    11.117976    1.5118598     9.606116  -0.29795648    1.0081304    1.3109499   0.80695978   -3.5502959            3    5.5292045    7.7951351    7.9143159   0.87816249 -0.016858726  -0.18754015  0.040428944    5.3521682     5.337787   0.22855645    1.1850711  -0.54882884    1.0313003        0.075    2.0888104          0.5   0.11458892    4.3634235    2.7970024    30.801768 -0.019378723  -0.31334126 -0.037518965   0.43005428    2.7527361   -0.6480026 
 1481000    11.088966    1.4740898    9.6148765  -0.29714666   0.98294475    1.2874992   0.78061008   -3.5502959            3    5.6496048    7.8650998    8.0327461    1.0509687 -0.0089105922  0.073812197 -0.024011063    5.4783493    5.4616115            0            0 -0.036726474    1.0246872        0.075    2.0851892          0.5   0.11385413    4.3915841    2.8001933    30.801768   0.03156843  -0.29318271  0.011199702   0.33615204   -1.9477268    3.8850052 
 1482000    11.097633    1.4974429    9.6001902  -0.29454775   0.99851696    1.2932515   0.80272382   -3.5502959            3    5.5495973     7.833384     7.929614   0.88579377 -0.0041714368   0.05270775  0.056679275    5.3734903     5.360764   0.65503313    1.5167649    0.2669821    1.0294175        0.075    2.0887525          0.5   0.11437972    4.3714042    2.8039791    30.801768 -0.0014714245  -0.34761899 -0.017403168   0.40978392    1.4999645    2.5004913 
 1483000    11.117965    1.5102541    9.6077104  -0.30317403    1.0070596    1.3018439   0.81123651   -3.5502959            3    5.5688877    7.8273085    7.9615628   0.91779165  0.029882324  -0.21427205 -0.046250822    5.3909131    5.3787998            0            0   0.14496251    1.0203303        0.075    2.0653721          0.5   0.11337003    4.4103366    2.7974834    30.801768 -0.033268513  -0.30574417 -0.011044782   0.33779875   0.32810113    4.3440258 
 1484000    11.072221    1.4813494    9.5908713   -0.2959864   0.98778555    1.2934981   0.78468193   -3.5502959            3    5.4315732    7.7423376    7.8143916    0.7379905 -0.018597914 -0.043460636   -0.0800675    5.2594244    5.2427039            0            0 -0.010308034    1.0211098        0.075    2.0641443          0.5   0.11345665    4.4069697    2.8221692    30.801768 -2.3943914e-05  -0.35293712  0.029349165   0.42637755  -0.26061978     1.489787 
 1485000    11.069461    1.4771939    9.5922672  -0.32304357   0.98501466    1.2624456   0.80073301   -3.5502959            3    5.5873972    7.7454204    7.9991119    1.0176593 -0.024144204   0.27134481 -0.011412476     5.411727     5.403062   0.20398179  -0.03125548  0.072581049    1.0195639        0.075    2.0498204          0.5   0.11328488    4.4136518    2.8294478    30.801768  0.015917499  -0.38113845  0.015165427   0.42234841   -1.4356104    1.2676165 
 1486000    11.110549    1.5088316    9.6017176  -0.28337868    1.0061111    1.2886423   0.81844287   -3.5502959            3    5.7267051    7.9387721    8.0564881    1.1848552 0.0048268732  -0.29751073  0.016209825    5.5471496    5.5385449   0.19774847    1.2462106  -0.12462055    1.0292352        0.075    2.0657172          0.5   0.11435947    4.3721783    2.7991989    30.801768  0.012314065  -0.35600995 -0.0039403994   0.39523451    3.8162649     6.944525 
 1487000    11.119519    1.4913606    9.6281581  -0.28086514   0.99446119    1.2842881   0.80193282   -3.5502959            3    5.5828739    7.8219213    7.9853731    0.9413272 -0.011474663 -0.058367197 -0.010918747    5.4069404    5.3953494            0            0  0.038942878     1.021284        0.075    2.1007698          0.5   0.11347599    4.4062183    2.8087327    30.801768 0.0093551638  -0.29316833 -0.023928969   0.32074451   0.26141294    2.9461728 
 1488000    11.118186    1.4868891    9.6312973  -0.28838815    0.9914795    1.2693166   0.80692993   -3.5502959            3    5.4456235      7.71959    7.8318872   0.78539333 -0.015866067 -0.091296697 -0.068075964    5.2685937    5.2602851 0.0064587793    1.0920515 -0.048972832    1.0421304        0.075     2.078187          0.5   0.11579227    4.3180775    2.8233241    30.801768 -0.011836101  -0.40064215  0.014783605   0.36941884    3.5304381    2.2821531 
 1489000    11.079198    1.4841336    9.5950647  -0.30498425   0.98964209    1.2756912    0.7996263   -3.5502959            3    5.6590841     7.856696    7.9868656    1.1336908 -0.042345289 -0.029054194   0.21787891    5.4836567    5.4728149  -0.75575461    1.2035926  0.031279616    1.0114887        0.075    2.0919999          0.5   0.11238763    4.4488881    2.8069313    30.801768  0.019743027   -0.3350172  0.043948587   0.32542394    1.5256555   -1.0286853 
 1490000    11.064932    1.4646136    9.6003182  -0.29042848    0.9766259    1.2713296   0.78084514   -3.5502959            3    5.6146869    7.9268425    7.9352619   0.98195636 -0.024699244  -0.22891606 -0.046560722    5.4433798    5.4290545            0            0 0.0088082725    1.0454667        0.075      2.09027          0.5   0.11616297    4.3042978    2.7968246    30.801768 -0.0085438698  -0.34312477 -0.0011107432   0.41420318    2.5208383    3.1564609 
 1491000    11.035313    1.4669988    9.5683145  -0.29031218   0.97821641     1.246157   0.80024866   -3.5502959            3    5.6195111    7.8486221    7.9374457    1.0724654 -0.0019258788 -0.043998844 -0.081660472    5.4439471    5.4375543   0.89051424    2.2705018  0.037793885    1.0232229        0.075    2.0860316          0.5   0.11369143    4.3978689    2.8023314    30.801768  -0.02385151  -0.39039337 0.0059138859   0.39838262   -1.6799517  0.055804281 
 1492000    11.086543    1.4703485    9.6161947  -0.30653288   0.98045005    1.2484024   0.80247529   -3.5502959            3    5.3411744    7.6221204    7.7770275   0.62437517  0.020933644 -0.043686833 0.0067940838    5.1651219    5.1588897   0.27459739   0.30946177 -0.081651935    1.0353304        0.075    2.0306329          0.5   0.11503671    4.3464386    2.8247779    30.801768 0.0032660442  -0.36748095 -0.022907871   0.44582953  -0.45435474   -4.0865572 
 1493000    11.114367    1.5051595    9.6092074  -0.28640331    1.0036625    1.2735532   0.82440625   -3.5502959            3    5.7471635    7.9147489    8.0910586     1.235683  -0.01881893  0.080326436 -0.046212492    5.5662997    5.5612065   0.10366954   0.66576629   0.14814123    1.0099765        0.075    2.0388674          0.5   0.11221961    4.4555491    2.8266788    30.801768 -0.019827307  -0.32219617 -0.018570877     0.409164   -2.2226159    5.9551454 
 1494000    11.116106    1.4994877     9.616618  -0.30478271   0.99988049    1.2726781   0.81868808   -3.5502959            3    5.8092349    7.9602725    8.1014485    1.3659836 -0.026213997  -0.10573026 -0.052031998    5.6296255    5.6234056            0            0   0.11492806    1.0268872        0.075    2.0193425          0.5   0.11409858    4.3821756    2.8151768    30.801768 -0.021666939  -0.34661004 -7.0970256e-05   0.40147117    3.7919096    8.6507406 
 1495000    11.064071    1.4562851    9.6077858  -0.28984877   0.97107234    1.2456329   0.78869598   -3.5502959            3    5.6664811    7.8563294    8.0059949    1.1371189  0.032675624  0.031652456 -0.033157393    5.4934516    5.4846008 -0.0096125886    1.3858826   0.17022138    1.0129506        0.075    2.0625198          0.5   0.11255006    4.4424676    2.7967036    30.801768 -0.025768795  -0.35021834 -0.0016523774   0.42083759  -0.02669186    6.6274331 
 1496000    11.111277    1.4833835    9.6278932  -0.29276541   0.98914195    1.2407504   0.82204815   -3.5502959            3    5.7050443    7.9582469    8.0455568    1.1113294  0.037837105  -0.14702277 -0.029108248    5.5246979     5.523877   0.47067047    0.1992163   0.20841875    1.0410804        0.075    2.0619646          0.5    0.1156756    4.3224329     2.817695    30.801768 -0.00034078009   -0.2941132  0.017304144   0.42122869    3.0137333    7.0801875 
 1497000    11.060332    1.4575965     9.602736  -0.29896329   0.97194678    1.2500485   0.78721388   -3.5502959            3    5.6189975    7.9441134    7.8938407    1.0190383 -0.016853252  -0.17450475 -0.019155468    5.4462932    5.4364725     0.263467    1.0113111  0.031485123    1.0199837        0.075    2.0446983          0.5   0.11333153    4.4118351    2.8037859    30.801768 -0.015587283  -0.34244023  0.007699508   0.35750075   -1.1026548    1.8516705 
 1498000    11.077015    1.4772326    9.5997819  -0.29860872   0.98504043    1.2704826   0.79542692   -3.5502959            3    5.6519624    7.7785661    8.0413041    1.1360169  0.046224298  0.034936393 -0.087393998    5.4774563    5.4664537            0            0 -0.023682827     1.040826        0.075    2.0709157          0.5   0.11564733    4.3234893    2.8158565    30.801768 0.0021913455  -0.35530599 0.0041229716   0.41849937    3.3105727    2.8503243 
 1499000    11.068616    1.4519257    9.6166906  -0.27072469   0.96816542     1.251975    0.7796322   -3.5502959            3    5.6887515    7.8733632    8.0320131    1.1608781 -0.015601805  -0.15129887   0.10023643    5.5177105    5.5059452   0.34696048      2.06087  0.083030202    1.0050423        0.075    2.0651163          0.5   0.11167136    4.4774236    2.8224258    30.801768  0.018949298  -0.36784773 -0.004181373   0.29678498    1.2347913    3.6756831 
 1500000    11.094111    1.5256184    9.5684926  -0.31376732    1.0173048    1.3020184    0.8281881   -3.5502959            3    5.4007746    7.7097806     7.739151   0.75339214 0.0056388799  -0.21851602 -0.0024023849    5.2190811    5.2106612 -0.060276206    1.9894023   0.29003857    1.0319615        0.075    2.0704385          0.5   0.11466239    4.3606278    2.8256268    30.801768 -0.027765244   -0.3749874 -0.014841188   0.42065754    1.9425472    3.5277517 
 1501000    11.121879     1.479523    9.6423564  -0.29749281   0.98656771    1.2791497   0.79220274   -3.5502959            3    5.5316241    7.6752388    7.9139362    1.0056972 0.0021250707 -0.010212856 -0.015612029    5.3578253    5.3448499            0            0   0.16726748    1.0157757        0.075    2.0682949          0.5   0.11286396    4.4301121     2.821103    30.801768  0.018561119  -0.39013976 -0.0049788894     0.365994   -1.7303293    2.7395125 
 1502000     11.09928    1.4865358    9.6127444  -0.29718373   0.99124395    1.2629227   0.81079304   -3.5502959            3    5.5811139    7.8155558    7.9636769   0.96410885  0.039683925    -0.121221 1.5413122e-05    5.4032366     5.396709   0.71700876    3.3992501 -0.077388891    1.0160043        0.075    2.0734203          0.5   0.11288937    4.4291152    2.7847734    30.801768  0.029982357  -0.48214893 0.0033825548   0.42816233  -0.66542364    4.4613029 
 1503000    11.099581     1.482768    9.6168129  -0.29511284   0.98873155    1.2673418   0.80366643   -3.5502959            3    5.3716209    7.6534591    7.7891651   0.67223848 -0.010347786 -0.010085867 -0.070740286    5.1953071    5.1865708            0            0   0.42019856    1.0333703        0.075    2.0918379          0.5   0.11481892    4.3546831    2.8419788    30.801768 0.0052426626  -0.36467179 0.0066601377   0.36927732    1.1486695   -2.8709664 
 1504000    11.142088    1.5024921    9.6395963  -0.29627205    1.0018839    1.3078064   0.79864565   -3.5502959            3    5.3675863    7.6239869    7.8029854   0.67578662 -0.0024300066   -0.1888652 0.0072448949     5.192374    5.1766278   0.68340856   0.53234451  0.071500008     1.017246        0.075    2.0234177          0.5   0.11302734    4.4237085    2.7782785    30.801768  -0.04756842  -0.36133401 -0.032939332   0.32356988  -0.37769971   -3.3217445 
 1505000    11.129942    1.5183835    9.6115582  -0.28500671    1.0124804    1.3160627   0.81080376   -3.5502959            3    5.5638945     7.854417    7.9296182   0.90764823 -0.024838274  0.087767666  -0.11210089    5.3860148    5.3717304            0            0   0.18006377    1.0376906        0.075    2.0220165          0.5   0.11529895    4.3365529    2.8181636    30.801768 -0.0069996849  -0.33949057 0.0022335203   0.37173341   -3.1902822   -1.2500696 
 1506000     11.15239    1.4946954    9.6576942  -0.27810434    0.9966849    1.2796744   0.80870806   -3.5502959            3    5.6635995    7.9350297     8.021909    1.0338598  0.012068886 -0.099871737 -0.054507248    5.4861797    5.4767487     1.028125   0.56123078  0.049069912    1.0097486        0.075    2.0597983          0.5   0.11219429    4.4565548    2.7911024    30.801768 -0.0064231602  -0.29390655 -0.027687218    0.3574738  -0.62089728    5.7343984 
 1507000    11.148669    1.5077117    9.6409576   -0.2681031    1.0053643    1.3037278   0.80715848   -3.5502959            3    5.8793884    8.0897606    8.1830587    1.3653458 -0.028276417  -0.20877167 -0.077783044    5.7023085    5.6890254            0            0   0.39983305    1.0269383        0.075    2.0533311          0.5   0.11410425    4.3819576    2.7865339    30.801768  0.008409237  -0.34288343   0.01695487   0.36299534    5.6065961    9.1980542 
 1508000    11.100286    1.4658663    9.6344194  -0.27772049   0.97746124    1.2625697   0.78806696   -3.5502959            3    5.5170876    7.8447633    7.8790329   0.82746662  0.035405263    -0.187223 -0.097252207    5.3441962    5.3327343  -0.92024309    1.1423009   0.20025314    1.0139476        0.075    2.0636446          0.5   0.11266085    4.4380991    2.7751926    30.801768  0.011794381  -0.31807996  0.033724257   0.36472269   0.47096823    4.3218112 
 1509000    11.124791    1.5009213    9.6238694  -0.29522979    1.0008364    1.2828275   0.81352564   -3.5502959            3     5.651541    7.8638827    8.0149305    1.0758099  0.010902142  -0.16449617    0.1174468    5.4730643    5.4642298            0            0   0.10968417    1.0375965        0.075    2.0489185          0.5    0.1152885    4.3369461    2.8124104    30.801768  0.023042373  -0.31814359  0.006500179   0.42032908    1.4622854    1.0617129 
 1510000    11.120612    1.4551148    9.6654974  -0.28076122   0.97029198     1.259796   0.77796957   -3.5502959            3    5.4749995    7.6883825    7.8654601    0.8711559 0.00032024051   0.18752098  0.016834768    5.3043233    5.2910512   0.38206155   0.61814704 -0.079677759    1.0070192        0.075    2.0706932          0.5   0.11189102    4.4686337    2.7865207    30.801768 -0.0013695193  -0.40306905  0.028764502   0.40299571   -1.9221197    4.8276106 
 1511000    11.120351    1.5023343    9.6180167  -0.29145992    1.0017786    1.2957049   0.80652455   -3.5502959            3    5.7353699     7.972717    7.9933854    1.2400072  0.024243947  -0.15518672 -0.035690829    5.5584291    5.5461783  -0.84563963   0.42778216  -0.12052321    1.0304182        0.075    2.0492749          0.5   0.11449091    4.3671591     2.836355    30.801768  0.011547334  -0.43535539 0.0065177914   0.40520201    1.8810737    1.1411366 
 1512000    11.068346    1.4606202    9.6077262  -0.30131874   0.97396301    1.2493559    0.7910337   -3.5502959            3    5.5755869    7.8400185    7.9501599   0.93658219  0.013225712   0.12004231 -0.043125881    5.4020446     5.393163            0            0  0.085841783    1.0418922        0.075    2.0545445          0.5    0.1157658     4.319065    2.8461569    30.801768 0.0037401249  -0.40192433 -0.011372261   0.50926687   -2.5534459    6.5023787 
 1513000    11.089928    1.4818741    9.6080536  -0.30476306   0.98813542    1.2643456   0.80466745   -3.5502959            3    5.6103602    7.8493987    8.0471559     0.934526  0.014821856  -0.20686527 -0.050223041    5.4338268    5.4257476   0.32750742   0.33524898  0.059070697    1.0172732        0.075    2.0835566          0.5   0.11303036    4.4235904    2.7916195    30.801768 -0.0082152386  -0.28285792 -0.012983233    0.3235461    0.3201116    1.3092059 
 1514000    11.083952    1.4606754    9.6232766  -0.29050955   0.97399986    1.2489855   0.79134161   -3.5502959            3    5.5283378    7.8055936    7.8813337   0.89808611  0.037762014  0.081239998  0.015155236    5.3547279     5.345968   0.77860798   0.65370978   0.20333207    1.0312678        0.075    2.0853576          0.5   0.11458531    4.3635611    2.7998734    30.801768  0.013844628  -0.35603746 -0.0075827214   0.46104095     2.754052   0.58901805 
 1515000    11.096891    1.4945322    9.6023592  -0.29475413   0.99657605    1.2656795   0.81784108   -3.5502959            3    5.7392871    7.9696235    8.0463944    1.2018434 -0.016727508  -0.30299553 -0.062151594    5.5598636    5.5544797            0            0  0.094549018    1.0283893        0.075    2.0926769          0.5   0.11426548    4.3757749    2.8029922    30.801768 -0.035744704  -0.34155314 -0.022740014   0.28666578    -1.318936    2.2525742 
 1516000    11.088126    1.4952097    9.5929159  -0.29890987   0.99702782    1.2715154   0.81470957   -3.5502959            3    5.5308198    7.8561724    7.8712711   0.86501601 0.0021254811  -0.20671684 -0.018886693    5.3520834    5.3451603            0            0   0.13172079    1.0358154        0.075    2.0721637          0.5    0.1150906    4.3444034    2.7930618    30.801768 0.0055618254  -0.30945334 -0.037680291   0.40079242   -1.4244767    6.7402859 
 1517000    11.059085    1.4590121    9.6000732  -0.29429475   0.97289075    1.2359171   0.79819172   -3.5502959            3    5.8624603    8.0130339     8.186642    1.3877052  0.019348622  0.045999494  0.028663914    5.6873476    5.6819987   0.25937135   0.25771284  0.080532517    1.0135251        0.075    2.0980856          0.5    0.1126139    4.4399494    2.7774829    30.801768 -0.015857309  -0.41801262 -0.038513187   0.37193944    3.3289604    9.3292101 
 1518000    11.117978    1.4798379    9.6381401  -0.29022457   0.98677772    1.2628466   0.80340328   -3.5502959            3    5.6564139    7.8915984    7.9915081    1.0861352 -0.026351428  -0.18716197 -0.034919698    5.4801578    5.4720202   0.98145316     1.707401 -0.041379291    1.0497157        0.075    2.1143136          0.5   0.11663508    4.2868749     2.825094    30.801768  0.018673393  -0.38263601 -0.0094736274   0.25972314   -1.9895168    4.5112946 
 1519000    11.123763    1.4647526    9.6590101  -0.28345854   0.97671861     1.248936   0.79590385   -3.5502959            3    5.5896148    7.8077383    7.9530662    1.0080399  0.021777831  -0.14750863  0.020497074    5.4150041    5.4072523            0            0 -0.049015252    1.0225967        0.075    2.0819248          0.5   0.11362185    4.4005619    2.8112168    30.801768 0.0077623766  -0.34519072   0.02754979   0.32698261   0.54987223     4.998364 
 1520000    11.068157    1.4853193     9.582838  -0.30064776    0.9904328    1.2713711   0.80381882   -3.5502959            3    5.6252403    7.8726959    7.9858786    1.0171464 -0.0021847709  -0.15935735  0.019338388    5.4488931    5.4396019  -0.22888432   0.87238646   0.38130112    1.0432359        0.075    2.0947672          0.5    0.1159151    4.3135017    2.8257307    30.801768 0.0066534096  -0.38754182 -0.0061664669   0.29883945  -0.34642753    5.8103226 
 1521000    11.095954    1.4953872    9.6005668  -0.30036483   0.99714617    1.2607262   0.82208757   -3.5502959            3    5.4069794    7.6543235    7.8456572   0.72095746 -0.015184272  -0.26724272 -0.0041159715    5.2266243    5.2228953            0            0    0.1269204    1.0220625        0.075    2.1176558          0.5    0.1135625    4.4028619    2.7884893    30.801768 -0.0043030389  -0.32312986  0.012769525   0.37951078  -0.98912657  -0.61807414 
 1522000    11.162319    1.4960337     9.666285  -0.28107948   0.99757726    1.2570854    0.8252289   -3.5502959            3    5.4099349    7.7811797    7.7740891   0.67453585  0.011342459 -0.00027024361   -0.1121059    5.2288906    5.2263824     1.349558      1.84507     0.733211    1.0178228        0.075    2.0730115          0.5   0.11309142     4.421202    2.8219249    30.801768   0.02803178  -0.36148826 -0.002305013   0.32323894   -3.9545399    7.7570058 
 1523000    11.107245    1.4795452       9.6277  -0.29114253   0.98658249    1.2501189   0.81154901   -3.5502959            3    5.7790984    7.9638901    8.0880814    1.2853237 -0.010336498   0.08376557 -0.0024967573    5.6010553    5.5965631    1.2152039   0.92660533  0.066807639    1.0346183        0.075    2.0757949          0.5   0.11495759    4.3494302    2.8192837    30.801768  0.017974105  -0.47126232 0.0066599446   0.36555113  -0.72819887     6.748244 
 1524000    11.116387    1.4976344    9.6187524  -0.28629277   0.99864463    1.2703597   0.81817229   -3.5502959            3    5.6137364     7.862608    7.9199942     1.058607  0.014263672 -0.035855751 -0.039111357    5.4342402    5.4282457   0.77772745   0.90377196   0.25249287    1.0178313        0.075    2.0947114          0.5   0.11309237    4.4211647    2.8126146    30.801768 -0.00094227846  -0.40152103  0.043647013   0.35389924     2.219893    3.6149767 
 1525000    11.093295    1.5078966    9.5853984  -0.30131494    1.0054876    1.3114899   0.80219769   -3.5502959            3    5.3706826    7.6788004    7.8131693   0.62007797  0.025840995 -0.086185732 0.0044642786     5.194691    5.1791862            0            0   0.17669244    1.0185873        0.075    2.0676663          0.5   0.11317637    4.4178834    2.7912721    30.801768  0.010847137  -0.30742951 -0.003649715   0.34708334    0.3222179   0.60235083 
 1526000    11.122064    1.5071156    9.6149481  -0.29053743    1.0049669    1.2785691   0.82324087   -3.5502959            3    5.4950119    7.7864956    7.8218972   0.87664271 -0.0043808372  -0.17156453  -0.10167909    5.3144037    5.3083224  -0.54206728   0.89090265   0.57793305    1.0092083        0.075    2.0469838          0.5   0.11213426    4.4589406    2.7954121    30.801768 0.0073673676  -0.36725293 -0.0016459161   0.26469876    2.1923994  -0.85370342 
 1527000    11.067956    1.4763839    9.5915717  -0.29455202   0.98447449    1.2964758   0.77718414   -3.5502959            3    5.4981033    7.7682007    7.8877466   0.83836269  0.014258299  -0.16179885  0.075713703    5.3275994    5.3087993   0.09197702     1.006971  -0.11562471    1.0380154        0.075    2.0493005          0.5   0.11533505    4.3351957      2.78029    30.801768 0.0031827798  -0.31770343 0.0048994651   0.34790831   0.37377756    1.0680442 
 1528000    11.077882    1.4637275    9.6141544  -0.28730281   0.97603502    1.2373636    0.8024671   -3.5502959            3    5.7279354    7.9665934    8.0110904    1.2061224 -0.0081815085 -0.030917093 0.00066031092    5.5518847    5.5472626   0.42199738   0.77835304    0.1585728    1.0281741        0.075    2.1055571          0.5   0.11424157    4.3766907    2.7985828    30.801768 -0.0011262316  -0.32824344  0.025538009   0.38439539   0.44948151    6.1602033 
 1529000    11.035809    1.4520135    9.5837953  -0.29058417     0.968224    1.2278709   0.79577244   -3.5502959            3    5.6455179     7.890582    7.9998304    1.0461412 -0.026911548  -0.18841012  0.015217054    5.4709359    5.4662311    1.1335106    2.0614874   0.13460325    1.0408585        0.075    2.0708353          0.5   0.11565094    4.3233544    2.8110586    30.801768 0.0069681977  -0.49063003 0.0056722808   0.39783172    1.3133389   0.12507647 
 1530000    11.065929    1.4782338    9.5876951  -0.31949018   0.98570805    1.2449757   0.81351536   -3.5502959            3    5.3827229    7.6452922    7.8244032   0.67847319  0.037314807 -0.017768759 0.0059908596    5.2042484    5.2009385  -0.16846569   0.82187799   0.17580929    1.0329506        0.075    2.0776434          0.5   0.11477229    4.3564523    2.7837706    30.801768 -0.026514971  -0.40250158  0.036640818   0.39317384   -1.9182835    1.3857982 
 1531000     11.07477    1.4638293    9.6109408  -0.29376404   0.97610289    1.2358674   0.80357601   -3.5502959            3    5.5335171    7.7999585    7.8960739    0.9045189 -0.012894611  -0.43005266 -0.056220911    5.3572232    5.3530627   -1.0373395     2.222341  0.033190932    1.0287286        0.075    2.1160513          0.5   0.11430318    4.3743316    2.8209728    30.801768 0.0017508327  -0.36137799  0.003137722   0.33112767   0.17658872   0.83467175 
 1532000     11.09588     1.502914    9.5929664  -0.30649351    1.0021652    1.2995718   0.80459493   -3.5502959            3    5.5172976    7.7803207    7.9005476    0.8710246 -0.031093996  -0.10431899  0.025819846    5.3407802    5.3275415            0            0   0.16122705    1.0374127        0.075    2.1117931          0.5   0.11526807    4.3377145    2.8092973    30.801768 -0.052952298  -0.38713611 -0.0082239865   0.37607654  -0.92488552    4.6953883 
 1533000    11.080985    1.4766103    9.6043751  -0.30042254   0.98462549    1.2463371   0.81080581   -3.5502959            3    5.5663427    7.7257781    7.9574327    1.0158174 0.0044504035  -0.17523508  0.042694162    5.3884627    5.3843596  -0.81869273   0.22856298   0.81615319    1.0097168        0.075    2.1075525          0.5   0.11219075    4.4566952     2.797532    30.801768 -0.012542535  -0.39024003 0.0045942319   0.32231541  -0.71668607    4.8303087 
 1534000    11.077676    1.4733572    9.6043193   -0.3110185   0.98245627    1.2724966   0.78978144   -3.5502959            3    5.6137307    7.7974465     8.026613    1.0171324 -0.011150118  -0.17603021  0.078511468    5.4404631    5.4279279   0.33078296    1.7247801 -0.067549472    1.0379353        0.075    2.0923942          0.5   0.11532614    4.3355304    2.8008441    30.801768  -0.01800127  -0.38612576 -0.0065977268   0.39526995   0.85092425    3.8071972 
 1535000    11.082745    1.4786372    9.6041081  -0.29565639   0.98597706     1.279074   0.79126918   -3.5502959            3    5.5293796    7.7258047    7.9429528   0.91938124 -0.0061102995 -0.0096328336 -0.046419344    5.3557856    5.3426164  0.030730637    2.1420573 -0.00070914379    1.0169312        0.075    2.0629256          0.5   0.11299236    4.4250779    2.7900169    30.801768 0.00056374981  -0.33690567  0.011746472   0.37529521  0.085895555    4.6702447 
 1536000    11.089014    1.4997204    9.5892934  -0.31191261    1.0000357    1.2769004   0.81613645   -3.5502959            3    5.5289439     7.768586    7.9181306   0.90011506 -0.020411706 -0.065317643  0.018169025    5.3498944    5.3424981   0.70529256   0.62616484 -0.071890221    1.0309404        0.075    2.0886915          0.5   0.11454893    4.3649469    2.8157098    30.801768 -0.0069810766   -0.2833942 -0.020524496   0.41499442   -1.0096639  -0.56383027 
 1537000     11.09623    1.4998649    9.5963655  -0.29184794     1.000132    1.2826598   0.81246364   -3.5502959            3     5.549194    7.8710676    7.9151789   0.86133555 0.0031478463 -0.061376351 -0.043054167    5.3709503    5.3619073  -0.55934579    2.4648681   0.10033861    1.0360319        0.075    2.1013106          0.5   0.11511465    4.3434957    2.8072623    30.801768 -0.012904629  -0.32240269 -0.0053585698   0.42311647   -1.2780204    2.4314314 
 1538000    11.037395    1.4655465    9.5718483  -0.30917853   0.97724796    1.2631692   0.78731267   -3.5502959            3    5.6251689     7.862678    8.0328458   0.97998288  0.018907659   -0.1811455  0.078420391    5.4524429    5.4407281   0.58593474   0.58422891   0.12631611    1.0357285        0.075    2.1169645          0.5   0.11508095    4.3447679    2.7928054    30.801768 -0.0035144126   -0.3166117 -0.0076089354   0.35974583   -1.4125592   0.96056943 
 1539000    11.086693    1.5009921     9.585701   -0.3146551    1.0008836    1.2888138    0.8096201   -3.5502959            3    5.6550239    7.9010267    7.9995619    1.0644831 -0.0066346419 -0.059288757  0.080641575     5.477404    5.4668386   -1.4275952     3.963516   0.20227126    1.0309942        0.075    2.1053278          0.5   0.11455491    4.3647192    2.8009101    30.801768 -0.013562774  -0.33493545 -0.011753953    0.3821002   -1.7311206    1.3149715 
 1540000    11.057535    1.4714561    9.5860785  -0.30213866    0.9811886    1.2569753   0.79799988   -3.5502959            3    5.4260078    7.7114115    7.8019608   0.76465124 0.0063917974  -0.17625666  0.063121603    5.2509372    5.2424714            0            0   0.26969667    1.0235729        0.075    2.0909287          0.5   0.11373032     4.396365    2.8249806    30.801768  0.013465862  -0.33734951 -0.0039548525   0.31507791   -1.5557491    1.5201049 
 1541000    11.055586    1.4903742    9.5652116  -0.30223713   0.99380346    1.3060458   0.78635613   -3.5502959            3    5.5697416    7.8749007    7.9334288   0.90089534  -0.04168529  -0.05034516 -0.055759833    5.3972255    5.3790402   0.20681214   0.56246909    0.2602312    1.0269106        0.075    2.1108523          0.5   0.11410118    4.3820756    2.7962964    30.801768  0.015984137  -0.29715474 -0.016509824   0.39800003    1.3423617    1.9349286 
 1542000    11.089723    1.5011674    9.5885552  -0.29049534    1.0010005    1.2591268   0.82957311   -3.5502959            3    5.7722619    7.9695092    8.1059152    1.2413614  0.031419752  -0.20981844  -0.03459392    5.5902646    5.5884113  -0.34539912   0.53101347   0.28116218      1.01313        0.075    2.0522989          0.5      0.11257    4.4416808    2.7965554    30.801768 -0.049299354  -0.50406025 -0.0036012633   0.36577993   0.75733721   -1.4837641 
 1543000    11.091767    1.4836636    9.6081038  -0.27807592   0.98932873     1.283681    0.7937866   -3.5502959            3    5.4907243    7.7380596    7.8962629   0.83785057    0.0489657  0.046756171  0.039228642    5.3165781    5.3032885  -0.64354524   0.49259994  0.020925499    1.0174068        0.075    2.0794268          0.5    0.1130452    4.4230097     2.836758    30.801768  0.025877674  -0.36064153  0.010832757   0.35791421    1.1810278    2.1961873 
 1544000    11.098116    1.4858189    9.6122973  -0.28969674   0.99076589    1.2761146   0.80121663   -3.5502959            3    5.4859898    7.7018882    7.8855802   0.87050077  0.013610821 -0.084720582  0.036551963    5.3102134    5.2996587  -0.11979706  0.094134642   0.43918536    1.0372017        0.075    2.0749824          0.5   0.11524463     4.338597    2.8179846    30.801768 -0.0034013939  -0.35115444 -0.021083908   0.38353546   -1.2863067   -6.1018969 
 1545000      11.0338     1.497983    9.5358166  -0.30842113   0.99887713    1.3005043   0.79849666   -3.5502959            3    5.7299945    7.9278231    8.0553222    1.2068383  0.046441949   -0.2558808 -0.053147174     5.554815    5.5401023   0.59496683     1.228601   0.19187627    1.0236269        0.075    2.0942132          0.5   0.11373632     4.396133    2.7993544    30.801768 -0.019981043  -0.39977525 -0.011516675    0.3015373    3.6957467    4.0292104 
 1546000    11.073272    1.4588293    9.6144429  -0.29594802   0.97276882    1.2676163   0.77689097   -3.5502959            3    5.4917659    7.7916063    7.8224064     0.861285  0.019941846  -0.25982778  0.048309031    5.3213263    5.3066757  -0.67759374   0.44372483 0.0062125801    1.0231347        0.075    2.0889793          0.5   0.11368163     4.398248    2.8161406    30.801768 -0.025232858  -0.46345621 0.00042370688   0.29864578     1.498256    1.1541498 
 1547000    11.053759    1.4556521    9.5981074  -0.30035373   0.97065025     1.261742   0.77727126   -3.5502959            3    5.5563573    7.8150339    7.9109653   0.94307272 -0.040889196   0.26248301 -0.010147964    5.3858343    5.3721249   0.37338894    1.2466608  0.084732031     1.023937        0.075    2.0890947          0.5   0.11377077    4.3948018    2.8169483    30.801768 -0.021046907  -0.39512102 0.0052647743   0.37758983   -2.0455943    6.4966334 
 1548000    11.134908    1.5133761    9.6215322  -0.28885591    1.0091414    1.3066663   0.81149507   -3.5502959            3    5.5174097    7.7704363    7.9242448   0.85754814 -0.024026011  -0.21388021  -0.10880511    5.3393785    5.3266177            0            0   0.42615166      1.02976        0.075    2.0952631          0.5   0.11441777    4.3699504     2.798343    30.801768 0.0044672397   -0.4036234 -0.018055368   0.32937699    1.9345307    5.5573261 
 1549000    11.135936    1.5238175    9.6121185  -0.30106795    1.0161039    1.3075352   0.82251582   -3.5502959            3    5.6722729    7.8021571     8.055029    1.1596327 -0.014330202  -0.34734959  0.024789829    5.4918239     5.481354  -0.97398774    0.8734596  0.076767937    1.0185476        0.075    2.1303776          0.5   0.11317196    4.4180556    2.7942477    30.801768 0.0044470241  -0.30343745  0.026203018   0.35359782     3.217714    1.9695264 
 1550000    11.152814    1.5319088    9.6209051  -0.29549008    1.0214993    1.3173211   0.82499107   -3.5502959            3    5.5508349    7.8573711    7.9466896   0.84844417  0.046002095  -0.12477482 0.0024314688    5.3698428    5.3584872            0            0   0.14728095    1.0405432        0.075    2.0730981          0.5   0.11561591    4.3246644    2.8243995    30.801768  0.012640901  -0.34248733 -0.033898973    0.4228246    1.6715464    2.9555583 
 1551000    11.113579    1.4898695    9.6237095   -0.3043331   0.99346691    1.2917682   0.79529802   -3.5502959            3    5.4280943    7.7102056    7.8455663   0.72851105  0.046693966   0.16284038 -0.029173063    5.2536165    5.2394776            0            0   0.12402922    1.0165642        0.075    2.0894636          0.5   0.11295157    4.4266759    2.8144333    30.801768  0.017375474  -0.29309333 -0.0096492352   0.36497341   -1.9600086   -1.1807668 
 1552000    11.160993    1.4913885    9.6696045  -0.28065982    0.9944798    1.2902066   0.79802472   -3.5502959            3    5.4652309    7.8007104    7.8064391   0.78854333 -0.0013121772  -0.38548131 0.00013143841    5.2901549    5.2768423   0.11514156    1.2526385 -0.015274177    1.0255014        0.075    2.0843561          0.5   0.11394459    4.3880976    2.8081919    30.801768  0.017622185  -0.36484262 -0.048283129   0.32140654    0.4967248     4.056646 
 1553000    11.148312    1.4949578    9.6533545  -0.28266194   0.99685989    1.2433252   0.83319204   -3.5502959            3    5.5616422    7.7977731    7.9185137   0.96863974  0.044545752   0.27280653  0.011124815    5.3788509    5.3800989            0            0 -0.042365498    1.0196957        0.075     2.103708          0.5   0.11329952    4.4130813    2.8039977    30.801768 0.0034848434  -0.41742947 -0.015596119   0.40666347   0.12764373    4.4053014 
 1554000    11.126044    1.4754846    9.6505599  -0.28455903   0.98387485    1.2802651   0.78697432   -3.5502959            3     5.778677     7.901349    8.0845984    1.3500836  0.010910462  -0.18681033 -0.044251202    5.6060252    5.5917399  -0.18117135    1.0240062   0.10133825    1.0325778        0.075    2.0945704          0.5   0.11473086    4.3580253    2.7879177    30.801768 -0.0033080418  -0.37640275 -0.015286812   0.50702471     4.219349     4.387197 
 1555000    11.064385    1.4850045    9.5793807  -0.29010485   0.99022285    1.2922083   0.78960076   -3.5502959            3    5.4909268    7.7564655    7.9102606   0.80605428 0.0060656667   0.17704953 -0.025671118    5.3176988    5.3022458 -0.067340616   0.51575571  0.067049355     1.021892        0.075    2.1050473          0.5   0.11354355    4.4035967    2.7923916    30.801768  0.003311012  -0.39436745  0.012662113   0.39758103   -3.1231243    3.7304586 
 1556000    11.085358    1.4837931    9.6015646  -0.30407933   0.98941508    1.2828203   0.79450328   -3.5502959            3    5.4971683    7.7449272    7.9131573    0.8334205 -0.0083839962 -0.094028714  0.079621379    5.3228648    5.3098582            0            0   0.25261254    1.0199557        0.075     2.099628          0.5   0.11332841    4.4119562    2.8117165    30.801768 0.00088000279  -0.34263583 -0.0089655275   0.34258925    2.2588788    2.4845708 
 1557000    11.093845    1.4792532    9.6145922  -0.29202061   0.98638781    1.2517028   0.81017053   -3.5502959            3    5.6707287    7.9272081    7.9789032    1.1060748 -0.0079582835  -0.13300533 -0.078842898     5.492988    5.4879621    2.1095349    2.5122284 -0.085045687    1.0380651        0.075    2.0929278          0.5   0.11534057    4.3349882    2.8208986    30.801768 0.0093671253  -0.41473543 -0.0094966562    0.4234487    2.2244317  -0.34381795 
 1558000    11.109741    1.4887286    9.6210129  -0.31258685   0.99270611    1.2681241   0.80976703   -3.5502959            3    5.6179436    7.7963027    7.9383732    1.1191549   0.05019659  -0.11071216   0.10249432    5.4402914    5.4327793  -0.21695264   0.66522772  0.071780729    1.0104137        0.075    2.0759727          0.5   0.11226819    4.4536211    2.7928457    30.801768 0.0011598324  -0.35336518   -0.0121519   0.39524854    2.1031149    4.4147701 
 1559000    11.096336    1.4877889    9.6085468  -0.28539654   0.99207954    1.2792799   0.80129842   -3.5502959            3     5.696964    7.9573274    7.9875621    1.1460023  0.013809052 -0.020985494 -0.093127291    5.5211697    5.5101707   0.49559104    1.5359492  -0.14993248    1.0419278        0.075    2.0536784          0.5   0.11576975    4.3189173     2.810321    30.801768 -0.0098672258  -0.33522747   0.01895885   0.39585456    1.1352764    3.0490074 
 1560000    11.082157    1.4667016    9.6154555  -0.28971501   0.97801824    1.2765747   0.77967379   -3.5502959            3     5.518878    7.7555386    7.9246587   0.87643681   0.01272122 -0.037737685 -0.0045234279    5.3478279    5.3324798   0.49702445    0.6565904 0.0052268669    1.0132194        0.075    2.0895323          0.5   0.11257993     4.441289    2.7961671    30.801768  0.013606814  -0.39822651 -0.016635973   0.32493734  -0.70793392    1.8099946 
 1561000    11.153002    1.4976696    9.6553323  -0.27786745   0.99866814    1.3061746   0.79437458   -3.5502959            3    5.3761075    7.6756615    7.7762048   0.67645623 -0.013868539   -0.0872775 -0.034264408    5.2018323    5.1853873 -0.027666154  0.073307998   0.10798523    1.0362099        0.075    2.0898508          0.5   0.11513444    4.3427493    2.8285375    30.801768 -0.0035205545  -0.33797128 0.0056532471   0.41931371  -0.93095338    1.1353224 
 1562000    11.094587    1.4833266      9.61126  -0.27706794   0.98910399    1.2621403   0.80774873   -3.5502959            3    5.7910364    8.0260477    8.1188436     1.228218 -0.0098280371   0.20453695  0.059286527     5.613827    5.6067458            0            0   0.25698426    1.0342714        0.075    2.0734433          0.5   0.11491905    4.3508888    2.8126494    30.801768 -0.0064214487  -0.41374697  0.023201187   0.31941491   0.42905998   0.61512472 
 1563000    11.143701    1.4915528    9.6521484  -0.28649639   0.99458935    1.2543413   0.82207766   -3.5502959            3    5.4766063    7.7823832    7.8491354   0.79830038  0.027142104 -0.054932348 -0.023170801    5.2962534    5.2934545   0.22271006   0.25171872   0.03456365     1.025044        0.075    2.0949241          0.5   0.11389378    4.3900555    2.8152645    30.801768  0.020448838  -0.33758329 -0.042712332   0.38959419   0.77891961    4.9167098 
 1564000     11.12249    1.5202978    9.6021922  -0.30240997    1.0137569    1.3135127   0.81462748   -3.5502959            3     5.774821    7.9334303     8.106198    1.2848348 -0.017223523  -0.25052477 -0.078651762    5.5961025    5.5830293            0            0  0.082039025    1.0223211        0.075    2.0907879          0.5   0.11359123    4.4017481    2.7952243    30.801768  0.018656199  -0.32944279  -0.02034959   0.40801231   -1.6433411    7.3639562 
 1565000     11.06883    1.4648132    9.6040167   -0.2946051   0.97675902    1.2515264   0.79424708   -3.5502959            3    5.4615112    7.6801482    7.9190473   0.78533824  0.023699513 -0.090759877 -0.097035374    5.2872639    5.2787704   0.88361065    1.9805174   0.11257906     1.025204        0.075    2.0941357          0.5   0.11391156    4.3893702    2.7958879    30.801768  0.033769579  -0.37721222 0.0083850149   0.45628788   0.95231213    3.2912336 
 1566000    11.086623    1.4563399    9.6302835  -0.29497566   0.97110887    1.2404056   0.79223587   -3.5502959            3    5.6821961    7.8655401    8.0027726    1.1782755 -0.011483849  -0.27016777  0.037146153      5.50839    5.5010791   -1.6962077    3.1828035  0.051116129    1.0218856        0.075    2.0749031          0.5   0.11354285    4.4036239    2.7886946    30.801768  -0.03583084  -0.40056729  0.007088699    0.3638529   0.20651035    5.6857441 
 1567000    11.064329     1.462809    9.6015198  -0.29591648    0.9754226    1.2463311   0.79547848   -3.5502959            3    5.4517165    7.7334748    7.8724653   0.74920952  0.013187999  0.088890837  0.042567027    5.2771991    5.2697343            0            0   0.13033066    1.0396865        0.075    2.0720457          0.5   0.11552072    4.3282279    2.8165208    30.801768 -0.012149996  -0.39846992 -0.0098202156   0.37172419   0.15740479    1.4950725 
 1568000     11.07667    1.5034511    9.5732186   -0.3058853    1.0025233    1.2807744   0.81770232   -3.5502959            3    5.7244578    7.8938903    8.0386273    1.2408558  0.054322129 -0.050766086  0.012745573    5.5450647    5.5374464  -0.45527794   0.32990836  -0.12421203    1.0273548        0.075    2.0740236          0.5   0.11415054    4.3801809    2.7785615    30.801768 -0.042112986  -0.36224175  0.015065259   0.35091326  -0.52276402    2.1429708 
 1569000    11.073017    1.4773784     9.595639   -0.3032864   0.98513764    1.2623932   0.80097278   -3.5502959            3    5.7714572    7.9561069    8.1082472    1.2500175 0.0026959416  -0.26546605 -0.018690708    5.5957344    5.5871297  -0.66553261     1.203519  0.057810045    1.0419381        0.075    2.0234195          0.5    0.1157709    4.3188747    2.8296125    30.801768 -0.0013067886  -0.36960662 -0.020500623   0.38464579    3.9026279     4.283494 
 1570000    11.109232    1.4898725    9.6193592  -0.29796938   0.99346894    1.2640116   0.81377497   -3.5502959            3    5.6536845    7.9293071    7.9902245     1.041522  0.025928335  0.085999039 -0.00035278106    5.4751531    5.4691207  -0.16772594    1.1977317 0.0052450164    1.0187304        0.075     2.042416          0.5   0.11319226    4.4172631    2.8303976    30.801768 -0.030768402  -0.40689068  0.012915554   0.26772375   -4.1639016    7.2451328 
 1571000    11.079063     1.494176    9.5848869  -0.30294938   0.99633858    1.3014445   0.79364186   -3.5502959            3    5.5525063    7.7879823    7.9400374   0.92949915 -0.0071648671  0.003089467   0.06165913    5.3783918    5.3624767            0            0   0.43568609    1.0376399        0.075    2.0769693          0.5   0.11529333    4.3367645    2.8162832    30.801768  0.000949429  -0.31076367 0.0044550904   0.38251072   0.17100142     4.436703 
 1572000    11.140668    1.5052912    9.6353769  -0.29515159    1.0037503    1.2913658   0.81269723   -3.5502959            3    5.5247993    7.7666368    7.9198643   0.88789684 -0.011990179 -0.069131571 -0.0015519281    5.3465043    5.3362414    -1.158435    1.0868238  0.050879049    1.0093906        0.075    2.0579761          0.5   0.11215451    4.4581356    2.8120561    30.801768  0.017365432  -0.34403398 -0.0062243331   0.30379679  -0.32507148    1.4673156 
 1573000    11.106396    1.4986277    9.6077678  -0.31077538     0.999307     1.297824   0.80099666   -3.5502959            3    5.5896556    7.7555682    7.9435322    1.0698666 -0.0036254186  -0.30578899 0.0021609724    5.4139276    5.4001547            0            0  0.062412945    1.0318259        0.075    2.0977027          0.5   0.11464732    4.3612011    2.8117765    30.801768 0.0013923573  -0.36227445 -0.011970649   0.44078085    2.3751378    9.8976811 
 1574000    11.095634    1.4670543    9.6285799   -0.3042396    0.9782534    1.2395152   0.80473074   -3.5502959            3    5.4048625    7.6977906    7.7674637   0.74933321 0.0090093488  0.026103327   0.10984724    5.2283152    5.2238755  -0.72959075   0.98710893 -0.030198993     1.016133        0.075    2.0949451          0.5   0.11290366    4.4285542    2.8159227    30.801768  -0.01576379   -0.3016768  -0.02168846    0.3496503   0.82658669  -0.52817437 
 1575000    11.103807    1.4972319    9.6065746  -0.29428877   0.99837626    1.3025926   0.79627239   -3.5502959            3    5.2771227    7.6304427    7.6831942   0.51773115 0.0026091189  -0.22782945 -0.034442331    5.1024311    5.0869255            0            0  0.062982282    1.0234206        0.075    2.1071799          0.5    0.1137134     4.397019    2.7965682    30.801768 -0.011763921  -0.40982938 -0.013365427   0.43617763   -2.5146561  -0.33564562 
 1576000    11.138155    1.5191118    9.6190429  -0.28338283    1.0129661    1.2846898   0.83249333   -3.5502959            3    5.5795789    7.9018469    7.9307391   0.90615078 -0.030073453   -0.1059914  0.093142239    5.3969409    5.3919958            0            0   0.22728988     1.026133        0.075    2.0580536          0.5   0.11401478    4.3853965    2.8128965    30.801768 0.0019137989   -0.3584187 -0.015611644   0.34003069    2.3082731   -1.0981406 
 1577000    11.087488    1.4717854    9.6157029  -0.27893179   0.98140818    1.2829833   0.78105593   -3.5502959            3    5.6581874    7.8908055    8.0210779    1.0626786 -0.034120232  -0.12354991 0.0015093704     5.486834    5.4708534   -1.1673003    1.2593698 0.00086744945    1.0363271        0.075    2.0610155          0.5   0.11514745    4.3422584    2.8114324    30.801768 0.0053502018  -0.39590527 -0.026446826    0.3728146    0.4776403    4.0146592 
 1578000    11.107253    1.5273326    9.5799208  -0.30053781    1.0184479    1.3019538   0.83013537   -3.5502959            3      5.65359    7.8537745    7.9992378    1.1077578 -0.0008950891   0.23217111 -0.085096802    5.4714693    5.4634861   -0.8373785   0.57318476  0.085644456    1.0296058        0.075    2.0844644          0.5   0.11440065    4.3706047    2.8358523    30.801768 -0.049406886  -0.31846576 -0.0092265102   0.33253223   -2.5344785    3.3749077 
 1579000    11.078627    1.4677099    9.6109169  -0.31420829   0.97869058    1.2744328   0.78221942   -3.5502959            3    5.4596507    7.7547125    7.8601091   0.76413031 0.0039575197 0.0085247145 0.00028101023    5.2880421    5.2735652            0            0   0.23102251    1.0359306        0.075    2.0791767          0.5    0.1151034    4.3439203    2.8024494    30.801768 0.0062272694  -0.30268234 -0.014572872   0.43005784    1.7796477    3.1563744 
 1580000    11.048775    1.4923332    9.5564414  -0.30380708   0.99510975    1.2837086     0.803399   -3.5502959            3    5.6773173    7.8655931    8.0220811    1.1442779 -0.020801319   -0.2294744  -0.12718018    5.5010622    5.4898775    1.0095234    0.3254054   0.87393119    1.0069558        0.075    2.0976289          0.5   0.11188398    4.4689149    2.7947015    30.801768 -0.030823327  -0.40808015 -0.0043907168   0.40594499    1.4560012    1.9012057 
 1581000    11.085691    1.4916509    9.5940405  -0.30268728   0.99465478    1.3025773   0.79008283   -3.5502959            3    5.4802277    7.7218019    7.8661709   0.85271019  -0.04121231  -0.10776795  0.015855978     5.306894    5.2900327  -0.10276506    1.6734746   0.20122117    1.0198471        0.075    2.0593417          0.5   0.11331635    4.4124261    2.7864309    30.801768 0.0056799299  -0.34251931 0.0076332697   0.36966752   -0.6258358    3.4326201 
 1582000    11.125289    1.4942164    9.6310723  -0.28687524   0.99636548    1.2761604    0.8105147   -3.5502959            3    5.5074618    7.7675917    7.8730231    0.8817706 -0.0050238156 -0.073005577  0.057484058    5.3296456    5.3211241  -0.03388019    1.1317585 0.0086925541    1.0220554        0.075    2.0924164          0.5   0.11356172    4.4028922    2.8171657    30.801768 -0.044319253  -0.40319074 -0.0030889545   0.43444964   -1.9450092   0.71987228 
 1583000     11.10894    1.4956611     9.613279  -0.31169755   0.99732885    1.2955721   0.79919998   -3.5502959            3    5.5411721    7.7845948    7.9094497   0.92947181  -0.01936207  0.080930385 -0.066473547    5.3658382        5.352  -0.53801449   0.83181848  -0.36206065    1.0358314        0.075    2.0701255          0.5   0.11509238    4.3443364    2.8058872    30.801768  0.009590815  -0.36868925 -0.014524344   0.32686664    0.1785628    3.6741988 
 1584000    11.048629    1.4704022    9.5782267  -0.29864234    0.9804858    1.2816225     0.780425   -3.5502959            3    5.5884732    7.8834549    7.9227867   0.95917817  0.037868178  -0.15228239   0.03097636    5.4172583     5.401338  -0.73516349   0.28398877    0.1193728    1.0447071        0.075    2.0756202          0.5   0.11607857    4.3074274     2.816761    30.801768 -0.021636349  -0.41330931 -0.021138074    0.3615501  0.033990254   -1.5170867 
 1585000     11.05171    1.4999702    9.5517397  -0.28280363    1.0002022    1.2946958   0.80457002   -3.5502959            3    5.5819645    7.9033078    7.9058978   0.93668783 0.0020470545   0.12356473 -0.075376668    5.4054525    5.3929203  0.011052651    3.2113358   0.52730905    1.0353936        0.075    2.0913519          0.5   0.11504374    4.3461732    2.7793929    30.801768  0.003722547  -0.30038253 -0.015242793   0.44366024    -1.074516   0.96001373 
 1586000    11.081764    1.4925933    9.5891703  -0.31474504   0.99528319    1.2793385   0.80659649   -3.5502959            3    5.7157952    7.9664131    8.0650865    1.1158861 0.0072875001  -0.23847072  0.015334031    5.5388386    5.5289935   0.13358554    1.3831629  0.063587477    1.0706898        0.075    2.0951931          0.5   0.11896554    4.2028978    2.8257577    30.801768 -0.0038364323  -0.29548634 -0.0075826162    0.3880477    2.6389642    1.9854455 
 1587000     11.04955    1.4971373    9.5524129  -0.31085283   0.99831321     1.270081   0.81780562   -3.5502959            3    5.5333864    7.8230699    7.9308266    0.8462627  0.012109092    0.1385372 -0.093592122    5.3539707    5.3479364   -1.1271656    1.0482852 0.0060113436    1.0387924        0.075    2.0974932          0.5   0.11542138    4.3319531    2.8086853    30.801768 -0.014560394  -0.33839225 -0.012273971   0.40347011    -1.191872    2.6611189 
 1588000    11.014954    1.4522719    9.5626818  -0.29837134   0.96839631      1.27614   0.76393369   -3.5502959            3    5.5218335    7.7797912    7.9243152   0.86139426  0.018543944    -0.218055  0.030987283    5.3542366    5.3354988   -1.5920188    1.3620376  0.052861013    1.0282908        0.075    2.0932405          0.5   0.11425453    4.3761939    2.7915898    30.801768 -0.022853874   -0.3918593  0.029495851   0.34716666   0.36980309   0.86876132 
 1589000    11.036742    1.4457943    9.5909481  -0.28474048   0.96407695    1.2203143   0.79389311   -3.5502959            3    5.5691341    7.8123467    7.9618886   0.93316692 -0.012743899  0.010113573  0.076689736    5.3949644    5.3909507   0.31351616   0.35795224  -0.10688036    1.0313858        0.075    2.0883688          0.5   0.11459842     4.363062    2.7959715    30.801768    0.0450669  -0.39947833 0.0067962954   0.36396227  -0.87709079     5.762849 
 1590000    11.048351    1.4676552    9.5806959   -0.2920096   0.97865407    1.2356373   0.80797916   -3.5502959            3    5.5885403    7.8023609    8.0156081   0.94765194 -0.0026997538  0.015190141 -0.035092692    5.4112804    5.4081196  -0.27738344    2.7341214  0.037344806    1.0314597        0.075    2.0895958          0.5   0.11460664     4.362749    2.8085861    30.801768 -0.037355625  -0.38641725 -0.018957823   0.33598428  -0.68436899   -3.8799559 
 1591000    11.063855    1.4837985    9.5800563  -0.31599168   0.98941869    1.2534105    0.8140832   -3.5502959            3    5.5633548    7.8096427    7.8782122    1.0022096 0.0032988176  -0.10959058 -0.099561545    5.3847558    5.3803389            0            0 -0.033554208    1.0450984        0.075    2.0726084          0.5   0.11612204    4.3058148    2.8121951    30.801768 -0.017383967  -0.44075762 -0.004215393   0.31465412  -0.13751911    5.8754959 
 1592000    11.062516    1.4712273    9.5912885   -0.3049646   0.98103599    1.2409626   0.80840301   -3.5502959            3    5.6013873    7.8279514    7.9582859    1.0179245 -0.001562841 -0.041823907 -0.011123204    5.4240344     5.420189   0.19428638   0.94888941   0.18090783    1.0253143        0.075    2.0869462          0.5   0.11392381    4.3888982    2.7755082    30.801768 0.0026257478  -0.37391698 -0.023588364   0.32558967    1.6676549    8.1055764 
 1593000    11.058895    1.4645276    9.5943671  -0.32963847   0.97656856    1.2496699    0.7951654   -3.5502959            3    5.7692572    7.8751347    8.1174666    1.3151701 -0.0014307698  -0.13977607 -0.069680193    5.5948084    5.5867874   -0.6049825    1.4186243   0.41886849     1.054145        0.075    2.1056355          0.5   0.11712722    4.2688624    2.8185977    30.801768 -0.036642367  -0.40525099 -0.002464441   0.32742964     0.653817    5.1852608 
 1594000     10.99955     1.417911    9.5816386  -0.30558319   0.94548395    1.2037298   0.77395644   -3.5502959            3    5.6900391    7.8502819    8.0672827    1.1525527 0.0030730602 -0.062634715  0.061679962    5.5202433    5.5142773  -0.44264242   0.30033686  -0.75416174    1.0290267        0.075    2.0918568          0.5    0.1143363    4.3730645    2.7877402    30.801768 -0.0086224124  -0.35683778 0.0079060918   0.41041664  -0.84053797    1.8285679 
 1595000    11.060445    1.4736491    9.5867954  -0.30379363   0.98265092    1.2777161   0.78663185   -3.5502959            3    5.4352862    7.7197116    7.8046073   0.78153985  0.020624238  -0.18550454  0.094075739    5.2627096    5.2487214   0.46230446   0.30698539  -0.17780237      1.03942        0.075    2.1216427          0.5   0.11549111    4.3293376    2.7896578    30.801768 -0.024515939  -0.38731162 -0.010894927   0.39053362    3.1163588     3.747736 
 1596000    11.044191    1.4765612    9.5676295  -0.30242736   0.98459272    1.2335638   0.81925258   -3.5502959            3    5.6306653    7.8858996    7.9918385    1.0142576  -0.01238517 -0.092310496 -0.077961544    5.4509321    5.4505473            0            0 -0.086618447    1.0169841        0.075    2.0875011          0.5   0.11299823    4.4248479    2.7855359    30.801768 -0.017170559  -0.38784811 0.0059607257   0.32470058   -1.4339788    5.2195913 
 1597000    11.056981    1.4753538    9.5816275  -0.29865287   0.98378766    1.2519228   0.80569243   -3.5502959            3    5.4184868    7.7542361    7.7977664   0.70345787  0.027739862  -0.23424308  0.011404585    5.2417285    5.2356881            0            0   0.23798516    1.0257085        0.075     2.110612          0.5   0.11396761    4.3872113    2.8355865    30.801768 -0.0075188893   -0.3437797  0.013540256   0.31392688   0.53548373   -2.0802589 
 1598000    11.083039    1.4835816    9.5994577  -0.29811309   0.98927402    1.2612063   0.80865363   -3.5502959            3    5.7701832     7.966701    8.0497993    1.2940494  -0.02817334   0.15525549  0.062063353    5.5927753     5.586029  0.093606484   0.45525567   -0.4055557    1.0473057        0.075    2.0713074          0.5    0.1163673    4.2967398    2.8258689    30.801768 -0.011006627  -0.33621572  0.012796137   0.40170635   -2.0037054     1.403131 
 1599000    11.055838    1.4521249    9.6037132  -0.29491385   0.96829826    1.2464508    0.7835302   -3.5502959            3    5.6139181    7.9236654    7.9457852   0.97230369  0.014430704  -0.43089659   0.10909784    5.4420219    5.4319184  -0.10950268     1.033956 -0.083989938    1.0193458        0.075    2.0627863          0.5   0.11326064    4.4145963    2.8131498    30.801768 0.0030106564  -0.27658839 -0.0088462816    0.2657178     3.335015    4.7246028 
 1600000    11.083495    1.4787218    9.6047734  -0.28142493   0.98603349    1.2754078   0.79380322   -3.5502959            3    5.5190497    7.8053893    7.8784375   0.87332233 0.0061325645 -0.039347157 -0.018726338    5.3448998    5.3328219   0.20534808   0.38329324  -0.78497882    1.0327798        0.075    2.0520102          0.5   0.11475331    4.3571727    2.8283557    30.801768 0.0050103884  -0.32831468 -0.024450409   0.29326459    -0.525396    2.5090926 
 1601000    11.113136    1.5091834    9.6039529  -0.29166553    1.0063457    1.2791008   0.82518403   -3.5502959            3    5.7746294    7.9845553    8.0646581    1.2746748  0.020515492  -0.06751444   0.04970909     5.593595    5.5878623 -0.088209205   0.82868849   0.47905477    1.0271902        0.075    2.0938922          0.5   0.11413224    4.3808831    2.7948718    30.801768 0.0010301632  -0.46045525  0.018621645   0.42764511    2.5147274   0.95717994 
 1602000    11.125457    1.4845838    9.6408732  -0.30109913   0.98994232    1.2705307   0.80356103   -3.5502959            3    5.6514145    7.8742963    7.9701208    1.1098264  0.021116302  0.066464121  0.016266799    5.4751238    5.4658988            0            0 -0.0023150227    1.0333843        0.075    2.0977585          0.5   0.11482047    4.3546241    2.8157919    30.801768 -0.011257297  -0.38334441 0.0033571645   0.36837543   -3.1009323    2.3259303 
 1603000    11.106237    1.4979668    9.6082703  -0.29590077   0.99886632    1.2804254    0.8118423   -3.5502959            3    5.4920497    7.7546794    7.9412314   0.78023833  0.021352683  -0.14304439  0.027123714    5.3139422    5.3050892            0            0   0.11863122    1.0344369        0.075    2.1319625          0.5   0.11493743    4.3501929    2.7980024    30.801768 -0.0035570436  -0.43007873 -0.014574487   0.37674916  -0.28920388    2.8855718 
 1604000    11.108459    1.5013997    9.6070594  -0.30807127    1.0011554    1.3007868   0.80210412   -3.5502959            3    5.5912926    7.8565711    7.9960754   0.92123141 -0.0034480755   0.05856251  0.058569243    5.4153216    5.4013591  -0.17904739    0.6373911    0.1120141    1.0248475        0.075    2.0962642          0.5   0.11387195    4.3908971    2.8057348    30.801768 -0.007392163  -0.43619705  0.012551796   0.35496211  -0.82811235    4.3930732 
 1605000    11.079264    1.4747731    9.6044911  -0.29089261   0.98340038    1.3096553   0.76662306   -3.5502959            3    5.5472256    7.8614901    7.8968572   0.88332952 -0.0053733383  -0.19961374  0.019980252    5.3790387    5.3559972            0            0   0.97783518    1.0352409        0.075    2.1067323          0.5   0.11502676    4.3468144    2.8068295    30.801768 -0.015948097  -0.37499033 -0.013907898   0.34360531    2.6751888    1.9081486 
 1606000    11.093384    1.5107086    9.5826753    -0.288594    1.0073627    1.2664154   0.83532116   -3.5502959            3    5.4804237    7.7721236    7.8555343   0.81361325  0.021463613  0.032597559  0.044463199    5.2971653    5.2955089    1.7428928      1.96625  0.093988041    1.0183997        0.075    2.0752921          0.5   0.11315552    4.4186973    2.8106735    30.801768  0.009362142  -0.31410533  0.009361291   0.39637837    -1.539006    5.3350667 
 1607000    11.097787    1.4810797    9.6167071  -0.29881092   0.98760574    1.2490638   0.81395593   -3.5502959            3    5.5482821    7.7970408      7.92608   0.92172542 -0.028628234 -0.043646379 -0.0023433066    5.3697109    5.3659008            0            0   -0.4402624    1.0291909        0.075    2.0474349          0.5   0.11435454    4.3723668    2.8291835    30.801768 -0.0029526603  -0.34377624 -0.0011002707   0.37488984    3.0085314   0.54128107 
 1608000    11.083855    1.4570857    9.6267696  -0.31759892   0.97160619    1.2198603   0.80673843   -3.5502959            3    5.6849121    7.7807119    8.0454268    1.2285976   0.03241277  -0.16546582  0.071491905    5.5079244     5.506795            0            0  0.055940547    1.0246407        0.075    2.0836972          0.5   0.11384897    4.3917834    2.7969374    30.801768  0.038865383  -0.33191011 0.0081852639      0.43464  -0.46491076    5.4575631 
 1609000    11.125518    1.4898708    9.6356476  -0.30921927   0.99346774    1.2662693   0.81227034   -3.5502959            3    5.7306676    7.9129917    8.0496092     1.229402 0.0087721386  0.050484429 -0.013083836    5.5524663    5.5457742   0.16443152    0.3501093  -0.90467428    1.0312582        0.075    2.0788885          0.5   0.11458425    4.3636016    2.8032815    30.801768 0.0083129113  -0.36368053  0.015126358   0.35401275   -1.6634377    4.6973406 
 1610000    11.114453    1.4736607     9.640792  -0.28596269   0.98265865     1.240287   0.81155587   -3.5502959            3    5.4595445    7.7601442     7.864881   0.75360838 -0.0076867247 -0.088603796  0.054477761    5.2814999    5.2784448   0.64424376    0.6019024  -0.37170477    1.0215992        0.075    2.0479229          0.5   0.11351103    4.4048584    2.7942422    30.801768 -0.00021965654  -0.27588108 -0.010215142   0.37536999  -0.57625462    2.1517953 
 1611000    11.125015    1.5018188    9.6231964  -0.28132982    1.0014349    1.2982655   0.80424778   -3.5502959            3    5.6874415    7.9410975    7.9993251    1.1219018 0.0030823515 -0.057387738 -0.0020152429    5.5110002    5.4978761  -0.64112045   0.86981343    0.5597254    1.0208966        0.075    2.0172618          0.5   0.11343296    4.4078901    2.8088717    30.801768  0.046348174  -0.34155215 -0.00024149579   0.33455374  -0.70188443    2.4289134 
 1612000    11.115275    1.4985124    9.6167629  -0.28254702   0.99923011    1.2926266   0.80432774   -3.5502959            3    5.5995619    7.8423107    7.9346283    1.0217467 -0.023748329  -0.14938821  0.073323034     5.423103    5.4108199   0.10537107    3.7591944   0.37518508    1.0095241        0.075     2.048291          0.5   0.11216935    4.4575457    2.8030493    30.801768  0.035056977  -0.38279368 0.0012745382    0.3488404  0.048515984    8.7681515 
 1613000    11.082287    1.4794834    9.6028037  -0.29817787   0.98654134    1.2559143   0.80762333   -3.5502959            3    5.4389774    7.7610634    7.8250906   0.73077824 -0.041056721  0.014676732 0.0041174992    5.2617955    5.2555959            0            0   0.16676025    1.0165934        0.075    2.0427478          0.5   0.11295482    4.4265486    2.7935021    30.801768   0.01401495   -0.3526815 0.0052750927   0.35787901  -0.47653001    3.7310572 
 1614000    11.145724    1.5175484    9.6281759   -0.2898861    1.0119236    1.2615216   0.84617629   -3.5502959            3    5.6131024    7.9004445    7.8906142    1.0482485  0.034140339  -0.24363814  0.096285988    5.4274625    5.4289022  -0.30722666   0.21547389  0.075639008    1.0147851        0.075    2.0399475          0.5    0.1127539    4.4344365    2.8045483    30.801768 -0.001684136  -0.39390208 -0.027789619   0.32711721    1.6936418   0.46724626 
 1615000    11.072599    1.4709432    9.6016558  -0.29280725   0.98084657    1.2580447   0.79671838   -3.5502959            3    5.6629745    7.8788587       7.9929    1.1171647 -0.0097140768  -0.33973857 -6.1924276e-05     5.488185    5.4792819  -0.83793859    1.5045731 -0.048133393     1.013919        0.075    2.0886759          0.5   0.11265767    4.4382243    2.8038905    30.801768  0.023104583  -0.32631307 0.0030874399   0.27989401   0.91774323    5.3195604 
 1616000    11.056162    1.4664362    9.5897256  -0.30930761   0.97784124    1.3070123   0.75912096   -3.5502959            3    5.4751368    7.7439878    7.8608849   0.82053783  0.010571546   0.16592401  0.026907931    5.3085958    5.2842943  -0.83777713   0.88928664  -0.10730332    1.0385764        0.075     2.094836          0.5   0.11539738     4.332854    2.7949249    30.801768 -0.013506427  -0.39268674  0.020577169   0.34335841    2.6378643    3.1176061 
 1617000    11.110746    1.4720429    9.6387035  -0.27051632   0.98157985    1.2858525   0.77943227   -3.5502959            3     5.579449    7.8428533    7.9647201   0.93077355 -0.0023383545  -0.16339129 -0.056354185    5.4084519    5.3916961            0            0  0.089889677    1.0173645        0.075    2.0825407          0.5    0.1130405    4.4231933    2.8025906    30.801768 -0.012771553  -0.34852271 -0.020337709   0.42013089  -0.78794561    3.1652152 
 1618000    11.126864    1.5016534    9.6252106  -0.29510784    1.0013246    1.2989005   0.80364139   -3.5502959            3    5.6656948    7.9088752    7.9594252    1.1287839  0.010259445  -0.13779444  0.004795167    5.4893865    5.4760367            0            0  -0.16849267     1.041862        0.075    2.0603199          0.5   0.11576245      4.31919    2.8102943    30.801768 6.1531364e-05   -0.3796397  0.026902517   0.35840728   -0.2815341    3.3635914 
 1619000    11.155172    1.5191484    9.6360237  -0.27897625    1.0129905    1.3157922   0.81183354   -3.5502959            3    5.6907621    7.8955673    8.0407779    1.1359411  0.019186764  -0.13686634   0.01686474    5.5126566    5.4986376            0            0 -0.074263674    1.0176734        0.075    2.1089306          0.5   0.11307482    4.4218509    2.7867506    30.801768  0.031869422  -0.35311842  0.026984767   0.33790838    1.5198074    4.4278932 
 1620000    11.055278    1.4861555    9.5691228  -0.31053848   0.99099039    1.3020666   0.78431812   -3.5502959            3    5.6435398    7.8683528    7.9133218    1.1489449  0.027065835  0.031913551  0.026702005    5.4714708    5.4534194     1.715287   0.64739159  0.025442211    1.0216649        0.075    2.0596277          0.5   0.11351833    4.4045752    2.8128824    30.801768 0.0099832095  -0.40229188 -0.0016632188   0.38625456    -1.530169    1.8206214 
 1621000    11.104293    1.4972501    9.6070427  -0.31480004   0.99838838    1.2691446    0.8185541   -3.5502959            3    5.6767683    7.8471711    8.0508974    1.1322363 -0.0044469338  -0.14570761  0.065118142    5.4971883     5.491455            0            0  0.057107436    1.0188715        0.075    2.0562256          0.5   0.11320795    4.4166511    2.8344382    30.801768  0.019272484  -0.35709967 -0.018086648   0.37311359    2.5517015   0.69372506 
 1622000    11.142275    1.4925435    9.6497312  -0.29154331      0.99525    1.2710352    0.8120675   -3.5502959            3    5.7571157    7.9252752    8.0699582    1.2761138    0.0100845  -0.39413098  0.072375733    5.5789589    5.5715263  -0.41042972   0.79628644  0.064926243    1.0293138        0.075    2.0603542          0.5    0.1143682    4.3718448    2.7940849    30.801768 -0.0044546484  -0.36763569  -0.02344912   0.39727352   0.97444486    7.9855037 
 1623000    11.071523    1.4441823     9.627341  -0.28713704   0.96300201    1.2459858   0.77501651   -3.5502959            3    5.6307486    7.8377371    8.0336031    1.0209055 -0.025416237   0.16453828  0.065612619    5.4607202    5.4488168   -1.4339014    2.2325688  0.068165582    1.0008722        0.075     2.006987          0.5   0.11120803    4.4960783    2.8012496    30.801768 -0.00085768382  -0.38467856  0.011252837   0.37059942   -3.1681944    1.7550523 
 1624000     11.12132    1.4783287    9.6429911  -0.29865905   0.98577136    1.2600662   0.80357728   -3.5502959            3     5.370419    7.6136678    7.8063024   0.69128693  0.015654212   -0.1161454  0.071528074    5.1941248    5.1864313   0.46560167   0.27179247  -0.40222104    1.0206537        0.075    2.0227155          0.5   0.11340596    4.4089393    2.8203867    30.801768 -0.026814475  -0.39239223 -0.031906686   0.38398865   0.63030854    3.3554911 
 1625000    11.124124    1.5015196    9.6226042  -0.30009648    1.0012354    1.2951053   0.80601861   -3.5502959            3    5.5241694     7.772547    7.9166643   0.88329703 -0.0015654488   0.15121908   0.14950455    5.3473396    5.3350655            0            0 0.0047187473    1.0305493        0.075    2.0733769          0.5   0.11450548    4.3666032    2.8172142    30.801768 0.0049936665  -0.32102656 -0.0056348078   0.38660521  -0.31429094    5.9010241 
 1626000    11.110096    1.4838722    9.6262237  -0.30251492   0.98946784    1.3075033   0.77816323   -3.5502959            3    5.5275281    7.6877805    7.9346119   0.96019193 -0.023586079 -0.099948955 -0.066757477    5.3568094    5.3366139            0            0   0.24122367    1.0133884        0.075    2.1222547          0.5   0.11259871     4.440548     2.781686    30.801768 0.0016985047  -0.30903689 -0.0056716155     0.382776    1.2100033   -1.3804518 
 1627000    11.114866     1.509779    9.6050868  -0.29386068    1.0067428    1.2913845   0.81767007   -3.5502959            3    5.7463388    7.9004864    8.1045365    1.2339933    0.0439772  -0.19046416  0.054670181    5.5669528    5.5577781            0            0  -0.17326539   0.99973479        0.075    2.1086202          0.5   0.11108164    4.5011937    2.7877755    30.801768  0.017386918  -0.33309576  0.012392163   0.30356641   0.86785882    9.1682528 
 1628000    11.127939    1.4924955    9.6354437    -0.275966   0.99521796    1.2986433   0.79363935   -3.5502959            3     5.596946    7.8552776    7.9137374    1.0218229 -0.0015653882  -0.15810635  0.025011648     5.422832    5.4073254            0            0  0.063427445    1.0238753        0.075    2.1153948          0.5   0.11376393    4.3950663    2.8297764    30.801768 -0.0059324402   -0.3265638  -0.03273261   0.43445755   -2.7176251    3.7841887 
 1629000    11.079226    1.4929211    9.5863045  -0.30448399   0.99550175    1.3181263   0.78114506   -3.5502959            3    5.7562553    7.9720551    8.0260895    1.2706213 0.00018322829 -0.027816918 0.0050619106    5.5848824      5.56379    1.0917618    2.0478006 -0.029732066    1.0188472        0.075    2.0910994          0.5   0.11320525    4.4167564     2.806798    30.801768 0.0027475694  -0.31769268 -0.031418301   0.35665758  -0.41316201    8.3136341 
 1630000    11.123732    1.5190605    9.6046711  -0.29421644    1.0129319    1.3152149   0.81212007   -3.5502959            3    5.5618439    7.8588945    7.9103627   0.91627439  0.034971165  -0.22518755 0.00082162287    5.3836755    5.3698036  -0.11008128   0.83711073  0.039067374    1.0214755        0.075    2.0779653          0.5   0.11349728    4.4053919    2.8089016    30.801768  0.024195315  -0.37892697  0.016279359   0.31912488    1.8167545    6.1261025 
 1631000    11.094589    1.4854134    9.6091758  -0.29456893    0.9904955    1.2511188   0.81740232   -3.5502959            3    5.4429035    7.7232578    7.8452247   0.76022804 -0.0054392104  -0.16376183 -0.067853851    5.2635763    5.2602222   0.13003377    0.8538862  0.059757844    1.0066934        0.075    2.0454103          0.5   0.11185483    4.4700798    2.8108901    30.801768  0.024074578  -0.32487348 0.0024978273   0.29894098   0.49957803    5.7085596 
 1632000    11.089881    1.4741322    9.6157489  -0.30042767   0.98297307    1.2599656   0.79898244   -3.5502959            3    5.5343281    7.8092505    7.9294242   0.86430948 -0.0048260314 -0.089400685 -0.084464575    5.3590419     5.350355   0.51944572   0.74959413   0.49306716    1.0254029        0.075    2.0462748          0.5   0.11393366    4.3885188    2.8204353    30.801768    0.0184204  -0.32311471 -0.034547173   0.35739829  -0.69068798   -2.2398028 
 1633000    11.127464    1.5144785    9.6129853  -0.29811508    1.0098766    1.3038345   0.81460446   -3.5502959            3    5.4175627    7.7004404    7.8796725   0.67257507  0.026783256  -0.17205059  0.038283354    5.2388492    5.2271841   0.47043893   0.14171173  0.045195403     1.029865        0.075    2.1292495          0.5   0.11442945    4.3695046    2.7907942    30.801768  0.012094632  -0.31712821  0.020305196   0.33351787    1.2210351   0.83723127 
 1634000    11.120678    1.4871281      9.63355  -0.29153076   0.99163892    1.2721623   0.80530153   -3.5502959            3    5.7228907    7.8597846    8.0916476    1.2172398  0.014091462  -0.13893474  0.020470837    5.5462182    5.5371367            0            0   0.10756979    1.0273378        0.075    2.0961315          0.5   0.11414865    4.3802533    2.8029133    30.801768 0.0070702695  -0.32354575 -0.0085105729   0.30987313    1.7664069    8.6941614 
 1635000    11.127729    1.4910218    9.6367076  -0.30106089   0.99423525    1.2968087   0.79322324   -3.5502959            3    5.6656151     7.811459    8.0763392    1.1090473 -0.018359932  -0.27117362 -0.0015888464    5.4915925    5.4762625    0.1731028   0.87178478   0.12574639    1.0292844        0.075    2.1115128          0.5   0.11436494    4.3719693    2.8189997    30.801768 0.0024409029   -0.3598914 -0.0082934758   0.41730702    1.9471611    6.1557509 
 1636000     11.12944    1.4977495    9.6316907  -0.27698778    0.9987214     1.290927   0.80461148   -3.5502959            3     5.400554    7.6748065    7.8455104   0.68134508 -0.032292618   -0.1200244 -0.087897234    5.2240329    5.2120601            0            0    1.2983669    1.0236512        0.075    2.0828224          0.5   0.11373902    4.3960288    2.8049614    30.801768 0.0024537437  -0.32527107  0.025617951   0.34819246    1.9876387    1.2899876 
 1637000    11.140809    1.5152508    9.6255585  -0.29746008    1.0103915    1.3098154   0.81148172   -3.5502959            3    5.4817438    7.6353679    7.9302249   0.87963868 -0.037944786    0.0398026  -0.10814028    5.3037155     5.290492   -1.2506635    1.7620459  -0.02213251     1.034185        0.075    2.1081611          0.5   0.11490944    4.3512525    2.8251019    30.801768  0.012602004  -0.39560228  0.024576523   0.45838609   -1.5180056   -2.9651359 
 1638000    11.146769    1.5020156    9.6447534  -0.28321027    1.0015661    1.2959321   0.80601941   -3.5502959            3    5.4922694    7.7517884    7.8052135   0.91980623  0.039761932  -0.11788207 -0.085364031    5.3154394    5.3030447   -1.0792847   0.22343008  0.048398194    1.0138414        0.075     2.092587          0.5   0.11264905     4.438564    2.8033182    30.801768 -0.016920691  -0.36786585  0.025116271   0.40187701   0.86521409    1.4838285 
 1639000    11.126935    1.5124563    9.6144791  -0.29582414    1.0085281    1.2769868   0.83022678   -3.5502959            3    5.5532137      7.82554    7.9168194   0.91728167  0.014045704  -0.15149366 -0.025458436    5.3710729    5.3667553  -0.90895682    2.3756125 -0.024627326    1.0173904        0.075      2.12004          0.5   0.11304337     4.423081       2.8221    30.801768 0.00058963271  -0.36819884 1.5315656e-07   0.34927389   0.72411073   -2.3357889 
 1640000    11.126945     1.510542    9.6164034  -0.30130593    1.0072516    1.2984298   0.81382869   -3.5502959            3    5.6465197     7.871413    8.0389498    1.0291963 -0.0057058102  -0.16102931  0.093591726    5.4679765    5.4569303            0            0   0.25771752    1.0266908        0.075    2.0952208          0.5   0.11407675    4.3830139    2.8223513    30.801768 0.0061806384  -0.32365934 0.0037004183   0.33331184   -3.5186031    7.6128558 
 1641000     11.16572    1.5139399    9.6517805  -0.26975448    1.0095174    1.2862996   0.82567662   -3.5502959            3    5.7518177    7.9625514    8.0401411    1.2527607  0.023943969 -0.070149505 -0.018377622    5.5706752    5.5639995   -1.0856498    1.7315857  0.082938631    1.0111227        0.075    2.0921908          0.5   0.11234697    4.4504983    2.7511984    30.801768 0.0021119151  -0.39916799 0.0054613866   0.34402441  -0.30023904     8.015283 
 1642000    11.157495     1.505867    9.6516283  -0.28802394    1.0041343    1.3136073    0.7985339   -3.5502959            3    5.4007628    7.6579715    7.8438034    0.7005136  0.037522603 -0.096532851  0.032906572    5.2255751    5.2089573  -0.22856754    2.2010242   0.54737466    1.0226607        0.075    2.0903786          0.5   0.11362897    4.4002864    2.8159052    30.801768  0.010839086  -0.34406041 0.0051334384   0.40466388    2.7769221    2.1052033 
 1643000    11.171671    1.5139775    9.6576936  -0.28460175    1.0095425    1.3085785   0.81089053   -3.5502959            3     5.706642    7.9020494    8.0072943    1.2105822 -0.017245354  -0.22148846 -0.019696476    5.5287433    5.5155707   0.23363841    3.5401725   -0.7390713     1.023388        0.075    2.0805103          0.5   0.11370978     4.397159    2.8158519    30.801768  0.011115383  -0.38224936  0.020302266   0.37604084    3.2269512    4.6797693 
 1644000    11.140966    1.5035103    9.6374553  -0.29031342    1.0025628    1.3049342   0.80168836   -3.5502959            3    5.6371897    7.8678199     7.976495    1.0672541 -0.0085016729  0.039471504 -0.0094185819    5.4613099    5.4466506   0.39155035   0.72350863   0.13559058    1.0278468        0.075    2.1229164          0.5    0.1142052    4.3780844    2.8284823    30.801768 -0.0087740575  -0.37565421 -0.018628857   0.46002269   -2.9624848     6.833817 
 1645000    11.144785    1.5043445    9.6404408  -0.29133081     1.003119    1.2999718   0.80591779   -3.5502959            3    5.5584452    7.7869034    7.9628824    0.9255498  -0.02930614  -0.15912709  0.055711889    5.3816375    5.3686307 -0.035166823   0.62354818   0.35609029    1.0254054        0.075     2.078778          0.5   0.11393393    4.3885084    2.8157371    30.801768  0.021018461  -0.41885144  0.029140358   0.39931908   -2.1162482    6.5097441 
 1646000    11.123661    1.5053146    9.6183464  -0.27945444    1.0037659    1.2900425   0.81360395   -3.5502959            3    5.4923451     7.811133    7.8884229   0.77747943  -0.04846298 -0.052430078  0.027234428    5.3138512    5.3039804            0            0  0.060608082    1.0221164        0.075    2.0805986          0.5   0.11356849    4.4026298    2.8140782    30.801768 -0.022459056  -0.40434096 -0.0089220141   0.37582225    1.4925793    3.1387622 
 1647000    11.155951    1.4934513    9.6624997  -0.29114651    0.9958553    1.2828994   0.80517954   -3.5502959            3    5.4327841    7.7189613    7.8583225   0.72106856  0.017508703   0.19526133 -0.046789149    5.2561384    5.2454624            0            0  0.091493978    1.0255684        0.075     2.055559          0.5   0.11395204    4.3878107    2.8042506    30.801768 -0.011594915  -0.34427641 -0.010098572   0.37029895   -2.4201125     5.490903 
 1648000    11.106823    1.4813544     9.625469  -0.28328143   0.98778892    1.2647798   0.80380121   -3.5502959            3    5.6229398     7.881804    8.0198207    0.9671947  0.017795638  -0.21542379   0.11366271    5.4465965    5.4382638            0            0  -0.11599143    1.0180896        0.075    2.0263185          0.5   0.11312106    4.4200433    2.7959115    30.801768 -0.0050001864  -0.34985643  -0.01298418    0.3612501    3.3186525    5.1326518 
 1649000     11.13596    1.5112252     9.624735  -0.28222726    1.0077072    1.2907843   0.81967615   -3.5502959            3    5.6246035    7.9319914    7.9355316    1.0062876 0.0076069297  0.034215742  0.040202903    5.4447774    5.4361305            0            0 -0.048726492    1.0206517        0.075    2.0555672          0.5   0.11340575    4.4089476    2.8147692    30.801768  0.011557898  -0.35147563  0.010286083   0.33098915   -1.6832003    8.9012472 
 1650000    11.105187    1.4799272    9.6252595  -0.28890028   0.98683725    1.2734194   0.79646568   -3.5502959            3    5.7972978    8.0200622    8.0341421    1.3376891  0.027665903 -0.014959148 -0.034851773    5.6225638    5.6113603            0            0  0.074893645    1.0275561        0.075    2.0599464          0.5   0.11417289    4.3793231    2.8046717    30.801768 -0.015422268  -0.40452785 -0.032896818   0.39822759  -0.17630171    5.4028421 
 1651000    11.068605    1.4611503    9.6074549  -0.28623999   0.97431654    1.2644974   0.78154513   -3.5502959            3    5.7874501    7.9935237    8.0708723    1.2979542 -0.015239256  -0.23710201 -0.064376507    5.6159894    5.6028153  -0.78437596     1.368034   0.72529608    1.0168236        0.075    2.0651006          0.5   0.11298039    4.4255466    2.7832557    30.801768   0.03992628  -0.37434948 -0.013235559   0.35808354  -0.98772071    4.2226897 
 1652000    11.136931    1.5093584    9.6275726  -0.30734551    1.0064624    1.2759546   0.82747235   -3.5502959            3    5.6298773    7.8253321    7.9667509     1.097549 0.0029884336 -0.015321281 -0.023366155    5.4483409    5.4435697            0            0   0.20615507    1.0339569        0.075     2.062712          0.5    0.1148841    4.3522122    2.7905891    30.801768  -0.02374039  -0.43218125 0.0093886831   0.34752086    1.7054979    9.6748881 
 1653000    11.052819    1.4864055    9.5664133  -0.30351161   0.99115709    1.2768291   0.80139286   -3.5502959            3    5.5639213    7.7732205    7.9632932   0.95525015 -0.0025990694  -0.30084414  0.079433847    5.3881063    5.3774859   0.20283327    3.4838853   0.47118647    1.0151313        0.075    2.0674957          0.5   0.11279236    4.4329243    2.7883322    30.801768  0.042071319  -0.42904531 -0.029160656   0.27035187    1.8218855    5.7710518 
 1654000    11.098632    1.4722616      9.62637  -0.27724341   0.98172571    1.2699143   0.79028303   -3.5502959            3    5.3396028     7.677679    7.7569966   0.58413293  0.011258558   0.03226753 0.0030797772    5.1662252    5.1541771            0            0 -0.011953774    1.0350152        0.075    2.0824771          0.5   0.11500168    4.3477624    2.7891367    30.801768  0.002493958   -0.3613976  0.021813889   0.36632182  -0.85516187    1.0512213 
 1655000     11.07463     1.466478    9.6081522  -0.29371158   0.97786914     1.240377   0.80351703   -3.5502959            3    5.6555422    7.8760544    8.0588806    1.0316915 0.0074190566  -0.13859384 -0.042370551    5.4792612    5.4744293  -0.15791436   0.77737437  0.073792331    1.0335935        0.075    2.0297753          0.5   0.11484373    4.3537424     2.807185    30.801768 -0.00090138864  -0.36718349 -0.0036482735   0.39593966    2.3840718    6.2469128 
 1656000    11.039979    1.4568401     9.583139   -0.3066731   0.97144244    1.2787185   0.76729216   -3.5502959            3    5.7578136    7.9176753    8.0659513    1.2898143 -0.037095416   0.26208334 -0.040064828    5.5894799    5.5711024  -0.72249341   0.95712352  0.046667519    1.0517478        0.075     2.051713          0.5   0.11686087    4.2785922     2.828536    30.801768 -0.025486029   -0.4140667 -0.017738048   0.37434498  0.073571901    4.5124588 
 1657000     11.03528    1.4639108    9.5713689  -0.32370731   0.97615727    1.2428358   0.79902868   -3.5502959            3    5.5965602    7.8146701    7.9460339    1.0289766 -0.0014352703  -0.32361282 -0.039618786    5.4212639    5.4150883  -0.23171083   0.76143798  0.029760568    1.0456651        0.075     2.071844          0.5   0.11618501    4.3034813    2.8279942    30.801768 -0.013711803     -0.36522 0.0018545385   0.30701414    1.8234004    4.6385314 
 1658000    11.087837    1.5004173    9.5874193  -0.30077624    1.0005004    1.2643569   0.82525901   -3.5502959            3    5.4539974    7.7633143    7.8079825    0.7906954  -0.01108551  -0.07673522  0.099238001    5.2729465    5.2693832  -0.20879417   0.64179705   0.19988311    1.0455883        0.075    2.0841748          0.5   0.11617647    4.3037974    2.8118705    30.801768  0.023005028  -0.36032705  0.021631314   0.35297938   0.61707633   -2.0909199 
 1659000    11.035961    1.4700756    9.5658856  -0.28567766   0.98026804    1.2468308   0.80321804   -3.5502959            3    5.6566696    7.9929966    7.9840473   0.99296478 0.0076607649 -0.080680506 -0.010273807    5.4804542    5.4746144   0.21003923   0.99011656 -0.026066636    1.0394508        0.075    2.0338709          0.5   0.11549454    4.3292092    2.8069845    30.801768 -0.032543947  -0.39926696 -0.010780623   0.33242831  -0.48581892    1.8230585 
 1660000    11.041905    1.4779052    9.5639998  -0.32523896   0.98548896    1.2473113   0.81159591   -3.5502959            3    5.4596214    7.7173071    7.8250851   0.83647201 -0.007686608  0.035610783   0.16924441     5.281568    5.2774961            0            0  -0.68510294    1.0376754        0.075    2.0900903          0.5   0.11529726    4.3366163    2.8115766    30.801768 -0.015047826  -0.41971013 -0.0022439561   0.41340094   -2.0325042    4.3723923 
 1661000    11.035227    1.4473271    9.5879001  -0.30077633   0.96509903    1.2432974   0.78029926   -3.5502959            3    5.6404945    7.8769008    7.9926338    1.0519489 0.0082332215 -0.089946827   0.14414559    5.4693072    5.4589552   -0.2159667   0.94857302   0.11155301    1.0263992        0.075    2.0765849          0.5   0.11404435    4.3842592    2.8055993    30.801768 -0.010473136  -0.31523733  0.002393778   0.35784797    2.2166475     3.537516 
 1662000    11.072772    1.4787257    9.5940466  -0.30084147   0.98603605    1.2726099   0.79566966   -3.5502959            3    5.6136126     7.875596    7.9408307     1.024411 -0.015722335  -0.30342775 0.0053616691    5.4390532    5.4277933  -0.64124056    2.0611952 0.0066891273    1.0363938        0.075    2.0516035          0.5   0.11515487    4.3419788    2.8139532    30.801768  0.015254484  -0.30733938 -0.0059564563   0.40804447   -2.0602278    3.4266089 
 1663000    11.104019    1.4846443    9.6193749  -0.27227458   0.98998268    1.2690851   0.80459045   -3.5502959            3    5.4414566    7.7209403    7.8545801   0.74884929 -0.0012332462  -0.16080115 -0.030947933    5.2649401    5.2561519            0            0   0.14674554    1.0282324        0.075    2.0642576          0.5   0.11424805    4.3764425    2.8226114    30.801768 0.00026106474  -0.35974756  0.025866466   0.35426439   0.23018639    4.2915518 
 1664000    11.037629    1.4658771    9.5717523  -0.31495124    0.9774684    1.2741665   0.78036057   -3.5502959            3    5.6123256    7.8447476    7.9421639    1.0500652 0.0052732901   -0.2714589 0.0042864798    5.4411248     5.426279  -0.22734474    1.9084764  -0.36433275    1.0294379        0.075    2.0561822          0.5   0.11438199    4.3713176    2.8052964    30.801768 -0.019526248  -0.47570719  0.020947937   0.37298361    3.2339977     6.886036 
 1665000    11.116239    1.4875033    9.6287357   -0.2912611    0.9918891    1.2564681   0.81616369   -3.5502959            3    5.5200001    7.7153182    7.8986318    0.9460502 -0.0030607846 -0.095031464  0.023851415    5.3409446    5.3365377            0            0   0.04520649    1.0312046        0.075    2.0762755          0.5   0.11457829    4.3638286     2.811229    30.801768  0.002856389  -0.37054852  0.010410686    0.3222826    1.0175647     4.163525 
 1666000    11.074047      1.47554    9.5985072  -0.30268408   0.98391179    1.2692821   0.79434563   -3.5502959            3    5.7235309    7.9390686    7.9972474    1.2342767 -0.0085691488  0.043463379 0.0088353949     5.549262    5.5381975            0            0  0.018194744     1.046627        0.075    2.0843406          0.5   0.11629189    4.2995259    2.8239726    30.801768 -0.016794272  -0.36143709  -0.01795779   0.36331694 -0.089625407    5.2081838 
 1667000    11.050822    1.4645388    9.5862836    -0.295173   0.97657606    1.2481831   0.79616744   -3.5502959            3     5.738339      7.95723    8.0350199     1.222767  0.017452521 -0.072943749  0.055062884    5.5636704    5.5560863   -1.2966203    1.1267231  0.064789494    1.0409412        0.075    2.0544474          0.5   0.11566014    4.3230106    2.8288157    30.801768  0.016243453  -0.29253577 -0.013006529    0.4629758   0.95939565    5.1386001 
 1668000    11.049437    1.4555349    9.5939022  -0.30924132   0.97057207    1.2407053   0.79114212   -3.5502959            3    5.3525498    7.6696248    7.7582865   0.62973811 0.00055515262  0.069254628 -0.016052362    5.1789837    5.1713891   0.16346889    1.0931207 -0.016572113    1.0113275        0.075    2.0867677          0.5   0.11236972    4.4495974    2.7851999    30.801768 -0.0046657739  -0.29303828 -0.0070842461   0.34848175    -2.376711    5.0883776 
 1669000    11.070816    1.4710377    9.5997781  -0.30598364   0.98090956    1.2476063   0.80377062   -3.5502959            3    5.7166455    7.9723722    8.0285342      1.14903 0.0036847547  -0.16614187  0.077072972    5.5403089    5.5344771   0.83239766   0.51664529   0.02582776    1.0375516        0.075    2.0609439          0.5   0.11528351    4.3371339    2.8006441    30.801768 -0.00053010424  -0.33327496 -0.021005491   0.43658025    2.2195713    6.1468491 
 1670000    11.052029    1.4479054    9.6041236   -0.3067304   0.96548462    1.2535132   0.77414242   -3.5502959            3    5.6318795    7.7553211    7.9905154    1.1498021 -0.022061881 -0.055760925 -0.0070835261    5.4620429    5.4488486  0.057049428   0.13364119   0.66677227    1.0358725        0.075    2.0676687          0.5   0.11509694     4.344164    2.8462274    30.801768 0.0010111731  -0.44493177  0.015834223   0.30904173    1.8223679    4.3454053 
 1671000    11.028183    1.4689071    9.5592755  -0.31226787   0.97948886    1.2801736   0.77972844   -3.5502959            3    5.4559468    7.7486041    7.8801019   0.73913443  0.013273024  -0.24142388   0.12079958    5.2848847    5.2690231            0            0   0.18970319    1.0315133        0.075    2.0777888          0.5   0.11461259    4.3625226    2.8184969    30.801768 0.0093840643  -0.36214168  0.014578393    0.3148863  -0.65966107  -0.21199487 
 1672000    11.062217    1.4725951     9.589622  -0.29924303   0.98194809     1.242979   0.80858046   -3.5502959            3       5.7296    8.0165386    8.0472658    1.1249956 -0.014795201  0.053406378  0.018524323    5.5522082    5.5481072     -1.06571   0.91386321   0.09361143    1.0335255        0.075    2.1052251          0.5   0.11483617    4.3540288    2.8099703    30.801768 -0.045368159  -0.36661433    0.0154444   0.35050004  -0.18856012    4.2272115 
 1673000     11.06615    1.4843979    9.5817517  -0.30054076   0.98981836    1.2750348   0.80035685   -3.5502959            3    5.5107641    7.7739567    7.9354547   0.82288096  0.014166685 -0.035522053 -0.082725021    5.3351764    5.3245908            0            0   0.25212416    1.0381324        0.075    2.1213381          0.5   0.11534804    4.3347072     2.824794    30.801768  0.020905499  -0.32986462 -0.0050331847   0.34018307    1.9585176   0.54670233 
 1674000    11.074745    1.4516095    9.6231352  -0.29943968   0.96795459    1.2659832   0.76995775   -3.5502959            3    5.5140035    7.8215942    7.8959336   0.82448279 0.0047854535  -0.23229834 -0.087771073     5.345085    5.3291518 -0.040795271     1.250072  0.070585053    1.0411083        0.075     2.103171          0.5    0.1156787     4.322317    2.7903738    30.801768 -0.031208049  -0.43838964 -0.037012587   0.35451814  -0.70633416    6.6943916 
 1675000    11.088769    1.4743686    9.6144006  -0.30413155   0.98313066    1.2622029   0.79775595   -3.5502959            3    5.4805082    7.7619054    7.8957525   0.78386688 0.0068619024  -0.13013118 -0.080903387    5.3054911    5.2962085            0            0   0.10425298    1.0149297        0.075    2.1008999          0.5   0.11276997    4.4338045     2.796122    30.801768  0.016985894  -0.37544285 -0.0069354519   0.34391876   -2.4845085 -0.048597402 
 1676000     11.10372     1.495815     9.607905  -0.30437631   0.99743142    1.2894266   0.80346104   -3.5502959            3    5.5369634    7.8253946    7.8762353   0.90926023  0.005106068  0.071456212  0.040495165    5.3606947    5.3486886    1.8945674    1.7991877  -0.25468446    1.0316043        0.075    2.0794164          0.5    0.1146227    4.3621375     2.817662    30.801768  0.031486196  -0.31713873 -0.026549029   0.40599344  0.049985227    4.6243657 
 1677000     11.09193    1.5129594    9.5789708  -0.30810269    1.0088636    1.2987258   0.81631703   -3.5502959            3    5.3891076    7.6096332    7.8550529   0.70263658 0.0034034515  -0.16150743  0.026460007    5.2100184     5.199475   -1.7870078    3.7593433    0.5139626    1.0198217        0.075    2.0828909          0.5   0.11331352    4.4125361    2.8219862    30.801768  0.016555757  -0.35528543 -0.017320531   0.31210018   -1.3144878    4.7859821 
 1678000    11.100043    1.4622251     9.637818  -0.29989185   0.97503319    1.2626208   0.78398803   -3.5502959            3    5.4814338    7.7424754    7.8711838   0.83064227  0.030735449  -0.12673781 -0.076585746    5.3094372    5.2970731            0            0   0.19592666    1.0167481        0.075    2.0405172          0.5   0.11297202    4.4258748    2.8018262    30.801768 -0.0012814863  -0.30236167 0.0036856802   0.38701082    2.2804805    1.4827529 
 1679000    11.101163    1.4740677    9.6270952  -0.29818961   0.98293002    1.2555799   0.80182969   -3.5502959            3    5.5040984    7.7598175    7.8458005   0.90667722 -0.0042291989 -0.064551547 -0.089590365    5.3281876    5.3207658            0            0   0.15228098    1.0168581        0.075    2.0746376          0.5   0.11298423    4.4253963    2.7790656    30.801768 0.0028912584  -0.33514825 -0.0063855469    0.3630554   0.78091414    2.7651357 
 1680000    11.105542    1.4943918    9.6111501  -0.31228929   0.99648246    1.2755134    0.8111402   -3.5502959            3    5.4742698    7.7153919    7.9142569   0.79316052 -0.0063847916  0.040320838  0.078798868    5.2963164    5.2880265  -0.38673328   0.58194259   0.28946242    1.0186703        0.075     2.096141          0.5   0.11318559    4.4175235    2.8168275    30.801768 0.0021488919  -0.34132676  0.034469216   0.35332581    1.8319265   -1.3398154 
 1681000    11.103084    1.4755032    9.6275805  -0.28544964   0.98388723     1.280119   0.78709216   -3.5502959            3    5.5492613    7.7634948    7.9197535   0.96453566 -0.041503642   -0.1280302 -0.039078087    5.3765837    5.3623456            0            0 -0.075852663     1.024257        0.075    2.1002942          0.5   0.11380634    4.3934284    2.8070446    30.801768 -0.028718272  -0.45707998 -0.0079462315   0.34319125   -2.6545135    3.4557469 
 1682000    11.084394    1.4894625    9.5949318  -0.29649614   0.99319553    1.2695819   0.80961214   -3.5502959            3    5.5440051    7.8295049    7.9444207   0.85808961  0.014421843  -0.23729271  -0.11376644    5.3663869    5.3586279  -0.31829117    1.0112919  0.091271537    1.0405944        0.075    2.1019928          0.5    0.1156216    4.3244516    2.8284441    30.801768 -0.0047827747   -0.2905505 -0.025839997   0.37389705    2.6522557    2.4504888 
 1683000    11.088396    1.4729282    9.6154678  -0.29108503   0.98217019    1.2784733   0.78532702   -3.5502959            3    5.3683164     7.667361    7.7910681    0.6465199  0.047816689 -0.024213287 -0.020159156     5.196026    5.1816409            0            0   0.53442295     1.032056        0.075    2.0912009          0.5   0.11467289    4.3602284     2.812825    30.801768 -0.023363891  -0.36408937 0.0059180013    0.3948626    1.5372483    3.2188141 
 1684000    11.114144    1.5010599    9.6130843  -0.30144643    1.0009288    1.2843863   0.81264207   -3.5502959            3    5.5659814    7.8209297    7.8708135     1.006201 -0.011733035  -0.02351969  0.065228243    5.3876985    5.3784426            0            0  0.076628376    1.0280672        0.075    2.1135057          0.5   0.11422968    4.3771459    2.7879151    30.801768  0.033452627  -0.42221507 -0.0073079552   0.34929716 -0.083156751    0.6415353 
 1685000    11.116659    1.5124325    9.6042262  -0.30401622    1.0085123     1.300823   0.81433595   -3.5502959            3    5.7860477    7.8945456    8.0577552    1.4058424 -0.0002082752  -0.24723277  0.065693559    5.6073932    5.5961089  -0.64930054   0.69797847  -0.47879149    1.0224366        0.075    2.1039778          0.5   0.11360406    4.4012511    2.7997828    30.801768  0.018197577  -0.38711349 0.0037986373     0.329693 -0.039023218    5.7096697 
 1686000    11.099719    1.4864732    9.6132459  -0.27266939   0.99120217    1.2806272   0.79894009   -3.5502959            3     5.560082    7.8775801    7.9494225   0.85324336 0.00050675444 -0.017170077   0.10597403    5.3848051     5.373092  -0.86314346    1.5502787   0.26301386    1.0203667        0.075    2.1136623          0.5   0.11337408    4.4101792    2.8059703    30.801768  0.029562076  -0.42194797 -0.00068781577   0.31927484   0.70262164      3.54258 
 1687000     11.14037    1.5234453    9.6169251  -0.27944509    1.0158558    1.2893546   0.83420258   -3.5502959            3    5.5359264    7.8380665    7.8981774   0.87153531  0.014617602  -0.14350575  0.089274678    5.3529134    5.3476621            0            0  -0.16249314    1.0416081        0.075    2.1037277          0.5   0.11573423    4.3202429    2.8389124    30.801768  0.032172771  -0.35913261 -0.027616546   0.38333721    2.7816843    2.9565515 
 1688000    11.097535    1.5061736    9.5913616  -0.29288061    1.0043387    1.2919576   0.81328353   -3.5502959            3    5.5767729    7.8365562    7.9392337   0.95452894  0.021672166  -0.24017091  0.028287095    5.3983493    5.3881286   0.14154435    1.2322515   0.09120612    1.0295586        0.075    2.1023601          0.5   0.11439539    4.3708053    2.8193848    30.801768 -0.020628014  -0.33678889 -0.0028690929   0.44294761   0.64097551    6.1404669 
 1689000       11.094     1.480554    9.6134457  -0.28427993    0.9872552    1.2986807   0.78034908   -3.5502959            3    5.6281463    7.9056028    7.9520409    1.0267953 -0.0037655792 -0.099378968  0.023815904    5.4569481    5.4385203  -0.68397279   0.88862948 0.0044674798    1.0166308        0.075    2.0853021          0.5   0.11295898    4.4263856    2.7692684    30.801768 -0.00063037378  -0.40178577  0.019449357   0.31010328   0.36736813    3.2049523 
 1690000    11.132571    1.4983438    9.6342274  -0.29978762   0.99911771    1.3016932   0.79810619   -3.5502959            3    5.6352552    7.8310768    8.0009202    1.0737685  0.044048175  0.018386428   0.11528309    5.4601613    5.4451893            0            0  -0.45472334    1.0284823        0.075    2.0996899          0.5   0.11427582     4.375379    2.8056883    30.801768 0.0060945736  -0.35871664  0.019828761     0.335941    1.0009195   0.45010306 
 1691000    11.090632    1.4759773    9.6146542  -0.28420979   0.98420338    1.2781581   0.78892396   -3.5502959            3    5.5039621    7.8524846    7.9029859   0.75641567 0.0072193946  -0.12488009  0.018549334    5.3308826    5.3173327   0.13949031    2.0567493   0.32190608    1.0168107        0.075    2.0877512          0.5   0.11297897    4.4256024    2.8165683    30.801768 -0.014943938  -0.29809122  0.009870937   0.26703737   0.86738835    2.3636902 
 1692000    11.101039    1.4989892    9.6020501  -0.29458726   0.99954805    1.2919167   0.80532987   -3.5502959            3    5.5871905    7.7981342     7.928213    1.0352242 0.0086538808  0.049209596   0.17127646    5.4105118    5.3985521   0.25986923   0.21140125   0.16896118    1.0343424        0.075    2.0939235          0.5   0.11492693    4.3505903    2.8138222    30.801768  0.053499647  -0.45245976 -0.017582981   0.32291152    1.3681471   -1.2288301 
 1693000    11.095457    1.4828946    9.6125622  -0.29803458   0.98881595    1.2861679   0.79127715   -3.5502959            3    5.4455492    7.6906145    7.8748605   0.77117275 -0.0019951376   0.11671194  -0.12188772    5.2719535    5.2577503   0.31072619   0.62713151    0.3266809    1.0148432        0.075    2.1134643          0.5   0.11276036    4.4341823    2.7960048    30.801768  0.019414323  -0.32118813 -0.010339571   0.24322974   0.26559414     1.382504 
 1694000    11.147963    1.5320594    9.6159032  -0.32660489    1.0215998    1.3065044   0.83235752   -3.5502959            3    5.4407946    7.6515831    7.8284032   0.84239741  0.027164828  -0.21623501 -0.021104827    5.2581864    5.2500262   0.38868929     1.352329   0.35492011     1.034141        0.075    2.1102962          0.5   0.11490455    4.3514378    2.8288524    30.801768  0.035307026  -0.37905184  0.010602486   0.32583792   -1.0207877    7.5000232 
 1695000    11.136646     1.483257     9.653389  -0.28098195   0.98905762    1.2582582   0.81025527   -3.5502959            3    5.5492763    7.8241555    7.9036457   0.92002772  0.028821193  0.039153256 -0.065187012     5.371517    5.3655526    1.0451628   0.66872564  -0.11377022    1.0032992        0.075     2.094892          0.5   0.11147768    4.4852026    2.7976332    30.801768 0.0065480406  -0.31516144 -0.0033980631   0.32696202   -2.4081204   -3.2925628 
 1696000    11.107168    1.5033125    9.6038559  -0.29951243    1.0024309    1.3045281   0.80173889   -3.5502959            3    5.5513578     7.844625    7.9045167   0.90493164  0.020257886 -0.078233954  0.055672743    5.3754669     5.360878  0.045753217    2.2784328   0.14361983    1.0162397        0.075    2.0779171          0.5   0.11291553     4.428089    2.7873868    30.801768 -0.023529788  -0.37152809 -0.012056219   0.32807637   0.11106352    3.6518441 
 1697000    11.150467    1.4835097    9.6669571  -0.27871957   0.98922608    1.2567943    0.8115102   -3.5502959            3    5.7319805    7.9535112    8.0079169    1.2345133 -0.00027439127   -0.2658814  0.042581713    5.5539459    5.5484705     1.480309   0.88733571   0.12801601    1.0157623        0.075     2.070074          0.5   0.11286248    4.4301702    2.7919212    30.801768 -0.021453299   -0.4045792 0.0085776095   0.34344867    2.4318171    1.2206169 
 1698000    11.154882     1.521548    9.6333341  -0.29967464    1.0145906    1.2974281   0.82672151   -3.5502959            3    5.7559537    7.8968584    8.0223827      1.34862 -0.042703696   0.13431761  0.076893306    5.5745819    5.5665106 -0.018373881    1.8734777    0.3545147    1.0369462        0.075     2.061921          0.5   0.11521625    4.3396657    2.8326579    30.801768 -0.0001358363  -0.40268377 -0.005590261   0.37616682  -0.79578803    3.3414412 
 1699000    11.118218    1.5138971    9.6043209  -0.28339495    1.0094889    1.3116052    0.8087868   -3.5502959            3    5.6842094    7.9388463    8.0334994    1.0802826 0.0056088113  -0.19902617  0.066303613    5.5067723    5.4926963 -0.073615986    1.3380831   0.18763249    1.0179566        0.075    2.0471528          0.5   0.11310629    4.4206207    2.8189175    30.801768 -0.014260944  -0.37984575 -0.010988817   0.40749626    1.3932692    4.4200867 
 1700000     11.13128    1.4931956    9.6380841  -0.28344669   0.99568483    1.2733969   0.81122003   -3.5502959            3    5.4845278    7.7270298    7.8823421    0.8442116  -0.01665135  -0.13789783 0.0045066464    5.3065569    5.2985936            0            0 -0.073569561    1.0232234        0.075    2.0768918          0.5   0.11369149    4.3978664    2.8376545    30.801768 -0.016231304  -0.38116449 0.0035059875   0.38646702  -0.37543375    2.4981972 
Loop time of 750.278 on 1 procs for 1000000 steps with 4504 atoms

Performance: 575786.750 tau/day, 1332.840 timesteps/s
98.8% CPU use with 1 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 96.438     | 96.438     | 96.438     |   0.0 | 12.85
Bond    | 174.24     | 174.24     | 174.24     |   0.0 | 23.22
Neigh   | 285.47     | 285.47     | 285.47     |   0.0 | 38.05
Comm    | 17.185     | 17.185     | 17.185     |   0.0 |  2.29
Output  | 2.0535     | 2.0535     | 2.0535     |   0.0 |  0.27
Modify  | 160.24     | 160.24     | 160.24     |   0.0 | 21.36
Other   |            | 14.66      |            |       |  1.95

Nlocal:    4504 ave 4504 max 4504 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    1433 ave 1433 max 1433 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    9801 ave 9801 max 9801 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 9801
Ave neighs/atom = 2.17607
Ave special neighs/atom = 6.98401
Neighbor list builds = 148411
Dangerous builds = 0

#--- Write Restart File ---#

write_restart  ecs.rst
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
WARNING: compute stress/mop does not account for bond potentials (src/USER-MISC/compute_stress_mop.cpp:193)
shell          python post.py
shell          mkdir $(v_Wall_v)_V
shell          mkdir 0.5_V
shell          cp -f *.csv $(v_Wall_v)_V
s