LAMMPS (5 Jun 2019)
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:88)
  using 1 OpenMP thread(s) per MPI task
#--- Brush Variables---#
variable      f      index  1 2 0.5
variable      M      equal  $(v_f * 30)                 # The number of polymer chains on each brush
variable      M      equal  30                 
variable      N      string 30                 # The number of beads per chain
variable      xhi    equal  $(sqrt(v_f) * 20)                 # The width of the polymer Brush
variable      xhi    equal  20                 
variable      yhi    equal  $(sqrt(v_f) * 20)                 # The length of the polymer Brush
variable      yhi    equal  20                 
variable      wthick equal  3                  # The thickness of the walls wthick=1,2,3,4 gives 2,3,4,6 layers respectively

#--- Simulation Variables ---#
variable       Temp      index 1        #0.8 1 1.68                 #[Grest96]
variable       Tstep     equal 0.005                       # Timestep in Tau (default = 0.005)
variable       Nequil    equal 300000                       # Number of timesteps to equilibrate
variable       Ncomp     equal 700000                     # Number of timesteps to compress - until no more occilation of walls
variable       Nshear    equal 800000      #2000000                      # Number of timesteps to shear - use approx 4ns for 10m/s
variable       Nthermo   equal 1000                        # Number of timesteps between thermo data prints
variable       Ndump_e   equal 10000
variable       Ndump_c   equal 10000                      # Number of timesteps per dump file (compression)
variable       Ndump_s   equal 10000                       # Number of timesteps per dump file (shear)
variable       Wall_v    index 0.5   #0.001 0.01 0.1 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2   # 0.005 0.05 0.1 0.5 1.5 0.001 0.003 0.2 0.0002 2                      # Wall velocity (A/fs) - equal to 10 m/s
variable       Pcomp     index 3 #3 4 5 8 10 1.50 0.5 0.05

label          sim
include        MDPBB.in
# This is an input script that creates a mono disperse polymer brush bilayer
# A coarse grained bead-spring model is used for the polymers which are end
# grafted to the surfaces of 2 opposing FCC walls at random sites.

#--- Initialization ---#

dimension     3
boundary      p p f
units         lj
atom_style    bond


#--- Moved to main.in ---#
#variable      M      equal  50                # The number of polymer chains on each brush
#variable      N      string 80                # The number of beads per chain
#variable      xhi    equal  15                # The width of the polymer Brush
#variable      yhi    equal  20                # The length of the polymer Brush
#variable      wthick equal  3                 # The thickness of the walls wthick=1,2,3,4 gives 2,3,4,6 layers respectively

variable      zhi    equal  $(1.1 * 2 * v_N + (2 * v_wthick))  # The initial height of the simulation box the value is such that no overlaps occur
variable      zhi    equal  72  
variable      z0     equal  $((v_zhi)/4 - (v_N)/30)          # This is the location at which to place the CoM of the molecule
variable      z0     equal  17          

print "The number of grafted chains = $(v_M)"
The number of grafted chains = 30
print "The number of beads per chain = $(v_N)"
The number of beads per chain = 30

variable      check  equal count(all)         # The number of atoms in the system
variable      ntwall equal count(twall)       # The number of atoms in the top wall
variable      nbwall equal count(bwall)       # The number of atoms in the bottom wall
variable      s equal 234897  #45335              # Seed for the RNG

print "zhi = ${zhi}"
zhi = 72

#--- Create the simulation box ---#

region        sbox block 0 ${xhi} 0 ${yhi} 0 ${zhi}
region        sbox block 0 20 0 ${yhi} 0 ${zhi}
region        sbox block 0 20 0 20 0 ${zhi}
region        sbox block 0 20 0 20 0 72
create_box    4 sbox bond/types 3 extra/bond/per/atom 12 extra/special/per/atom 2
Created orthogonal box = (0 0 0) to (20 20 72)
  1 by 1 by 1 MPI processor grid

mass          1 2.0                   # Wall atoms that are not grafted
mass          2 1.0                   # Grafted bead
mass          3 1.0                   # The rest of the beads on the chain
mass          4 2.0                   # Wall atoms that the chains are grafted to

bond_style    hybrid fene harmonic    # Finitely extensible linearly elastic bond between neighbouring beads
#bond_coeff    1 fene 30.0 1.5 0.0 0.0      # Values obtained from literature [Grest, Galushcko]
bond_coeff    1 fene 30.0 30.0 0.0 0.0
bond_coeff    2 fene 30.0 30.0 0.0 0.0       # This is the grafting bond between the polymer and the wall atom
special_bonds fene                    #
  0 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.000416 secs
pair_style	  lj/cut 1.122462         # LJ potential with rc=2^1/6
#pair_coeff	  * * 1.0 1.0             # LJ potential acts between all atoms
pair_coeff    1 1 0.0 0.0
pair_coeff    1 2 1.0 1.0
pair_coeff    1 3 1.0 1.0
pair_coeff    2 2 1.0 1.0
pair_coeff    2 3 1.0 1.0
pair_coeff    2 4 1.0 1.0
pair_coeff    3 3 1.0 1.0
pair_coeff    3 4 1.0 1.0
pair_coeff    4 4 0.0 0.0
neighbor      10 bin                  #
neigh_modify  one 4000

#--- Create and read the molecule file ---#
python        BSMolf input 1 $N format i file BSMolf.py
python        BSMolf input 1 30 format i file BSMolf.py
python        BSMolf invoke    # Call the python function with number of beads to write the mol file
molecule      bs     bsmol.txt     # Read the Mol file to define the polymer chain
Read molecule bs:
  30 atoms with max type 2
  29 bonds with max type 1
  0 angles with max type 0
  0 dihedrals with max type 0
  0 impropers with max type 0

#--- Define the FCC wall region ---#
region        wall  block 0 ${xhi} 0 ${yhi} 0 ${wthick}
region        wall  block 0 20 0 ${yhi} 0 ${wthick}
region        wall  block 0 20 0 20 0 ${wthick}
region        wall  block 0 20 0 20 0 3
lattice       fcc 1
Lattice spacing in x,y,z = 1.5874 1.5874 1.5874

#--- Create the Top Brush  (At the bottom then rotate 180 degrees to top) ---#

create_atoms  1 region wall
Created 1352 atoms
  create_atoms CPU = 0.0018204 secs
group         twall  region wall
1352 atoms in group twall
#group         tsurf  region wsurf

# A loop to insert the Chains into the sim box
variable      i loop $M                                   # Index to insert N total number of chains
variable      i loop 30                                   
label         loop                                        # Start of loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 850                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[850]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 213                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[213]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1022                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1022]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1031                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1031]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1031 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1031                         
1 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 1
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 1
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1031]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1031]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1352                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1352+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 9.5244063118092 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 9.5244063118092 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.000303 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1382               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1031 $b
create_bonds  single/bond 2 1031 1353
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0047 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 982                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[982]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1332                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1332]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1332 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1332                         
2 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 2
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 2
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1332]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1332]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1382                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1382+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 19.8425131496025 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 19.8425131496025 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 9.29e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1412               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1332 $b
create_bonds  single/bond 2 1332 1383
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0021245 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 643                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[643]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 454                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[454]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 585                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[585]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 979                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[979]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 979 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 979                         
3 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 3
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 3
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[979]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[979]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1412                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1412+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 7.937005259841 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 7.937005259841 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.26e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1442               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 979 $b
create_bonds  single/bond 2 979 1413
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0021278 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1211                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1211]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1211 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1211                         
4 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 4
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 4
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1211]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1211]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1442                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1442+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 15.874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 15.874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.24e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1472               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1211 $b
create_bonds  single/bond 2 1211 1443
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019884 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 11                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[11]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 258                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[258]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 442                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[442]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1095                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1095]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1095 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1095                         
5 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 5
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 5
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1095]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1095]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1472                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1472+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 12.6992084157456 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 12.6992084157456 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.41e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1502               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1095 $b
create_bonds  single/bond 2 1095 1473
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0042244 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 960                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[960]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 960 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 960                         
6 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 6
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 6
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[960]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[960]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1502                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1502+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 8.7307057858251 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 8.7307057858251 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.47e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1532               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 960 $b
create_bonds  single/bond 2 960 1503
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0023238 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 931                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[931]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 931 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 931                         
7 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 7
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 7
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[931]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[931]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1532                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1532+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 6.3496042078728 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 6.3496042078728 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.19e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1562               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 931 $b
create_bonds  single/bond 2 931 1533
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0021104 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 755                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[755]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 755 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 755                         
8 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 8
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 8
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[755]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[755]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1562                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1562+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 1.5874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 1.5874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.11e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1592               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 755 $b
create_bonds  single/bond 2 755 1563
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0048886 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1053                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1053]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 832                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[832]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 832 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 832                         
9 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 9
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 9
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[832]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[832]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1592                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1592+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 3.9685026299205 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 3.9685026299205 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.53e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1622               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 832 $b
create_bonds  single/bond 2 832 1593
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0042468 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 838                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[838]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 163                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[163]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1178                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1178]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 814                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[814]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1242                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1242]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 942                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[942]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1214                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1214]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 796                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[796]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 796 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 796                         
10 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 10
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 10
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[796]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[796]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1622                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1622+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 3.9685026299205 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 3.9685026299205 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.18e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1652               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 796 $b
create_bonds  single/bond 2 796 1623
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020653 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1150                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1150]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1133                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1133]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 563                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[563]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1350                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1350]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1318                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1318]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 979                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[979]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 979 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 979                         
10 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 10
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 11
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[979]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[979]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1652                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1652+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1270                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1270]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 320                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[320]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1261                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1261]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 177                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[177]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1150                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1150]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1263                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1263]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1263 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1263                         
11 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 11
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 11
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1263]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1263]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1652                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1652+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 17.4614115716502 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 5.5559036818887 17.4614115716502 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.82e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1682               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1263 $b
create_bonds  single/bond 2 1263 1653
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0036316 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 463                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[463]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 352                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[352]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 898                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[898]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 631                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[631]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 196                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[196]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1245                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1245]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1293                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1293]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1223                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1223]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1223 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1223                         
12 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 12
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 12
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1223]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1223]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1682                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1682+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 15.874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 15.874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.23e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1712               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1223 $b
create_bonds  single/bond 2 1223 1683
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020869 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1078                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1078]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 594                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[594]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 502                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[502]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 948                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[948]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 948 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 948                         
13 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 13
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 13
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[948]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[948]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1712                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1712+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 8.7307057858251 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 8.7307057858251 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 6.37e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1742               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 948 $b
create_bonds  single/bond 2 948 1713
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0096211 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 127                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[127]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 512                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[512]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 590                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[590]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 445                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[445]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 825                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[825]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 387                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[387]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 323                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[323]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 117                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[117]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 921                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[921]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 992                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[992]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 992 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 992                         
14 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 14
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 14
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[992]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[992]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1742                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1742+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 10.3181068377933 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 10.3181068377933 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.07e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1772               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 992 $b
create_bonds  single/bond 2 992 1743
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0015321 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 456                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[456]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 676                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[676]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 582                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[582]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 307                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[307]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 784                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[784]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 784 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 784                         
15 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 15
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 15
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[784]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[784]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1772                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1772+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 3.9685026299205 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 3.9685026299205 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.3e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1802               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 784 $b
create_bonds  single/bond 2 784 1773
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0061555 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 247                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[247]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1193                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1193]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 624                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[624]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1326                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1326]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1038                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1038]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1243                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1243]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1243 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1243                         
16 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 16
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 16
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1243]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1243]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1802                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1802+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 15.874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 15.874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.85e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1832               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1243 $b
create_bonds  single/bond 2 1243 1803
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0060118 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1344                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1344]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1344 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1344                         
17 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 17
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 17
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1344]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1344]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1832                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1832+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 19.8425131496025 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 19.8425131496025 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.16e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1862               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1344 $b
create_bonds  single/bond 2 1344 1833
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0030841 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 641                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[641]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 449                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[449]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 96                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[96]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 350                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[350]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 246                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[246]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 555                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[555]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 808                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[808]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 808 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 808                         
18 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 18
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 18
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[808]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[808]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1862                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1862+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 3.9685026299205 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 3.9685026299205 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.9e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1892               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 808 $b
create_bonds  single/bond 2 808 1863
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0035626 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 643                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[643]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1123                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1123]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1123 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1123                         
19 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 19
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 19
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1123]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1123]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1892                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1892+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 12.6992084157456 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 12.6992084157456 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 9.46e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1922               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1123 $b
create_bonds  single/bond 2 1123 1893
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0036125 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 202                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[202]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 224                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[224]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1084                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1084]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1084 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1084                         
20 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 20
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 20
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1084]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1084]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1922                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1922+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 11.9055078897615 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.874010519682 11.9055078897615 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 4.75e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1952               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1084 $b
create_bonds  single/bond 2 1084 1923
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0035448 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 858                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[858]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 306                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[306]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 436                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[436]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 365                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[365]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1064                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1064]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1064 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1064                         
21 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 21
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 21
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1064]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1064]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1952                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1952+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 11.9055078897615 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 11.9055078897615 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.05e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 1982               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1064 $b
create_bonds  single/bond 2 1064 1953
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.005466 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1177                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1177]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 588                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[588]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1349                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1349]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 882                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[882]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1238                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1238]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 582                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[582]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 734                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[734]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 989                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[989]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 586                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[586]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 397                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[397]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 19                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[19]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 203                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[203]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 779                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[779]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 779 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 779                         
22 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 22
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 22
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[779]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[779]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 1982                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 1982+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 1.5874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 1.5874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.05e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2012               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 779 $b
create_bonds  single/bond 2 779 1983
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0034505 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 144                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[144]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 686                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[686]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 244                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[244]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 445                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[445]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 53                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[53]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1270                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1270]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 465                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[465]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 488                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[488]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 659                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[659]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 994                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[994]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 249                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[249]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 684                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[684]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 684 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 684                         
23 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 23
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 23
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[684]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[684]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2012                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2012+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 0.7937005259841 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 0.7937005259841 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.91e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2042               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 684 $b
create_bonds  single/bond 2 684 2013
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0035624 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 649                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[649]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1248                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1248]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1248 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1248                         
24 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 24
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 24
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1248]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1248]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2042                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2042+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 16.6677110456661 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.0488126236184 16.6677110456661 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.52e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2072               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1248 $b
create_bonds  single/bond 2 1248 2043
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019182 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 329                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[329]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 836                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[836]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 836 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 836                         
25 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 25
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 25
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[836]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[836]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2072                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2072+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 5.5559036818887 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 5.5559036818887 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 6.86e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2102               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 836 $b
create_bonds  single/bond 2 836 2073
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019407 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 290                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[290]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1204                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1204]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1204 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1204                         
26 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 26
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 26
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1204]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1204]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2102                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2102+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 16.6677110456661 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 16.6677110456661 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 6.87e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2132               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1204 $b
create_bonds  single/bond 2 1204 2103
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0043346 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 241                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[241]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 430                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[430]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 515                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[515]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 723                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[723]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 723 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 723                         
27 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 27
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 27
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[723]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[723]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2132                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2132+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 0 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 0 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 9.59e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2162               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 723 $b
create_bonds  single/bond 2 723 2133
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019196 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 562                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[562]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 1075                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[1075]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 1075 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 1075                         
28 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 28
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 28
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[1075]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[1075]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2162                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2162+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 13.4929089417297 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 13.4929089417297 11.1118073637774 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 13.4929089417297 11.1118073637774 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.16e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2192               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 1075 $b
create_bonds  single/bond 2 1075 2163
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019638 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 771                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[771]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 771 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 771                         
29 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 29
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 29
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[771]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[771]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2192                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2192+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 1.5874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 16.6677110456661 1.5874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.53e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2222               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 771 $b
create_bonds  single/bond 2 771 2193
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0042415 secs
next i
jump MDPBB.in loop    # End of the loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 660                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[660]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
jump MDPBB.in loop
variable      randni equal round(random(1,${ntwall},$s))  # Pick a random "top" wall atom
variable      randni equal round(random(1,1352,$s))  
variable      randni equal round(random(1,1352,234897))  
variable      randatomi equal ${randni}                   # This is to obtain an integer number for atom-id
variable      randatomi equal 787                   
variable      randzi equal z[${randatomi}]                # Determine the z coordinate of the chosen atom
variable      randzi equal z[787]                
# if the chosen atom is not a surface atom then restart the loop
if            "${randzi} < $(v_wthick - 0.7)" then "jump MDPBB.in loop"
set           atom ${randatomi} type 4                    # Set this grafted wall atom as a new type
set           atom 787 type 4                    
  1 settings made for type
group         twg id ${randatomi}                         # Add this atom to a top-wall-grafted group
group         twg id 787                         
30 atoms in group twg
variable      twgcount equal count(twg)
print         "twg contains ${twgcount}"
twg contains 30
print         "i = $(v_i)"                                # The index i should always be equal to the number of atom in twg
i = 30
variable      x0 equal x[${randatomi}]                    # Determine its x-coord
variable      x0 equal x[787]                    
variable      y0 equal y[${randatomi}]                    # Determine its y-coord
variable      y0 equal y[787]                    
variable      check0 equal ${check}                       # Count the number of atoms in the simulation
variable      check0 equal 2222                       
variable      b equal ${check}+1                          # The grafted bead id will be one higher after being inserted
variable      b equal 2222+1                          
if            "${twgcount} != $(v_i)" then "jump MDPBB.in loop"
# Otherwise insert the chain directly above the chosen wall atom pointing perpendicular to the wall
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 2.3811015779523 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 2.3811015779523 3.1748021039364 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 2.3811015779523 3.1748021039364 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 5.25e-05 secs
variable      check1 equal ${check}               # Count the new total number of atoms
variable      check1 equal 2252               
# Check that the molecule has indeed been inserted (This check is no longer an issue).
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomi} $b" "next i"
create_bonds  single/bond 2 ${randatomi} $b
create_bonds  single/bond 2 787 $b
create_bonds  single/bond 2 787 2223
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0020023 secs
next i
jump MDPBB.in loop    # End of the loop

# Rotate the created brush about the centre of the simulation box by 180 degrees to make it true top brush
displace_atoms all rotate $(v_xhi/2.0) $(v_yhi/2.0) $(v_zhi/2.0 - 1) 1 0 0 180 units box
displace_atoms all rotate 10 $(v_yhi/2.0) $(v_zhi/2.0 - 1) 1 0 0 180 units box
displace_atoms all rotate 10 10 $(v_zhi/2.0 - 1) 1 0 0 180 units box
displace_atoms all rotate 10 10 35 1 0 0 180 units box

variable      ntop0 equal ${check}          # Count the total number of atoms in the top brush
variable      ntop0 equal 2252          

#--- Create the Bottom brush ---#

# Repeating the same procedure as above again but with new atoms

create_atoms  1 region wall
Created 1352 atoms
  create_atoms CPU = 0.0002613 secs
group         bwall region wall
1352 atoms in group bwall
variable      nbwall0 equal ${nbwall}
variable      nbwall0 equal 1352

variable      j loop $M
variable      j loop 30
label         loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2339
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2339]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2408
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2408]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2805
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2805]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2714
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2714]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2768
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2768]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2922
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2922]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3375
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3375]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3375 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3375                         
1 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 1
print         "j = $(v_j)"
j = 1
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3375]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3375]
variable      check0 equal ${check}
variable      check0 equal 3604
variable      b equal ${check}+1
variable      b equal 3604+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 12.6992084157456 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 12.6992084157456 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.000148 secs
variable      check1 equal ${check}
variable      check1 equal 3634
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3375 $b
create_bonds  single/bond 2 3375 3605
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0018697 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3337
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3337]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3591
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3591]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3591 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3591                         
2 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 2
print         "j = $(v_j)"
j = 2
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3591]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3591]
variable      check0 equal ${check}
variable      check0 equal 3634
variable      b equal ${check}+1
variable      b equal 3634+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 19.0488126236184 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 19.0488126236184 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.07e-05 secs
variable      check1 equal ${check}
variable      check1 equal 3664
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3591 $b
create_bonds  single/bond 2 3591 3635
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.002337 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2388
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2388]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2962
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2962]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3410
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3410]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3528
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3528]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3528 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3528                         
3 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 3
print         "j = $(v_j)"
j = 3
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3528]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3528]
variable      check0 equal ${check}
variable      check0 equal 3664
variable      b equal ${check}+1
variable      b equal 3664+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 18.2551120976343 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 18.2551120976343 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 9.31e-05 secs
variable      check1 equal ${check}
variable      check1 equal 3694
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3528 $b
create_bonds  single/bond 2 3528 3665
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0021644 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2699
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2699]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3000
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3000]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3000 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3000                         
4 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 4
print         "j = $(v_j)"
j = 4
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3000]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3000]
variable      check0 equal ${check}
variable      check0 equal 3694
variable      b equal ${check}+1
variable      b equal 3694+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 2.3811015779523 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 2.3811015779523 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.24e-05 secs
variable      check1 equal ${check}
variable      check1 equal 3724
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3000 $b
create_bonds  single/bond 2 3000 3695
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.003746 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2797
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2797]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2717
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2717]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3345
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3345]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3175
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3175]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3175 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3175                         
5 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 5
print         "j = $(v_j)"
j = 5
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3175]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3175]
variable      check0 equal ${check}
variable      check0 equal 3724
variable      b equal ${check}+1
variable      b equal 3724+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 6.3496042078728 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 15.0803099936979 6.3496042078728 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.51e-05 secs
variable      check1 equal ${check}
variable      check1 equal 3754
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3175 $b
create_bonds  single/bond 2 3175 3725
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019794 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3577
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3577]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2487
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2487]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2451
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2451]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2643
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2643]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3259
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3259]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3259 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3259                         
6 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 6
print         "j = $(v_j)"
j = 6
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3259]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3259]
variable      check0 equal ${check}
variable      check0 equal 3754
variable      b equal ${check}+1
variable      b equal 3754+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 9.5244063118092 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 9.5244063118092 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001227 secs
variable      check1 equal ${check}
variable      check1 equal 3784
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3259 $b
create_bonds  single/bond 2 3259 3755
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.002379 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3423
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3423]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3423 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3423                         
7 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 7
print         "j = $(v_j)"
j = 7
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3423]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3423]
variable      check0 equal ${check}
variable      check0 equal 3784
variable      b equal ${check}+1
variable      b equal 3784+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 14.2866094677138 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 14.2866094677138 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.62e-05 secs
variable      check1 equal ${check}
variable      check1 equal 3814
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3423 $b
create_bonds  single/bond 2 3423 3785
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019096 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2293
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2293]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2278
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2278]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2757
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2757]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2999
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2999]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 2999 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 2999                         
8 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 8
print         "j = $(v_j)"
j = 8
variable      x0 equal x[${randatomj}]
variable      x0 equal x[2999]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[2999]
variable      check0 equal ${check}
variable      check0 equal 3814
variable      b equal ${check}+1
variable      b equal 3814+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 1.5874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 1.5874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 9.71e-05 secs
variable      check1 equal ${check}
variable      check1 equal 3844
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 2999 $b
create_bonds  single/bond 2 2999 3815
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0042589 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3322
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3322]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2797
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2797]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3249
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3249]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2865
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2865]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2293
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2293]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2434
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2434]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3437
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3437]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3495
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3495]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3495 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3495                         
9 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 9
print         "j = $(v_j)"
j = 9
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3495]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3495]
variable      check0 equal ${check}
variable      check0 equal 3844
variable      b equal ${check}+1
variable      b equal 3844+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 15.874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 18.2551120976343 15.874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.61e-05 secs
variable      check1 equal ${check}
variable      check1 equal 3874
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3495 $b
create_bonds  single/bond 2 3495 3845
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0044712 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2418
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2418]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3086
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3086]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3352
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3352]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3352 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3352                         
10 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 10
print         "j = $(v_j)"
j = 10
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3352]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3352]
variable      check0 equal ${check}
variable      check0 equal 3874
variable      b equal ${check}+1
variable      b equal 3874+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 13.4929089417297 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 13.4929089417297 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001105 secs
variable      check1 equal ${check}
variable      check1 equal 3904
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3352 $b
create_bonds  single/bond 2 3352 3875
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0049603 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3302
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3302]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3474
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3474]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3588
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3588]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3588 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3588                         
11 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 11
print         "j = $(v_j)"
j = 11
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3588]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3588]
variable      check0 equal ${check}
variable      check0 equal 3904
variable      b equal ${check}+1
variable      b equal 3904+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 19.8425131496025 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 19.8425131496025 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001021 secs
variable      check1 equal ${check}
variable      check1 equal 3934
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3588 $b
create_bonds  single/bond 2 3588 3905
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0060913 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2533
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2533]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2597
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2597]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3405
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3405]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2400
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2400]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2552
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2552]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2499
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2499]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2274
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2274]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2286
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2286]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2581
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2581]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2569
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2569]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2372
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2372]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3155
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3155]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3155 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3155                         
12 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 12
print         "j = $(v_j)"
j = 12
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3155]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3155]
variable      check0 equal ${check}
variable      check0 equal 3934
variable      b equal ${check}+1
variable      b equal 3934+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 6.3496042078728 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.1433047338569 6.3496042078728 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.79e-05 secs
variable      check1 equal ${check}
variable      check1 equal 3964
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3155 $b
create_bonds  single/bond 2 3155 3935
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0055643 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3508
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3508]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3508 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3508                         
13 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 13
print         "j = $(v_j)"
j = 13
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3508]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3508]
variable      check0 equal ${check}
variable      check0 equal 3964
variable      b equal ${check}+1
variable      b equal 3964+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 18.2551120976343 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 1.5874010519682 18.2551120976343 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.93e-05 secs
variable      check1 equal ${check}
variable      check1 equal 3994
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3508 $b
create_bonds  single/bond 2 3508 3965
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0061185 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2857
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2857]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3423
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3423]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3423 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3423                         
13 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 13
print         "j = $(v_j)"
j = 14
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3423]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3423]
variable      check0 equal ${check}
variable      check0 equal 3994
variable      b equal ${check}+1
variable      b equal 3994+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3228
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3228]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3228 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3228                         
14 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 14
print         "j = $(v_j)"
j = 14
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3228]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3228]
variable      check0 equal ${check}
variable      check0 equal 3994
variable      b equal ${check}+1
variable      b equal 3994+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 14.2866094677138 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 14.2866094677138 8.7307057858251 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 14.2866094677138 8.7307057858251 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001032 secs
variable      check1 equal ${check}
variable      check1 equal 4024
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3228 $b
create_bonds  single/bond 2 3228 3995
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0028672 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3270
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3270]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2940
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2940]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 2940 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 2940                         
15 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 15
print         "j = $(v_j)"
j = 15
variable      x0 equal x[${randatomj}]
variable      x0 equal x[2940]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[2940]
variable      check0 equal ${check}
variable      check0 equal 4024
variable      b equal ${check}+1
variable      b equal 4024+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 0.7937005259841 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 3.1748021039364 0.7937005259841 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.09e-05 secs
variable      check1 equal ${check}
variable      check1 equal 4054
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 2940 $b
create_bonds  single/bond 2 2940 4025
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0050518 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2320
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2320]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3309
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3309]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3250
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3250]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2319
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2319]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2916
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2916]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2564
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2564]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2661
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2661]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2459
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2459]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3594
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3594]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3301
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3301]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2440
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2440]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2349
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2349]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3216
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3216]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3216 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3216                         
16 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 16
print         "j = $(v_j)"
j = 16
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3216]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3216]
variable      check0 equal ${check}
variable      check0 equal 4054
variable      b equal ${check}+1
variable      b equal 4054+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 8.7307057858251 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 8.7307057858251 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 7.92e-05 secs
variable      check1 equal ${check}
variable      check1 equal 4084
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3216 $b
create_bonds  single/bond 2 3216 4055
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0021991 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3269
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3269]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2286
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2286]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3152
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3152]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3152 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3152                         
17 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 17
print         "j = $(v_j)"
j = 17
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3152]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3152]
variable      check0 equal ${check}
variable      check0 equal 4084
variable      b equal ${check}+1
variable      b equal 4084+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 7.1433047338569 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 7.1433047338569 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001151 secs
variable      check1 equal ${check}
variable      check1 equal 4114
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3152 $b
create_bonds  single/bond 2 3152 4085
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0021688 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2376
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2376]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2356
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2356]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2961
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2961]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2680
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2680]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2433
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2433]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3239
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3239]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3239 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3239                         
18 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 18
print         "j = $(v_j)"
j = 18
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3239]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3239]
variable      check0 equal ${check}
variable      check0 equal 4114
variable      b equal ${check}+1
variable      b equal 4114+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 7.937005259841 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 19.8425131496025 7.937005259841 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001039 secs
variable      check1 equal ${check}
variable      check1 equal 4144
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3239 $b
create_bonds  single/bond 2 3239 4115
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0019596 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3093
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3093]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2494
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2494]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2279
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2279]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2546
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2546]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3295
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3295]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3295 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3295                         
19 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 19
print         "j = $(v_j)"
j = 19
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3295]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3295]
variable      check0 equal ${check}
variable      check0 equal 4144
variable      b equal ${check}+1
variable      b equal 4144+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 11.1118073637774 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0.7937005259841 11.1118073637774 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001077 secs
variable      check1 equal ${check}
variable      check1 equal 4174
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3295 $b
create_bonds  single/bond 2 3295 4145
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0067228 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2594
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2594]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2700
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2700]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2835
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2835]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2504
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2504]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2917
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2917]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3026
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3026]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2607
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2607]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3476
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3476]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3476 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3476                         
20 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 20
print         "j = $(v_j)"
j = 20
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3476]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3476]
variable      check0 equal ${check}
variable      check0 equal 4174
variable      b equal ${check}+1
variable      b equal 4174+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 16.6677110456661 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 9.5244063118092 16.6677110456661 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001263 secs
variable      check1 equal ${check}
variable      check1 equal 4204
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3476 $b
create_bonds  single/bond 2 3476 4175
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0025848 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2927
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2927]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2422
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2422]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2511
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2511]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2525
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2525]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2954
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2954]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2474
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2474]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3462
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3462]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3473
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3473]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3561
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3561]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3170
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3170]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3069
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3069]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2855
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2855]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3550
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3550]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3420
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3420]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3420 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3420                         
21 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 21
print         "j = $(v_j)"
j = 21
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3420]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3420]
variable      check0 equal ${check}
variable      check0 equal 4204
variable      b equal ${check}+1
variable      b equal 4204+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 15.0803099936979 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 7.937005259841 15.0803099936979 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.33e-05 secs
variable      check1 equal ${check}
variable      check1 equal 4234
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3420 $b
create_bonds  single/bond 2 3420 4205
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0025719 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2632
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2632]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3569
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3569]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3378
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3378]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2844
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2844]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2984
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2984]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 2984 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 2984                         
22 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 22
print         "j = $(v_j)"
j = 22
variable      x0 equal x[${randatomj}]
variable      x0 equal x[2984]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[2984]
variable      check0 equal ${check}
variable      check0 equal 4234
variable      b equal ${check}+1
variable      b equal 4234+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 2.3811015779523 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 2.3811015779523 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.38e-05 secs
variable      check1 equal ${check}
variable      check1 equal 4264
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 2984 $b
create_bonds  single/bond 2 2984 4235
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0035705 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2624
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2624]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2438
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2438]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2564
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2564]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3360
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3360]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3360 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3360                         
23 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 23
print         "j = $(v_j)"
j = 23
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3360]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3360]
variable      check0 equal ${check}
variable      check0 equal 4264
variable      b equal ${check}+1
variable      b equal 4264+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 13.4929089417297 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 4.7622031559046 13.4929089417297 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.000116 secs
variable      check1 equal ${check}
variable      check1 equal 4294
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3360 $b
create_bonds  single/bond 2 3360 4265
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0030501 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2550
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2550]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3033
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3033]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3163
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3163]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3163 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3163                         
24 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 24
print         "j = $(v_j)"
j = 24
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3163]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3163]
variable      check0 equal ${check}
variable      check0 equal 4294
variable      b equal ${check}+1
variable      b equal 4294+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 6.3496042078728 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 10.3181068377933 6.3496042078728 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.61e-05 secs
variable      check1 equal ${check}
variable      check1 equal 4324
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3163 $b
create_bonds  single/bond 2 3163 4295
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0057221 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2544
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2544]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3010
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3010]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3085
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3085]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3531
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3531]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3531 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3531                         
25 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 25
print         "j = $(v_j)"
j = 25
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3531]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3531]
variable      check0 equal ${check}
variable      check0 equal 4324
variable      b equal ${check}+1
variable      b equal 4324+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 17.4614115716502 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 17.4614115716502 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.000105 secs
variable      check1 equal ${check}
variable      check1 equal 4354
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3531 $b
create_bonds  single/bond 2 3531 4325
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0057728 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3011
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3011]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3011 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3011                         
26 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 26
print         "j = $(v_j)"
j = 26
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3011]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3011]
variable      check0 equal ${check}
variable      check0 equal 4354
variable      b equal ${check}+1
variable      b equal 4354+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 1.5874010519682 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.9055078897615 1.5874010519682 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.28e-05 secs
variable      check1 equal ${check}
variable      check1 equal 4384
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3011 $b
create_bonds  single/bond 2 3011 4355
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0017715 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3522
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3522]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2369
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2369]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3150
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3150]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2348
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2348]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3018
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3018]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3272
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3272]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3272 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3272                         
27 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 27
print         "j = $(v_j)"
j = 27
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3272]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3272]
variable      check0 equal ${check}
variable      check0 equal 4384
variable      b equal ${check}+1
variable      b equal 4384+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 10.3181068377933 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 11.1118073637774 10.3181068377933 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.51e-05 secs
variable      check1 equal ${check}
variable      check1 equal 4414
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3272 $b
create_bonds  single/bond 2 3272 4385
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0014331 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3517
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3517]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3536
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3536]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3536 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3536                         
28 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 28
print         "j = $(v_j)"
j = 28
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3536]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3536]
variable      check0 equal ${check}
variable      check0 equal 4414
variable      b equal ${check}+1
variable      b equal 4414+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 18.2551120976343 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 12.6992084157456 18.2551120976343 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001187 secs
variable      check1 equal ${check}
variable      check1 equal 4444
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3536 $b
create_bonds  single/bond 2 3536 4415
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0021694 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2482
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2482]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3353
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3353]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2480
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2480]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2307
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2307]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3140
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3140]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3140 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3140                         
29 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 29
print         "j = $(v_j)"
j = 29
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3140]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3140]
variable      check0 equal ${check}
variable      check0 equal 4444
variable      b equal ${check}+1
variable      b equal 4444+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 7.1433047338569 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 0 7.1433047338569 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 0.0001068 secs
variable      check1 equal ${check}
variable      check1 equal 4474
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3140 $b
create_bonds  single/bond 2 3140 4445
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0017895 secs
next j
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2916
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2916]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 2901
variable      randzj equal z[${randatomj}]
variable      randzj equal z[2901]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
jump MDPBB.in loopj
variable      randnj equal round(random(v_ntop0,$(v_ntop0 + v_nbwall0),$s))
variable      randnj equal round(random(v_ntop0,3604,$s))
variable      randnj equal round(random(v_ntop0,3604,234897))
variable      randatomj equal ${randnj}
variable      randatomj equal 3104
variable      randzj equal z[${randatomj}]
variable      randzj equal z[3104]
if            "${randzj} < $(v_wthick - 0.7)" then "jump MDPBB.in loopj"
set           atom ${randatomj} type 4
set           atom 3104 type 4
  1 settings made for type
group         bwg id ${randatomj}                         # Add this atom to a bot-wall-grafted group
group         bwg id 3104                         
30 atoms in group bwg
variable      bwgcount equal count(bwg)
print         "bwg contains ${bwgcount}"
bwg contains 30
print         "j = $(v_j)"
j = 30
variable      x0 equal x[${randatomj}]
variable      x0 equal x[3104]
variable      y0 equal y[${randatomj}]
variable      y0 equal y[3104]
variable      check0 equal ${check}
variable      check0 equal 4474
variable      b equal ${check}+1
variable      b equal 4474+1
if            "${bwgcount} != $(v_j)" then "jump MDPBB.in loopj"
create_atoms  1 single ${x0} ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 ${y0} ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 5.5559036818887 ${z0} mol bs 24987 units box remap yes rotate 0 0 0 1
create_atoms  1 single 6.3496042078728 5.5559036818887 17 mol bs 24987 units box remap yes rotate 0 0 0 1
Created 30 atoms
  create_atoms CPU = 8.37e-05 secs
variable      check1 equal ${check}
variable      check1 equal 4504
if            "${check1} != ${check0}" then "create_bonds  single/bond 2 ${randatomj} $b" "next j"
create_bonds  single/bond 2 ${randatomj} $b
create_bonds  single/bond 2 3104 $b
create_bonds  single/bond 2 3104 4475
  2 = max # of 1-2 neighbors
  5 = max # of special neighbors
  special bonds CPU = 0.0022393 secs
next j
jump MDPBB.in loopj

# Assign the beads to 2 different groups of grafted and non-grafted beads

group         gbeads type 2
60 atoms in group gbeads
group         fbeads type 3
1740 atoms in group fbeads

#--- Create harmonic bonds in the walls ---#
bond_coeff    3 harmonic 800.0 $(1.5874 * sqrt(2)/2)
bond_coeff    3 harmonic 800.0 1.1224613044555256103
create_bonds  many bwall bwall 3 0.5 1.2
Neighbor list info ...
  update every 1 steps, delay 10 steps, check yes
  max neighbors/atom: 4000, page size: 100000
  master list distance cutoff = 11.1225
  ghost atom cutoff = 11.1225
  binsize = 5.56123, bins = 4 4 13
  2 neighbor lists, perpetual/occasional/extra = 1 1 0
  (1) command create_bonds, occasional
      attributes: full, newton on
      pair build: full/bin
      stencil: full/bin/3d
      bin: standard
  (2) pair lj/cut, perpetual
      attributes: half, newton on
      pair build: half/bin/newton
      stencil: half/bin/3d/newton
      bin: standard
Added 6964 bonds, new total = 8764
  14 = max # of 1-2 neighbors
  14 = max # of special neighbors
  special bonds CPU = 0.0033039 secs
create_bonds  many twall twall 3 0.5 1.2
Added 6964 bonds, new total = 15728
  14 = max # of 1-2 neighbors
  14 = max # of special neighbors
  special bonds CPU = 0.0032601 secs

info system


fix           1 twall setforce 0.0 0.0 0.0  # Freeze top wall
fix           2 bwall setforce 0.0 0.0 0.0  # Freeze bottom wall

dump           1 all image 250 stg0.*.jpg type type zoom 2 view 60 120 bond none none
#dump          2 all atom 50 dump.brush
#dump          3 all custom 100 dump.random.bin id x y z vx vy vz


#--- Minimize the system to obtain the initial structure for the PB bilayer ---#

timestep      0.010
minimize      0.0 1.0e-8 10000 100000
WARNING: Using 'neigh_modify every 1 delay 0 check yes' setting during minimization (src/min.cpp:168)
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 4000, page size: 100000
  master list distance cutoff = 11.1225
  ghost atom cutoff = 11.1225
  binsize = 5.56123, bins = 4 4 13
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair lj/cut, perpetual
      attributes: half, newton on
      pair build: half/bin/newton
      stencil: half/bin/3d/newton
      bin: standard
WARNING: Inconsistent image flags (src/domain.cpp:784)
Per MPI rank memory allocation (min/avg/max) = 26.42 | 26.42 | 26.42 Mbytes
Step Temp E_pair E_mol TotEng Press 
       0            0   0.41035721    20.380875    20.791232    4.3300441 
      78            0 -0.076612708    18.666412    18.589799    4.1838791 
Loop time of 0.839958 on 1 procs for 78 steps with 4504 atoms

98.6% CPU use with 1 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = linesearch alpha is zero
  Energy initial, next-to-last, final = 
         20.7912318743      18.5897991135      18.5897991135
  Force two-norm initial, final = 5230.88 91.4254
  Force max component initial, final = 634.791 7.30296
  Final line search alpha, max atom move = 4.22877e-09 3.08825e-08
  Iterations, force evaluations = 78 137

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.75297    | 0.75297    | 0.75297    |   0.0 | 89.64
Bond    | 0.037222   | 0.037222   | 0.037222   |   0.0 |  4.43
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.010574   | 0.010574   | 0.010574   |   0.0 |  1.26
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0.0021696  | 0.0021696  | 0.0021696  |   0.0 |  0.26
Other   |            | 0.03702    |            |       |  4.41

Nlocal:    4504 ave 4504 max 4504 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    15786 ave 15786 max 15786 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    2.59291e+06 ave 2.59291e+06 max 2.59291e+06 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 2592910
Ave neighs/atom = 575.69
Ave special neighs/atom = 6.98401
Neighbor list builds = 0
Dangerous builds = 0

#--- Shrink the simulation box such that it encloses the system exactly ---#

variable z_f equal bound(all,zmin)
variable z_c equal bound(all,zmax)

change_box all z final ${z_f} $(v_z_c + 0.1) units box
change_box all z final 0 $(v_z_c + 0.1) units box
change_box all z final 0 70.099999999999994316 units box
  orthogonal box = (0 0 0) to (20 20 70.1)

info variables                              # For diagnostics

minimize      0.0 1.0e-8 10000 100000
WARNING: Using 'neigh_modify every 1 delay 0 check yes' setting during minimization (src/min.cpp:168)
WARNING: Inconsistent image flags (src/domain.cpp:784)
Per MPI rank memory allocation (min/avg/max) = 26.8 | 26.8 | 26.8 Mbytes
Step Temp E_pair E_mol TotEng Press 
      78            0 -0.076612708    18.666412    18.589799    4.2972796 
      81            0 -0.074053812    18.656968    18.582914     4.301802 
Loop time of 0.329057 on 1 procs for 3 steps with 4504 atoms

95.0% CPU use with 1 MPI tasks x 1 OpenMP threads

Minimization stats:
  Stopping criterion = linesearch alpha is zero
  Energy initial, next-to-last, final = 
         18.5897991135      18.5829139104      18.5829139104
  Force two-norm initial, final = 91.4254 63.8966
  Force max component initial, final = 7.30296 4.99447
  Final line search alpha, max atom move = 8.68605e-09 4.33822e-08
  Iterations, force evaluations = 3 48

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0.28416    | 0.28416    | 0.28416    |   0.0 | 86.36
Bond    | 0.01401    | 0.01401    | 0.01401    |   0.0 |  4.26
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.0039474  | 0.0039474  | 0.0039474  |   0.0 |  1.20
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0.0008077  | 0.0008077  | 0.0008077  |   0.0 |  0.25
Other   |            | 0.02613    |            |       |  7.94

Nlocal:    4504 ave 4504 max 4504 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    15786 ave 15786 max 15786 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    2.6198e+06 ave 2.6198e+06 max 2.6198e+06 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 2619800
Ave neighs/atom = 581.661
Ave special neighs/atom = 6.98401
Neighbor list builds = 0
Dangerous builds = 0

#--- Remove the fixes for the restart file ---#
unfix         1
unfix         2

#--- Write Restart File ---#

write_restart  MDPBB.rst
#write_data     MDPBB.data
print        "Created a Polymer Brush Bilayer with Surface Coverage = $(v_M/(lx*ly))"
Created a Polymer Brush Bilayer with Surface Coverage = 0.074999999999999997224



include        ecs.in
# This is an input script that creates a mono disperse polymer brush bilayer
# A coarse grained bead-spring model is used for the polymers which are end
# grafted to the surfaces of 2 opposing FCC walls at random sites.

clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:88)
  using 1 OpenMP thread(s) per MPI task


#--- Read in the Restart file ---#

read_restart    MDPBB.rst
  restoring atom style bond from restart
  orthogonal box = (0 0 0) to (20 20 70.1)
  1 by 1 by 1 MPI processor grid
  restoring pair style lj/cut from restart
  restoring bond style hybrid from restart
  4504 atoms
  15728 bonds
  14 = max # of 1-2 neighbors
  14 = max # of special neighbors
  special bonds CPU = 0.0028335 secs
  read_restart CPU = 0.0074579 secs
reset_timestep  0

#--- Redefine the bond coeffs ---#

bond_coeff    1 fene 30.0 1.5 0.0 0.0      # Values obtained from literature [Grest, Galushcko]
bond_coeff    2 fene 30.0 1.5 0.0 0.0       # This is the grafting bond between the polymer and the wall atom
bond_coeff    3 harmonic 800.0 $(1.5874 * sqrt(2)/2)
bond_coeff    3 harmonic 800.0 1.1224613044555256103

neigh_modify   every 1 delay 0 check yes

#--- Define variables ---#

# for dimensional values: eps = 4.14e-21 J at T = 300K and sigma = 0.5nm

#--- Moved to main.in ---#
#variable       Temp       equal ${Tstr} #[Grest96]
#variable       Tstep     equal 0.005                       # Timestep in Tau (default = 0.005)
#variable       Nequil    equal 10000                       # Number of timesteps to equilibrate
#variable       Ncomp     equal 200000                      # Number of timesteps to compress - until no more occilation of walls
#variable       Nshear    equal 1000000                     # Number of timesteps to shear - use approx 4ns for 10m/s
#variable       Nthermo   equal 1000                        # Number of timesteps between thermo data prints
#variable       Ndump_e   equal 10000
#variable       Ndump_c   equal 10000                       # Number of timesteps per dump file (compression)
#variable       Ndump_s   equal 10000                       # Number of timesteps per dump file (shear)
#variable       Wall_v    equal 0.0002                      # Wall velocity (A/fs) - equal to 10 m/s
#variable       Pcomp     equal 1
variable        Pcomp2    equal ${Pcomp}
variable        Pcomp2    equal 3
variable        Wall_v2   equal ${Wall_v}
variable        Wall_v2   equal 0.5

# For Equilibration - density profiles (10 for entire run)
variable       Nfreqe   equal ${Nequil}/10                  # Calculate bin averages every this many timesteps
variable       Nfreqe   equal 300000/10                  
variable       Neverye  equal 100                           # Use input values every this many timesteps
variable       Nrepeate equal ${Nfreqe}/${Neverye}          #s Number of times to use input values
variable       Nrepeate equal 30000/${Neverye}          
variable       Nrepeate equal 30000/100          


# For compression - density profiles (10 for entire run)
variable       Nfreqc   equal ${Ncomp}/10                  # Calculate bin averages every this many timesteps
variable       Nfreqc   equal 700000/10                  
variable       Neveryc  equal 100                          # Use input values every this many timesteps
variable       Nrepeatc equal ${Nfreqc}/${Neveryc}         # Number of times to use input values
variable       Nrepeatc equal 70000/${Neveryc}         
variable       Nrepeatc equal 70000/100         

# For Shear - density profiles (10 for entire run)
variable       Nfreqs   equal ${Nshear}/10                  # Calculate bin averages every this many timesteps
variable       Nfreqs   equal 800000/10                  
variable       Neverys  equal 100                          # Use input values every this many timesteps
variable       Nrepeats equal ${Nfreqs}/${Neverys}         # Number of times to use input values
variable       Nrepeats equal 80000/${Neverys}         
variable       Nrepeats equal 80000/100         


variable       binres   equal  0.001                       # Giving 1000 data points across the sim. box


variable       bwzmin  equal bound(bwall,zmin)
variable       bwzmax  equal bound(bwall,zmax)
variable       twzmin  equal bound(twall,zmin)
variable       twzmax  equal bound(twall,zmax)
variable       c       equal count(gbeads)
variable       surfcov equal $(v_M/(lx*ly))
variable       surfcov equal 0.074999999999999997224
variable       D       equal v_twzmin-v_bwzmax
variable       Dout    equal v_twzmax-v_bwzmin
variable       srate   equal (v_Wall_v/v_D)


#--- Define regions and groups ---#

print        "bwzmin = ${bwzmin}"
bwzmin = 0
print        "bwzmax = ${bwzmax}"
bwzmax = 2.3811015779523
print        "twzmin = ${twzmin}"
twzmin = 67.6188984220477
print        "twzmax = ${twzmax}"
twzmax = 70

region         bwallb  block  INF INF INF INF ${bwzmin} $(v_bwzmin + 0.4) units box
region         bwallb  block  INF INF INF INF 0 $(v_bwzmin + 0.4) units box
region         bwallb  block  INF INF INF INF 0 0.4000000000000000222 units box
region         bwallm  block  INF INF INF INF $(v_bwzmin + 0.35) $(v_bwzmax - 0.35) units box
region         bwallm  block  INF INF INF INF 0.3499999999999999778 $(v_bwzmax - 0.35) units box
region         bwallm  block  INF INF INF INF 0.3499999999999999778 2.0311015779522998415 units box
region         bwallt  block  INF INF INF INF $(v_bwzmax - 0.7) $(v_bwzmax) units box
region         bwallt  block  INF INF INF INF 1.6811015779522999747 $(v_bwzmax) units box
region         bwallt  block  INF INF INF INF 1.6811015779522999747 2.3811015779522999303 units box
region         bmelt   block  INF INF INF INF $(v_bwzmax) $(v_twzmax / 2) units box
region         bmelt   block  INF INF INF INF 2.3811015779522999303 $(v_twzmax / 2) units box
region         bmelt   block  INF INF INF INF 2.3811015779522999303 35 units box
region         tmelt   block  INF INF INF INF $(v_twzmax / 2)  $(v_twzmin - 0.1) units box
region         tmelt   block  INF INF INF INF 35  $(v_twzmin - 0.1) units box
region         tmelt   block  INF INF INF INF 35  67.518898422047712415 units box
region         twallb  block  INF INF INF INF $(v_twzmin - 0.1) $(v_twzmin + 0.35) units box
region         twallb  block  INF INF INF INF 67.518898422047712415 $(v_twzmin + 0.35) units box
region         twallb  block  INF INF INF INF 67.518898422047712415 67.968898422047701047 units box
region         twallm  block  INF INF INF INF $(v_twzmin + 0.35) $(v_twzmax - 0.35) units box
region         twallm  block  INF INF INF INF 67.968898422047701047 $(v_twzmax - 0.35) units box
region         twallm  block  INF INF INF INF 67.968898422047701047 69.650000000000005684 units box
region         twallt  block  INF INF INF INF $(v_twzmax - 0.35) $(v_twzmax) units box
region         twallt  block  INF INF INF INF 69.650000000000005684 $(v_twzmax) units box
region         twallt  block  INF INF INF INF 69.650000000000005684 70 units box

group          bwsurf  region bwallt
338 atoms in group bwsurf
group          bwbulk  region bwallm
676 atoms in group bwbulk
group          bwout   region bwallb
338 atoms in group bwout
group          bbeads  region bmelt
900 atoms in group bbeads
group          tbeads  region tmelt
900 atoms in group tbeads
group          abeads  union  bbeads tbeads
1800 atoms in group abeads
group          twsurf  region twallb
338 atoms in group twsurf
group          twbulk  region twallm
676 atoms in group twbulk
group          twout   region twallt
338 atoms in group twout
group          rest4bot union abeads twall
3152 atoms in group rest4bot
group          rest4top union abeads bwall
3152 atoms in group rest4top
group          walls    union bwall twall
2704 atoms in group walls
group          alltop   union twall tbeads
2252 atoms in group alltop
# Other groups are: gbeads fbeads bwall twall

info system
info coeffs

#--- Exclude wall-wall interactions ---#

#neigh_modify exclude type 1 1
#neigh_modify exclude type 1 4
#neigh_modify exclude type 4 4


############
# Computes #
############

#compute         sysTemp   all    temp/deform                       # Calculate the temperature without translational velocities
#compute         sysPress  all    pressure sysTemp                  # Calculate the pressure of the entire system of atoms
compute         melTemp   abeads temp
compute         melPress  all    pressure melTemp
compute         wallTemp  walls  temp
compute         wallPress all    pressure wallTemp
variable        melDens   equal  $(mass(abeads))/(lx*ly*v_D)
variable        melDens   equal  1800/(lx*ly*v_D)

#--- Forces and Energies ---#

compute         fbwall  bwall group/group rest4bot
compute         ftwall  twall group/group rest4top
compute         fwalls  bwall group/group twall

#--- Like done in comp_shear.in ---#
group           rest_bot union abeads bwall
3152 atoms in group rest_bot
group           rest_bot2 subtract all bwsurf
4166 atoms in group rest_bot2
compute         ggbot bwsurf group/group rest_bot
compute         ggbot2 bwsurf group/group rest_bot

group           rest_top union abeads twall
3152 atoms in group rest_top
group           rest_top2 subtract all twsurf
4166 atoms in group rest_top2
compute         ggtop twsurf group/group rest_top
compute         ggtop2 twsurf group/group rest_top2


#--- Calculate the applied force on each atom for the pressure applied---#
variable Fcomp equal (${Pcomp}*lx*ly)
variable Fcomp equal (3*lx*ly)
variable Fcatom equal (-${Fcomp})/(count(twout))
variable Fcatom equal (-1200)/(count(twout))


#compute	        peratom   all   stress/atom NULL
#compute	        p_all     all   reduce sum c_peratom[1] c_peratom[2] c_peratom[3]
#variable	      press_all equal -(c_p_all[1]+c_p_all[2]+c_p_all[3])/(3*v_volume)



info groups variables                              # For diagnostics


#################
# Equilibration #
#################

#--- Number Density profiles (Equil) ---#
compute         eabeads abeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         eabeads abeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             abeads_edz abeads ave/chunk ${Neverye} ${Nrepeate} ${Nfreqe} eabeads density/number file abeads_edz
fix             abeads_edz abeads ave/chunk 100 ${Nrepeate} ${Nfreqe} eabeads density/number file abeads_edz
fix             abeads_edz abeads ave/chunk 100 300 ${Nfreqe} eabeads density/number file abeads_edz
fix             abeads_edz abeads ave/chunk 100 300 30000 eabeads density/number file abeads_edz
compute         ebbeads bbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         ebbeads bbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             bbeads_edz bbeads  ave/chunk ${Neverye} ${Nrepeate} ${Nfreqe} ebbeads density/number file bbeads_edz
fix             bbeads_edz bbeads  ave/chunk 100 ${Nrepeate} ${Nfreqe} ebbeads density/number file bbeads_edz
fix             bbeads_edz bbeads  ave/chunk 100 300 ${Nfreqe} ebbeads density/number file bbeads_edz
fix             bbeads_edz bbeads  ave/chunk 100 300 30000 ebbeads density/number file bbeads_edz
compute         etbeads tbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         etbeads tbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             tbeads_edz tbeads  ave/chunk ${Neverye} ${Nrepeate} ${Nfreqe} etbeads density/number file tbeads_edz
fix             tbeads_edz tbeads  ave/chunk 100 ${Nrepeate} ${Nfreqe} etbeads density/number file tbeads_edz
fix             tbeads_edz tbeads  ave/chunk 100 300 ${Nfreqe} etbeads density/number file tbeads_edz
fix             tbeads_edz tbeads  ave/chunk 100 300 30000 etbeads density/number file tbeads_edz

#--- Radius of gyration of the bottom brush chains ---#
compute         chunk_bot bbeads chunk/atom molecule
compute         rgbbeads bbeads gyration/chunk chunk_bot
variable        aveRg    equal  (ave(c_rgbbeads))


#--- Fixes (Equil) ---#

#velocity       abeads create ${Temp} 290842 dist gaussian
#fix             nvt_melt    abeads nvt temp ${Temp} ${Temp} 100.0

# NVE for all and langevin thermostat for melt
fix             nve_melt abeads nve
fix             lang_melt abeads langevin ${Temp} ${Temp} 0.1 798753
fix             lang_melt abeads langevin 1 ${Temp} 0.1 798753
fix             lang_melt abeads langevin 1 1 0.1 798753
fix             nve_walls  walls nve

#--- Langevin thermostat the bulk of the walls in y ---#
# Only thermostat the bulk of the wall not the surface or the outer layer
compute         Tempyt     twbulk temp/partial 0 1 0
fix             lang_tbulk twbulk langevin ${Temp} ${Temp} 0.1 87239 zero yes
fix             lang_tbulk twbulk langevin 1 ${Temp} 0.1 87239 zero yes
fix             lang_tbulk twbulk langevin 1 1 0.1 87239 zero yes
fix_modify      lang_tbulk temp Tempyt
compute         Tempyb     bwbulk temp/partial 0 1 0
fix             lang_bbulk bwbulk langevin ${Temp} ${Temp} 0.1 87239 zero yes
fix             lang_bbulk bwbulk langevin 1 ${Temp} 0.1 87239 zero yes
fix             lang_bbulk bwbulk langevin 1 1 0.1 87239 zero yes
fix_modify      lang_bbulk temp Tempyb

#--- Freeze the outer layer of the walls ---#
fix             freeze_bout bwout setforce 0.0 0.0 0.0
fix             freeze_tout twout setforce 0.0 0.0 0.0

variable        sbot equal  f_freeze_bout[1]/(lx*ly)
variable        pbot equal -f_freeze_bout[3]/(lx*ly)
#--- Thermo output ---#

thermo_style  custom step etotal ke pe epair temp c_melTemp c_wallTemp v_Fcatom v_Pcomp2 press pxx pyy pzz pxy pxz pyz c_melPress c_wallPress v_melDens v_surfcov v_aveRg v_Wall_v2 v_srate v_D v_bwzmax zhi c_fbwall[1] c_fbwall[3] c_ftwall[1] c_ftwall[3] v_sbot v_pbot #c_ggbot[1] c_ggbot[3] c_ggtop[1] c_ggtop[3]
thermo        ${Nthermo}
thermo        1000
thermo_modify flush yes

#--- Dumps ---#
#dump           eq all image ${Ndump_e} stg1.*.jpg type type zoom 2 view 60 120 bond none none


#--- Run Equilibration ---#
timestep    ${Tstep}
timestep    0.005
run         ${Nequil}
run         300000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 1.42246
  ghost atom cutoff = 1.42246
  binsize = 0.711231, bins = 29 29 99
  8 neighbor lists, perpetual/occasional/extra = 1 7 0
  (1) pair lj/cut, perpetual
      attributes: half, newton on
      pair build: half/bin/newton
      stencil: half/bin/3d/newton
      bin: standard
  (2) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (3) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (4) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (5) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (6) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (7) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
  (8) compute group/group, occasional, copy from (1)
      attributes: half, newton on
      pair build: copy
      stencil: none
      bin: none
WARNING: Inconsistent image flags (src/domain.cpp:784)
Per MPI rank memory allocation (min/avg/max) = 7.843 | 7.843 | 7.843 Mbytes
Step TotEng KinEng PotEng E_pair Temp c_melTemp c_wallTemp v_Fcatom v_Pcomp2 Press Pxx Pyy Pzz Pxy Pxz Pyz c_melPress c_wallPress v_melDens v_surfcov v_aveRg v_Wall_v2 v_srate v_D v_bwzmax Zhi c_fbwall[1] c_fbwall[3] c_ftwall[1] c_ftwall[3] v_sbot v_pbot 
WARNING: One or more chunks do not contain all atoms in molecule (src/compute_chunk_atom.cpp:1161)
       0    19.516362            0    19.516362 -0.074053812            0            0            0   -3.5502959            3    4.0656815    4.9119712    4.9119361    2.3731372 -5.4497425e-06 4.2168082e-07 8.785454e-07    4.0656815    4.0656815  0.068978418        0.075    3.6166982          0.5 0.0076642686    65.237797    2.3811016         70.1            0            0            0            0 -1.4033219e-15    63.914914 
    1000    15.686516    2.1172523    13.569264 -0.028475937     1.411815     1.016306     1.675571   -3.5502959            3    2.2080825    3.4166281    3.6781876  -0.47056813 -0.0073899587  0.023228566 -0.024332905    2.0465608     2.142878  0.069845858        0.075    3.3266826          0.5 0.0077606509    64.427585    2.7905079         70.1 0.00022019751 -0.00034079459            0            0   -1.1057565    16.474155 
    2000     14.14308    1.8746047    12.268475 -0.033577378     1.250014   0.99064444    1.4231016   -3.5502959            3    1.9031833     3.401062    3.3047614  -0.99627363 -0.0024177836 0.0071427408 0.0053989594    1.7659991    1.8396252  0.069783351        0.075    3.1318603          0.5 0.0077537056    64.485296    2.7586741         70.1 -0.0014743428 -0.0022741674 8.2872601e-05 0.00016993449    3.0432568    8.4911471 
    3000    13.245349     1.549549      11.6958 -0.044625595    1.0332621   0.98771341    1.0639596   -3.5502959            3    1.8994108    3.3149243    3.3009107  -0.91760278 -0.0038184867 0.0011859994 -0.0056561802    1.7968472    1.8360407  0.069901479        0.075    2.9599739          0.5  0.007766831     64.37632    2.8345688         70.1 2.3498806e-05 -0.0016344086 0.0025932532 0.0041143595  -0.99140489    4.9538623 
    4000    12.711893    1.4466874    11.265206 -0.051629263   0.96467247    1.0214677   0.92722893   -3.5502959            3    1.6205165    3.0861321    3.0800537   -1.3046364 0.00062366648 -0.029636329 -0.0070648805    1.5311335    1.5549808  0.069918031        0.075    2.8020155          0.5 0.0077686701     64.36108    2.8105656         70.1 0.0021791496 -0.0037064941 0.0049501198 0.0051139532    1.2388012   -3.8739686 
    5000    12.314563     1.387414    10.927149 -0.056551639   0.92514808    1.0157917   0.86516185   -3.5502959            3    1.5290805    3.0449297    2.9818173   -1.4395053 -0.0011206748 -0.031900182 -0.0049613332    1.4456807     1.463909  0.069915951        0.075    2.6927309          0.5  0.007768439    64.362995    2.8230204         70.1 -0.00044456644 -0.0098994493 -0.0050561143  0.012639123    1.7473483   -7.9114161 
    6000    12.006958    1.3415862    10.665372  -0.07273513   0.89458939   0.99644132    0.8271321   -3.5502959            3    1.6671953    3.0741276    3.0511247   -1.1236663 0.0022347875  0.074590919 -0.022890978    1.5874615    1.6032653  0.069951837        0.075    2.5985544          0.5 0.0077724264    64.329976    2.8220343         70.1 -0.0017860401 -0.0072111137 -0.0057039545 0.0082554011   -3.1390262   -7.9022806 
    7000    11.772353     1.323026    10.449327 -0.087738387   0.88221319    1.0038594   0.80157714   -3.5502959            3    1.6854687    3.0216906    3.0649119   -1.0301965 0.00055780924  0.023747027 -0.012319088    1.6081982    1.6210627  0.069920359        0.075    2.5147094          0.5 0.0077689287    64.358938    2.8201808         70.1 0.0023023002 -0.0062058994  -0.00403576  0.011530037  -0.87874076   -9.8031099 
    8000    11.496757    1.2590721    10.237685 -0.097473115   0.83956778   0.97929727   0.74688047   -3.5502959            3    1.8198928    3.0986388    3.1252646  -0.76422506 -0.00092379347  -0.04603529  0.051763208     1.747895    1.7570627   0.06994116        0.075    2.4265471          0.5 0.0077712399    64.339797    2.8418961         70.1 -0.004131953 -0.0074517847 -0.0034355685  0.020606396     1.923777   -6.1695806 
    9000    11.391934     1.279259    10.112675  -0.12347198   0.85302871    0.9772688   0.77065546   -3.5502959            3    1.9274335    3.1584189    3.1468697  -0.52298824 0.0059551388  0.017362596 -0.017444201    1.8531438    1.8647335  0.069892602        0.075    2.3586365          0.5 0.0077658446    64.384497    2.8054883         70.1 -0.0035512988 -0.012259994 0.0026302998  0.026606546   -2.8652059    2.0796855 
   10000    11.339406    1.3103671    10.029039   -0.1189794   0.87377205    1.0157153     0.779624   -3.5502959            3    1.9699135    3.1704255    3.1798507  -0.44053584 0.0042543248 -0.0032809058  0.031600974    1.8947593    1.9047469  0.069905556        0.075    2.3265716          0.5  0.007767284    64.372566      2.81295         70.1 -0.0037852001 -0.041729536  0.011214405  0.032671495    4.4965193   -3.1706543 
   11000     11.20477    1.3038771    9.9008928  -0.14726464   0.86944443    1.0402341   0.75609583   -3.5502959            3     1.986249    3.1812739    3.1746972  -0.39722394 -0.0039607614 0.0079828013  0.064598423    1.9133629    1.9195093  0.069917234        0.075    2.2589769          0.5 0.0077685815    64.361814    2.8182314         70.1 -0.0038655928 -0.042737099 0.0083799866  0.048798235  -0.93142234    1.9138828 
   12000    11.162146    1.3019182    9.8602277  -0.14905055   0.86813822    1.0149542   0.77074505   -3.5502959            3    1.9637295    3.1200865    3.1371227  -0.36602079 -0.0051122984  0.015318837 -0.037757376    1.8894312    1.8986117  0.069913004        0.075    2.2226694          0.5 0.0077681116    64.365708    2.8235939         70.1 0.0030412892 -0.064637007 -0.013751389  0.070484395  -0.78044401    1.4229422 
   13000    11.100447    1.2729373    9.8275101  -0.15189067   0.84881335    1.0226319   0.73344124   -3.5502959            3    2.1194055    3.2645412    3.2409337  -0.14725852 0.0056393627 0.0014636158  0.022214278    2.0487032    2.0537951  0.069890016        0.075    2.1851984          0.5 0.0077655574    64.386879    2.8076113         70.1 -0.003440076 -0.054722586 -0.0012604271  0.080869611    1.4645272   0.45273536 
   14000    11.108646    1.2876526     9.820993  -0.14034806   0.85862571   0.98548776   0.77450946   -3.5502959            3    2.0953259    3.2144102    3.1956139  -0.12404646 -0.0037087903 -0.032812274 -0.038209319    2.0206647    2.0320986  0.069894804        0.075    2.1441821          0.5 0.0077660893    64.382469    2.8230015         70.1 0.0055186961 -0.095158686 0.0038713712  0.069007537  -0.35786036  -0.73530246 
   15000    11.056205    1.2523581    9.8038467  -0.14374179   0.83509081   0.97982336   0.73907203   -3.5502959            3    2.0979853    3.2108718     3.198232  -0.11514787 -0.0092545084   0.02222917  0.028428213    2.0267403    2.0351215  0.069873205        0.075    2.1158116          0.5 0.0077636894     64.40237    2.7879705         70.1 -0.0015847849 -0.064390863  0.011928229  0.079081517   0.27006031    3.0416786 
   16000    11.041897    1.2596803    9.7822169  -0.16163031   0.83997336   0.99989273    0.7338487   -3.5502959            3    2.0701184    3.1930903    3.2051129  -0.18784809 -0.0060649464 0.0051749338 0.0056250024    1.9993768    2.0059669  0.069939928        0.075    2.0980093          0.5 0.0077711032    64.340929    2.8367893         70.1  0.013057242 -0.076228202 -0.0036031989  0.081265986    1.1748247    1.1428628 
   17000    11.035049    1.2632403    9.7718089  -0.15029972   0.84234723    1.0023796   0.73614823   -3.5502959            3    2.1277634    3.1972643    3.2487663 -0.062740577 -0.0042198724  0.017991701 -0.038272074    2.0568001    2.0634523  0.069910292        0.075    2.0756592          0.5 0.0077678103    64.368205    2.8098713         70.1 -0.0052223062   -0.1024391 0.0084052453  0.075359194   -2.1161852   -0.7155016 
   18000    11.031067    1.2534098    9.7776572  -0.14304851   0.83579211    0.9746794   0.74366394   -3.5502959            3    2.1486538    3.2668403    3.2081647 -0.029043525 0.0037101764  0.075621171 -0.0023901241    2.0769661      2.08612  0.069880456        0.075    2.0769469          0.5 0.0077644951    64.395688    2.7961767         70.1 -0.010465279 -0.074007715 -0.0015550113   0.10467113  -0.85039211   -1.2795903 
   19000    11.094128    1.3103708    9.7837571  -0.16393931   0.87377455     1.021694   0.77564901   -3.5502959            3    2.1054301    3.1971441     3.220818  -0.10167174  0.008197322 -0.027249513  0.032786482    2.0306591    2.0398799  0.069962586        0.075    2.0644632          0.5 0.0077736206    64.320093    2.8428844         70.1 -0.014802159 -0.096695074 0.0038854593  0.081593342   0.70352249   -3.3286691 
   20000    11.097398    1.3101757     9.787222  -0.14838163   0.87364445    1.0359754   0.76592717   -3.5502959            3    2.0660636    3.1806415    3.1778862  -0.16033687  -0.00423616 -0.017880168  0.022381997    1.9922297    1.9995971  0.069928863        0.075    2.0496457          0.5 0.0077698737     64.35111    2.8331555         70.1  -0.01173106  -0.10343673 -0.000517886  0.093380944   -2.8282592   -3.9010342 
   21000    11.077084    1.2907428    9.7863413  -0.14608295   0.86068631   0.99542631   0.77132761   -3.5502959            3    2.1413759    3.2301326    3.2440359 -0.050040909 0.0065358759  0.048680682  0.027630481    2.0670214     2.077511  0.069889611        0.075    2.0395777          0.5 0.0077655123    64.387252    2.8236144         70.1 -0.0023272206  -0.09481439  0.011296077  0.092624723   -1.8525609   0.52638047 
   22000    11.006155    1.2575578    9.7485968  -0.15727312   0.83855805    1.0029147   0.72947957   -3.5502959            3     2.179292    3.2475674    3.2666478  0.023660779 -0.0016124066  0.030454302 -0.0069997661    2.1089716    2.1149466  0.069912883        0.075     2.014286          0.5 0.0077680982    64.365819    2.8184308         70.1 -0.008590074  -0.12352012 -0.0025208428  0.067481708   0.16033088    9.0711999 
   23000    11.073512    1.2660942    9.8074176   -0.1510627   0.84425027    1.0041612   0.73813277   -3.5502959            3    2.1423721    3.2447932    3.2155927 -0.033269708 -0.0013717318  -0.08460114 0.0033580714    2.0712175    2.0779467  0.069861443        0.075    1.9991379          0.5 0.0077623825    64.413213    2.7867631         70.1 0.00077610187 -0.073037057  -0.01149577  0.086822154   0.30363166    2.8030482 
   24000    11.047936    1.2616847    9.7862516  -0.14201876   0.84130995    0.9945447   0.73963477   -3.5502959            3    2.1619592    3.2474047      3.23983 -0.001357191 -0.0059634883 -0.043861343  0.011338024    2.0906598    2.0981508  0.069865318        0.075    1.9803343          0.5 0.0077628131     64.40964    2.7854214         70.1 -0.014221297 -0.091897631 -0.012442995   0.10075442  -0.09907615    1.2042018 
   25000    11.020474    1.2721535    9.7483204  -0.15366623   0.84829068     1.003108   0.74556482   -3.5502959            3    2.1584424    3.2044069    3.2541495  0.016770917 0.0057875711  0.013841833   -0.0130898    2.0865715    2.0940847   0.06990414        0.075    1.9608608          0.5 0.0077671267    64.373869    2.8151936         70.1 -0.0034089515   -0.1054448 -0.0062264505   0.09092427   -1.2598367   -3.0393304 
   26000    11.068426     1.306455    9.7619715  -0.16091681   0.87116344    1.0391457   0.75968399   -3.5502959            3    2.0828557    3.1860889    3.1974793  -0.13500113 0.0032592939 0.0048753133  0.015925395    2.0096236    2.0161858  0.069908215        0.075    1.9588225          0.5 0.0077675795    64.370117    2.8244796         70.1  0.017254959  -0.10789015 -0.0034747381  0.080744741     1.572173   -2.2075224 
   27000    11.100121    1.2663389    9.8337822  -0.15328643    0.8444134   0.99386403   0.74525791   -3.5502959            3     2.135765    3.2354703    3.2246793 -0.052854721 0.0035995293 -0.059802144  0.023492479    2.0639236    2.0720003  0.069873436        0.075    1.9754519          0.5 0.0077637151    64.402157    2.8023409         70.1 0.0030783509   -0.1428244 0.0073243201   0.08807136   -2.1112041    1.4901861 
   28000    11.020267    1.2420146    9.7782522  -0.14791212    0.8281936   0.98204899    0.7261005   -3.5502959            3    2.1090543    3.2009358    3.1860987 -0.059871465 -0.0033908416   0.14807582  0.030292802    2.0390597    2.0460477  0.069902718        0.075    1.9473433          0.5 0.0077669687    64.375179    2.8183268         70.1 0.0050101801 -0.088436194 0.0019082966  0.087469288   -3.5521584   -1.2706313 
   29000    11.061486    1.2811736    9.7803124  -0.14580496   0.85430542   0.98068452   0.77050901   -3.5502959            3    2.1096682    3.2142736    3.1875364 -0.072805575 -0.010283834 -0.023074297 -0.017582575    2.0353926    2.0467491   0.06988746        0.075    1.9393995          0.5 0.0077652733    64.389234    2.8038748         70.1 -0.031905434   -0.1333267 -0.007465184  0.098161793      2.05189   -5.9256386 
   30000    11.055667    1.2969014    9.7587657  -0.15186129   0.86479295    1.0100657   0.76842561   -3.5502959            3    2.1496949    3.2318873     3.220529 -0.0033316766 0.00098702327  0.021681352 -0.078998293    2.0756202    2.0848907  0.069877328        0.075    1.9253814          0.5 0.0077641476     64.39857     2.801762         70.1 -0.012768098  -0.10372769 -0.0077189014  0.068031748     2.822664   -1.5208785 
   31000    11.007074    1.2596597    9.7474145  -0.16272293   0.83995961   0.98962797   0.74065757   -3.5502959            3     2.047543    3.1816525    3.1436521  -0.18267571 -0.010378733  0.051588392 -0.012807804     1.976145    1.9840501  0.069924678        0.075    1.9157709          0.5 0.0077694087    64.354962    2.8346436         70.1 0.0096854033 -0.084792721 -0.0096837047  0.085847803   -1.7879987   -1.3814169 
   32000    10.995893    1.2495326    9.7463608  -0.16056574   0.83320673    1.0135152   0.71350946   -3.5502959            3    2.1390898    3.2210332    3.2243984 -0.028162366 0.0067699546 -0.013473676  0.032074211    2.0703089    2.0740643  0.069859682        0.075    1.9315568          0.5 0.0077621869    64.414837    2.7851077         70.1 0.0017834816  -0.10323661 0.0073177983   0.10805703  -0.95588714  -0.27951082 
   33000    11.040032    1.2631328    9.7768992  -0.15454537   0.84227555    1.0157351      0.72714   -3.5502959            3    2.0420642    3.1494776    3.1551039  -0.17838899  0.017443247 -0.042859945 0.0035731517    1.9719693    1.9768963  0.069888721        0.075    1.9266965          0.5 0.0077654134    64.388072    2.8181073         70.1 -0.0017687736 -0.075073379 0.0018498126  0.082617208   0.73374979    2.1073673 
   34000    11.046652    1.2778584    9.7687932  -0.15584495   0.85209479   0.99955156   0.75426917   -3.5502959            3     2.180071    3.2504274    3.2675041  0.022281515 -0.0017006758 0.0027498085 -0.017406946     2.107361    2.1159414  0.069922195        0.075    1.9010163          0.5 0.0077691327    64.357248      2.82758         70.1 -0.014295426 -0.095667406 0.0080703562   0.10024926   0.90268399    3.6800958 
   35000      11.0393    1.2562398    9.7830598  -0.14515427   0.83767922   0.99405989    0.7339089   -3.5502959            3    2.1153334    3.1843241    3.2296096  -0.06793344 -0.0042749503 -0.040779271 0.0050975208    2.0445861    2.0515562  0.069911119        0.075    1.8829908          0.5 0.0077679021    64.367443    2.8183103         70.1 -0.017568519  -0.11138972 0.0047479908   0.10829576  -0.37982104    1.9075078 
   36000    11.031451     1.272463    9.7589884  -0.15188814   0.84849703    1.0057052   0.74417997   -3.5502959            3    2.1563176    3.2200505    3.2468477 0.0020546356 -0.0089449756 -0.080877635 -0.044010255    2.0845801    2.0917932  0.069923048        0.075    1.8722754          0.5 0.0077692276    64.356462    2.8111887         70.1 -0.019854859  -0.13988606  0.014176387   0.10825345    0.7922615   -1.6202338 
   37000    11.039513    1.2699883     9.769525  -0.16491689    0.8468469    1.0045155   0.74222278   -3.5502959            3     2.212481     3.280166    3.2921842   0.06509285 0.0065118984  0.030045782 0.0055440513    2.1409322     2.148033  0.069908011        0.075    1.8986127          0.5 0.0077675568    64.370305    2.8177605         70.1  0.011775037  -0.12900023 -0.0020120049  0.089049686   -1.7561891  -0.40479195 
   38000    11.050612    1.2678805    9.7827313  -0.15651039   0.84544141    1.0149662   0.73292579   -3.5502959            3    2.1273213    3.2183496    3.2308224 -0.067208137 0.0032371997 -0.023543112  0.010464456    2.0566687    2.0622027  0.069927273        0.075    1.8647016          0.5 0.0077696969    64.352574    2.8282745         70.1 0.0008533464 -0.089400511  0.011907015  0.091269301  -0.29061909  -0.69256638 
   39000    11.058134    1.2754358    9.7826987  -0.14924412   0.85047934    1.0279014   0.73270949   -3.5502959            3    2.0798337    3.2074728    3.1632205  -0.13119218 0.0024182313 -0.063288042  0.033413724    2.0092019    2.0138852  0.069910788        0.075    1.8510113          0.5 0.0077678653    64.367748    2.8249976         70.1 0.0052270214 -0.073970879 0.0035123568  0.086693301   0.64076943   -1.7015707 
   40000    11.071271    1.2867525    9.7845181  -0.15627154    0.8580255   0.99471864   0.76736588   -3.5502959            3    2.1419525    3.2331283     3.213629 -0.020899918 -0.001135189  0.034806075 -0.0014238017    2.0679799     2.078133  0.069896431        0.075    1.8446681          0.5 0.0077662701     64.38097    2.8102082         70.1 -0.016679257    -0.103576 -0.014311532  0.091673046   -1.7118755  -0.31946737 
   41000    11.085601    1.3037966    9.7818043  -0.14932572   0.86939079    1.0161694   0.77202292   -3.5502959            3    2.1418367    3.2199216      3.23526 -0.029671602 -0.0065658052 -0.015298676  0.043960563    2.0674152    2.0766409  0.069877192        0.075    1.8469324          0.5 0.0077641324    64.398695    2.8084237         70.1 -0.0074183657  -0.10885724 -0.0019300236  0.086468787     1.753737   0.20409696 
   42000    11.056843    1.2934545    9.7633882  -0.16254352    0.8624945   0.99961637   0.77155119   -3.5502959            3    2.1710183    3.2480098    3.2428805  0.022164605 0.0083466468  0.041669732 -0.021441829    2.0966423    2.1068846  0.069858375        0.075    1.8511145          0.5 0.0077620417    64.416041    2.7758811         70.1  0.020341633 -0.090747062 -0.00069306881    0.1073889    -3.735983    4.7989783 
   43000    11.046967    1.2672255     9.779741  -0.14947805   0.84500464   0.99503995   0.74546024   -3.5502959            3    2.1279389    3.2236336    3.2269051 -0.066721953 -0.0045798496  -0.13173228 0.0053728793    2.0560781    2.0640988  0.069916327        0.075     1.849816          0.5 0.0077684808    64.362648    2.8204148         70.1 0.0054319278  -0.10606224 0.0053793381   0.12098351    2.4050563   0.75494297 
   44000    11.044597    1.2697387    9.7748582   -0.1495509   0.84668048    1.0073775   0.74004074   -3.5502959            3    2.1030845     3.200188    3.2022276 -0.093162152 0.0022871907  0.038490857 -0.017590987     2.031746    2.0384528  0.069903825        0.075    1.8475109          0.5 0.0077670916     64.37416    2.7986747         70.1  0.010322322  -0.11801434 -0.003315415   0.13141541   0.98725539   -1.2814875 
   45000    11.059035     1.301302     9.757733  -0.15507986   0.86772729     1.024113   0.76396475   -3.5502959            3    2.1425096    3.2299148    3.2388245 -0.041210399 -0.0078844057 0.0089121831 -0.066741917     2.068865    2.0768042  0.069913045        0.075    1.8370865          0.5 0.0077681161    64.365671    2.8429199         70.1  0.027921676  -0.13463962 -0.013213827   0.10885736   -1.8488896   -1.1969586 
   46000    11.065115       1.2578    9.8073147  -0.14555668   0.83871956   0.97566945   0.74788192   -3.5502959            3     2.186276    3.2400926    3.2662372  0.052498132 -0.0031554541 -0.032116963  0.027351745    2.1141816    2.1236786  0.069935036        0.075    1.8456485          0.5 0.0077705596    64.345431    2.8223339         70.1  0.013756308 -0.077646937 0.0075469632  0.093781788  -0.13840281    1.8034704 
   47000    11.096676    1.2796884    9.8169874  -0.14744856   0.85331503   0.98575237   0.76548616   -3.5502959            3    2.1491248      3.23061    3.2067665 0.0099978187 -0.00074818027 -0.020349184 0.0018866434    2.0753334    2.0858805  0.069863957        0.075    1.8297695          0.5 0.0077626619    64.410895    2.7741041         70.1 -0.008484097  -0.10160285 0.0061543945   0.12604552   0.68492268  -0.58941646 
   48000    11.081167     1.280539    9.8006279  -0.15232321   0.85388228     1.007567   0.75191228   -3.5502959            3    2.1557832    3.1923708    3.2307631  0.044215914 -0.0061419023 -0.048763162  0.020603494    2.0833004    2.0911394  0.069911034        0.075     1.826049          0.5 0.0077678926    64.367522    2.8113595         70.1 -0.010446603  -0.11184373  0.014716763   0.10128045    1.0808811   0.87274909 
   49000    11.039946    1.2653722    9.7745743  -0.14790946   0.84376882   0.98695251    0.7487841   -3.5502959            3    2.1272345    3.2263607    3.2054805 -0.050137594 -0.0018353348  0.083975624  0.031491075    2.0550532    2.0639133  0.069927675        0.075    1.8448324          0.5 0.0077697416    64.352204    2.8320884         70.1  0.015847104  -0.10839407 0.0048114305  0.079493473   -3.4080144   0.37786796 
   50000    11.039145    1.2905625    9.7485821  -0.15463717   0.86056609    1.0073422   0.76319661   -3.5502959            3    2.1957871    3.2557162    3.2777239  0.053921146 -0.0032559184 0.0014771272 -0.029508978    2.1222164    2.1311576   0.06990902        0.075     1.860858          0.5 0.0077676689    64.369376    2.8072366         70.1 0.0099894135  -0.11489359 -0.0092772098  0.088738895    1.2947793    1.2788703 
   51000    11.044457    1.2598963    9.7845608  -0.15911055   0.84011742    1.0024356   0.73239624   -3.5502959            3    2.0747927    3.2008902    3.1855492  -0.16206126 -0.0040173953 -0.087055553 -0.010226564    2.0041912    2.0104781  0.069913588        0.075    1.8549922          0.5 0.0077681765     64.36517    2.8304881         70.1  -0.02334123  -0.10431396 -0.0042106796   0.12368183   -1.0696943   -5.2766898 
   52000    11.068916    1.2935988    9.7753168  -0.15113136   0.86259071     1.010979   0.76414897   -3.5502959            3    2.1132859    3.1965159    3.2083817  -0.06503986   0.01420695 0.0038468061 0.0057216068    2.0396235    2.0484232  0.069855773        0.075    1.8447936          0.5 0.0077617526    64.418441    2.7816955         70.1  0.020109435 -0.096889874 -0.00071626171   0.11789864   0.21720966  -0.12722458 
   53000    11.074923    1.2940565    9.7808663  -0.15125719   0.86289594     0.980054   0.78523984   -3.5502959            3    2.1572549    3.2294134     3.233403 0.0089482443  0.012343354  0.027971237 -0.018441891    2.0815593    2.0943762  0.069857536        0.075    1.8303048          0.5 0.0077619485    64.416815    2.7937085         70.1 -0.016387573 -0.055352869 -0.014330039   0.15129965   -1.0826615  -0.53166026 
   54000    11.040836    1.2833499    9.7574865  -0.14785714   0.85575659    1.0135737   0.75103695   -3.5502959            3    2.1796139     3.268636    3.2451517  0.025053993 0.0080895338 -0.068117622  0.015629039    2.1072154    2.1145847  0.069884328        0.075    1.8081026          0.5 0.0077649254    64.392119    2.7957643         70.1 0.0018954005  -0.10453222 0.0053292236   0.12533419    2.1224495  0.049784077 
   55000    11.051786    1.2613308    9.7904553  -0.15308663   0.84107395   0.98149579    0.7479264   -3.5502959            3    2.0873437    3.1784645    3.1868637  -0.10329711 0.0032725903 0.0090471797 -0.029405109    2.0152451    2.0243725  0.069897013        0.075    1.8116156          0.5 0.0077663347    64.380434    2.8174874         70.1 0.0009712935  -0.14634342 -0.00089515591   0.10050349   0.43981401  -0.75251549 
   56000    11.044502    1.2960424    9.7484595  -0.14732258   0.86422017   0.99510125    0.7774311   -3.5502959            3    2.0937574    3.2025511     3.167652 -0.088931007 -0.015774015 -0.043849703 -0.0057431265    2.0188146    2.0299133  0.069919372        0.075    1.7996643          0.5 0.0077688191    64.359846    2.8088098         70.1 -0.0014065191  -0.07878757  0.013928978    0.1412207   -1.3301053    1.0328286 
   57000    11.060988     1.269523    9.7914646  -0.15149807   0.84653661     1.010456   0.73775213   -3.5502959            3    2.2276031    3.2808601    3.2948618   0.10708743 -0.0042639293 -0.040104167 0.0029620338    2.1564853    2.1627739  0.069922039        0.075    1.8124273          0.5 0.0077691154    64.357391    2.8167275         70.1 -0.022185591  -0.10511417      0.00772  0.093891288   0.54009685     4.473177 
   58000    10.997879    1.2544992    9.7433798  -0.16587355   0.83651854     1.004608   0.72495493   -3.5502959            3    2.2084552    3.2544962    3.2835587  0.087310764 -0.0071270397 0.0015091609  0.014779071     2.138571    2.1440012  0.069915798        0.075    1.8020817          0.5  0.007768422    64.363136    2.8220439         70.1 -0.032607161  -0.12784069 -0.0086673461  0.092949356  -0.58009371    2.7863757 
   59000    11.083474    1.2719098    9.8115645  -0.15760451   0.84812819    1.0038707   0.74478648   -3.5502959            3    2.1683835    3.2343842    3.2274098  0.043356499 0.00059861427  0.031223528  0.035596877    2.0965876    2.1039768  0.069886953        0.075    1.7920166          0.5  0.007765217    64.389701    2.8056488         70.1  0.013239953  -0.10154507 -0.015052427   0.08094562     1.356487   -1.4112819 
   60000    11.016322    1.2525834    9.7637389  -0.15595861   0.83524107   0.97860186   0.74013532   -3.5502959            3    2.1594442    3.2256557    3.2257189  0.026957925 0.00099637817 -0.029430507 -0.0079368039    2.0880966    2.0966587   0.06986883        0.075    1.7846252          0.5 0.0077632033    64.406403    2.8072902         70.1 -0.013610897  -0.11710309 0.0035661583  0.084394047  -0.70237202   -1.7490478 
   61000    11.029805    1.2917792    9.7380256  -0.15944922   0.86137738    1.0343393   0.74658006   -3.5502959            3    2.1589162    3.2517314    3.2386677 -0.013650512  0.007153007 -0.048071061  0.023112599    2.0869474    2.0925547  0.069911524        0.075    1.8206674          0.5 0.0077679472     64.36707    2.8179051         70.1    0.0016712  -0.10189157 -0.0074548749  0.094079733    1.1365559   0.83511916 
   62000    11.035788    1.2830966    9.7526916  -0.16402392   0.85558768    1.0255312   0.74279715   -3.5502959            3    2.1084006    3.2045061    3.2009903 -0.080294724 -0.0038378898 0.0098469754 -0.005972126    2.0367964    2.0426042  0.069890682        0.075    1.8182735          0.5 0.0077656313    64.386266    2.8068555         70.1 0.0029584231  -0.11483469 0.0010237473  0.090163647  -0.72724295  -0.97160698 
   63000    11.039291    1.2560859    9.7832046  -0.14953982   0.83757659   0.99839922   0.73084987   -3.5502959            3    2.0929876    3.1753484    3.2337047  -0.13009024 -0.007000081  0.016106986 0.0038307391    2.0225351     2.028932  0.069908034        0.075    1.8248818          0.5 0.0077675593    64.370284    2.8074405         70.1 -0.013111552   -0.1273966 -0.0029603052   0.10512575   0.42309474    2.9669307 
   64000    11.053157    1.2718334     9.781324  -0.16164365   0.84807722    1.0062224   0.74313636   -3.5502959            3     2.065194    3.1650454    3.1811363  -0.15059949 0.0033255952 -0.051429157 -0.021503718    1.9935572    2.0006365  0.069911688        0.075     1.816565          0.5 0.0077679654    64.366919     2.819366         70.1 -0.010684909  -0.10330183 -0.0040510248   0.11413057    3.7832211   -1.7925281 
   65000     11.09074    1.2749989     9.815741  -0.14906075   0.85018802    1.0111035   0.74340416   -3.5502959            3    2.1453307    3.2238173    3.2131291 -0.00095418469 -0.0051423088   0.04028975 -0.0021184628     2.073668      2.08046  0.069881067        0.075    1.8186214          0.5  0.007764563    64.395125    2.7758665         70.1  0.011160512  -0.12324899 0.0013476494   0.10967646   -2.5090837    1.5865206 
   66000    11.019982    1.2663962    9.7535859  -0.15935887    0.8444516   0.99258387   0.74617358   -3.5502959            3    2.1922926    3.2513969    3.2812017  0.044279323 -0.0058973534 -0.0021648603 -0.015722848     2.120363    2.1286101  0.069876567        0.075    1.8305382          0.5  0.007764063    64.399271    2.8031249         70.1  0.021605803  -0.12992572 -0.0063620818   0.10393066   0.11186709   -1.3001523 
   67000    11.069872     1.283544    9.7863282   -0.1417539     0.855886    1.0287095   0.74117879   -3.5502959            3    2.1375007    3.2200328    3.2312294 -0.038760158 2.8210681e-05  0.024921658 -0.0010383034    2.0660525    2.0715004  0.069901821        0.075    1.8171746          0.5  0.007766869    64.376005    2.8195327         70.1 0.0053093322   -0.1156287 0.0066521638   0.13301342   -2.1173691  -0.74606983 
   68000    11.064486    1.2771597    9.7873261  -0.15024489   0.85162886   0.98378544   0.76398621   -3.5502959            3    2.1661008    3.2245515    3.2363046  0.037446155 -0.0071017644 -0.045041384 -0.0038440408     2.092454    2.1029827  0.069900605        0.075     1.808344          0.5 0.0077667339    64.377125    2.8171107         70.1 0.0028191243 -0.077852153 0.0066566312   0.12464935    1.4551897    2.4115595 
   69000    11.022982    1.2514275     9.771554  -0.14416526   0.83447031   0.96978075   0.74472224   -3.5502959            3    2.1593575    3.2496119    3.2120535  0.016407149 -0.0021275083 -0.044485891  0.041106522    2.0875678     2.097138  0.069895188        0.075    1.7911526          0.5  0.007766132    64.382114    2.8052591         70.1 -0.0052528135  -0.12484457 0.0016273423    0.1199722   0.45201132     1.512718 
   70000    11.041385    1.2726288     9.768756  -0.14781943   0.84860759    1.0123411   0.73994758   -3.5502959            3    2.1501329    3.2143302    3.2480017 -0.011933094 0.0068579137  0.093930213 -0.0093498126    2.0788035    2.0851828   0.06989008        0.075     1.798695          0.5 0.0077655644     64.38682    2.8136182         70.1 0.0054676563   -0.1198508 -0.011173157  0.090497465   0.88311007    1.5969807 
   71000    11.070273    1.3005819    9.7696913  -0.14404816   0.86724715    1.0269225   0.76129496   -3.5502959            3    2.1877433    3.2714147    3.2500684  0.041746851  0.021838851 -0.029096691 -2.9535621e-05     2.114356    2.1218577  0.069884724        0.075    1.7977092          0.5 0.0077649693    64.391755    2.8029828         70.1   0.01628153  -0.11527568 -0.0081262148   0.10270362   0.89938238    3.5937505 
   72000    11.033914    1.2870598    9.7468546  -0.15547877    0.8582304    1.0116489   0.75643917   -3.5502959            3    2.1201748    3.1926034    3.2087647 -0.040843602  0.011815891 0.0099785248  0.015947582    2.0472556    2.0552691  0.069868071        0.075     1.772924          0.5  0.007763119    64.407102    2.7991647         70.1 -0.026795053 -0.097336004 0.0036182944   0.10870231   -0.1671922    2.3026318 
   73000    11.053695    1.2561878    9.7975067  -0.14287671   0.83764451   0.99271945   0.73474323   -3.5502959            3    2.0773725    3.1834419    3.1603536  -0.11167789 7.7941106e-05  0.029374335  0.021064153    2.0065448    2.0136813  0.069860629        0.075      1.76625          0.5 0.0077622921    64.413964    2.7893368         70.1 0.0098905071 -0.095225604 -0.0072810501  0.080625093  -0.36218711   -4.0458305 
   74000    11.093408    1.2892284    9.8041795  -0.14995483   0.85967648      1.00563   0.76285414   -3.5502959            3    2.1466596    3.2173006     3.218883 0.0037950359 -0.0048892943  0.099228948  0.040995223    2.0731219      2.08214  0.069884966        0.075    1.7651844          0.5 0.0077649963    64.391531    2.8238135         70.1 -0.021136568 -0.086955681 0.0053550906   0.10965105   0.49349643    1.7032508 
   75000    11.059811    1.2986314      9.76118  -0.15189395   0.86594655    1.0404644   0.75011536   -3.5502959            3    2.0861267    3.1789659    3.1849576  -0.10554345 -0.011429747 -0.084550895  0.023283042    2.0138171    2.0193722  0.069864712        0.075    1.7753549          0.5 0.0077627458    64.410199    2.8034614         70.1 0.0063022875 -0.082807429 0.0037728981   0.10680683     2.268292   0.57480521 
   76000    11.095866    1.2843153    9.8115503  -0.15013499   0.85640033    1.0194033   0.74822943   -3.5502959            3    2.0774621     3.176546    3.1635755  -0.10773524 -0.0029495968 -0.063549287  0.019261009    2.0053343    2.0120589  0.069941964        0.075    1.7700566          0.5 0.0077713294    64.339057    2.8257184         70.1 0.0059525876 -0.081842354 0.0093138513   0.13574942 -0.012051379  -0.63944794 
   77000    11.069133    1.2798893     9.789244  -0.14769813   0.85344902    1.0261555    0.7388188   -3.5502959            3    2.0981108    3.1675347    3.2009204 -0.074122582 0.0082568417   0.01873684  -0.02380139    2.0268902    2.0322744  0.069889562        0.075    1.7579103          0.5 0.0077655069    64.387297    2.8092837         70.1 0.0011778208 -0.084728951 -0.0014632757  0.076929771    1.8577274   0.65811354 
   78000    11.056231     1.290999    9.7652316  -0.15198496   0.86085712    1.0069451   0.76394577   -3.5502959            3    2.1466116    3.2079272    3.2302507 0.0016568519 -0.008293783   0.02755539 -0.0051799639    2.0729687    2.0820077  0.069902747        0.075    1.7602311          0.5 0.0077669719    64.375153    2.8003023         70.1 -0.0023226362  -0.12332256 -0.0094449858   0.11046274   -1.0218845   -2.3998511 
   79000     11.01775    1.2436195    9.7741306  -0.15754151   0.82926379   0.98089788   0.72864949   -3.5502959            3    2.2054107    3.2729658    3.2615215  0.081744993 0.0047143396 -0.00083462692 0.0019607514    2.1351704     2.142478  0.069911164        0.075    1.7651927          0.5 0.0077679071    64.367402     2.823626         70.1 -0.016699914 -0.095180397 -0.00017419972  0.088791543  -0.49920578    1.0998797 
   80000    11.056079    1.2985036    9.7575758  -0.14932008   0.86586131    1.0147452   0.76709096   -3.5502959            3    2.2054765     3.274858    3.2657017  0.075869895 0.0065644255 -0.0089874793 -0.0046650569    2.1315305    2.1403721  0.069902116        0.075    1.7538042          0.5 0.0077669018    64.375734    2.8067335         70.1 -0.0098499694 -0.074002683  0.016343865   0.11465113   0.70992258    2.2113419 
   81000    11.064598    1.2825897    9.7820081  -0.14942672    0.8552497    1.0445639   0.72956673   -3.5502959            3    2.1389267    3.2240208     3.221801 -0.029041705 0.0021593238  -0.05988452 -0.034723603    2.0685979    2.0719092  0.069912903        0.075    1.7565087          0.5 0.0077681004    64.365801    2.8057476         70.1 -0.003028998 -0.091778821 -0.0088450565  0.057183142   0.27601294   -3.0519039 
   82000    11.029632    1.2678238    9.7618081  -0.15202624   0.84540354     1.003382   0.74057267   -3.5502959            3    2.2147277    3.2763862    3.2996802  0.068116586 -0.003314106 -0.061587613 -0.062825772    2.1433379    2.1503523  0.069932173        0.075    1.7620199          0.5 0.0077702414    64.348065    2.8309451         70.1 -0.0055487954 -0.093823345   0.02523214   0.11478954   0.73249254  -0.11850181 
   83000    11.008426    1.2529976    9.7554279  -0.14749632   0.83551722   0.97992773   0.73971293   -3.5502959            3    2.2343799     3.295931    3.3061147   0.10109404 -0.011188367 0.0059023838 -0.021945934    2.1630731    2.1715094   0.06991323        0.075    1.7446868          0.5 0.0077681367      64.3655    2.8080509         70.1 -0.005277708  -0.11816255 0.0087761833   0.10405358   0.79555694    3.3088899 
   84000    10.992049    1.2527478    9.7393008  -0.16238204   0.83535064   0.99867881   0.72695551   -3.5502959            3    2.1092542    3.2019408    3.1886407 -0.062818897 0.0055890612 -0.0070710941   0.01595991    2.0391771    2.0451806  0.069899652        0.075    1.7373466          0.5  0.007766628    64.378003    2.8103749         70.1 0.0054594985 -0.084270965   0.01863004   0.09233522   -2.7147929 -0.069266006 
   85000    11.055501    1.2674256    9.7880759   -0.1500359   0.84513806    1.0077571   0.73721853   -3.5502959            3    2.1115389     3.203366    3.1770499 -0.045799197 -0.0034007979 -0.016142925 -0.025067228    2.0404725    2.0468829  0.069920902        0.075    1.7374725          0.5 0.0077689891    64.358438    2.8334734         70.1  0.012686893 -0.090369819 0.0065453857   0.12508666    2.4836055    4.0917767 
   86000    11.009185    1.2681883    9.7409965  -0.16019931   0.84564659    1.0120785   0.73518957   -3.5502959            3    2.1576529    3.2383191    3.2221136  0.012526034 -0.008020786 -0.012178703 -0.031016257    2.0867821    2.0927196  0.069855954        0.075    1.7198351          0.5 0.0077617726    64.418275     2.792223         70.1 -0.019264534   -0.1283548 -0.0027015499  0.097899865   0.77203419    1.0501437 
   87000    11.070418    1.3002172    9.7702013  -0.15516857   0.86700393   0.99955829   0.77910224   -3.5502959            3    2.1787366    3.2531982    3.2721417  0.010869845  -0.00660826  0.035980735  0.028756373    2.1036327    2.1146066  0.069952883        0.075    1.7195176          0.5 0.0077725426    64.329014    2.8157944         70.1 -0.0041194588 -0.077418922 0.0058344862   0.11788458   -1.3228908  -0.37213413 
   88000    11.047515      1.27276    9.7747549  -0.15340623   0.84869513    1.0236847   0.73254363   -3.5502959            3    2.1845305    3.2500557    3.2469885  0.056547413 0.0086179736  0.074860011 -0.056324685    2.1139148    2.1188526  0.069907541        0.075    1.7137379          0.5 0.0077675046    64.370738    2.8237586         70.1 -0.0027318386  -0.10272153  0.012971843   0.11919705  -0.75169332    1.9239469 
   89000     11.02919     1.269475    9.7597148  -0.15493809    0.8465046    0.9956478    0.7475545   -3.5502959            3    2.1045893     3.182493    3.1722884 -0.041013582 -0.0058190452  -0.10415848 0.0081079234    2.0325265    2.0407102  0.069897977        0.075    1.7078005          0.5 0.0077664418    64.379546    2.8313086         70.1 0.0040009096 -0.090301802  0.013269234   0.09943854    2.0946145   0.93701366 
   90000    11.055448    1.2771366     9.778311  -0.15395801   0.85161347    1.0019608   0.75186384   -3.5502959            3     2.064059    3.1588238    3.1589036  -0.12555045  0.015238584  0.030214087 -0.010849223    1.9915808    1.9997748  0.069857944        0.075    1.7144757          0.5 0.0077619938    64.416439    2.7863025         70.1 -0.0036816282  -0.09400438 0.0058073293  0.091781587   -3.1202907   0.47655438 
   91000    11.065166    1.2798294    9.7853365  -0.15207194    0.8534091    1.0035797   0.75377778   -3.5502959            3    2.1848924    3.2418327     3.274334  0.038510335 0.00013782042  0.075629152 -0.071588137    2.1122297    2.1205044  0.069912532        0.075    1.7020187          0.5 0.0077680591    64.366143    2.8179894         70.1 -0.012080461 -0.081905541 -0.0038856168   0.10747281   -1.6770456    5.5048021 
   92000    11.048501    1.2875381    9.7609625  -0.16009915   0.85854937    1.0095946   0.75833782   -3.5502959            3    2.1859885    3.2381474    3.2577588  0.062059103  0.001045647 -0.00017032201    0.0220188    2.1128862    2.1212145  0.069920391        0.075    1.6983945          0.5 0.0077689324    64.358908    2.7968099         70.1 -0.0024636884 -0.086278477 -0.0059273237   0.10370494    2.2594782    3.9864245 
   93000    11.067031    1.2970493    9.7699817   -0.1548449   0.86489153    1.0243778   0.75906434   -3.5502959            3    2.1505383    3.2269033    3.2203196  0.004392064 -0.0054964426 -0.077376815  0.040284445     2.077366     2.084816  0.069900017        0.075    1.7039983          0.5 0.0077666685    64.377667    2.7970378         70.1 -0.0054538774 -0.086291272  0.021372375     0.113557    -1.415093   -2.3124064 
   94000    11.057204    1.2867355     9.770468  -0.15187992   0.85801419    1.0121319   0.75575753   -3.5502959            3    2.1426716    3.2232409    3.1991499 0.0056237994 0.0094498965 -0.064187749 -0.034326443     2.069818    2.0777349  0.069870162        0.075    1.7170053          0.5 0.0077633514    64.405174    2.8086261         70.1 -0.024971228  -0.10984031  0.008159877    0.1113459   0.21372522   -2.8932423 
   95000     11.04981    1.2651999    9.7846097  -0.14482233   0.84365392   0.97047913   0.75955666   -3.5502959            3    2.0831224    3.1735942    3.1818895   -0.1061166 -0.0028919241 -0.0059521678  0.043159049    2.0099026     2.020858  0.069884278        0.075    1.6968123          0.5 0.0077649198    64.392166    2.7993619         70.1  0.006525102 -0.085846607 -0.024840056   0.16404808    2.7606987    -4.198554 
   96000    10.996075    1.2554506    9.7406244  -0.15997695   0.83715297   0.98132366   0.74150889   -3.5502959            3    2.1375441    3.2343244    3.2210468 -0.042738839  0.014620825  0.012089429 -0.021278069    2.0660641     2.074584  0.069923907        0.075    1.6856643          0.5  0.007769323    64.355672    2.8043614         70.1 -0.0040462459 -0.097511289 0.0017337309   0.10474576   0.13406883   -4.3118636 
   97000    11.024679    1.2737324    9.7509469  -0.15342538   0.84934352   0.97808848   0.76397066   -3.5502959            3    2.1577165    3.2318357     3.246369 -0.0050553134 0.0023110262 0.0056097684 0.0041194037    2.0840712    2.0949639  0.069906514        0.075    1.6814769          0.5 0.0077673904    64.371684    2.8210945         70.1 -0.0073141592 -0.098917293 -0.00070174993   0.10439728   -1.0793475  -0.31633085 
   98000    11.041716    1.2933305    9.7483856  -0.16285022   0.86241183   0.99193808   0.77652381   -3.5502959            3    2.1694918     3.234381      3.25229  0.021804438 0.0008524016 -0.033315752 -0.048840876    2.0946365    2.1058507  0.069859332        0.075    1.6850896          0.5  0.007762148     64.41516    2.7917969         70.1 -0.001306694 -0.094167982  0.013351863  0.074052878    3.2708555   -1.0103673 
   99000    11.031487    1.2624057     9.769081  -0.15051695   0.84179072    1.0044335   0.73385412   -3.5502959            3    2.0880795     3.186761    3.1588735 -0.081395944 -0.0055557952 -0.0033123709 0.0097230088    2.0173374    2.0236367  0.069888511        0.075    1.7051174          0.5 0.0077653901    64.388266    2.7906782         70.1 0.0056391924  -0.11915523 -0.0010749074  0.084576508    -1.808948   0.33195076 
  100000    11.048963    1.2559795    9.7929831   -0.1525982   0.83750565   0.98157115   0.74193172   -3.5502959            3     2.137305    3.2247794    3.2126495 -0.025513942 0.00036607287 -0.0073237316  0.037561033    2.0657843     2.074329  0.069846285        0.075    1.7131226          0.5 0.0077606984    64.427192    2.7943814         70.1 0.0047938161  -0.10759551 0.0037975867  0.080888888    2.1097277   0.95897885 
  101000    11.034617    1.2676613    9.7669554  -0.15492431   0.84529521   0.99231499   0.74775793   -3.5502959            3    2.1053052    3.1905661    3.1996795 -0.074330033 -0.0016764854  0.023383634 -0.0045262079    2.0332228    2.0416399  0.069917255        0.075    1.7047363          0.5 0.0077685839    64.361795     2.826334         70.1 -0.00029068257   -0.1024713 -0.002842914    0.1075566   -1.8791416   -2.7114223 
  102000    11.078197    1.3011495    9.7770473   -0.1651586   0.86762563    1.0246143   0.76346174   -3.5502959            3    2.1485431    3.2128433    3.2281891 0.0045969859 -0.0027290959 -0.0082016122 -0.043791812    2.0749469    2.0828056  0.069888709        0.075    1.7193964          0.5 0.0077654121    64.388083    2.8147424         70.1 -0.014223015 -0.091350834  -0.01626956   0.10126947    2.1280231  -0.81080609 
  103000    11.059605    1.2713098    9.7882948  -0.14710451   0.84772806   0.97304647   0.76463516   -3.5502959            3    2.2159061     3.282694    3.2598929   0.10513136 -0.00023624894 -0.049731096  0.012698711    2.1421968     2.153477  0.069891323        0.075    1.7144143          0.5 0.0077657026    64.385675     2.815293         70.1 -0.0025403596  -0.12179868  0.016573293   0.11781069   -1.1620008    4.8224461 
  104000    11.060255    1.2517165    9.8085386   -0.1519917   0.83466301    0.9700985   0.74483179   -3.5502959            3    2.0324728    3.1416395    3.1367313  -0.18095256 -0.0034490747  0.023853994 -0.0079432212    1.9606725    1.9702328  0.069883458        0.075    1.7026163          0.5 0.0077648287    64.392921    2.7937656         70.1 -0.010720299 -0.076781596  0.010920829    0.1042656  0.043660764    2.4769235 
  105000     11.05749    1.2867833    9.7707066    -0.150945   0.85804603   0.98663956   0.77277717   -3.5502959            3    2.1339326    3.1945631    3.2534824  -0.04624779 -0.005257567 -0.044051453 -0.048846353    2.0594384    2.0706314   0.06990037        0.075    1.7018613          0.5 0.0077667078    64.377342    2.8113875         70.1 -0.007840583 -0.093462634 0.0063763431   0.13711605   0.32864047     2.180093 
  106000    11.045157    1.2867689    9.7583881  -0.14614736   0.85803647    1.0146865    0.7540944   -3.5502959            3    2.2306984    3.2917676    3.2889358   0.11139186 -0.0084102663   0.03968633 0.0075926475    2.1580052    2.1655978   0.06986467        0.075    1.6997022          0.5 0.0077627411    64.410238    2.8008641         70.1  -0.01604768  -0.10780747 -0.010913363   0.10804432  -0.20473609    3.5361662 
  107000    11.114249    1.3096855    9.8045637  -0.15504994   0.87331756    1.0371977   0.76456909   -3.5502959            3    2.1857803     3.232868    3.2575771  0.066895708  0.018923728 -0.018003199 -8.0726056e-05    2.1120773    2.1192354  0.069909074        0.075    1.6829762          0.5 0.0077676749    64.369326    2.8209483         70.1 0.00073483462 -0.083062191 -0.0041777713  0.093694477    1.0912664   -1.3365821 
  108000    11.042376    1.2675766     9.774799  -0.14191443   0.84523871   0.99179207   0.74801182   -3.5502959            3    2.1902888     3.248965    3.2567257  0.065175633 0.0028783126 -0.039646226  0.018847033    2.1181819     2.126657  0.069886728        0.075    1.6845092          0.5 0.0077651919    64.389909    2.8078244         70.1 0.0059549878 -0.096590716 -0.002152057    0.1187884    2.5156727  -0.77926739 
  109000    11.109983    1.2907379    9.8192446  -0.14704305   0.86068305   0.99047627   0.77461672   -3.5502959            3    2.1674751    3.2406339    3.2482321  0.013559406 -0.0034970923  0.065791021 -0.024560989    2.0928036    2.1039278   0.06990269        0.075    1.6764085          0.5 0.0077669655    64.375205    2.8137641         70.1 -0.013204995  -0.11528199 0.0017506485    0.1081372   -3.9444576   -2.0881743 
  110000    11.085398    1.2946248    9.7907728  -0.15228103   0.86327484    1.0324004   0.75103153   -3.5502959            3     2.208467    3.2673752    3.2664507  0.091575062 -0.0031744823  0.056582634 0.0015946759     2.136069    2.1422299  0.069932019        0.075    1.6903021          0.5 0.0077702243    64.348207    2.8150913         70.1 0.00015808958  -0.14089283  0.015596773   0.12769527  -0.35839933  -0.49134942 
  111000    11.094753    1.2726329    9.8221199  -0.13934919   0.84861037   0.98942827   0.75520202   -3.5502959            3    2.1983253    3.2555814    3.2725011  0.066893416 0.0039481303 -0.067185509 -0.011608486    2.1255253    2.1348452  0.069876255        0.075    1.6611277          0.5 0.0077640283    64.399559    2.7848711         70.1 0.0082655644  -0.12203127 -0.013245738  0.097275879  -0.34133654    3.7603538 
  112000    11.055098    1.2747066    9.7803912  -0.15839711   0.84999309    1.0046829   0.74735273   -3.5502959            3    2.1072108    3.1981053      3.18884 -0.065313044 -0.0028321336  0.006923813 -0.043482411    2.0351675     2.042752  0.069866875        0.075    1.6550306          0.5 0.0077629861    64.408205    2.8058584         70.1 -0.002303968  -0.13394586 -0.028185771   0.11733415     2.355964   -5.1147344 
  113000    11.039746    1.2671441    9.7726015  -0.14710873   0.84495033   0.98403715   0.75269275   -3.5502959            3    2.1498444    3.2069897     3.225947  0.016596426  -0.01156891 -0.00060757189  0.022433082    2.0772863    2.0867102  0.069874285        0.075    1.6691165          0.5 0.0077638095    64.401374    2.8031042         70.1 -0.0023790525 -0.098867356 0.0071467303   0.12563483   -2.0621227  -0.57607354 
  114000    11.033092    1.2654252    9.7676667  -0.14964879   0.84380415   0.99119286   0.74602076   -3.5502959            3    2.1526154    3.2134328    3.2405757 0.0038375391 -0.0030776014 -0.027737717 0.0025233098    2.0807004    2.0890221  0.069877231        0.075    1.6925315          0.5 0.0077641367     64.39866     2.801364         70.1  -0.01538113  -0.11274117 -0.013884448   0.10389186       3.5209   -2.3867788 
  115000    11.046911    1.2971324    9.7497789  -0.16001105   0.86494694    1.0141394   0.76597086   -3.5502959            3    2.0951667    3.1944407    3.1736494 -0.082589942  0.013107523  0.039065786 0.00031942502    2.0213286    2.0301012  0.069899429        0.075    1.6743503          0.5 0.0077666032    64.378208    2.7911411         70.1   0.01237835  -0.10164139 0.0050151585   0.13728785 0.0035466658   -1.5247299 
  116000    11.009863    1.2473548    9.7625083    -0.150813   0.83175456   0.97613535   0.73596867   -3.5502959            3    2.1091153    3.2031925    3.1872171 -0.063063723 -0.0067516303 -0.015636739 -0.017546875    2.0381694    2.0464881  0.069865003        0.075    1.6708059          0.5 0.0077627781    64.409931    2.7945436         70.1  0.013358531 -0.095620157 -0.0030936114   0.11592329    0.6021318   -4.9070606 
  117000    11.087028    1.2895269     9.797501  -0.15540635   0.85987554    1.0183574   0.75471497   -3.5502959            3    2.1729917    3.2316323    3.2399909  0.047351958 -0.017792242  0.031651599  0.028434344    2.1002387    2.1076556  0.069853574        0.075    1.6646368          0.5 0.0077615083    64.420469    2.7866681         70.1 0.00072435038  -0.09678967  0.016775024   0.11196845  -0.82363391   -4.7387952 
  118000    11.015179    1.2725142    9.7426645  -0.15823331   0.84853122    1.0007224   0.74755327   -3.5502959            3    2.1350965     3.202384    3.2197299 -0.016824349  0.012856801  0.055567127   0.02288296    2.0630339    2.0708918  0.069873134        0.075    1.6708119          0.5 0.0077636815    64.402436     2.795461         70.1 0.0094888547 -0.082101696  0.012720001   0.10278615   -1.6154433    1.1908718 
  119000    11.046795     1.273315    9.7734804  -0.14808279   0.84906516   0.98506069   0.75886653   -3.5502959            3    2.0757713    3.1600566    3.1686728  -0.10141556 0.0079631524  0.021953642 -0.025452149     2.002618    2.0125714  0.069911895        0.075    1.6706435          0.5 0.0077679884    64.366729    2.8248055         70.1  0.015246509  -0.12569973 0.0051266052   0.11841824   -1.4200132    1.5407066 
  120000    11.062085    1.2886864    9.7733991  -0.15071303   0.85931505   0.99857734   0.76694599   -3.5502959            3     2.165184    3.2228673     3.246781  0.025903567  0.009413461 -0.044410368  0.013488745    2.0912519    2.1011169  0.069893192        0.075    1.6366035          0.5 0.0077659102    64.383953    2.8004059         70.1  0.006969519 -0.092134064  0.010269549   0.12255548  -0.39474094  -0.45004229 
  121000    11.029917    1.2561543    9.7737629  -0.15573167   0.83762219   0.99817027   0.73107822   -3.5502959            3    2.0889849    3.1697737     3.190707 -0.093526129 0.0048878321  0.014696048 0.0020640305    2.0185104    2.0249439  0.069894386        0.075    1.6561849          0.5 0.0077660429    64.382853    2.8316582         70.1 0.0012270372  -0.12881058 -0.0069117025  0.082267141   0.81346001    -1.956392 
  122000    11.078505    1.2805686     9.797936   -0.1564824   0.85390197    1.0230169   0.74166227   -3.5502959            3    2.0827728    3.1811918     3.176865  -0.10973829 -0.0072440673  0.019760025  0.027869283    2.0112781    2.0171378  0.069922788        0.075    1.6332311          0.5 0.0077691987    64.356701    2.8363405         70.1 0.0067293322  -0.11080291 -0.0031633828  0.076017992   -2.7173708   0.31200516 
  123000    11.037623    1.2496756    9.7879472   -0.1548836    0.8333021   0.97212562   0.74121546   -3.5502959            3    2.0850463    3.1932854    3.1524131  -0.09055954 0.0042867607  0.019772029  0.015411902    2.0135946    2.0226763  0.069913966        0.075    1.6229161          0.5 0.0077682184    64.364822    2.8167216         70.1 -0.00091091307  -0.11973627 0.0058783584   0.11719622    2.8379356   0.97078632 
  124000     11.06006    1.2825729    9.7774868  -0.15275289    0.8552385    1.0122353   0.75106461   -3.5502959            3    2.1331827    3.2021946    3.2149001 -0.017546543 -0.0041303785  0.029812644  0.017161658    2.0607816    2.0682394  0.069909524        0.075      1.62535          0.5 0.0077677249    64.368912    2.8243532         70.1 -0.0077186051 -0.097454018 -0.019408088   0.12037898    3.1556227   -2.8860744 
  125000    11.037123    1.2716977    9.7654255  -0.15407384   0.84798677   0.99479007   0.75059455   -3.5502959            3    2.2984251    3.3766392    3.3022598   0.21637621 0.0025694504   0.02254201  0.016033289    2.2260693     2.234601  0.069900977        0.075    1.6265455          0.5 0.0077667753    64.376782    2.7909943         70.1 -0.0096334863  -0.08959568 0.0019585195  0.096386292  -0.85920747    6.4873781 
  126000    11.063376    1.2759638    9.7874122  -0.15342308   0.85083142   0.98430552    0.7623116   -3.5502959            3    2.1297356    3.2159794    3.2212597  -0.04803217 -0.0044964199 -0.043328153 0.0064397459    2.0562503    2.0665842  0.069890413        0.075    1.6216092          0.5 0.0077656014    64.386513    2.7875987         70.1  -0.01484355 -0.082691273 -7.8339657e-05   0.10101535   -1.5428123   0.71764111 
  127000    11.072672    1.2559591    9.8167129  -0.16111296   0.83749204   0.98988096    0.7363784   -3.5502959            3    2.1804158    3.2651328    3.2431492  0.032965339 -0.001995901  0.048519417  0.024315966    2.1094304    2.1169066  0.069881774        0.075    1.6164104          0.5 0.0077646416    64.394473    2.8171374         70.1 0.0064273573 -0.087580648 0.0070074726  0.086344633   -3.1320541  -0.56155858 
  128000    11.064525     1.301491    9.7630338  -0.14686812   0.86785335    1.0474851   0.74861928   -3.5502959            3    2.1814744    3.2444742    3.2383048  0.061644141  0.013392158 -0.076281298 0.0060630358     2.109309    2.1142695  0.069873769        0.075    1.6384997          0.5 0.0077637521    64.401851    2.7994295         70.1 -0.010695242  -0.10596459  0.013271939    0.1352596    3.9896483    1.5217117 
  129000    11.052794    1.2846613    9.7681329  -0.15829396   0.85663108   0.99822067   0.76271208   -3.5502959            3    2.1193333    3.1941373    3.2161015 -0.052238704 0.0063179917  0.020869257  0.044193397    2.0458094    2.0552892  0.069876476        0.075    1.6279496          0.5 0.0077640529    64.399355     2.792931         70.1 -0.0051274877  -0.11254222 -0.0031251441  0.069655148   -5.7145702   -1.0706788 
  130000    11.087345     1.279536    9.8078092  -0.14963586   0.85321345      1.01861    0.7434483   -3.5502959            3    2.2418246    3.2812335    3.2806591   0.16358131 -0.0035820224  0.033598242 -0.013126118    2.1701577    2.1764723   0.06986672        0.075    1.6108677          0.5 0.0077629689    64.408348    2.7813573         70.1 0.0060370491 -0.093439149 0.0012178054   0.10069929   -1.9531296    5.2592876 
  131000    11.047128    1.2810981    9.7660301  -0.15813024   0.85425504    1.0073569   0.75267311   -3.5502959            3    2.2883322    3.3264448    3.3331985   0.20535341 0.0058862977  -0.05673209 -0.028460469    2.2157761    2.2237019  0.069924371        0.075    1.6252897          0.5 0.0077693746    64.355244    2.8335795         70.1 0.0055983332  -0.14644798 -0.0062316605   0.10823336    1.6365782    3.3000944 
  132000     11.05611    1.2681762    9.7879342  -0.14892829   0.84563854   0.98239817   0.75493008   -3.5502959            3    2.1018937    3.1859196    3.2103416 -0.090580073 -0.010539619 -0.046985664  0.050967686    2.0291199    2.0388646  0.069906253        0.075    1.6123207          0.5 0.0077673614    64.371924    2.8243847         70.1 -0.039142193  -0.12032479 -0.00079340887  0.096634349     2.570301     2.077301 
  133000    11.052132    1.2529791    9.7991528  -0.15031931   0.83550489   0.98958404   0.73326557   -3.5502959            3    2.2250929    3.2692677    3.3002958   0.10571536 -0.0063328891 -0.086443806  0.023141707    2.1544076    2.1616029  0.069903518        0.075    1.6275458          0.5 0.0077670576    64.374442    2.8118022         70.1 0.0080584034  -0.11002036 -0.0049539425   0.11806651   0.40275049    3.2502171 
  134000    11.047352    1.2635268     9.783825   -0.1375314   0.84253824   0.99437366   0.74179485   -3.5502959            3    2.2283136    3.2827396    3.2775189   0.12468215 0.0096159524   0.10736339 0.0018277474     2.156806    2.1645162   0.06986828        0.075    1.6324829          0.5 0.0077631422     64.40691    2.7966445         70.1  -0.01047056  -0.10273014 0.0069847837   0.11927664   -3.1094135  -0.90308142 
  135000    11.059978    1.2927715    9.7672067   -0.1582699   0.86203905   0.95778368   0.79863448   -3.5502959            3    2.2208856    3.2734292    3.2669886   0.12223895 -0.0065919849 -0.00055317836 -0.00050652961    2.1438988    2.1594358  0.069883837        0.075    1.6485517          0.5 0.0077648708    64.392572    2.7897244         70.1 -0.0067739649 -0.089463328 -0.013307495  0.084370819    4.0460185    1.8304039 
  136000    11.033187    1.2652368    9.7679507  -0.15096499   0.84367852    1.0001714   0.73983576   -3.5502959            3     2.178889    3.2575223    3.2427568  0.036388021 -0.0014705951  0.092264472 -0.0055473354    2.1075704    2.1147197  0.069864602        0.075    1.6547113          0.5 0.0077627335    64.410301    2.7956321         70.1 0.0044305454 -0.099197399 0.00071224613   0.13244782   -5.4182767    1.9253869 
  137000    11.059605    1.2789684    9.7806368  -0.14356855   0.85283496    1.0020945   0.75380977   -3.5502959            3    2.2014758    3.2359503    3.2783068  0.090170294 -0.0024520317 -0.021669713 0.0068604686    2.1288101    2.1371831  0.069880537        0.075    1.6485594          0.5 0.0077645041    64.395613    2.8116273         70.1 -0.0045526221  -0.13576504 0.0021668595   0.10836618     2.747561    2.1291595 
  138000    11.055201    1.2391587    9.8160427  -0.15115779   0.82628929   0.97505852   0.72758061   -3.5502959            3    2.1163156    3.2245474    3.1835513 -0.059151799 -0.0092074812  -0.10704777  -0.03328007    2.0461783    2.0537575  0.069894109        0.075    1.6439649          0.5 0.0077660121    64.383109    2.8106332         70.1 0.0021906374 -0.089146785 -0.0065257013   0.11104592   0.73687277  -0.97268712 
  139000    11.052045    1.2744276    9.7776173   -0.1512402    0.8498071   0.99811422   0.75141468   -3.5502959            3    2.1283108    3.1796233    3.2291956 -0.023886649 0.0089110018  0.081154373 -0.0027198057    2.0558759    2.0642734  0.069894296        0.075    1.6465325          0.5 0.0077660329    64.382936    2.7898483         70.1 0.00030849271  -0.12364951 0.0029394897   0.11161683   -2.0908964   -3.3842434 
  140000     11.03564    1.2435125    9.7921273   -0.1402803   0.82919242   0.95888358   0.74318235   -3.5502959            3    2.2418097    3.2880174    3.2580303   0.17938125 -0.012323168  0.034542856 -0.029613152    2.1701684    2.1802893  0.069842975        0.075     1.647857          0.5 0.0077603306    64.430245    2.7844075         70.1 0.0062582231  -0.12176754 -0.0019662904  0.085836247  -0.61736028    3.0747105 
  141000    11.058054    1.2912438    9.7668101  -0.14243273   0.86102036    1.0161484   0.75809239   -3.5502959            3    2.0743342    3.1663416     3.166028  -0.10936705 -0.018301541 -0.046356975 -0.0088997887    2.0012556    2.0091398   0.06989259        0.075    1.6549999          0.5 0.0077658433    64.384508     2.819004         70.1  0.009715351  -0.10624739  0.021576529    0.1520988    1.1246461 -0.027707715 
  142000    11.083182    1.2815687    9.8016128  -0.14686912   0.85456888   0.99856249    0.7590491   -3.5502959            3    2.0988871    3.1617691    3.2026747 -0.067782467 -0.00020087666  0.032986115 -0.025671801    2.0257163     2.034821  0.069975547        0.075    1.6560371          0.5 0.0077750608    64.308179    2.8429083         70.1 -0.011260068  -0.13239143 -0.016044244   0.11210925   -1.6937629    1.3451915 
  143000    11.012288    1.2759862    9.7363016  -0.15162933    0.8508464    1.0032229   0.74974595   -3.5502959            3    2.0916362    3.1885855    3.1807515 -0.094428421 -0.0047221288 -0.091907506  0.010003167    2.0193622     2.027271  0.069882533        0.075    1.6481259          0.5 0.0077647259    64.393774    2.8052084         70.1 0.0027156599  -0.12288884 -0.015559407   0.12989999     2.294462  -0.26607849 
  144000    11.047943    1.2685414    9.7794017  -0.14776884   0.84588209   0.99074737   0.74977897   -3.5502959            3    2.1542959    3.2362014    3.2195822 0.0071041194 -0.00095072312 0.0014756965  0.031747926    2.0820187    2.0907312   0.06994123        0.075    1.6395835          0.5 0.0077712478    64.339732    2.8277483         70.1 -0.0017303686 -0.099087574 -0.0030955092   0.11858968   -0.3460409    3.4760168 
  145000    11.038308    1.2719381    9.7663697  -0.15464424   0.84814704    1.0337893   0.72490534   -3.5502959            3      2.16219     3.233994    3.2382747  0.014301297 -0.0053965337 0.0090377311 -0.025026456    2.0923106    2.0958638   0.06991115        0.075    1.6263745          0.5 0.0077679055    64.367415    2.8143017         70.1 -0.00096681977  -0.12432009 0.0044381904  0.073102001     1.686755    1.8657205 
  146000    11.070585     1.270545    9.8000403  -0.15827312   0.84721812   0.98963271   0.75274656   -3.5502959            3    2.0440211    3.1482753    3.1467996  -0.16301158 0.0011677385  -0.02931372 -0.027802064    1.9714579    1.9805279  0.069912183        0.075    1.6317865          0.5 0.0077680204    64.366463    2.8105473         70.1 0.0083293285  -0.08929596 -0.0030777088  0.098413841  0.094148799   -5.8656529 
  147000    11.068323    1.2969109    9.7714123  -0.15926908   0.86479927    1.0133428   0.76625504   -3.5502959            3    2.1464504    3.2135187    3.2220936  0.003738709 -0.0014484951 -0.024906706    0.0155293    2.0725849     2.081436  0.069916351        0.075    1.6202691          0.5 0.0077684834    64.362627    2.7984084         70.1 0.00024792813 -0.098995061 -0.0085495137  0.093091393    1.8218332   -4.4027582 
  148000    11.034106    1.2720013    9.7621048  -0.15406519   0.84818917    0.9769319   0.76281737   -3.5502959            3    2.1596701    3.2309082    3.2156463  0.032455849 0.00094741968 -0.015630719 -0.00039161614    2.0861361    2.0969918  0.069870308        0.075    1.6285656          0.5 0.0077633676     64.40504     2.791977         70.1 -0.011862073  -0.13566006 0.0055630407  0.091800892  -0.88355773    2.1092174 
  149000    11.055992    1.2753531     9.780639  -0.15177412    0.8504242    1.0196949   0.73807954   -3.5502959            3    2.1836377    3.2405992    3.2388531  0.071460576 -0.0011189124 -0.013294131 -0.041396581    2.1124883    2.1182157  0.069888505        0.075    1.6320505          0.5 0.0077653895    64.388271    2.8153761         70.1 0.0085196541  -0.12273303  0.001020005   0.10118692   0.97827123   -2.2772397 
  150000    10.990636    1.2326291    9.7580069  -0.16041046   0.82193522   0.96572216   0.72654093   -3.5502959            3    2.0699826    3.1870347    3.1586016  -0.13568858 -0.0082088794 0.0063059106 -0.015005145    1.9999455    2.0080234   0.06988463        0.075    1.6331392          0.5 0.0077649589    64.391841    2.8003185         70.1  0.013399279  -0.10761243 0.0034871202   0.11349558  -0.57547242   -1.7938377 
  151000    11.081921    1.3139249    9.7679957  -0.15041395   0.87614443    1.0246408   0.77763582   -3.5502959            3    2.1308204    3.1949503    3.2322858 -0.034774914 -0.00063341966 -0.026481456  -0.02642399    2.0558579    2.0650812  0.069933448        0.075     1.626116          0.5 0.0077703831    64.346892     2.829877         70.1 -0.0059492374  -0.10754391  0.012361937  0.093174206  0.064558209   0.33174733 
  152000    11.037363    1.2735506    9.7638123  -0.15443766    0.8492223   0.99684277   0.75128667   -3.5502959            3    2.1384518    3.2296554    3.1871435 -0.0014434628 0.0063607809  0.015789184  0.011915893    2.0660293     2.074496  0.069880163        0.075    1.6281533          0.5 0.0077644626    64.395957    2.7983136         70.1 0.0042934887  -0.13351476 -0.016180291   0.13962151    1.3962329  -0.85587731 
  153000     11.05808    1.2949508    9.7631288  -0.14329321   0.86349226   0.95989105   0.79965285   -3.5502959            3    2.1217154    3.2203855    3.1865558 -0.041795094 -0.001572774 -0.0056501368 -0.024207542    2.0446305    2.0601304  0.069912138        0.075    1.6083575          0.5 0.0077680153    64.366506    2.8303589         70.1 -0.012184975 -0.092966872 -0.0029325556   0.15629434   -1.2968948   -1.9343134 
  154000    11.094277    1.2778198    9.8164577  -0.16520371   0.85206904   0.98348524   0.76491933   -3.5502959            3    2.1496608    3.2208075    3.2047027  0.023472145 -0.00073846254  0.011605669  0.041561915    2.0759241     2.086562  0.069881115        0.075    1.6078663          0.5 0.0077645684     64.39508    2.8203177         70.1 -0.008919236   -0.1264492 0.0065894094    0.1010628   -1.7095379    1.7641887 
  155000    11.051789    1.2839936    9.7677954  -0.15081495   0.85618586   0.97576345   0.77691694   -3.5502959            3    2.1186107    3.1828595    3.2162924  -0.04331981 0.0056493213  0.020942549  0.018454063    2.0437175    2.0560073  0.069903371        0.075    1.6054548          0.5 0.0077670412    64.374578    2.8171399         70.1 0.00045501304 -0.092155969  0.044173599   0.17832492  -0.65033695   0.21083454 
  156000    11.016597    1.2489981    9.7675984  -0.14941381   0.83285033   0.99130158   0.72770015   -3.5502959            3    2.1595586    3.2471549    3.2380411 -0.0065201645 -0.006707692 -0.079090409 -0.020432701    2.0894098    2.0959584  0.069898854        0.075    1.5907748          0.5 0.0077665393    64.378738    2.8257022         70.1 -0.0082784542 -0.085469457 -0.0079888438   0.14454096 -0.021348712   -1.6501944 
  157000    11.111188    1.3227368    9.7884513  -0.15006935   0.88202038    1.0267022   0.78605272   -3.5502959            3    2.1587229    3.2277052     3.227817  0.020646591  0.010767359  0.042262104  0.031318057     2.082949    2.0928514  0.069905576        0.075    1.6153626          0.5 0.0077672863    64.372547    2.8232322         70.1 0.0022944723  -0.15099817 0.0038552579   0.10506061   -1.3237251  -0.46599638 
  158000    11.066556    1.2879741    9.7785816  -0.15113965   0.85884007   0.98750705   0.77352263   -3.5502959            3    2.0574722      3.16368    3.1633958   -0.1546592 -0.0018901697 -0.0071754129 -0.0028327895    1.9829061    1.9941154  0.069872125        0.075     1.617976          0.5 0.0077635694    64.403366    2.7984662         70.1 -0.0040618895  -0.11415596 -0.010414705  0.076175198  -0.15718132    0.6797202 
  159000    11.018941    1.2516409    9.7673002  -0.16443707    0.8346126   0.99686019   0.72693639   -3.5502959            3    2.1525398    3.2171755    3.2275224  0.012921396 -0.0049353302   0.03503833 -0.020264181    2.0824646    2.0885829  0.069888949        0.075    1.6037662          0.5 0.0077654388    64.387862      2.81777         70.1  0.016453426  -0.13186744  0.027609676  0.087711357  -0.29251474    2.5963353 
  160000    11.049527    1.2646098    9.7849173  -0.14556139    0.8432604   0.97490648   0.75595443   -3.5502959            3     2.125093    3.1901814    3.1879356 -0.002838024 -0.0059310731 -0.025935151 -0.042512539    2.0522205    2.0625446  0.069893808        0.075    1.6183772          0.5 0.0077659787    64.383386     2.801299         70.1 0.0020084414  -0.12504725 -0.001537833   0.15837006  -0.73212001   -2.0775458 
  161000    11.059619    1.2971125    9.7625061  -0.15542337   0.86493367   0.99907374   0.77597583   -3.5502959            3    2.1117859      3.21236    3.2159826 -0.092984878 0.0028779729  0.038580526 -0.016121617    2.0369834     2.047687  0.069913728        0.075     1.610972          0.5  0.007768192    64.365041    2.8191358         70.1  0.016830216  -0.12860829 0.0075683824    0.1064765  -0.68966881    1.3958164 
  162000    11.024413     1.252273    9.7721397  -0.15460928   0.83503406    1.0000662   0.72550475   -3.5502959            3    2.1578653    3.2059108    3.2648246 0.0028606202 0.0067146095 0.00087478637 -0.025566088    2.0879281    2.0937027  0.069912663        0.075    1.6289942          0.5 0.0077680736    64.366022     2.811909         70.1 0.0029111338 -0.092958163 -0.00017160101  0.086388018    -1.553762    3.8834654 
  163000    11.043352    1.2685057    9.7748464  -0.15332741   0.84585828   0.98276301   0.75505335   -3.5502959            3    2.1085272     3.180495    3.2205582 -0.075471559 0.0040662391 -0.049530762 0.0060687927    2.0357416    2.0454748  0.069903247        0.075    1.6216762          0.5 0.0077670275    64.374692    2.8074009         70.1 -0.010320234 -0.087806612 0.00035037894   0.11247877    1.7709132   -2.7867835 
  164000     11.03518    1.2683881    9.7667918  -0.15495968   0.84577982   0.99759074   0.74505393   -3.5502959            3    2.0795461    3.1946728    3.1637768  -0.11981139  0.010572176  0.044682036 -0.017326803    2.0077244    2.0155423  0.069905354        0.075    1.6155203          0.5 0.0077672616    64.372751    2.8042388         70.1 -0.0018038698 -0.097009599 0.0094015727  0.079001651   -1.2131636  -0.41937407 
  165000    11.033527    1.2653026    9.7682241  -0.16160429   0.84372236   0.98798595   0.74801889   -3.5502959            3    2.1877177    3.2633015    3.2522591  0.047592444 0.0090190955  0.044719382  0.018327386    2.1156102    2.1243302  0.069878873        0.075    1.6273441          0.5 0.0077643192    64.397146    2.7926801         70.1  0.013480694  -0.10131729 -0.0082897954   0.11195968    -1.651838  -0.21661475 
  166000    11.041502     1.272284    9.7692182  -0.15277637   0.84837769    1.0064388   0.74349292   -3.5502959            3    2.1481945    3.2136257    3.2410963 -0.010138418 -0.0012912863 -0.086938171  -0.01166351    2.0765233    2.0836231  0.069901519        0.075    1.6251313          0.5 0.0077668355    64.376283    2.8216029         70.1 -0.0018332638  -0.11564959 0.0022723851  0.089789387   -0.2915851   0.17358375 
  167000    11.024247    1.2580839    9.7661626  -0.15070856   0.83890888    1.0234499   0.71639671   -3.5502959            3    2.1879986    3.2411365    3.2707503  0.052109023 -0.0065051598  -0.09924398  0.041098107    2.1189394    2.1223358  0.069897284        0.075    1.6267813          0.5 0.0077663649    64.380184    2.8011824         70.1  0.012367702  -0.13493496   0.02002956   0.12182287  0.023472834   0.31941945 
  168000    11.070442    1.2861302    9.7843114  -0.16186708   0.85761053    1.0122664   0.75499557   -3.5502959            3     2.226031    3.2787246    3.2579598   0.14140868 0.0020838665  0.072405994 0.0055269906     2.153251    2.1610857   0.06985831        0.075    1.6450994          0.5 0.0077620345    64.416101    2.7862656         70.1  0.014339955  -0.13489942 0.00019294624   0.11098486   -2.1732424    1.0558785 
  169000    11.033873    1.2586847    9.7751883  -0.15315087   0.83930947   0.97510114   0.74924291   -3.5502959            3    2.1065784    3.1896826    3.1798562  -0.04980349 -0.0069179987  0.032695258 -0.044066228    2.0343529    2.0440175  0.069855875        0.075    1.6399833          0.5 0.0077617639    64.418347    2.7821053         70.1 0.0014605472  -0.13620672 0.0037525269   0.10434364   -0.8100793    0.1419988 
  170000     11.05076    1.2818259    9.7689338  -0.15230842   0.85474036   0.98841017   0.76609172   -3.5502959            3    2.1079669    3.2103202    3.1790982 -0.065517773 -0.0024599148 -0.011954144 -0.0022763909    2.0341172    2.0445521  0.069854868        0.075     1.649255          0.5  0.007761652    64.419276    2.8098232         70.1 -0.0027811981  -0.13082297 -0.0018995942  0.097977239    1.8047058   -3.9788603 
  171000    11.091919    1.2778522    9.8140672  -0.14289586   0.85209068    1.0219345   0.73936521   -3.5502959            3      2.19957    3.2608283    3.2618967  0.075985015 0.0064473566 0.0077349615 -0.0086137396    2.1282967    2.1340044  0.069888065        0.075    1.6507014          0.5 0.0077653405    64.388677    2.7989312         70.1  0.017152238 -0.093761719 0.0080470271   0.13987229   -2.1796139    1.8324156 
  172000    11.033857    1.2437466    9.7901102  -0.15023892    0.8293485   0.97236578   0.73446921   -3.5502959            3    2.1849594    3.2329023    3.2558105  0.066165522 0.0083646784 -0.055816698 -0.055246417    2.1141581     2.122574  0.069898287        0.075    1.6664106          0.5 0.0077664764     64.37926     2.800412         70.1 0.0020493395  -0.13437073 -0.0054761247  0.083852053     1.483981  -0.59877909 
  173000    11.047929    1.2733146    9.7746144  -0.15328296   0.84906492   0.97282765   0.76700792   -3.5502959            3    2.1396092    3.1880773    3.2336897 -0.0029394475 0.0058720366 0.0030620939  0.020919851    2.0656712    2.0771942   0.06989567        0.075    1.6478688          0.5 0.0077661856    64.381671    2.8108232         70.1 -0.0084934426  -0.11430387 -0.0022094635  0.063591828   -2.5348931   0.31053204 
  174000     11.09176    1.2951025    9.7966578  -0.15266607   0.86359337    1.0123219    0.7649256   -3.5502959            3    2.1707002    3.2483694    3.2420543  0.021676828 0.0078613919  0.058702146  0.024494733    2.0969629    2.1057513  0.069899206        0.075    1.6317827          0.5 0.0077665785    64.378413    2.8089114         70.1 0.0032240367  -0.10729875 -0.015518846   0.10588882   0.61712329    1.6528784 
  175000    11.112655    1.3047947    9.8078599  -0.14545959   0.87005631     1.009227    0.7777522   -3.5502959            3    2.1964704     3.266764    3.2545374  0.068109712 0.0052343262 -0.029134466   0.01667329    2.1214966      2.13172  0.069893148        0.075    1.6365387          0.5 0.0077659054    64.383994    2.8073677         70.1 -0.011596269 -0.085143056 -0.015572344   0.12126288   -2.1373241   0.95164388 
  176000    11.033445    1.2708741     9.762571  -0.14768148   0.84743752    1.0011358   0.74545608   -3.5502959            3    2.1742711    3.2600176    3.2341748  0.028620858 -0.0032885798 -0.022201077   0.03052082    2.1024106    2.1100399  0.069914084        0.075    1.6424785          0.5 0.0077682316    64.364714    2.8282694         70.1 0.0027954622 -0.093378805 -0.011744856   0.10726035    3.1101996   -3.0205686 
  177000    11.057546    1.2690442    9.7885019  -0.15616889   0.84621734     1.007228    0.7393687   -3.5502959            3    2.1417244    3.2264878     3.211904 -0.013218511 -0.0015795007  0.067805675  0.011445096    2.0704508    2.0771023  0.069894741        0.075    1.6399994          0.5 0.0077660824    64.382526    2.8148566         70.1 0.0091710883 -0.075753988 -0.0097294953   0.11702504   -5.0576371   0.51934566 
  178000    11.033246    1.2576163    9.7756298  -0.15747759   0.83859708    0.9740639   0.74874646   -3.5502959            3    2.0711686    3.1847901    3.1448855  -0.11616981  0.011189598 -0.066970751    0.0568485    1.9989909    2.0086743  0.069861966        0.075    1.6349849          0.5 0.0077624407     64.41273    2.7927487         70.1  0.010582495  -0.10665374   0.01012677  0.087122164  -0.49234397   -4.0350118 
  179000    11.061547    1.2622915    9.7992551  -0.14784504   0.84171455   0.99636736   0.73909572   -3.5502959            3    2.0546442    3.1550325    3.1572321  -0.14833204 -0.0045356468 -0.020164078 -0.026966519    1.9833968    1.9907189  0.069914444        0.075    1.6315988          0.5 0.0077682715    64.364382    2.8180277         70.1 0.00064362729 -0.076116614 -0.0055545531  0.096629839    1.8914992   -1.7741018 
  180000    11.027566    1.2493551    9.7782113  -0.15245665   0.83308837    0.9783132   0.73674121   -3.5502959            3    2.1432924    3.2165577    3.2491266   -0.0358073 0.0031713132  0.048660313  0.021151227     2.072272    2.0805254  0.069904729        0.075    1.6430861          0.5 0.0077671921    64.373328    2.8192544         70.1 0.0071170731 -0.095809557 0.0020851747   0.13934498  -0.15232529    1.1222548 
  181000    11.045631     1.257766    9.7878646  -0.15680612   0.83869688   0.98280433   0.74309547   -3.5502959            3    2.0580746     3.171603    3.1345099  -0.13188916 -0.017860265 -0.020159628   0.01837216    1.9864417    1.9950195  0.069873116        0.075    1.6464297          0.5 0.0077636796    64.402452     2.802175         70.1 -0.010331337 -0.083443762 -0.020745141     0.143989   -2.3708562   -5.2479558 
  182000    11.070875    1.2668075    9.8040679  -0.16229873   0.84472589    1.0082998   0.73617071   -3.5502959            3    2.0991991    3.1873308    3.1747011 -0.064434609 0.0054534883  0.017026358  0.026433595    2.0282337    2.0345082  0.069891712        0.075    1.6438334          0.5 0.0077657457    64.385317    2.8029344         70.1 0.0056421524 -0.097007976 0.0020183176  0.081143528    1.8893027   0.35386934 
  183000    11.008005    1.2650468    9.7429585  -0.15837066   0.84355182    0.9723749   0.75812483   -3.5502959            3    2.1702402      3.26096    3.2361743  0.013586403 -0.0011549437  0.099435963  0.033691041    2.0971585    2.1078543  0.069893488        0.075     1.651581          0.5 0.0077659431     64.38368    2.7842606         70.1 -0.0036519073  -0.11622394  0.029295557   0.10397254   -1.8897319   -1.0963976 
  184000     11.04887    1.2627435    9.7861266  -0.15956937   0.84201597   0.97774232   0.75199389   -3.5502959            3    2.1187757    3.2196549    3.2182668 -0.081594707 -0.010109442 -0.092718448  0.025862854     2.046285    2.0560454  0.069929579        0.075    1.6551396          0.5 0.0077699532    64.350452    2.8379697         70.1  -0.01190485 -0.091349965  0.027752168   0.10895744    1.9284333   -2.9771041 
  185000    11.094108    1.2976335    9.7964743  -0.14668246   0.86528112    1.0371446   0.75121634   -3.5502959            3    2.0948397    3.1744822    3.1791263 -0.069089524 0.0010156549  0.026582861 0.0026381374    2.0224239    2.0282982  0.069877214        0.075    1.6662343          0.5 0.0077641349    64.398675    2.8059307         70.1 0.0016232081  -0.12122521  0.001583207   0.10386533    -2.429569   0.25590809 
  186000    11.070424    1.2912211    9.7792033   -0.1630048    0.8610052    1.0097852   0.76230219   -3.5502959            3    2.0688596    3.1548195    3.1819327  -0.13017345 -0.004562384  0.039158433  0.011640371    1.9953752    2.0040734  0.069890962        0.075    1.6682453          0.5 0.0077656624    64.386008    2.8120156         70.1 0.0078917082  -0.10645007 -0.0061107194  0.092608436   0.99309555   -1.6792475 
  187000     11.04377    1.2662532    9.7775171  -0.15791339    0.8443563    0.9909156   0.74712514   -3.5502959            3    2.0975181    3.1823454    3.2016928 -0.091483869 -0.0050566237 -0.086180576  0.015604501    2.0254967    2.0339426  0.069967048        0.075    1.6688746          0.5 0.0077741165    64.315991     2.854054         70.1 0.0086633411  -0.10090437 0.0038196678  0.095362601    1.6419191     -3.74566 
  188000    11.056765    1.2776703    9.7790952  -0.15420756   0.85196934   0.99764145   0.75533147   -3.5502959            3    2.0457709    3.1473769    3.1144254  -0.12448967 0.0055740156 0.0084468139  0.048718191    1.9729584    1.9817638  0.069866107        0.075    1.6732813          0.5 0.0077629008    64.408913    2.7964166         70.1 -0.0004401988  -0.11673615 -0.00099778696  0.074954016     1.152209 -0.054475789 
  189000    11.035388    1.2463755    9.7890125  -0.15350546   0.83110152   0.97075863   0.73845925   -3.5502959            3    2.0474101    3.1368162    3.1728854  -0.16747122 -0.017503123 -0.053601595 -0.006731903    1.9762241    1.9851278  0.069848732        0.075    1.6643448          0.5 0.0077609702    64.424935    2.7874276         70.1 0.0076006601  -0.09443672  -0.01061683  0.096741939    -1.002169   -2.4198871 
  190000     11.02977    1.2685341    9.7612357  -0.16070526   0.84587718    1.0173563     0.732061   -3.5502959            3    2.0754526    3.1654551    3.1907589  -0.12985623 0.0023020036 0.0086378413 -0.0057256132    2.0048834    2.0101807  0.069900452        0.075    1.6804352          0.5 0.0077667169    64.377266    2.8182827         70.1 0.0040055737  -0.14132366 -0.012968609  0.091262155   0.36999763   -4.9314688 
  191000    11.071261    1.3044397    9.7668213  -0.15505504   0.86981959    1.0299377   0.76357369   -3.5502959            3    2.0747598    3.1788324    3.1509043  -0.10545731  0.011925479    0.0100251 -0.002469393    2.0011528    2.0086807  0.069893193        0.075    1.6842109          0.5 0.0077659104    64.383952    2.7994747         70.1 0.0088001219  -0.12035063 -0.0023201714    0.1045262   -1.2795536   -1.6608939 
  192000    11.024835    1.2326428    9.7921926  -0.15878908   0.82194435   0.99594468   0.70644134   -3.5502959            3    2.1295012    3.1918074    3.2091616 -0.012465512  0.012141133 -0.032541486  0.013367983    2.0614016     2.065603  0.069917839        0.075    1.6672811          0.5 0.0077686488    64.361256    2.8152496         70.1  0.016722627 -0.088184727 -0.00096175309   0.10475942    2.4687605   -3.7906364 
  193000    11.050347    1.2662324    9.7841149  -0.15633828    0.8443424    0.9837071   0.75189964   -3.5502959            3     2.145602      3.21062    3.2447804 -0.018594286 -0.003841423 0.0040777032 0.00088835104    2.0731204     2.082489   0.06989163        0.075    1.6786731          0.5 0.0077657366    64.385392    2.7901641         70.1 -0.0093510555  -0.13615727 -0.0079402992   0.15294841   -1.1872217  -0.98243576 
  194000    11.068917    1.2806143    9.7883028  -0.15171783   0.85393245    1.0037893   0.75451014   -3.5502959            3    2.2163266      3.25647     3.271934   0.12057568 -0.0051139549  0.027508795 -0.0034891219    2.1435933    2.1519251  0.069868975        0.075    1.6823882          0.5 0.0077632195    64.406269    2.7913898         70.1 0.0072239167  -0.11335367 -0.0083254199    0.1004223   -1.8560598    1.5036111 
  195000     11.00505     1.261865     9.743185  -0.14892994   0.84143014    1.0063503   0.73197772   -3.5502959            3    2.2262934     3.280371    3.2824499   0.11605948 -0.001700414 -0.050727345 -0.066842798    2.1557323    2.1617277  0.069877845        0.075    1.6721454          0.5  0.007764205    64.398094    2.7874665         70.1 -0.0032479481  -0.12344495  0.017679319   0.11799539    1.4562632    1.0841675 
  196000    11.101767    1.2869288    9.8148384  -0.14685533   0.85814304   0.99952635   0.76436189   -3.5502959            3    2.1890037    3.2412434    3.2532012  0.072566472 0.0072257933 -0.027084906 -0.0010883453    2.1153207    2.1248757  0.069868661        0.075    1.6713592          0.5 0.0077631846    64.406558    2.7885546         70.1 -0.0034846798 -0.099340372 -0.0092298183   0.11804774  -0.77085225  -0.39235647 
  197000    11.038392    1.2768606    9.7615313  -0.15325798   0.85142944    1.0208314   0.73899782   -3.5502959            3    2.0956977    3.1898419     3.196849 -0.099597798  0.002898577  0.022744418  0.036672031    2.0244598    2.0302028  0.069927552        0.075    1.6785526          0.5  0.007769728    64.352317    2.8150496         70.1  0.028926862  -0.10066869 -0.018947199   0.13184774   -1.9468206    -2.272923 
  198000    11.092907    1.2784395    9.8144677  -0.14682069   0.85248227   0.99844205   0.75565313   -3.5502959            3    2.1216376    3.2190363    3.1766265 -0.030750133 0.0025444652 -0.036671456  0.038165898    2.0487941    2.0575792  0.069863982        0.075    1.6808163          0.5 0.0077626647    64.410872    2.7963516         70.1  0.006944828 -0.095620121 -0.0064860531   0.12190137    2.5890735   -3.3514846 
  199000    11.045679    1.2761917    9.7694878  -0.14534762   0.85098338    1.0255209   0.73513359   -3.5502959            3    2.0906442    3.1966979    3.1686875 -0.093453034 -0.012859288  0.019767592 -0.019576006    2.0197787    2.0248484   0.06988438        0.075    1.7067217          0.5 0.0077649311    64.392071     2.806752         70.1 0.0029879908  -0.11313496 -0.00059927658  0.079826533    2.3053286   -6.9771338 
  200000    11.077308    1.2960247    9.7812835  -0.14710716   0.86420836    1.0184647   0.76186175   -3.5502959            3    2.1747818    3.2415442    3.2395555  0.043245676 -0.0022374266 -0.051748716 -0.025858292    2.1013398    2.1094388  0.069888605        0.075    1.7210336          0.5 0.0077654006    64.388179    2.8037747         70.1   0.02288949 -0.095939648 0.0017188705   0.10420799   -2.6950545  0.079296569 
  201000    11.037865    1.2852345    9.7526305  -0.14905529    0.8570133    0.9883183   0.76993942   -3.5502959            3    2.0888026    3.1943656    3.1702379 -0.098195709 -0.0070891339 -0.024722093  0.018428912     2.014582    2.0253937  0.069924894        0.075    1.7023982          0.5 0.0077694327    64.354763    2.8303276         70.1 -0.0046215835  -0.10042788  0.008445876  0.094949588  -0.89084932   -2.8231763 
  202000      11.0247    1.2717597    9.7529405   -0.1640806   0.84802807    0.9925108   0.75218035   -3.5502959            3    2.1964387    3.2654857    3.2728225  0.051007764 0.0084302369  0.028302672  0.020460296      2.12393    2.1327608  0.069867067        0.075    1.7028494          0.5 0.0077630075    64.408028    2.8014029         70.1 -0.0055363761  -0.09400986 0.0068636086   0.10206029   0.61391029   -3.9334441 
  203000    11.015888    1.2699387    9.7459494  -0.15326956    0.8468138    1.0220747   0.73048098   -3.5502959            3    2.2025557    3.2653228    3.2560055  0.086338726 -0.0021176261 -0.061463657 -0.018474831    2.1321388    2.1369811   0.06992342        0.075    1.7078284          0.5 0.0077692689     64.35612    2.8377067         70.1 0.0097898808  -0.13536862 -0.013087475   0.13102942   0.97849316   -3.1357514 
  204000    11.056774    1.2725827    9.7841912  -0.15647527   0.84857684   0.98521154   0.75795263   -3.5502959            3    2.1748375    3.2084328       3.2324  0.083679555 0.00029843236  0.012447476 -0.032583384    2.1017723    2.1116279  0.069890585        0.075    1.7118456          0.5 0.0077656205    64.386355    2.8021782         70.1 -0.0087019397  -0.11496908 0.0097176082   0.10542573   0.42317344   -4.4608657 
  205000    11.076191     1.260899    9.8152924  -0.13980737   0.84078598   0.98831566   0.74290766   -3.5502959            3    2.0835201    3.1625549    3.1530247 -0.065019327 0.0058729938  0.018780265 -0.0054370004    2.0119053    2.0201114  0.069880389        0.075    1.7090676          0.5 0.0077644877    64.395749     2.809084         70.1  0.020420799 -0.091207916 -0.0080645543   0.11248332    -1.256106   -2.9619979 
  206000    11.076957    1.2749145    9.8020422  -0.14910439   0.85013175   0.98993604   0.75739857   -3.5502959            3    2.0872021    3.1805184    3.1735476 -0.092459838 0.0010111543  0.042247447 -0.023412674    2.0141904    2.0236894  0.069897597        0.075    1.7017375          0.5 0.0077663996    64.379896     2.804594         70.1 -0.0034150845 -0.088080929 -0.0053390429   0.10536913   0.64998779   -3.2510347 
  207000    11.037878    1.2610125    9.7768656  -0.14882151   0.84086172   0.98704264   0.74388111   -3.5502959            3     2.229715    3.2788607     3.291562   0.11872217 -0.0078486589 -0.005010541  0.027410119    2.1580063     2.166388  0.069875671        0.075    1.7077547          0.5 0.0077639635    64.400097    2.8013687         70.1 0.00079475639  -0.12136927 0.0043619969   0.14182343    1.6278668  0.010200321 
  208000    11.051084    1.2682358    9.7828487  -0.15068567   0.84567827   0.98423941   0.75377083   -3.5502959            3    2.1641557    3.2255227    3.2588145 0.0081299522 0.0087109098 -0.065648356 -0.024597573    2.0914937    2.1010086  0.069921848        0.075    1.7142997          0.5 0.0077690942    64.357567    2.8011519         70.1 -0.00050799954  -0.12680795 -0.010829198   0.10638721   -1.8976387   -2.8672281 
  209000    11.049949    1.2699963    9.7799523  -0.16426864   0.84685223    1.0034168   0.74296296   -3.5502959            3    2.0251269    3.1445249    3.1352612  -0.20440554 -0.0021035086  0.012261382  0.020207973    1.9535067    1.9607493  0.069914039        0.075    1.7050628          0.5 0.0077682265    64.364756    2.8291411         70.1 0.0080560121  -0.12223376 -0.00039806522  0.093637321    3.1116814   -5.9477294 
  210000    11.056337     1.274626    9.7817108  -0.14595256   0.84993939    1.0210077   0.73639814   -3.5502959            3    2.1740107    3.2434533    3.2303153  0.048263666 -0.002483694  0.018551902 -0.056371074    2.1030234    2.1085046  0.069861205        0.075    1.7368978          0.5 0.0077623561    64.413433    2.7984623         70.1 0.0068718672  -0.10838515  0.011360171   0.10006669   0.80451537    3.3510718 
  211000    11.064361    1.2694674    9.7948937  -0.15328231   0.84649953     1.000347   0.74441845   -3.5502959            3    2.1177954    3.2172202    3.1762432 -0.040077348 0.0064559536 0.0088976259 -0.027941698    2.0460349    2.0536147  0.069896462        0.075    1.7275821          0.5 0.0077662735    64.380941    2.7864329         70.1 0.00061093773 -0.077386899    0.0133321   0.10505912   -3.7790466    -1.045017 
  212000     11.06601    1.2897594     9.776251  -0.14560157   0.86003056   0.99230333    0.7723137   -3.5502959            3    2.1347708    3.2229747    3.2246007 -0.043263038  0.005148878 -0.019038423  0.037890225    2.0603213    2.0711062  0.069941111        0.075    1.7366737          0.5 0.0077712346    64.339842    2.8345543         70.1 -0.0081648887  -0.12822484  0.012373166   0.13814249   -1.3867125  -0.94877715 
  213000     11.02723    1.2638765    9.7633538  -0.15310609   0.84277145    1.0320399   0.71711433   -3.5502959            3    2.1618042    3.2395743    3.2494952 -0.0036569167 -0.00014350149 0.0077325986  0.021385113    2.0926758    2.0955902  0.069887466        0.075    1.7511604          0.5  0.007765274    64.389228    2.7998711         70.1 -0.0068713982  -0.10571273 -0.0060601296  0.079818304    2.0106434   -3.0457933 
  214000     11.06463    1.2666388    9.7979913   -0.1561201    0.8446134    1.0163952   0.73059534   -3.5502959            3     2.188836     3.235981    3.2533786  0.077148309 8.2302635e-05   0.11100628  0.024253762     2.118408    2.1236257  0.069855858        0.075    1.7365305          0.5  0.007761762    64.418362    2.7886261         70.1 -0.023479377 -0.072111141 -0.018288623   0.11241235   -4.9779837    1.8031617 
  215000     11.06259    1.2902016    9.7723883  -0.15091706   0.86032541   0.99886653   0.76843672   -3.5502959            3    2.1261739    3.2163313    3.1947577  -0.03256734 -0.0053554593 -0.085176073  0.032469745    2.0520981    2.0620883  0.069920567        0.075    1.7219681          0.5 0.0077689519    64.358746    2.8077801         70.1 0.0066384345  -0.12935518 -0.0019033752   0.11222487    3.1365861 -0.083124438 
  216000    11.063228    1.2717675    9.7914607  -0.14921005   0.84803328   0.99517052   0.75041883   -3.5502959            3    2.1731063    3.2549715    3.2266848  0.037662472 -0.012276089  0.025024823  0.028329868    2.1007674    2.1092578  0.069870453        0.075    1.7105827          0.5 0.0077633837    64.404906    2.7940691         70.1 -0.0084876188  -0.10567502 -0.014760627   0.13109495   -0.2453937    2.3155306 
  217000    11.029675     1.273169    9.7565057  -0.15319191   0.84896781    1.0043841   0.74584356   -3.5502959            3    2.1520568    3.2157561    3.2448385 -0.0044241741 0.0055132475  0.043281914  0.035058697     2.080159    2.0876172  0.069879518        0.075    1.7132632          0.5 0.0077643909    64.396552    2.7995363         70.1  0.014624067 -0.098305888 -0.0068863612   0.14964113   -2.5282233 -0.0039740604 
  218000     11.03164    1.2713807    9.7602589   -0.1635449   0.84777533     1.014401   0.73719014   -3.5502959            3    2.1407334    3.2317314    3.2434552 -0.052986221 -0.0022188249 0.0030290503 -0.0041110118    2.0696698    2.0756512  0.069939089        0.075    1.7057308          0.5 0.0077710099    64.341701    2.8395412         70.1 -0.00032043216  -0.13737398 0.0061284726   0.12351978  -0.16829701   -2.8195871 
  219000    11.038831    1.2424625    9.7963684  -0.15096676   0.82849226   0.98760613   0.72289946   -3.5502959            3    2.1665491    3.2388997    3.2494549  0.011292651 -0.0072001419 -0.012465132 -0.016414184     2.096863    2.1031859  0.069876947        0.075    1.7167793          0.5 0.0077641052    64.398921    2.7912622         70.1 0.0052670047  -0.11689435 0.0095930328  0.091409657 -0.038094508    2.0772468 
  220000     11.03482    1.2697704    9.7650496  -0.15827173   0.84670157   0.96953125   0.76526469   -3.5502959            3    2.0719954    3.1780653      3.14755  -0.10962922  0.011980765  0.057318391 -0.026250195    1.9982254    2.0097919  0.069883394        0.075    1.7263633          0.5 0.0077648216     64.39298    2.8119712         70.1 0.00067632704   -0.1358931 -0.0015484127   0.10501331 -0.005956175   -3.4097778 
  221000    11.001409    1.2604088    9.7410001  -0.14592727   0.84045915     0.978876   0.74864581   -3.5502959            3    2.1945801    3.2710918    3.2415008  0.071147574 -0.015530183 -0.029124094  0.020666884    2.1224121     2.131777  0.069899656        0.075    1.7111028          0.5 0.0077666285    64.377999    2.8054283         70.1 -0.016912561  -0.14952465 -0.0043090303  0.081696479  0.013647483    4.0132233 
  222000    10.991971    1.2852739     9.706697  -0.15197282   0.85703953    1.0138847   0.75296726   -3.5502959            3    2.1755512     3.250838    3.2193837  0.056431976  0.010673138 -0.041488433  0.010175003    2.1029667    2.1105021  0.069886321        0.075    1.7091434          0.5 0.0077651468    64.390283    2.8065141         70.1 -0.0085323767  -0.12170974 0.0047712022  0.097575815  0.075071477    2.2757359 
  223000    11.068177    1.2807972    9.7873801  -0.15707042    0.8540544    1.0087235   0.75142931   -3.5502959            3    2.1381728    3.2339695    3.2076192 -0.027070274 -0.0089749369 -0.011284244 -0.031123349    2.0657365    2.0734548  0.069928923        0.075     1.704462          0.5 0.0077698803    64.351056    2.8415749         70.1 -0.0011355987  -0.11576297 -0.0094781213  0.077859684   0.90368366    1.8901188 
  224000    11.064067    1.2852053    9.7788622  -0.15553146   0.85699379     0.991355   0.76788583   -3.5502959            3    2.1547976    3.2113018    3.2271457  0.025945248 -0.00074442683 -0.015326446  0.015200863    2.0807749    2.0911939   0.06992279        0.075    1.7073567          0.5 0.0077691989      64.3567    2.8196195         70.1 -0.014439846  -0.11047302 -0.019232201   0.11914059   0.99993636    1.8940091 
  225000    11.051839    1.2605899    9.7912492  -0.15076242   0.84057989   0.98556591   0.74439445   -3.5502959            3    2.0820366    3.1723491    3.2017025  -0.12794169 0.00026405043 -0.016355038  0.022621582    2.0102785    2.0188043  0.069864528        0.075    1.7113899          0.5 0.0077627254    64.410368    2.8186984         70.1 0.00032655699  -0.11351615 0.0088393605   0.13265557   0.83966873   -2.8602907 
  226000    11.053707    1.2776404    9.7760665  -0.15095987   0.85194941    1.0072981   0.74887123   -3.5502959            3    2.0322277    3.1189227    3.1459758  -0.16821542  0.011817927  0.052284532  0.017798298     1.960038    1.9676011  0.069931681        0.075    1.7031285          0.5 0.0077701868    64.348517    2.8209135         70.1 -0.0017141704  -0.11720049 -0.024111857  0.079883796   -1.5235361   -1.6554761 
  227000    11.031317    1.2581251    9.7731914  -0.14726328   0.83893632   0.96464127    0.7555829   -3.5502959            3     2.068742    3.1621925    3.1692353  -0.12520166 -0.0046892082 -0.017539336 0.0077182681    1.9959054    2.0068523  0.069874546        0.075    1.6850191          0.5 0.0077638384    64.401134     2.788483         70.1 -0.013387294 -0.094918254 0.0008539677   0.13461837    1.3621837   -6.4935879 
  228000    11.026523    1.2615585    9.7649648   -0.1558889   0.84122577   0.99201327   0.74117934   -3.5502959            3    2.1494206    3.2130873    3.2116618  0.023512675  0.008811975 -0.057838327 -0.0089167037    2.0779724    2.0857746  0.069900455        0.075    1.6725726          0.5 0.0077667172    64.377263    2.8118995         70.1 0.0038050714  -0.11305393 0.0015988819  0.063130334  -0.47025477   -1.9318437 
  229000      11.0446    1.2787752    9.7658252  -0.15289866    0.8527061   0.98478275   0.76511706   -3.5502959            3    2.1076585    3.1786519    3.2300744 -0.085750724 0.00097851186  0.067755188 -0.014767386    2.0339028    2.0444765  0.069892946        0.075    1.6697795          0.5 0.0077658829     64.38418    2.8111896         70.1 -0.021400122  -0.10080771 -0.013566667   0.10086592   -5.7309534   -1.0984139 
  230000    11.088279    1.2877275    9.8005512  -0.15805187   0.85867568   0.99130825   0.77071884   -3.5502959            3    2.1337839     3.197066    3.2210642 -0.016778359 0.0088828472  -0.09923823 -0.005990058    2.0594882    2.0701832  0.069906355        0.075     1.669618          0.5 0.0077673728     64.37183    2.8175535         70.1 -0.0038992158    -0.106824 -0.002428598   0.11569721    3.6951395    2.0324086 
  231000     11.05855    1.2821718    9.7763782  -0.15798638   0.85497105    1.0022564   0.75726059   -3.5502959            3    2.2078239     3.258573    3.2771739  0.087724731 0.00099656489  0.060590498 -0.041602128    2.1348255    2.1435208  0.069842726        0.075    1.6806045          0.5 0.0077603029    64.430474    2.7828081         70.1 -0.013814358  -0.13690528   0.02657852  0.092359383   -2.9973359     1.345648 
  232000    11.059897    1.2834219    9.7764748  -0.15447128   0.85580462    1.0230777    0.7447915   -3.5502959            3     2.118931    3.1832855    3.2023125 -0.028804892 0.0054004664  -0.07030938 -0.010809427    2.0471346    2.0532921  0.069903934        0.075    1.6801089          0.5 0.0077671038    64.374059    2.8206395         70.1  0.002555926  -0.10544788 -0.017024656   0.10936471    1.0770703   -3.0922498 
  233000    11.053613    1.2801475    9.7734655  -0.15487805    0.8536212   0.99952801   0.75682774   -3.5502959            3    2.1637635    3.2511351    3.2207397  0.019415587 1.3162019e-06 -0.025364487 -0.013261192    2.0908068    2.0996354  0.069920624        0.075    1.6845812          0.5 0.0077689582    64.358694    2.8308937         70.1 -0.0083347699  -0.15003356 -0.012123907   0.09012211   0.64423057    2.7627593 
  234000    11.051329    1.2797242    9.7716044  -0.15534729   0.85333895    1.0134945   0.74706204   -3.5502959            3    2.2102901    3.2469622    3.2786134    0.1052948 0.0070203288 -0.0043565484  0.006013787    2.1382748     2.145266  0.069859126        0.075    1.6758276          0.5 0.0077621251    64.415349    2.7871439         70.1 0.0072040227  -0.12593757 -0.003957628   0.08427875   -2.9797965    2.1929904 
  235000    11.028058    1.2813774    9.7466808  -0.16532141   0.85444132     1.002382   0.75629454   -3.5502959            3    2.1032335    3.1894127     3.170056 -0.049768126 -0.001399904 -0.046805216 -0.025745553    2.0303282    2.0389223   0.06991719        0.075    1.6678435          0.5 0.0077685767    64.361854    2.8173918         70.1 -0.014936818 -0.096163439  0.016376793   0.10796102    3.8093952   -1.2085351 
  236000     11.04481    1.2700078     9.774802  -0.16278489   0.84685991   0.99911232   0.74584059   -3.5502959            3    2.0886352     3.210233    3.1600557  -0.10438307 -0.0031876402 -0.00075775099 -0.024428375    2.0167377    2.0245338  0.069922179        0.075    1.6543412          0.5  0.007769131    64.357262    2.8079838         70.1 0.0053868269  -0.11324975 0.00049271745   0.11627615  -0.44366054    1.0536501 
  237000    11.029817    1.2618538    9.7679636  -0.16741392   0.84142265   0.98078543   0.74898011   -3.5502959            3    2.1306612    3.2104511    3.1896577 -0.0081252707 -0.012821725  0.049151209  0.021953413     2.058461    2.0677356  0.069950086        0.075    1.6602672          0.5 0.0077722318    64.331586    2.8279693         70.1 -0.0072892228  -0.14037148 -0.025812683  0.088714218   -1.2065955   -3.1114953 
  238000    11.048633    1.2720164    9.7766166  -0.15971926   0.84819923    1.0057596   0.74364765   -3.5502959            3    2.0923869    3.1800274    3.1671843 -0.070051144 0.0091275493  0.021658075  0.046552113    2.0207007     2.027859  0.069923837        0.075    1.6529187          0.5 0.0077693152    64.355736    2.8407791         70.1  0.004255959 -0.090016312 0.0080237288   0.11892391   -1.7123864  -0.47235916 
  239000    11.064048    1.2636137    9.8004343  -0.16585853   0.84259623    1.0031751   0.73603359   -3.5502959            3    2.2022105    3.2718751     3.231242   0.10351437 -0.0041264562 -0.045810602  0.041333764    2.1312583    2.1378484  0.069900775        0.075    1.6521166          0.5 0.0077667528    64.376969    2.8274797         70.1 -0.0021769926 -0.091935564  0.010267094  0.087689575   0.96070494    2.4025943 
  240000    11.051574    1.2789167     9.772657    -0.148071   0.85280049   0.97555707   0.77141452   -3.5502959            3     2.206911    3.2730376    3.2556677   0.09202776 0.0079448232 -0.042256256 -0.037803226    2.1325482    2.1443209  0.069878379        0.075    1.6521596          0.5 0.0077642643    64.397602     2.803567         70.1 -0.016102967 -0.070321222 0.0088735231  0.090104608   -2.3242688   0.33496645 
  241000    11.102937     1.300682    9.8022553   -0.1499435   0.86731388    1.0336111   0.75695453   -3.5502959            3    2.1442091    3.2232383     3.189028  0.020360923 0.0062949164  0.023890488 0.0076527032    2.0712402    2.0778943  0.069868331        0.075    1.6632917          0.5 0.0077631479    64.406863    2.7751747         70.1 -0.0028331136 -0.095135532 0.0093699919  0.092302554    1.9538115    2.2308985 
  242000    11.052254    1.2605086    9.7917451  -0.15033833   0.84052569    1.0007834   0.73417602   -3.5502959            3    2.1334817    3.2043681    3.2280554  -0.03197827 0.0034405368  0.014690877 -0.00079359309    2.0627086    2.0692731  0.069928272        0.075    1.6760146          0.5  0.007769808    64.351655     2.820334         70.1 -0.019855576 -0.094281126 0.0016367733   0.10465536   0.62657995  -0.60087082 
  243000    11.057086    1.2760882    9.7809979  -0.15976425   0.85091437   0.98155391   0.76428115   -3.5502959            3    2.2114489     3.274413    3.2638416  0.096092108 0.00075802822 -0.027826058 -0.023656315    2.1377737     2.148474  0.069886406        0.075    1.6600558          0.5 0.0077651562    64.390205    2.8199163         70.1  0.018315646  -0.12284772  0.010845293   0.10656544   0.34210909    2.8662089 
  244000    11.037346     1.239433    9.7979126  -0.14935593   0.82647217   0.97328056   0.72906862   -3.5502959            3    2.1368217    3.2342319    3.2102549 -0.034021665 -0.0013028267 -0.057405062    0.0301932    2.0665409    2.0743776  0.069866562        0.075    1.6615893          0.5 0.0077629514    64.408493    2.8061994         70.1 -0.0045343025  -0.10979918 -0.011541414   0.12091649    1.5343503    3.8283865 
  245000    11.038416    1.2600932    9.7783229  -0.15118581   0.84024871   0.98267179   0.74576892   -3.5502959            3    2.1705855    3.2561616    3.2147134  0.040881432 -0.0071759811 -0.029344391 -0.0041814692    2.0986949    2.1075389  0.069910055        0.075    1.6544493          0.5 0.0077677839    64.368423    2.8210489         70.1 0.0048491643  -0.10444094 0.0005972972   0.12229018   0.18071965  -0.17540893 
  246000    11.047825     1.265139    9.7826862  -0.15418304   0.84361329   0.99393029   0.74388089   -3.5502959            3    2.0450448    3.1372551    3.1427208  -0.14484159 -0.006849469  -0.04302725 -0.019692308    1.9733361    1.9812758  0.069951744        0.075     1.658128          0.5  0.007772416    64.330061    2.8217591         70.1 -0.017928522  -0.12092746 0.0057100729   0.10793796   -1.3033048   -5.1422728 
  247000    11.085892    1.2661703    9.8197217  -0.14359512     0.844301   0.98162634   0.75321555   -3.5502959            3    2.1878258    3.2696063    3.2563106  0.037560579 -0.008352161   0.03435087 -0.038630771    2.1152174    2.1248463  0.069929636        0.075    1.6590826          0.5 0.0077699595      64.3504    2.8299279         70.1 0.0067034228  -0.11720004 -0.011744057   0.14463766   -1.8182331    2.5445129 
  248000    11.070503    1.2870108    9.7834921  -0.15217396   0.85819772   0.98508015   0.77406776   -3.5502959            3    2.2734389    3.3091022    3.3109071    0.2003074  0.011768162 0.0036180501  0.041610136    2.1988203    2.2102378  0.069882607        0.075    1.6576761          0.5 0.0077647341    64.393705    2.7969768         70.1 -0.0045559221  -0.15329432  0.014709648  0.091646246   -1.4906831    1.9199875 
  249000    11.000002     1.242751    9.7572506  -0.14734781   0.82868463   0.99370691   0.71915951   -3.5502959            3      2.24563     3.282718    3.3036929    0.1504791 -0.0070230364 -0.033010966 -0.0053047681    2.1763045    2.1818754  0.069868146        0.075    1.6512467          0.5 0.0077631273    64.407033     2.790456         70.1 -0.0038712231   -0.1168171 0.0012343204   0.12003432  -0.62362256    1.7562659 
  250000    11.046351    1.2507221    9.7956286  -0.13777777   0.83399988    1.0065844   0.71944363   -3.5502959            3    2.0833984    3.1757511    3.1775574  -0.10311326 -0.0011104439 -0.084119856 -0.0078705272    2.0140455    2.0188176  0.069865366        0.075    1.6501624          0.5 0.0077628185    64.409596    2.7985133         70.1 -0.0099837587  -0.11682846 0.00079190336   0.10219842  -0.86677877   -3.6286244 
  251000     11.06422    1.2769068    9.7873129  -0.16153134   0.85146023    1.0009642   0.75227187   -3.5502959            3    2.0613313    3.1749805    3.1384066  -0.12939319 0.0047723323 -0.054279373 0.00031828255    1.9888138    1.9971111  0.069857224        0.075    1.6401826          0.5 0.0077619138    64.417103    2.7969916         70.1 0.0073485688  -0.10629103 0.0069947342    0.1409075    2.9408662  -0.25197492 
  252000    11.025694    1.2699106    9.7557832  -0.16444392   0.84679505     0.988887   0.75253806   -3.5502959            3     2.104254    3.1798138    3.2071536 -0.074205333 -0.0098850575  0.077433551 -0.023575586    2.0317109    2.0408087  0.069862425        0.075    1.6409012          0.5 0.0077624916    64.412308    2.8034328         70.1 -0.018735966 -0.094887459 0.0036532195  0.076069904   -1.5353264    -6.764571 
  253000    11.090627    1.2927507    9.7978764  -0.15060227   0.86202521    1.0175629   0.75882494   -3.5502959            3    2.1133819    3.1950599    3.2081782  -0.06309232 -0.0041670829  0.060667829  0.021387751    2.0402327    2.0480968  0.069892989        0.075     1.653054          0.5 0.0077658876     64.38414     2.806626         70.1 0.0098199979 -0.059203879 -0.0027795284    0.1096645   -1.0590279   -1.1777592 
  254000    11.051968    1.2622525     9.789716  -0.15153318   0.84168852   0.98993306   0.74333474   -3.5502959            3     2.122509     3.218214    3.2151794 -0.065866334 0.0060687088 -0.099950199 -0.013595493     2.050853    2.0589965  0.069905149        0.075    1.6536355          0.5 0.0077672388    64.372941    2.8176731         70.1 -0.0062926784  -0.09476505  0.016899526   0.11498673     2.702351  -0.72809204 
  255000    11.050461    1.2734548     9.777006  -0.15499021   0.84915839    1.0057256   0.74526816   -3.5502959            3    2.1469248    3.2082162    3.2176144  0.014943836 0.0022723268 -0.010602456  0.033726918    2.0750824    2.0823991  0.069899452        0.075    1.6522497          0.5 0.0077666058    64.378187    2.8255896         70.1 0.00075520718  -0.10906284  0.004641611  0.094249553   0.35518699    2.8556015 
  256000    11.022763    1.2657642    9.7569984  -0.15574279    0.8440302    1.0165663   0.72950986   -3.5502959            3    2.1401612    3.2278013     3.213264 -0.020581732 -0.0034926929  0.065704942 -0.024973417    2.0698379      2.07494  0.069930009        0.075    1.6700454          0.5  0.007770001    64.350056    2.8344244         70.1 0.0081617668 -0.085510835 -0.00038216504   0.09757546   -1.2504886   0.71594653 
  257000    11.059759     1.279488    9.7802711  -0.14872299   0.85318144   0.99362587   0.76002333   -3.5502959            3    2.0641296    3.1916162    3.1415119  -0.14073927 -0.0045807564 0.0083234829 -0.012946461    1.9908649    2.0003802  0.069897162        0.075    1.6602575          0.5 0.0077663513    64.380297    2.8181014         70.1 -0.0020119652 -0.079641051 0.0075303682   0.11922854   0.36117928   -3.8547555 
  258000    11.017797    1.2615579    9.7562396  -0.15432813   0.84122536   0.99623613   0.73836811   -3.5502959            3    2.1124124    3.1907192    3.2164868 -0.069968847 0.0043000793 -0.016085895 -0.045891434    2.0412352    2.0484955  0.069904864        0.075    1.6798638          0.5 0.0077672071    64.373203    2.8113627         70.1 -0.0022589375 -0.063147525 -0.015488854   0.11622599  -0.78337979   -3.7796872 
  259000    11.005557    1.2639359    9.7416206  -0.15087237   0.84281106    1.0175274   0.72683924   -3.5502959            3    2.1496348    3.2213362    3.2251449 0.0024232076 -0.0064095671  0.050160593  0.023825544    2.0795689    2.0843519    0.0698565        0.075    1.6776143          0.5 0.0077618333    64.417771    2.8045362         70.1 0.00056506519  -0.14365961 -0.012373065  0.066776028  -0.56338564   -2.2406734 
  260000    11.026194    1.2408617    9.7853322  -0.15306064   0.82742486   0.97431055    0.7299702   -3.5502959            3    2.1353666    3.2168921    3.2114922 -0.022284414 0.0037599311  0.047638919  0.014637859     2.064999    2.0728565  0.069964896        0.075    1.6577061          0.5 0.0077738773    64.317969    2.8555394         70.1 0.0082635219  -0.09422774  0.014416244   0.10414534 -0.028474395   -3.1389005 
  261000    11.060231    1.2712497    9.7889813  -0.15337897   0.84768797    0.9841683   0.75716618   -3.5502959            3    2.0985806    3.1933943    3.1734236 -0.071076004 -0.010903071 -0.019290017 -0.012885303    2.0255913     2.035438  0.069918088        0.075     1.626878          0.5 0.0077686765    64.361027    2.8205219         70.1 0.0032019771 -0.089287251 -0.0073089544  0.099240154  -0.38206485    -2.683017 
  262000    11.042051    1.2786597    9.7633913  -0.16848215   0.85262909   0.98986325    0.7616074   -3.5502959            3    2.1311918     3.227146     3.205585 -0.039155539 0.0020818551 -0.0078733277  0.052192576    2.0577744    2.0676838  0.069877977        0.075    1.6261583          0.5 0.0077642197    64.397972    2.7877581         70.1 -0.0022189862    -0.105151  0.011505866  0.092916966   -2.4328263   0.08958202 
  263000    11.034314    1.2500752    9.7842384    -0.157018   0.83356853    1.0030252   0.72109389   -3.5502959            3    2.0423104    3.1724751    3.1403428  -0.18588672 0.0033645114 -0.0059806356 -0.056376615    1.9727984     1.977958  0.069893034        0.075    1.6503936          0.5 0.0077658926    64.384099    2.8185333         70.1  0.006223864 -0.090377039 0.0099213446   0.09824208   0.96745893   -3.5162686 
  264000    11.082459    1.2712133    9.8112452   -0.1410644   0.84766374    1.0009093   0.74598371   -3.5502959            3    2.1948464    3.2647801    3.2515686  0.068190506 -0.00087080226   0.05758472  0.011544818    2.1229351    2.1306297   0.06985289        0.075      1.65864          0.5 0.0077614323      64.4211    2.7979525         70.1 -0.022287893  -0.11342393 -0.0076968564   0.11786662   -1.3777286   -1.0239041 
  265000    11.008194    1.2558109    9.7523835  -0.16835299   0.83739322   0.98060578   0.74238693   -3.5502959            3    2.2086321    3.2906892    3.2649726  0.070234341 -0.0092520055 -0.057908922 -0.011771308    2.1370674     2.145718  0.069908359        0.075      1.66626          0.5 0.0077675955    64.369984     2.829711         70.1 -0.00049661552 -0.092311824 0.0030340215  0.082788151    1.4741243  -0.20221013 
  266000    11.047432    1.2659741    9.7814583   -0.1537877   0.84417017   0.99786154   0.74219214   -3.5502959            3    2.1612351    3.2381975    3.2355428 0.0099651396 -0.001149008  0.055865103 -0.031882262    2.0896893     2.097214  0.069868149        0.075    1.6530704          0.5 0.0077631276    64.407031    2.7874761         70.1  -0.03233911  -0.14111698 -9.4272021e-05   0.10796282   0.33255127     1.720487 
  267000    11.102198    1.3002286    9.8019696  -0.15663942   0.86701158    1.0248142   0.76230575   -3.5502959            3    2.0728632    3.1818803    3.1534055  -0.11669606 0.0086857335 -0.055261372 -0.017937345    1.9993785    2.0071128  0.069903386        0.075    1.6501054          0.5 0.0077670428    64.374565    2.8170812         70.1  0.015067571  -0.15920212 0.0017946833  0.083656689     2.148293   -6.2585287 
  268000    11.079134    1.2803452    9.7987892  -0.16127174     0.853753     1.010807   0.74954052   -3.5502959            3    2.1016833    3.2163956     3.172313 -0.083658866 3.3300837e-05  0.031375575 -0.057261918    2.0294291    2.0368316  0.069895464        0.075    1.6397612          0.5 0.0077661627     64.38186    2.8047981         70.1   0.01212954  -0.12703573 -0.012509883     0.110551  -0.46517603   -2.8460212 
  269000    11.049948    1.2769626    9.7729855  -0.15645853   0.85149747    1.0063394   0.74875642   -3.5502959            3    2.1134363    3.1849247    3.1957039 -0.040319798 -0.0049408644  0.026432627 -0.00086084782    2.0412577    2.0488712  0.069885814        0.075    1.6364529          0.5 0.0077650905     64.39075    2.8062334         70.1 -0.0089377247  -0.10444309  0.014621034   0.11214947    0.4263476   -1.5399234 
  270000    11.033724    1.2766614    9.7570622   -0.1531207   0.85129662   0.99403142   0.75661345   -3.5502959            3    2.1983074    3.2522394     3.281931  0.060751723 -0.0069012859 -0.051705008 -0.017640459    2.1253713     2.134532  0.069884352        0.075    1.6291475          0.5  0.007764928    64.392097    2.7975965         70.1  0.002794747   -0.1246701 0.0031841081   0.10257218   -1.4666698    1.2483424 
  271000    11.039389    1.2667469    9.7726419   -0.1549397   0.84468546    1.0120257   0.73362355   -3.5502959            3    2.2330395    3.2939972    3.2736945    0.1314268 0.0026620092 -0.036547887 8.8518178e-05    2.1623196    2.1681096  0.069853495        0.075    1.6249328          0.5 0.0077614994    64.420542    2.8018124         70.1  0.017267845  -0.10545462 -0.0045209821   0.10398249    1.2087726    5.7268959 
  272000    11.054976    1.2907595    9.7642165  -0.15692875   0.86069742    1.0119259   0.76036473   -3.5502959            3    2.1616562     3.246166    3.2062965  0.032506094 -0.0091281038 -0.0079156737 0.0039212659    2.0883585    2.0967327  0.069873337        0.075    1.6314422          0.5 0.0077637041    64.402249    2.8062136         70.1 -0.0011852221 -0.095548052  0.017150168  0.087013162    2.0797945   0.59836308 
  273000    11.041879    1.2781335    9.7637453  -0.14977748   0.85227824   0.96962992   0.77448935   -3.5502959            3    2.1576459    3.2401475    3.2246203 0.0081700232 0.0069390445 -0.027088008 0.0058879395    2.0829867    2.0954361  0.069920315        0.075    1.6296309          0.5 0.0077689239    64.358978    2.8310511         70.1 -0.0043588288  -0.11376888 -0.0067793791   0.10948189   0.39694518  -0.49816634 
  274000    11.015645    1.2679178    9.7477274  -0.14962599   0.84546625   0.98982016   0.74970331   -3.5502959            3    2.1806475    3.2405496    3.2422717  0.059121119 -0.011258673  0.043438243 -0.028722715    2.1083776    2.1171423  0.069881025        0.075     1.643331          0.5 0.0077645583    64.395163    2.8108983         70.1  0.014028516  -0.11815088 0.0028146794    0.1051718    -2.223762  -0.42197312 
  275000     11.04397    1.2595531    9.7844173  -0.15699949   0.83988857   0.98615414   0.74285125   -3.5502959            3    2.0772946    3.1802661    3.1714934  -0.11987562 3.1523522e-05  0.030480248 0.00034044993    2.0056853    2.0140246  0.069893999        0.075    1.6339515          0.5 0.0077659999     64.38321    2.8189021         70.1 0.0076534018  -0.10245454 -0.010377145   0.11891203    1.2752258   -2.6609873 
  276000    11.032919    1.2591243    9.7737951  -0.15345243    0.8396026   0.98632395   0.74226183   -3.5502959            3     2.110396     3.173749    3.2061169 -0.048677971   0.00540475 -0.097984293 -0.026140104    2.0388434    2.0471151  0.069889527        0.075    1.6257362          0.5 0.0077655031    64.387329    2.7937512         70.1 0.0047354592  -0.12235472 0.0038065589  0.072864824    1.5908893   -1.7455874 
  277000    11.064131    1.2947696    9.7693614  -0.15528264   0.86337141    1.0169693   0.76146269   -3.5502959            3     2.192056    3.2523171    3.2464849  0.077366153 0.0063819442  0.095526938  0.025796531    2.1186526     2.126809  0.069912214        0.075    1.6261377          0.5 0.0077680237    64.366436    2.8119396         70.1  0.014496894  -0.12789141 -0.0010089474  0.077335007   -4.4877975  -0.13264999 
  278000     11.05698    1.2800979    9.7768819  -0.15083118    0.8535881    1.0395269   0.73015107   -3.5502959            3    2.2459878      3.30437    3.2887744   0.14481898 -0.0010769339    0.0415531 0.0055807633    2.1756027    2.1792935  0.069903817        0.075     1.592408          0.5 0.0077670908    64.374167    2.8125672         70.1 0.0057343616 -0.096940331 0.0052659805   0.10037458    3.2630885    3.7605766 
  279000     11.06573    1.2812067    9.7845237   -0.1563355   0.85432746   0.98965327   0.76457652   -3.5502959            3    2.0818915    3.1724092    3.1766963  -0.10343112 -0.0017344625  -0.11535444 -0.0072190439    2.0081878     2.018397  0.069899938        0.075    1.5906267          0.5 0.0077666598     64.37774    2.8243991         70.1 -0.0034385994   -0.1299176 0.0023470732   0.10922224 -0.093838661     2.576349 
  280000    11.050414    1.2419954    9.8084191  -0.14831945   0.82818079   0.97022831   0.73394649   -3.5502959            3     2.196591    3.2833826    3.2242919   0.08209852  0.016852076  0.047196189 -0.061169071    2.1258401    2.1343428  0.069906905        0.075    1.6104926          0.5 0.0077674339    64.371324    2.8260369         70.1 -0.005178742 -0.099908102  0.029550068   0.10451209   0.39336928    4.1300298 
  281000    11.007996    1.2480259    9.7599698   -0.1492453   0.83220201    1.0028493   0.71893444   -3.5502959            3    2.0726203    3.1672228    3.1948577  -0.14421957 0.0021942117 0.0038450786 -0.020728449    2.0033165    2.0082792  0.069909079        0.075     1.607431          0.5 0.0077676754    64.369322      2.83251         70.1 -0.0098752075 -0.067743648  0.010496042   0.10921081    1.7756432    -3.172351 
  282000     11.01966    1.2883435    9.7313163  -0.16412829   0.85908643    1.0023608   0.76404701   -3.5502959            3    2.0711009    3.1677167    3.1676198  -0.12203376 0.00094797291  0.021218866  0.032007563    1.9974483    2.0067911  0.069901739        0.075     1.617806          0.5 0.0077668599     64.37608    2.8087091         70.1 -0.022655303  -0.11363947 -0.019170925  0.098524244   -0.4613617   -3.6392213 
  283000    11.039847    1.2799501    9.7598965  -0.14521238   0.85348957      1.01817   0.74420118   -3.5502959            3    2.1208285    3.1904144    3.2087467   -0.0366755 -0.0040496183 -0.016604778  -0.02000295     2.049089    2.0555044  0.069925899        0.075    1.6102485          0.5 0.0077695443    64.353839    2.8246549         70.1 -0.0031156993  -0.10474467 0.0013654309   0.11772252 -0.067355368 -0.052319547 
  284000    11.106815    1.3085962    9.7982183  -0.16038975    0.8725912     1.005633   0.78436715   -3.5502959            3    2.0548923    3.1490604    3.1787278  -0.16311141 -0.0066191866  0.090804855 -0.026050685    1.9792808    1.9903725  0.069864483        0.075    1.6162936          0.5 0.0077627204     64.41041    2.8121238         70.1 -0.0037110326  -0.11234945 -0.00034747142   0.10925525  -0.82275069    -0.867828 
  285000    11.078958    1.2772762    9.8016814  -0.13635258   0.85170658    1.0027915   0.75146607   -3.5502959            3    2.1212135    3.2008234    3.1922687 -0.029451759 -0.0070258929 -0.0086944485  0.009333445    2.0487736     2.056876  0.069905844        0.075    1.6076246          0.5  0.007767316      64.3723    2.8049064         70.1 -0.0010189437  -0.12845719 -0.0095840748   0.12074051   -1.7080196    1.3279953 
  286000    11.045904    1.2376731    9.8082308  -0.14335685   0.82529865   0.97727098   0.72445777   -3.5502959            3    2.1078539    3.1627434    3.2058122 -0.044993804 -0.0027546313 -0.037181803  0.021440609    2.0380176    2.0451538  0.069890376        0.075    1.6028435          0.5 0.0077655973    64.386548    2.8135537         70.1  -0.00808279  -0.10137909 -0.00097622849   0.10327826    1.5954216   0.51678213 
  287000    11.072684    1.2903123    9.7823715  -0.15978855   0.86039921   0.98636235    0.7768819   -3.5502959            3    2.1109471    3.2196553    3.1877842 -0.074598246  0.010639752  0.038700133 0.0041626947    2.0360572    2.0476637   0.06988617        0.075    1.6132523          0.5   0.00776513    64.390422    2.8170631         70.1  0.014970204  -0.11041642 -0.0026592706  0.080834297    1.4822456   -1.7649086 
  288000    11.040216    1.2667786     9.773437  -0.15953841    0.8447066   0.99636534    0.7440816   -3.5502959            3    2.2429268    3.2931822     3.290911   0.14468719  0.001464841  0.049938352 -0.032034442    2.1711988    2.1790016  0.069903122        0.075    1.6038528          0.5 0.0077670136    64.374807    2.8151037         70.1 0.0012352822  -0.11301153 -0.0051414234   0.11082722   -2.3009404    2.4234211 
  289000    11.054222    1.2824742    9.7717482  -0.14953765   0.85517265    1.0148887   0.74918892   -3.5502959            3    2.1276201    3.1850093    3.2050834 -0.0072324847  0.003523712   -0.1128413 -0.006310492    2.0553998    2.0625065  0.069897296        0.075    1.6043899          0.5 0.0077663662    64.380173    2.8138716         70.1   0.00508669 -0.077527884 0.0098542494  0.071608626    2.6971596   -2.3533802 
  290000    11.072822     1.306424    9.7663982  -0.15616252   0.87114275    1.0344852   0.76275135   -3.5502959            3    2.1052377    3.2014137    3.1855761 -0.071276726 0.0076160758  0.048525866  0.025723183      2.03171    2.0388668  0.069900318        0.075    1.6194117          0.5  0.007766702     64.37739    2.8135341         70.1 -0.007604533  -0.12190166 -0.011978269  0.081587236   -2.3969191   -1.5612852 
  291000     11.10895    1.2973819    9.8115682  -0.15242241   0.86511332    1.0137736   0.76649149   -3.5502959            3    2.2261308    3.2519309    3.2823751   0.14408642 0.0010208844 -0.042965238 -0.011870129    2.1522425    2.1610888  0.069897031        0.075    1.6172374          0.5 0.0077663368    64.380417    2.8238871         70.1 -0.0086058566  -0.10754586 0.0032627073    0.1001512   0.17356237    9.8260196 
  292000     11.04666    1.2792787    9.7673814  -0.15663172   0.85304189   0.99101079   0.76153134   -3.5502959            3    2.0748428    3.1758563    3.1706062  -0.12193424 -0.0018028601 -0.024600876   0.00855868    2.0014327    2.0112611  0.069901166        0.075    1.6303406          0.5 0.0077667962    64.376609    2.7874649         70.1 0.0069767473 -0.081553554  0.010901494   0.10469177   -2.0330271 -0.018875932 
  293000    11.057666    1.2773462    9.7803199  -0.16514203   0.85175326     1.010994   0.74608461   -3.5502959            3    2.0870703    3.1698418    3.1747881 -0.083419105  -0.00122922 -0.029487889  0.036224769    2.0151492    2.0222066  0.069868396        0.075    1.6363705          0.5 0.0077631551    64.406803    2.7904789         70.1 0.0054036474  -0.12671015 0.0040406982   0.11193666   0.96576587   -1.9080881 
  294000    11.033086    1.2602185    9.7728675  -0.14828275   0.84033227   0.97806493   0.74897426   -3.5502959            3    2.1178557    3.1922615    3.2166934  -0.05538783 -0.0040917318 -0.011111505 0.0043866452    2.0456561    2.0551047  0.069892719        0.075    1.6134314          0.5 0.0077658576    64.384389    2.8080833         70.1 0.00063038225 -0.084165189 0.00037372477    0.1244515    0.2316777   0.25135396 
  295000    11.055723    1.2784843    9.7772387  -0.16158007   0.85251218    1.0189799   0.74203384   -3.5502959            3    2.0827007    3.2118354    3.1512591  -0.11499231 0.0043933217  0.063049605 -0.023093564    2.0111701    2.0173246  0.069864327        0.075     1.606316          0.5  0.007762703    64.410554    2.7998941         70.1 -0.0047756155 -0.088415142 -0.005778957   0.11722128   0.17876378 -0.080573297 
  296000    11.084235    1.2920705    9.7921644  -0.16009612    0.8615716    1.0173361    0.7582202   -3.5502959            3    2.1261289    3.2120242    3.2133329 -0.046970496 -0.0068470783 -0.047173304 0.0052615006     2.053038    2.0608583  0.069858684        0.075    1.6139142          0.5  0.007762076    64.415757    2.7800723         70.1 -0.020197822  -0.10441004 0.0059219594   0.13506847   0.61308779  -0.19723512 
  297000    11.063239    1.3111404    9.7520988  -0.15472002   0.87428772   0.98074037    0.8037609   -3.5502959            3    2.1984811    3.2458651    3.2876706  0.061907672 -0.00029541634 0.0078146759 -0.0064160072    2.1210001    2.1355584  0.069898604        0.075    1.6191716          0.5 0.0077665116    64.378968    2.8069438         70.1 0.00082940446 -0.079074445 -0.006912888  0.099669134  -0.15861814  -0.51532387 
  298000     11.06472    1.2799968    9.7847229  -0.16321818   0.85352068     0.990485   0.76267891   -3.5502959            3    2.1375631    3.2049775    3.2220676 -0.014355975  0.007547623  0.052695317  0.046346251    2.0640423    2.0740152  0.069932513        0.075     1.620888          0.5 0.0077702792    64.347752     2.841362         70.1  0.006270362 -0.092932446 0.0017036598   0.12230524   0.25805796   -1.7659814 
  299000    11.030936    1.2792831     9.751653  -0.16957127   0.85304483    1.0095391    0.7492046   -3.5502959            3    2.0748456    3.1366325    3.1667175 -0.078813199 -0.002283889 -0.058877314 -0.045967524    2.0026238    2.0100752  0.069906153        0.075    1.6156336          0.5 0.0077673503    64.372016    2.7998444         70.1 -0.0018101823  -0.10846305 -0.0042507865   0.11347339   0.31428634    0.5492422 
  300000    11.052402    1.2712393     9.781163  -0.15458481   0.84768105   0.99210446   0.75187268   -3.5502959            3    2.1670175    3.2434566    3.2549148  0.002681212 0.0031206489 -0.026679393  0.014715556    2.0945385    2.1033658  0.069946413        0.075    1.6032738          0.5 0.0077718236    64.334965    2.8413474         70.1 -0.0013067444  -0.10607913 0.0046220703    0.1166353   0.10131621    3.8478628 
Loop time of 199.344 on 1 procs for 300000 steps with 4504 atoms

Performance: 650131.851 tau/day, 1504.935 timesteps/s
98.5% CPU use with 1 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 14.136     | 14.136     | 14.136     |   0.0 |  7.09
Bond    | 52.84      | 52.84      | 52.84      |   0.0 | 26.51
Neigh   | 53.531     | 53.531     | 53.531     |   0.0 | 26.85
Comm    | 5.246      | 5.246      | 5.246      |   0.0 |  2.63
Output  | 0.51891    | 0.51891    | 0.51891    |   0.0 |  0.26
Modify  | 68.465     | 68.465     | 68.465     |   0.0 | 34.35
Other   |            | 4.608      |            |       |  2.31

Nlocal:    4504 ave 4504 max 4504 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    1470 ave 1470 max 1470 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    2969 ave 2969 max 2969 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 2969
Ave neighs/atom = 0.659192
Ave special neighs/atom = 6.98401
Neighbor list builds = 37673
Dangerous builds = 0
#undump      eq

#--- Unfix Equil ---#

unfix abeads_edz
unfix bbeads_edz
unfix tbeads_edz

unfix freeze_tout


###############
# Compression #
###############


#--- Bring the brushes closer together fit the sim box ---#

variable       bbzmax  equal bound(bbeads,zmax)
variable       tbzmin  equal bound(tbeads,zmin)
displace_atoms  alltop move 0.0 0.0 -$(v_tbzmin - v_bbzmax) units box
displace_atoms  alltop move 0.0 0.0 -39.298231800295994276 units box
variable z_f equal bound(all,zmin)
variable z_c equal bound(all,zmax)
change_box all z final ${z_f} $(v_z_c + 0.1) units box
change_box all z final 0 $(v_z_c + 0.1) units box
change_box all z final 0 30.80176819970400004 units box
  orthogonal box = (0 0 0) to (20 20 30.8018)

print         "D = $D"
D = 25.0367328811994
print         "D = $(v_twzmin - v_bwzmax)"
D = 25.036732881199398548
info variables

#--- Computes ---#

# Number density profiles

compute         cabeads abeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         cabeads abeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             abeads_cdz abeads  ave/chunk ${Neveryc} ${Nrepeatc} ${Nfreqc} cabeads density/number file abeads_cdz
fix             abeads_cdz abeads  ave/chunk 100 ${Nrepeatc} ${Nfreqc} cabeads density/number file abeads_cdz
fix             abeads_cdz abeads  ave/chunk 100 700 ${Nfreqc} cabeads density/number file abeads_cdz
fix             abeads_cdz abeads  ave/chunk 100 700 70000 cabeads density/number file abeads_cdz
compute         cbbeads bbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         cbbeads bbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             bbeads_cdz bbeads  ave/chunk ${Neveryc} ${Nrepeatc} ${Nfreqc} cbbeads density/number file bbeads_cdz
fix             bbeads_cdz bbeads  ave/chunk 100 ${Nrepeatc} ${Nfreqc} cbbeads density/number file bbeads_cdz
fix             bbeads_cdz bbeads  ave/chunk 100 700 ${Nfreqc} cbbeads density/number file bbeads_cdz
fix             bbeads_cdz bbeads  ave/chunk 100 700 70000 cbbeads density/number file bbeads_cdz
compute         ctbeads tbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         ctbeads tbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             tbeads_cdz tbeads  ave/chunk ${Neveryc} ${Nrepeatc} ${Nfreqc} ctbeads density/number file tbeads_cdz
fix             tbeads_cdz tbeads  ave/chunk 100 ${Nrepeatc} ${Nfreqc} ctbeads density/number file tbeads_cdz
fix             tbeads_cdz tbeads  ave/chunk 100 700 ${Nfreqc} ctbeads density/number file tbeads_cdz
fix             tbeads_cdz tbeads  ave/chunk 100 700 70000 ctbeads density/number file tbeads_cdz



#--- Fixes ---#
fix             freeze_tout twout setforce 0.0 0.0 NULL
fix             comp_tout twout aveforce 0.0 0.0 ${Fcatom}
fix             comp_tout twout aveforce 0.0 0.0 -3.55029585798817
fix             rwalls all wall/reflect zlo EDGE zhi EDGE




#--- Dumps ---#
#dump           comp all image ${Ndump_c} stg2.*.jpg type type zoom 2 view 60 120 bond none none


#--- Run Compression ---#
timestep    ${Tstep}
timestep    0.005
run         ${Ncomp}
run         700000
WARNING: Inconsistent image flags (src/domain.cpp:784)
Per MPI rank memory allocation (min/avg/max) = 9.009 | 9.009 | 9.009 Mbytes
Step TotEng KinEng PotEng E_pair Temp c_melTemp c_wallTemp v_Fcatom v_Pcomp2 Press Pxx Pyy Pzz Pxy Pxz Pyz c_melPress c_wallPress v_melDens v_surfcov v_aveRg v_Wall_v2 v_srate v_D v_bwzmax Zhi c_fbwall[1] c_fbwall[3] c_ftwall[1] c_ftwall[3] v_sbot v_pbot 
  300000    11.052402    1.2712393     9.781163  -0.15458481   0.84768105   0.99210446   0.75187268   -3.5502959            3    4.9317925    7.3815992    7.4076762 0.0061020185 0.0071021081 -0.060718119  0.033490302    4.7668416     4.786931   0.17973591        0.075    1.6032738          0.5  0.019970657    25.036733    2.8413474    30.801768 -0.0013067444  -0.10607913 0.0046220703    0.1166353   0.10131621    3.8478628 
  301000    11.097721    1.3333437    9.7643777   -0.1733535   0.88909323   0.99232146   0.82071791   -3.5502959            3    5.3595018    7.6131513    7.7291787   0.73617541 -0.0035562516 0.0086649321 -0.036210096    5.1794472    5.2146086   0.19733444        0.075    1.5807473          0.5  0.021926049    22.803927    2.7958575    30.801768  0.001942519 -0.081476448  0.017091321   0.33787768   -1.3791959   0.77687832 
  302000    11.042152    1.2904033    9.7517489  -0.19168872    0.8604599    1.0034657   0.76559977   -3.5502959            3    5.0492607    7.4448411    7.4064623   0.29647875 -0.0064604889  -0.11761447 -0.019557551    4.8812983    4.9027403   0.21066113        0.075    1.5808783          0.5  0.023406792    21.361321    2.8036076    30.801768 -0.016835544  -0.12056212 -0.002229172   0.43071239    2.3621594   -3.9456675 
  303000    10.991123    1.2920384    9.6990848  -0.20671052   0.86155022   0.99807205   0.77100592   -3.5502959            3    5.0939013    7.4482424    7.5108065   0.32265502 0.0076155961  0.032590705 -0.045591811    4.9247528    4.9481685   0.22187755        0.075    1.5950442          0.5  0.024653061    20.281457      2.82466    30.801768 0.0081283509  -0.12699913 -0.025346079    0.4073106   0.29551556   -2.7589562 
  304000    11.008992    1.2760702    9.7329222  -0.20114313   0.85090241    0.9916645   0.75753204   -3.5502959            3    5.0369056    7.4257418    7.4327705    0.2522046  -0.03671727  -0.18244344 -0.0099435574    4.8707131    4.8921084    0.2316015        0.075    1.5933765          0.5    0.0257335    19.429926    2.8080316    30.801768  0.012559504  -0.12128459 -0.0084255086    0.3501367    2.1435733    6.4455414 
  305000    10.951946    1.2614481    9.6904982   -0.2128234   0.84115215   0.99893908   0.73644719   -3.5502959            3    4.9166771    7.2893997    7.4286242  0.032007315 0.0090622395   0.16736723 -0.0078163565    4.7551103    4.7708177   0.24197062        0.075    1.5690401          0.5  0.026885625    18.597299    2.7927854    30.801768 -0.0097414832   -0.1144198 0.0022783912   0.36299642   -3.2898979   -1.2233815 
  306000    10.976461    1.2718706    9.7045903  -0.19673543   0.84810202   0.98424112   0.75780749   -3.5502959            3    5.3021495    7.6039539    7.6785663    0.6239284  -0.02208268   0.11737606 -0.015198523    5.1358966    5.1584362   0.25138001        0.075    1.5532967          0.5  0.027931113    17.901185     2.808329    30.801768 0.0041627273  -0.12555005 -0.021425454   0.39265379   0.47131688    4.2791929 
  307000    11.000269    1.2933998    9.7068689  -0.21155889   0.86245802    1.0042647   0.76839667   -3.5502959            3    5.1384226     7.541312    7.4882872   0.38566855   0.01051498  -0.14307796 -0.023364901    4.9698465    4.9917855   0.26249244        0.075    1.5670763          0.5  0.029165827    17.143351    2.8178406    30.801768 -0.0021505468  -0.12600005 -0.0016950986   0.37280842   0.46333393    1.8005745 
  308000    11.038757    1.3044388    9.7343187  -0.19935984   0.86981898    1.0233469   0.76795925   -3.5502959            3    5.1882056     7.585855    7.5137291   0.46503282 -0.0090210111 -0.095993739 -0.059658698    5.0197255    5.0387823   0.27314016        0.075    1.5703762          0.5  0.030348907    16.475058    2.8022937    30.801768 -0.0092863034  -0.11105757 -0.0080985429   0.37597967   -1.9189796    3.9174766 
  309000    10.969178    1.2511547    9.7180233   -0.2025965   0.83428835   0.98767986   0.73250625   -3.5502959            3    4.9607206    7.3446651       7.4099   0.12759669  0.010158438  0.039909233 -0.052969766    4.8000184    4.8165052   0.28475255        0.075    1.5636525          0.5  0.031639172    15.803195    2.8117362    30.801768 -0.015462283  -0.10477578  -0.03535447   0.38256643    1.7715123   -4.0100918 
  310000    10.940846    1.2607428    9.6801036  -0.20938689   0.84068188   0.98535772    0.7447029   -3.5502959            3    5.2578792    7.6056555    7.6313567   0.53662525  0.017024924 -0.017029331 -0.016480021    5.0945012    5.1140028   0.29742399        0.075    1.5536189          0.5   0.03304711    15.129916    2.8234598    30.801768  0.013780096 -0.075901699 -0.0016104534   0.38652211   -2.5710341    0.3337327 
  311000    10.978574    1.2866301    9.6919438  -0.20740792    0.8579439    1.0045881   0.76066125   -3.5502959            3    5.3894433    7.7195496    7.6996238    0.7491566 -0.0058422519  -0.14777203  0.046027881    5.2225643    5.2427591   0.31134608        0.075    1.5597095          0.5  0.034594009     14.45337    2.8000818    30.801768 0.0049158862 -0.093038613  0.005239618    0.3542103    1.0358988    2.5111139 
  312000    10.997605    1.2926742    9.7049313  -0.19957232   0.86197418    1.0162858   0.75958993   -3.5502959            3    4.9749396    7.3549528    7.4657977   0.10406824 0.0011778462 -0.059638729 -0.031914331    4.8082956    4.8265473   0.32720871        0.075    1.5676484          0.5  0.036356524     13.75269    2.8120011    30.801768 0.0061202592   -0.1196659 -0.011904966   0.31014937   0.45208369   -6.2894686 
  313000    10.975657    1.2762666    9.6993908    -0.210245   0.85103338    1.0139031   0.74294915   -3.5502959            3    5.3103062    7.6731826    7.6846648   0.57307113 -0.020855273   0.11096294 -0.0083703454     5.147313    5.1622618   0.34400739        0.075     1.573144          0.5  0.038223043    13.081114    2.8177573    30.801768 -0.0038443838  -0.11006603 -0.014920333   0.35624121   -3.1678084     1.846888 
  314000    11.014369    1.3064833    9.7078858  -0.20845362   0.87118228    1.0129994   0.77711726   -3.5502959            3    5.2372908    7.5963999    7.5751897   0.54028273 -0.012690701 -0.074603955 0.0091568348    5.0668016    5.0893784   0.36252241        0.075    1.5605845          0.5  0.040280268    12.413026    2.8412757    30.801768 -0.013654723  -0.11723101 0.0063320413   0.38467626 -0.051042559   0.86076686 
  315000     11.03075     1.324021    9.7067293   -0.2139294   0.88287669    1.0551619    0.7685377   -3.5502959            3    5.0377347    7.4904837    7.4269271   0.19579323  0.001021428   0.11843004  0.055649147    4.8691277    4.8836659     0.380766        0.075    1.5733825          0.5  0.042307334    11.818282    2.8135998    30.801768 -0.029219698    -0.109581 -0.019938365   0.36897852   0.74321142   -5.2808524 
  316000     11.01785    1.3008656    9.7169847  -0.20950891   0.86743633    1.0313979   0.75863151   -3.5502959            3    5.0667186    7.4843131    7.4533941   0.26244872  0.036479494  -0.04629552   0.09440225    4.9002849    4.9161198   0.40032632        0.075    1.5281155          0.5  0.044480702     11.24083    2.8050398    30.801768 0.0085990195  -0.12571203  0.036705077   0.33547342   -1.7788607    2.5910872 
  317000    10.954586     1.268313    9.6862735  -0.22813861   0.84572976   0.99943488   0.74374316   -3.5502959            3    5.2750116    7.6195141    7.6162938   0.58922676 -0.020047517  0.014743499 -0.0074641246    5.1118442    5.1290797   0.42341974        0.075    1.4993694          0.5  0.047046637    10.627752    2.8131351    30.801768 0.0030846653 -0.086911731   0.00416616   0.33297201   -1.3213647  -0.99718197 
  318000    11.016429    1.2887126    9.7277162  -0.21813491   0.85933252    1.0038027   0.76349736   -3.5502959            3    5.1836515    7.4679432    7.5538663   0.52914497 0.0085662601  0.060887088  0.012193709    5.0161503    5.0370819   0.44776485        0.075    1.4543897          0.5   0.04975165    10.049918    2.8263321    30.801768 0.0035244566  -0.10430141 0.0096576412   0.40206297   0.22710743    2.5301677 
  319000    10.974456    1.2795943    9.6948616  -0.22902953   0.85325231    1.0179239    0.7439697   -3.5502959            3    5.2698245    7.6638692    7.6063456   0.53925879 -0.042759678  0.091557684 0.0081897718    5.1066074     5.121193   0.47216033        0.075    1.4320017          0.5  0.052462258     9.530661    2.7996712    30.801768 -0.0047711531   -0.1131946  -0.02396356   0.39620936  -0.50355765     7.485974 
  320000    10.995429    1.2634379    9.7319916  -0.22288587   0.84247896   0.97843659   0.75230312   -3.5502959            3     5.040354    7.4299543    7.5013028   0.18980493 -0.0007690326 -0.087108281  0.042915555    4.8753087    4.8974882   0.50044035        0.075    1.4032213          0.5  0.055604483    8.9920806    2.8163415    30.801768  0.023306145  -0.13379071 -0.016839021   0.32957487   0.53323586   0.39590019 
  321000    10.968291     1.295492    9.6727992  -0.22845357   0.86385316    1.0191391   0.76082116   -3.5502959            3    5.3248244    7.6835695    7.6248768   0.66602696 -0.0096350403     0.104464  0.045338314    5.1579104    5.1760155    0.5275057        0.075    1.3624754          0.5  0.058611745    8.5307135    2.8018452    30.801768 -0.023635567  -0.13417497  0.031035817   0.33320988   -2.2741716   -1.3369341 
  322000     10.91849    1.2639462    9.6545437  -0.21859636   0.84281794    1.0001701   0.73840296   -3.5502959            3    5.1930793    7.5508959    7.6319727   0.39636933 -0.0098163734   0.10610168  0.041444291    5.0310835    5.0470401   0.56099406        0.075    1.3211854          0.5  0.062332673    8.0214754    2.8006809    30.801768  -0.02124231  -0.18172083 0.0034517906   0.35562161  0.074696766     2.757765 
  323000    10.880005    1.2270602    9.6529446  -0.23748513   0.81822177   0.95895466   0.72485875   -3.5502959            3    5.1525209    7.5360501    7.5957837   0.32572896 -0.023125409    0.0354802  0.067465644    4.9934965    5.0124998   0.58916159        0.075    1.2984835          0.5  0.065462399    7.6379725    2.8122606    30.801768  0.013498367  -0.12312254 -0.005916744   0.34751619    1.0591427    2.1034878 
  324000    10.905073    1.2752631    9.6298098  -0.24296347   0.85036422    1.0208856   0.73718715   -3.5502959            3    5.3214095    7.6780156    7.6922331   0.59397976  0.014766877 -0.099781445  0.040303352    5.1596804    5.1723456   0.62675121        0.075      1.27671          0.5  0.069639023    7.1798825    2.8256216    30.801768  0.010440523    -0.111238 0.0096987818   0.29322161  -0.11464389    2.5036658 
  325000    10.930193    1.2608339    9.6693588  -0.23577063    0.8407426   0.97950808   0.74869734   -3.5502959            3    5.1916809    7.6013666    7.5871247   0.38655156 -0.017229085   -0.1049753  0.022259791    5.0274267    5.0486587   0.66084853        0.075    1.2434427          0.5  0.073427614    6.8094273     2.802461    30.801768 0.0030552635 -0.097389963 0.0020483814   0.40440761  -0.05210157   -1.4776866 
  326000    10.944943     1.294249    9.6506944  -0.23933569   0.86302431    1.0144538   0.76255868   -3.5502959            3     5.289036    7.6550438    7.6274033   0.58466086  0.024389214 -0.0056639261 -0.068620722    5.1217407    5.1409112   0.69583594        0.075    1.2381002          0.5  0.077315104    6.4670417    2.7934735    30.801768 -0.003024425  -0.16054206  -0.02488039   0.32321895   -3.2200884   -5.7650022 
  327000    10.955815    1.2719265    9.6838881  -0.24859975   0.84813928    1.0075909   0.74232895   -3.5502959            3    5.1565745    7.5303835    7.5899939   0.34934604  0.011311214 0.0012328809 -0.017530397    4.9937173    5.0094518   0.74584661        0.075    1.2028715          0.5  0.082871846    6.0334121    2.8507917    30.801768 -0.0067863296  -0.11802885  0.020783892   0.33637323    0.4458515   0.96497175 
  328000    10.920708    1.2822863    9.6384215  -0.25918021   0.85504734    1.0104545   0.75193139   -3.5502959            3     5.109251    7.4987923    7.5238481    0.3051125 0.0068067384  -0.07212849  0.065871455    4.9442872    4.9617101   0.78051805        0.075    1.1841655          0.5  0.086724228    5.7654016    2.8176918    30.801768  -0.02780839  -0.14737683 -0.026823091   0.37339611  -0.61798357   -0.4535361 
  329000    10.930045     1.283834    9.6462109  -0.25591956   0.85607941   0.97908928   0.77452607   -3.5502959            3    5.4321621    7.7548441    7.7301493   0.81149299 0.0032628492  -0.08355144  0.058389115    5.2622414     5.289201   0.83143919        0.075    1.1624303          0.5  0.092382132     5.412302    2.7895613    30.801768 0.0032261105  -0.16007834 -0.016543968   0.31299672  -0.58672868    1.5665823 
  330000    10.905166    1.3099828    9.5951834  -0.27198201   0.87351584    1.0549993   0.75305147   -3.5502959            3    5.3633538    7.7429829    7.7111338   0.63594493  0.039878926  0.076831034 -0.0017428029    5.1981443    5.2093088   0.87409399        0.075     1.160977          0.5  0.097121554    5.1481878    2.7951343    30.801768  0.008112081  -0.12755048 -0.024130879   0.34225642    1.4088225    1.4838115 
  331000     10.83804    1.2386254    9.5994149  -0.27261578   0.82593364   0.98945108   0.71740906   -3.5502959            3    5.3507528    7.7858387    7.6498575   0.61656219  0.033890452 -0.082421163   0.07125176    5.1933627    5.2062787   0.92380908        0.075    1.1669324          0.5   0.10264545    4.8711364    2.8334391    30.801768 0.0037896211  -0.22323879 -0.0054767332   0.28791972    1.1077801    4.3199304 
  332000    10.877115     1.281717    9.5953977  -0.27979323   0.85466774    1.0102331   0.75144636   -3.5502959            3    5.2987511    7.6900316    7.7302455   0.47597631 -0.021844414 -0.068727547 -0.019544967    5.1338937    5.1512426   0.95440489        0.075    1.1646098          0.5   0.10604499      4.71498    2.7896403    30.801768 0.0060216923  -0.25995674 0.0047020849    0.3967993    1.2539434    1.8748138 
  333000    10.833323    1.2788347    9.5544882  -0.31138286   0.85274581    1.0262095   0.73761139   -3.5502959            3    5.4058545     7.715298    7.7888013   0.71346409 -0.0016807964 -0.064074628  0.033457898    5.2440323    5.2560132   0.97144993        0.075    1.1621711          0.5   0.10793888    4.6322511    2.7775337    30.801768 -0.019581431  -0.25762432 -0.00075803284   0.32320096   -1.5956226   -1.8313997 
  334000    10.809456    1.2715576    9.5378986  -0.30915723   0.84789334    1.0227685   0.73181771   -3.5502959            3    5.6013162    7.9130549    7.8955986   0.99529505 -0.0033658896 -0.024541707 -0.029445734    5.4407651    5.4519773    1.0129405        0.075    1.1691639          0.5   0.11254895    4.4425116    2.7772764    30.801768 0.0084998835   -0.2632097 -0.016148431   0.41164072   -1.3269744    4.1352094 
  335000    10.724453    1.2197737    9.5046798  -0.32388681   0.81336304   0.94628465   0.72519706   -3.5502959            3    5.5243751    7.8519663     7.854471   0.86668807 -0.032685746  -0.15468607   0.09627123    5.3652765     5.386204    1.0343528        0.075    1.1696602          0.5   0.11492808    4.3505467    2.8218653    30.801768 0.0015523429  -0.37566265 -0.008564939   0.38194116    1.4382791    4.1351906 
  336000    10.773415    1.2669557    9.5064595  -0.32840895   0.84482468    1.0062698   0.73768631   -3.5502959            3    5.4919483    7.7952519    7.8463272   0.83426583  0.014588267  0.088868954   -0.0451724    5.3301097    5.3450185    1.0492072        0.075    1.1809327          0.5   0.11657858    4.2889525    2.8315499    30.801768 -0.0024805735  -0.38767541 -0.0067070097   0.31069555   0.70079123    1.2065523 
  337000     10.80759    1.2870033    9.5205867  -0.31416028   0.85819272    1.0051759   0.76068456   -3.5502959            3    5.7848221    8.0310162    8.0060772    1.3173729   0.00120964  0.019829022 -0.023643561     5.617938     5.638052    1.0505576        0.075    1.1770986          0.5   0.11672862    4.2834397    2.8096698    30.801768 0.0021819445  -0.32035353 -0.034283086    0.4628937  0.018574152    5.0993822 
  338000    10.818716    1.2850797    9.5336362  -0.32836326   0.85691007   0.99368848   0.76619329   -3.5502959            3    5.7840235    8.0575378    8.0740293    1.2205034  0.011069432  -0.17186127 0.0022285117    5.6159308    5.6389307    1.0596707        0.075    1.1857339          0.5   0.11774119    4.2466023    2.8326782    30.801768 -0.014800626   -0.3866708  0.036099776    0.4116545    1.8848123    6.4144064 
  339000    10.801365    1.3031096    9.4982554  -0.32868372   0.86893266    1.0077721   0.77684859   -3.5502959            3    5.5193811    7.8667284    7.8656142   0.82580075   0.02250228   0.15634155 -0.046045308    5.3489508    5.3722319    1.0437759        0.075    1.1819175          0.5    0.1159751    4.3112704    2.7965306    30.801768 -0.0088765528  -0.28639187  0.021004617   0.39581283   -1.2086582    6.0381118 
  340000    10.803281    1.2988715      9.50441  -0.34212683   0.86610663    1.0137717   0.76814753   -3.5502959            3    5.6795904    7.9368886    7.9735011    1.1283816  0.024708616 -0.013163501  0.039324924     5.511069    5.5315652    1.0565824        0.075    1.1814594          0.5   0.11739805    4.2590146    2.8253057    30.801768  0.016128642  -0.30186701 -0.046143364   0.32273994   -1.2964107    5.9515523 
  341000    10.814299    1.2870213    9.5272774  -0.31567414   0.85820474   0.98186844   0.77621703   -3.5502959            3    5.6961991    7.9805186    7.9971219    1.1109567 -0.0025573441  0.029785086 -0.028291053    5.5259073    5.5528322     1.043268        0.075    1.1860127          0.5   0.11591867    4.3133689     2.808639    30.801768 0.0028027926  -0.37833732 -0.010612309   0.34941033   -1.4447105    7.1479936 
  342000    10.780351    1.2753895    9.5049617  -0.33772423   0.85044852   0.97064553   0.77076522   -3.5502959            3    5.6795659    7.9852643    7.9758123    1.0776212  0.028823976 -0.094361811  0.047343984    5.5104702    5.5378377    1.0619346        0.075    1.1920212          0.5   0.11799273    4.2375491    2.8189359    30.801768 -0.014267219  -0.36605687  0.010713746   0.41987345   -1.0548568    6.5848968 
  343000    10.809131    1.2683025    9.5408289  -0.30684255   0.84572277    1.0041944    0.7405638   -3.5502959            3    5.4660362      7.83692    7.8395875   0.72160115 -0.0054469329 0.0029982166  0.073572893    5.3035663    5.3194094    1.0552009        0.075    1.2029638          0.5   0.11724454    4.2645908    2.8090409    30.801768  0.023255377  -0.34702508   0.01151405   0.37049408    1.0712022    1.9959899 
  344000    10.769138    1.2582951    9.5108427  -0.33065279   0.83904971   0.99542559   0.73528309   -3.5502959            3    5.6243605    7.9378685    7.9780512   0.95716167  0.026079589  -0.20779448  0.081450881    5.4630491    5.4790141    1.0647709        0.075    1.2110129          0.5   0.11830787    4.2262614    2.8718651    30.801768 -0.023858128  -0.36193648 0.0035668612   0.32043158    1.8943446  -0.55082327 
  345000    10.822669    1.2766694    9.5459999   -0.3171188   0.85130197    0.9834578   0.76365971   -3.5502959            3    5.5297087    7.8597863    7.8423322   0.88700779  0.028150769 -0.0022987897 -0.073749872    5.3621719    5.3861098    1.0554653        0.075    1.2110532          0.5   0.11727392    4.2635225    2.8178931    30.801768 0.0027346889  -0.36508427 -0.0057384634   0.33277711    1.4460879     3.714597 
  346000    10.784315    1.2650554    9.5192595  -0.32121774   0.84355753   0.98750346   0.74806542   -3.5502959            3     5.594038    7.9064537    7.8808326   0.99482751 -0.0025451233  0.096003306 -0.040850501    5.4299223    5.4498483    1.0559121        0.075     1.216098          0.5   0.11732357    4.2617184    2.8118498    30.801768  0.020343505  -0.40358566 -0.0010898333   0.39521473   -1.8391643    5.3122307 
  347000    10.810065    1.2810481    9.5290168  -0.32466104   0.85422173   0.99829667    0.7586477   -3.5502959            3    5.5409518    7.8492439    7.8127373    0.9608741  0.020617499  0.079798624  0.049004598    5.3745145    5.3951861    1.0633554        0.075    1.2162643          0.5   0.11815059    4.2318873    2.8264739    30.801768  0.019819186  -0.44275373  -0.03762663   0.38825896    1.6806268    1.4746275 
  348000    10.785223    1.2795523    9.5056711  -0.32385581   0.85322433   0.98960001   0.76277423   -3.5502959            3    5.6463399    7.9848745     7.951649    1.0024963 -0.029744812  -0.16450037  0.076679284    5.4789974    5.5018441    1.0426245        0.075    1.2166694          0.5   0.11584717    4.3160312    2.7873256    30.801768 -0.00083293034  -0.35687424  0.011500139   0.47423288    3.2473316    2.7604823 
  349000    10.763277    1.2567675    9.5065095  -0.32957769   0.83803106   0.99692601   0.73258748   -3.5502959            3    5.6313284     7.883157     7.974417    1.0364111  0.038938651   0.05622964  0.085483033    5.4706084    5.4857629    1.0621434        0.075    1.2109277          0.5   0.11801593    4.2367162    2.8266514    30.801768 0.0011695067  -0.40431908  0.011428513   0.38325537   -2.7026587    4.8214783 
  350000     10.75905    1.2533515    9.5056987  -0.32070161   0.83575322   0.96140982   0.75243081   -3.5502959            3    5.5057836    7.7979821    7.8528626   0.86650621 -0.0069039042  0.031495705  0.050441585    5.3407103     5.365404    1.0635975        0.075    1.2140865          0.5    0.1181775    4.2309238     2.840459    30.801768 -0.014978149  -0.39134787  0.018758461   0.38811172    1.7876117  -0.01566869 
  351000    10.775152    1.2674516    9.5077008  -0.33907551   0.84515536    1.0000939   0.74234763   -3.5502959            3    5.4333593    7.7835705    7.7961626   0.72034477  0.053634525 -0.057961671  0.060545534    5.2704981    5.2873312    1.0577829        0.075    1.2087229          0.5   0.11753143    4.2541812    2.8198196    30.801768 -0.0079229721  -0.39303723  0.034210818   0.34349074   0.20060514    1.7369155 
  352000    10.815263     1.303539     9.511724  -0.32543286   0.86921899    1.0407326   0.75538851   -3.5502959            3    5.5057286    7.8321594    7.8460781   0.83894842 -0.0030831657  0.071966156 -0.026223839    5.3400064    5.3537667     1.048288        0.075    1.2090064          0.5   0.11647644    4.2927135    2.8019808    30.801768  0.016305359  -0.35097541  0.002578414   0.37275832   -3.8150649  0.045963027 
  353000    10.784263    1.2543007     9.529962  -0.31955845    0.8363862   0.96859643    0.7487022   -3.5502959            3    5.6033401    7.9023197    7.9480639   0.95963667 -0.0062814872 0.0082528309  0.089794833    5.4390847    5.4619111    1.0576272        0.075    1.2097937          0.5   0.11751413    4.2548074    2.8227703    30.801768 -0.0012603709  -0.35621969 0.0080844955   0.26758303    1.8281832    3.7850479 
  354000     10.76769    1.2823009    9.4853895   -0.3220963   0.85505711   0.99510284   0.76216506   -3.5502959            3    5.4159063    7.8213955    7.7905462   0.63577703  0.040449016  0.091206171 -0.014351404    5.2486973     5.270607     1.077833        0.075    1.2003947          0.5   0.11975922    4.1750438    2.8192089    30.801768 -0.010483539   -0.4231614 -0.011474707     0.361525   -1.7267175   0.16661036 
  355000    10.762983    1.2761666    9.4868163  -0.35029242   0.85096664    1.0133447   0.74320964   -3.5502959            3    5.6135389    7.9492824    7.8963283   0.99500608  0.014149812  -0.10386423 -0.097095511    5.4504886     5.465576    1.0790648        0.075    1.2124671          0.5   0.11989609    4.1702778    2.8290015    30.801768 0.0025989923  -0.33272053 -0.0055027824    0.4010293    2.3831155    3.6976393 
  356000    10.797782    1.3069105    9.4908711  -0.32613847   0.87146715    1.0356887   0.76249078   -3.5502959            3    5.7113478    8.0489423    8.0010915    1.0840098 0.00035889961 -0.045820001 -0.063106596    5.5440675    5.5601224    1.0696673        0.075    1.2125293          0.5   0.11885193    4.2069154     2.822241    30.801768 0.0035813847  -0.30277493  -0.01139492   0.35695614  -0.86405421    1.2072226 
  357000     10.77323    1.2764105    9.4968198   -0.3368669   0.85112928    1.0041381   0.74960813   -3.5502959            3    5.5177878     7.866027    7.8917143    0.7956222 -0.0042468743 -0.047356911 -0.017287721    5.3533337    5.3711692    1.0699719        0.075     1.209869          0.5   0.11888576     4.205718    2.8155185    30.801768 -0.016848811  -0.40858448 -0.0002472436   0.41829011    1.3656756   -1.2841386 
  358000     10.78325    1.2758349    9.5074156   -0.3321481   0.85074548    1.0328587   0.72985354   -3.5502959            3    5.6522142    7.9821941     7.962567    1.0118814 -0.011244807 -0.041092615 -0.053837359     5.492094     5.501402    1.0693025        0.075    1.2075172          0.5   0.11881139    4.2083508    2.8055222    30.801768  0.017718311  -0.31113783 -0.0056838976   0.39193141    1.0867913    4.0591473 
  359000    10.814852    1.2801597    9.5346921  -0.31997852    0.8536293    1.0098187    0.7499922   -3.5502959            3    5.4143909    7.7602353    7.8688344   0.61410285 0.0087610358   0.13554407  0.015730339    5.2498525    5.2669428    1.0550978        0.075     1.208531          0.5   0.11723308    4.2650077    2.8067283    30.801768  0.005050544  -0.36097306 -0.0009313151   0.30189194   0.26984694    4.8256715 
  360000    10.757111    1.2671751    9.4899361  -0.33759033   0.84497099    1.0025239   0.74042317   -3.5502959            3    5.5041761    7.9179023    7.7922455   0.80238047 -0.050346522   0.11836474 -0.0028726006    5.3417371    5.3577932     1.063024        0.075    1.2195727          0.5   0.11811378    4.2332063    2.7993174    30.801768 -0.011703358  -0.37342209 0.0005483746   0.39850548  -0.42806663    4.3318783 
  361000    10.795153     1.292706     9.502447  -0.34435361    0.8619954    1.0333246     0.748285   -3.5502959            3    5.6005576    7.8934943     7.914993   0.99318562 -0.0073177802  -0.16754538  -0.07651988    5.4363938    5.4496774    1.0675589        0.075    1.2154687          0.5   0.11861766     4.215224    2.8240743    30.801768 -0.017738466  -0.35035674 -0.010612506   0.40204971    3.5776701   0.38383554 
  362000     10.78238    1.2602666     9.522113   -0.3258144   0.84036434   0.99395208   0.73845388   -3.5502959            3     5.594357      7.92695    7.8062472    1.0498738 -0.0011089682  0.064851142 -0.039137673      5.43235    5.4492257    1.0469865        0.075    1.2210386          0.5   0.11633184    4.2980495    2.7867337    30.801768 -0.0033529317  -0.34401401 -0.010450283   0.39075302   -1.4753848    4.9259944 
  363000    10.778897    1.2751061    9.5037913  -0.32970286   0.85025953    1.0082182   0.74544362   -3.5502959            3    5.6643459    8.0095076    7.9497017    1.0338284 -0.0024193558  0.068053982 -0.066708334    5.5008054    5.5171316    1.0615926        0.075    1.2117767          0.5   0.11795473    4.2389144    2.8216055    30.801768 -0.039754418  -0.36166404 0.0037371794   0.40350878   -3.6045204    7.4201664 
  364000     10.80581     1.277154    9.5286564  -0.33286013   0.85162505   0.98152695   0.76548302   -3.5502959            3    5.5180219    7.8221993    7.9435852   0.78828129 0.00047908446  -0.02515312 0.0032431213    5.3500851    5.3747049     1.058347        0.075    1.2115854          0.5   0.11759411    4.2519136    2.8079239    30.801768  0.006170205  -0.30784421 0.00026158302     0.345954    4.0562386    6.4530613 
  365000    10.787295    1.2791992    9.5080961  -0.32313626   0.85298885   0.99293832    0.7601601   -3.5502959            3    5.6000641    7.9479007    7.9109686    0.9413231  0.017309828 -0.078532477 -0.067545548    5.4332951    5.4550809    1.0500068        0.075    1.2053002          0.5   0.11666742    4.2856865    2.7997655    30.801768 0.0089704715   -0.3428907 -0.043767598   0.31292826   0.24423151  0.067237867 
  366000    10.801291    1.2615727    9.5397186  -0.32643584   0.84123526   0.98412104   0.74644789   -3.5502959            3    5.4638861     7.810122    7.7832033   0.79833299 0.0087893534   0.17567151  0.048219202    5.3001253    5.3201903    1.0585461        0.075    1.2160322          0.5   0.11761623    4.2511138    2.8033801    30.801768 -0.010202777   -0.3471575 -0.022458692   0.41653036   -1.6898378   0.32054683 
  367000    10.835538    1.3038122    9.5317262  -0.33803458   0.86940115    1.0205875   0.76909969   -3.5502959            3    5.5799847    7.8625748    7.8801168   0.99726256  -0.02541837  -0.04627019  0.035468523    5.4112545    5.4309643    1.0421256        0.075    1.2232661          0.5   0.11579174    4.3180974    2.7719902    30.801768 -0.025898443  -0.42081851  0.014023286   0.28463189  0.040270994    1.4982247 
  368000    10.795324    1.2868681     9.508456  -0.33221898   0.85810258   0.98890013   0.77136684   -3.5502959            3    5.2248976    7.6109743    7.6474114   0.41630701  0.014013712 -0.075023676 -0.013488811    5.0556699     5.080504    1.0438922        0.075    1.2187208          0.5   0.11598803    4.3107898    2.7960996    30.801768 -0.033254754  -0.34845873 0.0038857754   0.36181594    1.8073755   -2.6860468 
  369000    10.773654    1.2698289    9.5038255  -0.32442302   0.84674057   0.98015072    0.7582618   -3.5502959            3    5.6254192    7.9301759    7.9748837   0.97119785 0.0012925158    0.0183369 -0.054069164    5.4590666    5.4823031       1.0604        0.075    1.2195718          0.5   0.11782222    4.2436816    2.8086976    30.801768 -0.0056697489  -0.33095647 0.0028378228   0.35086896  -0.72512622    4.4211008 
  370000    10.789842    1.2786318    9.5112106  -0.31804255   0.85261053   0.99017465   0.76136922   -3.5502959            3    5.5525752    7.8249509    7.9628628   0.86991189 -0.0023464045  -0.03169649 -0.017417603    5.3855409    5.4079955     1.052948        0.075    1.2235017          0.5   0.11699423    4.2737152    2.8057171    30.801768 -0.029745851  -0.39304725 3.7114123e-05   0.44709732   0.47527867    3.6574425 
  371000    10.762247    1.2647518    9.4974956  -0.32037422   0.84335509   0.98305905   0.75068617   -3.5502959            3    5.5492355    7.8986306    7.8766109     0.872465  0.017743293  -0.12798034  0.026620362    5.3845449    5.4056948    1.0416572        0.075    1.2318613          0.5   0.11573969    4.3200392      2.79704    30.801768 -0.00081302457  -0.35919455 -0.0076821985   0.31399109     2.408941    5.5706578 
  372000    10.791442    1.2747963    9.5166453   -0.3218771   0.85005294    1.0044083   0.74763515   -3.5502959            3    5.5572466    7.9184373     7.838083   0.91521964 -0.014497954 -0.00015589658 -0.0054456818    5.3932254    5.4105886    1.0505968        0.075    1.2288959          0.5   0.11673298    4.2832797    2.8127997    30.801768 -0.020357543  -0.38053909  0.012591051   0.29050296   0.48889478    6.0125887 
  373000    10.820746    1.2769186    9.5438278  -0.31357445   0.85146811   0.99201627   0.75824034   -3.5502959            3    5.4763975    7.8471495    7.8297577   0.75228547 0.0050997069   0.15142068 -0.085309136    5.3100497    5.3315489    1.0540591        0.075    1.2379909          0.5   0.11711768    4.2692103    2.8378539    30.801768  0.016636854  -0.32152341 -0.027537233    0.4282413  -0.94578607   0.44028098 
  374000    10.800837    1.2885777    9.5122594  -0.33227459   0.85924259    1.0044349   0.76292674   -3.5502959            3    5.6892502    7.9894473     7.908142    1.1701611  0.025360237 -0.013090393  0.049004741    5.5218741    5.5425883    1.0720044        0.075    1.2405479          0.5    0.1191116    4.1977441    2.7989966    30.801768 -0.017199322  -0.46704789 -0.0076879219   0.40170653   -2.0511147    1.9166038 
  375000    10.790167    1.2641794    9.5259871  -0.32543425   0.84297345     0.990092   0.74536957   -3.5502959            3    5.6356707    7.9115042    7.9830397    1.0124682  0.060156981 -0.097038633 -0.061802815    5.4721465    5.4911031     1.063225        0.075    1.2376996          0.5   0.11813611    4.2324061    2.8221384    30.801768  -0.02349481  -0.40404721  0.023922978    0.4131869    1.0216523    2.8807461 
  376000     10.76121    1.2507915    9.5104183  -0.31531037   0.83404616   0.97690927   0.73927121   -3.5502959            3     5.764294    8.1032111     8.032326    1.1573448 0.0033691128 -0.063814547  -0.01987578    5.6021077    5.6216512    1.0616037        0.075    1.2311542          0.5   0.11795597    4.2388698    2.8155317    30.801768   0.01957185  -0.35432451 -0.013321613   0.35542805     2.547335    4.9959979 
  377000    10.768534    1.2535074    9.5150263  -0.33627312   0.83585716   0.99104569   0.73287962   -3.5502959            3    5.4204989    7.7316456    7.7815816   0.74826951 -0.012267559 -0.036389362 -0.039501842    5.2597148     5.275792    1.0489158        0.075    1.2458424          0.5    0.1165462     4.290144    2.8118784    30.801768 0.0069016626   -0.3173725 0.0042713081   0.31645386   -2.1563733    0.3633998 
  378000      10.7992    1.3149543    9.4842461  -0.33724513   0.87683091    1.0184651   0.78288968   -3.5502959            3    5.5894517     7.969883    7.8760458   0.92242615  -0.00716183  0.002664058 -0.013665169     5.417696    5.4407411    1.0607272        0.075    1.2587192          0.5   0.11785858    4.2423727    2.8286635    30.801768 -0.014611282  -0.29083118 0.0080222577   0.38286539    2.1324855    5.9873941 
  379000     10.75735    1.2753072    9.4820424  -0.33668292    0.8503936     1.017973   0.73917461   -3.5502959            3    5.6347977    7.9122573    7.9535986    1.0385373  0.041154867  0.021702699  -0.14912967    5.4726326    5.4861591    1.0668756        0.075    1.2428909          0.5   0.11854174    4.2179237    2.8028398    30.801768 -0.002599022  -0.30749129 -0.016169941   0.38073576     0.751829  -0.66295811 
  380000    10.776614    1.2815116    9.4951028  -0.33086214   0.85453081   0.99476228   0.76151494   -3.5502959            3    5.5790281    7.9417065    7.8611198   0.93425799 -0.025409895   0.10944481  0.010837483    5.4119618    5.4337785    1.0737465        0.075    1.2472716          0.5   0.11930517    4.1909332    2.8056509    30.801768 0.0063703231  -0.41048436 -0.018464788   0.40362773  0.063674175    3.7816412 
  381000    10.756022    1.2619603    9.4940621  -0.33392155   0.84149372   0.97642862   0.75199819   -3.5502959            3    5.4912977    7.8271666    7.8327618   0.81396479 -0.0051151835 -0.017241729 -0.028782842    5.3263193    5.3487251    1.0681105        0.075    1.2491652          0.5   0.11867895    4.2130471    2.7956425    30.801768 -0.00022076863   -0.4444552 -0.017359038   0.36855665  -0.18922564   -1.3545353 
  382000    10.758998    1.2524533    9.5065442  -0.32899405   0.83515429   0.96495457   0.74907381   -3.5502959            3    5.7319117     8.073557    7.9820052    1.1401729 -0.012106633  0.071129899 -0.042790327    5.5675748    5.5910145    1.0634258        0.075    1.2461459          0.5   0.11815842     4.231607    2.8189639    30.801768 -0.0034466725  -0.37428553 0.0012657422   0.36273764   -1.7170218    2.7323143 
  383000     10.75741    1.2671549    9.4902548  -0.32486727    0.8449575   0.97997348   0.75540931   -3.5502959            3    5.5161919    7.8007691    7.8528844   0.89492228 0.0035371395 -0.099369239 0.0089174655    5.3504651    5.3731017      1.06709        0.075    1.2345049          0.5   0.11856555    4.2170765    2.7852917    30.801768 -0.017441521  -0.44379591 -0.0025391146    0.4369982    1.3161304    4.5031956 
  384000    10.728386    1.2578725    9.4705135  -0.33565372   0.83876791   0.99464377   0.73533398   -3.5502959            3    5.8642839    8.1285474    8.1253529    1.3389514 -0.014026163  0.043144036   0.14491972    5.7029613    5.7190516    1.0821094        0.075    1.2331197          0.5   0.12023438    4.1585443    2.8275229    30.801768 -0.031008938  -0.35736081 -0.037090375   0.40780634    -2.014746    5.0402335 
  385000    10.779634    1.2716066    9.5080271  -0.34948223   0.84792599    1.0016152   0.74595081   -3.5502959            3    5.5191571     7.846698    7.8656601   0.84511312 -0.0042165543  0.057958027 -0.005060288    5.3555054    5.3729069    1.0600055        0.075     1.243201          0.5   0.11777838    4.2452612    2.8107336    30.801768 -0.011451636  -0.28586304 -0.025119395     0.321096   0.21792835    2.5754191 
  386000    10.780911     1.272213    9.5086981  -0.33783619   0.84833034    1.0037846   0.74518054   -3.5502959            3    5.3716282    7.7844021    7.7004832   0.62999921   0.01096041 -0.090045269   0.01625892    5.2081454    5.2250612    1.0552531        0.075    1.2354633          0.5   0.11725035    4.2643796    2.7763756    30.801768  0.020043149  -0.34510834 -0.00096085437   0.35247332   -2.2991007     3.342712 
  387000    10.773829    1.2801856    9.4936436   -0.3386786   0.85364659     1.006217    0.7524181   -3.5502959            3    5.8293824    8.1072598    8.1029056    1.2779819 0.0099635549  -0.02167909 -0.064045037    5.6643119    5.6824603    1.0713956        0.075    1.2238185          0.5   0.11904396    4.2001292    2.8027385    30.801768 -0.0044595499   -0.3208587  0.017046669   0.39602647 -0.018744314    9.4301935 
  388000    10.812315    1.2974324    9.5148831  -0.34289341     0.865147    1.0283814   0.75682533   -3.5502959            3    5.6009424    7.9099095    7.8747337    1.0181841 0.0060283197 -0.078011854  0.070520763     5.434905     5.450784    1.0516922        0.075    1.2227128          0.5   0.11685469    4.2788185    2.7951689    30.801768 0.0075110857  -0.34060909 -0.010778972   0.36292911   0.58954335    4.6219689 
  389000    10.815394    1.2951186    9.5202757  -0.30998396   0.86360413    1.0298522   0.75327606   -3.5502959            3    5.3829797    7.7570623    7.7807492   0.61112778 -0.033881234   0.11862101  0.058669928    5.2177209    5.2326065    1.0559507        0.075    1.2244016          0.5   0.11732785    4.2615627    2.8186883    30.801768 0.0031707407  -0.35050228 -0.010645788   0.40430214   -2.8452258  -0.13071768 
  390000    10.769527    1.2842329     9.485294   -0.3282045   0.85634543    0.9896923   0.76791232   -3.5502959            3    5.5050536    7.8806421    7.8405012   0.79401756 -0.010156926 0.0074681822    0.1158888    5.3365838    5.3605444    1.0476127        0.075    1.2332109          0.5   0.11640141    4.2954807    2.8098719    30.801768 -0.016644497  -0.32435893 0.0029281282   0.38314235    1.7051458   0.75324676 
  391000    10.749087    1.2734031    9.4756834  -0.33251155   0.84912391   0.99923028   0.74953373   -3.5502959            3    5.6233001    7.8597445    8.0079443    1.0022114  0.010143335   0.14979741  0.076040806    5.4588623    5.4773981    1.0506603        0.075    1.2346969          0.5   0.11674003     4.283021    2.8115714    30.801768 -0.023358814  -0.37563829 -0.0040816642    0.3800631   -2.2756902    2.0221694 
  392000    10.734338    1.2534725    9.4808659  -0.32767645   0.83583392   0.99800394   0.72820978   -3.5502959            3    5.5822412    7.8919804     7.908292   0.94645125 0.0065014461   0.15828015 0.0065312783    5.4224817    5.4365184     1.059697        0.075    1.2368083          0.5   0.11774411    4.2464969    2.7962643    30.801768 -0.0077271439  -0.32726736  0.034179803   0.38830476    -2.319283    7.8106439 
  393000    10.814245     1.272408    9.5418373  -0.32652704    0.8484604    1.0010227   0.74723543   -3.5502959            3     5.661502    7.9623528    7.9194574    1.1026959 -0.0093794667  -0.13567547 -0.014789207    5.4975685    5.5153384    1.0528747        0.075    1.2264254          0.5   0.11698607     4.274013    2.7957381    30.801768  0.015830659   -0.4092278  0.018861748   0.31054207    2.0355788    9.6366931 
  394000    10.778829    1.2670768    9.5117525  -0.31112456   0.84490543   0.99065131   0.74821585   -3.5502959            3    5.5345778    7.8720127    7.8466578   0.88506284  -0.06070936 -0.041712196 0.0068355189    5.3704291    5.3899285    1.0387298        0.075    1.2362187          0.5   0.11541442    4.3322141    2.7882236    30.801768 -0.034112907  -0.38670088  0.015349075   0.36830219   0.26711336    3.3274025 
  395000    10.799766    1.2771505     9.522615  -0.31923112   0.85162278   0.99744997   0.75488157   -3.5502959            3    5.6066032    7.9207256    7.9519022    0.9471818  0.040006899  0.072137648 0.0055876426    5.4409922    5.4609612    1.0546387        0.075    1.2217191          0.5   0.11718208    4.2668642    2.8047113    30.801768  0.022380894  -0.36413884  0.017199041   0.39870263   -1.0768169 -0.0060939283 
  396000    10.790883    1.2573789     9.533504  -0.31350461   0.83843873    1.0089128   0.72528878   -3.5502959            3    5.6045086    7.9332699    7.9091175   0.97113835 -0.043607306  -0.15654248 -0.076570844    5.4453898    5.4571928    1.0432691        0.075    1.2190624          0.5   0.11591879    4.3133645    2.8043145    30.801768 -0.00039296807  -0.38891789 0.0053599806   0.34874554    3.6031339    3.8416121 
  397000    10.763606    1.2714105    9.4921953  -0.31825841   0.84779526     1.017499   0.73516145   -3.5502959            3     5.722789    8.0212671    8.0565825    1.0905173  -0.01869646 -0.035849853  0.023652762    5.5615043    5.5742195    1.0557022        0.075    1.2260894          0.5   0.11730025    4.2625656    2.8250277    30.801768  0.030583735  -0.35549841 -0.015399482    0.3429131   -2.0139613    4.9519825 
  398000    10.782739    1.2795562    9.5031825  -0.30886698   0.85322689   0.99457503   0.75946733   -3.5502959            3    5.6501638    7.9086407     7.962928    1.0789226 -0.00012747835 -0.074774175 -0.0037191367    5.4835467    5.5049415    1.0512921        0.075    1.2307806          0.5   0.11681023     4.280447     2.793222    30.801768  0.022021481  -0.38913172 0.00089983888   0.30739728    1.7268611    4.9363685 
  399000    10.811229     1.308513    9.5027157  -0.33603047   0.87253576    1.0138998   0.77877276   -3.5502959            3    5.7574551    8.0043858    8.0398982    1.2280811  0.039696598  0.092642202  0.065857375    5.5866026    5.6094111    1.0666233        0.075    1.2264861          0.5    0.1185137    4.2189216    2.8050963    30.801768 0.0041844926  -0.29877146  0.021661718   0.46072744  -0.25142456    3.8084829 
  400000    10.776965    1.2957206    9.4812443   -0.3298177   0.86400553    1.0157786    0.7633116   -3.5502959            3    5.4678524    7.8302752    7.8430994   0.73018276 -0.0044249373  0.031423699 -0.035654641     5.300392    5.3195342    1.0622849        0.075    1.2347618          0.5   0.11803166    4.2361515    2.8086194    30.801768  0.021954509  -0.40131646 -0.013606624   0.33672305   -1.0446254    4.5664495 
  401000    10.776057    1.2588552    9.5172017  -0.30985289   0.83942314   0.98827819   0.74066221   -3.5502959            3     5.691204    8.0298789    7.9812941     1.062439 -0.011687932 -0.085762841  0.051996491    5.5287125    5.5469012    1.0578477        0.075    1.2314698          0.5   0.11753863    4.2539206    2.8132395    30.801768 -0.0041954928  -0.38706362 0.00044403834    0.4246594    1.8468996    3.4718124 
  402000    10.795931    1.3017687    9.4941622  -0.32714148   0.86803854    1.0272381    0.7624033   -3.5502959            3    5.4917994    7.8121462     7.856462   0.80679012  0.030949113 -0.039181663  0.012637675    5.3245382    5.3418079    1.0602582        0.075    1.2313171          0.5   0.11780647     4.244249    2.8006052    30.801768  0.022969306  -0.36006012 -0.00077610048   0.39235451    4.1011976    6.0523923 
  403000    10.788313    1.2850462    9.5032668  -0.32925209   0.85688769    1.0134189   0.75302428   -3.5502959            3    5.7236167    7.9774585    8.0846667    1.1087249  0.012597883 -0.018634083 -0.058030742    5.5584131     5.575643    1.0566167        0.075    1.2327015          0.5   0.11740185    4.2588765    2.8142645    30.801768 -0.0041099201  -0.31421818 0.0041490852   0.32004316   -2.0917697    4.1092266 
  404000     10.82051     1.284858    9.5356515   -0.3080028   0.85676225    1.0076841   0.75663218   -3.5502959            3    5.5894156    7.8727411    7.8955039    1.0000019 -0.027753527  0.080231142 -0.075761018    5.4234205    5.4422793     1.056086        0.075    1.2317515          0.5   0.11734289    4.2610165    2.7876337    30.801768 -0.041612446  -0.39772806 -0.012165215   0.41860991   -1.1889036    5.5907734 
  405000    10.815416    1.2919584    9.5234579  -0.31555454   0.86149685   0.99158938   0.77523161   -3.5502959            3    5.8458702    8.0843001    8.1141103    1.3392002 -0.0061135294 -0.0048291408 -0.0052151383    5.6757947    5.7010839    1.0584279        0.075    1.2251138          0.5    0.1176031    4.2515885    2.7952687    30.801768   0.01025059  -0.33278659  0.014628474   0.33309387    2.9312204    4.0752098 
  406000     10.80346    1.2756296    9.5278299  -0.31609825   0.85060858   0.99043463    0.7578611   -3.5502959            3    5.5548468    7.8669571    7.9027309    0.8948524  -0.01383832  0.011820778  0.019427637    5.3885821    5.4102291    1.0555386        0.075    1.2241698          0.5   0.11728207    4.2632264    2.8099597    30.801768  -0.01120519  -0.42179389 0.0062856276   0.35000423    1.6704521    3.8454355 
  407000    10.777081    1.2679507    9.5091302  -0.32979821   0.84548821    1.0003622   0.74272358   -3.5502959            3     5.617732    7.9444975    7.9023345     1.006364 0.0046357189   0.20372769  0.017475135    5.4547883    5.4716648    1.0425443        0.075    1.2211459          0.5   0.11583825    4.3163635    2.8078024    30.801768 0.0080575556  -0.29875655 -0.0063246747   0.37229058    -1.094265    3.3343304 
  408000    10.791735    1.2878281    9.5039065  -0.31938481   0.85874275    1.0150302   0.75504226   -3.5502959            3     5.690454    8.0572824    7.9934905     1.020589 -0.016144787  -0.17517845 -0.036179124    5.5248077     5.542245    1.0648499        0.075    1.2332967          0.5   0.11831666    4.2259476    2.8253618    30.801768 -0.0068000977  -0.30078432 -0.012264178   0.42798338  -0.18637823    1.6305455 
  409000    10.817022    1.2820864    9.5349356  -0.32333504    0.8549141   0.98975177   0.76548825   -3.5502959            3    5.6114209    7.9236353    7.9520449    0.9585824  0.055895243   0.10881941 -0.029905827    5.4434829    5.4669029     1.067865        0.075    1.2390842          0.5   0.11865167    4.2140157    2.8032929    30.801768 -0.013467324  -0.38714932  0.015600278   0.35259644   0.81072212    6.3731409 
  410000    10.736079    1.2485418     9.487537  -0.33527003   0.83254602   0.98597601   0.73073767   -3.5502959            3    5.7133548    8.0541603    7.9736358    1.1122683 -0.032880983   0.10035426   0.04165823    5.5530406    5.5693882    1.0673101        0.075    1.2412246          0.5   0.11859001    4.2162067    2.8316067    30.801768 0.0047799016  -0.42827318 -0.013414051   0.37335398   0.87211143    1.4173758 
  411000    10.833658    1.3145232    9.5191343  -0.32140935   0.87654342    1.0026739   0.79292073   -3.5502959            3    5.7032098    8.0247425    8.0217158    1.0631713 -0.037365455 -0.0055876416  -0.03985472    5.5292535    5.5568051    1.0377591        0.075    1.2386629          0.5   0.11530656    4.3362667     2.766708    30.801768 0.0079689722  -0.37018076  0.031402589   0.32874489   0.88119168    2.4212491 
  412000    10.782592    1.2904775     9.492114  -0.33408974   0.86050936    1.0267826   0.75016341   -3.5502959            3    5.6382301    7.9315162    7.9825914    1.0005828 -0.039778923  0.035425587 -0.011789813    5.4736542    5.4883051     1.043833        0.075    1.2436706          0.5   0.11598145    4.3110344    2.8194207    30.801768 -0.007676788  -0.39057616  -0.02744434   0.38843051   -1.6142703     2.149308 
  413000     10.80069    1.3027073    9.4979822  -0.32507324   0.86866442    1.0225186   0.76658707   -3.5502959            3    5.7673637    8.0461385    8.0850287    1.1709239  0.024904003  0.070593939  0.027696972    5.5991847    5.6180613     1.058349        0.075    1.2249023          0.5   0.11759434    4.2519055    2.7945483    30.801768 0.0050363008  -0.40506595  0.017164344   0.40237709    1.3183888    4.1192008 
  414000    10.715669    1.2472578    9.4684115  -0.33138968   0.83168988   0.97011674   0.73986664   -3.5502959            3     5.547085     7.910498    7.8869528   0.84380422  0.018919187   0.20617726 0.0086966685    5.3847681     5.405434    1.0571255        0.075    1.2269431          0.5   0.11745839    4.2568265    2.8033889    30.801768 0.0057030428  -0.30954667 -0.007651142   0.35131293  -0.38652269    -3.081626 
  415000    10.773068    1.2768606    9.4962074  -0.32609313   0.85142941   0.99023585   0.75936084   -3.5502959            3    5.5645626    7.8954524      7.95152   0.84671547  0.032189088  -0.03548708  0.038686673    5.3979689     5.419974     1.068551        0.075    1.2318827          0.5   0.11872789    4.2113105    2.8258317    30.801768 -0.027172349  -0.32438778 0.0052162507   0.27018562   0.68695827  -0.74677824 
  416000    10.769979    1.2777513     9.492228  -0.31708846   0.85202338   0.98433676   0.76427653   -3.5502959            3    5.6205214    7.9206138    7.9208862    1.0200641 0.0097158202  -0.11415389  -0.13701077    5.4528492    5.4767941    1.0581384        0.075    1.2367608          0.5   0.11757093    4.2527518    2.8117247    30.801768  0.015715231  -0.39031738 0.0051490744    0.3249697    1.2643591    1.0573374 
  417000     10.76572    1.2987339    9.4669861  -0.34837645   0.86601491    1.0130816   0.76845408   -3.5502959            3    5.6292177    7.9629847    7.8882372    1.0364313 0.00068472242   0.02794321   0.05083179    5.4606291    5.4812933    1.0791676        0.075     1.242943          0.5   0.11990751    4.1698804    2.8186439    30.801768  0.015475002  -0.41208645 0.00015384899   0.42368111   -2.2487452    3.0015944 
  418000    10.804067    1.3099007    9.4941658  -0.32299257   0.87346106     1.006119    0.7854928   -3.5502959            3      5.61755    7.9641661    7.9316678   0.95681629  0.024059023   0.08141782 0.0013058903    5.4452233    5.4706422    1.0666618        0.075    1.2332821          0.5   0.11851798    4.2187691    2.8250613    30.801768  0.011552664  -0.39870438  0.010720557   0.35781542   0.44401877   -1.9768028 
  419000    10.758614    1.2773893    9.4812251  -0.33468877   0.85178198      1.01255   0.74509685   -3.5502959            3    5.4263555    7.7449079    7.7806137   0.75354511 -0.023690056   -0.1973895 -0.0017688062    5.2628912    5.2785087    1.0538625        0.075    1.2459382          0.5   0.11709584    4.2700066    2.8040914    30.801768  0.029998677  -0.31702598 -0.016324555   0.34770052  -0.49063192    2.0880575 
  420000    10.765518    1.2738611    9.4916571  -0.31980574   0.84942935   0.99069282   0.75572474   -3.5502959            3    5.5874798    7.9460287    7.9062508   0.91015981  0.040303752 -0.022086109 -0.063083393    5.4216838    5.4428244    1.0646487        0.075    1.2421776          0.5    0.1182943    4.2267465    2.8120193    30.801768  0.017964233  -0.32230081 -0.0062760533   0.33264857   0.47918154    1.4290339 
  421000    10.772808    1.2564129    9.5163951   -0.3335778    0.8377946    0.9970244   0.73212807   -3.5502959            3    5.4746561    7.7973491    7.8494208   0.77719844 0.0084951095   0.32657299 -0.012010299    5.3140369    5.3290762    1.0748972        0.075    1.2476787          0.5   0.11943303    4.1864467    2.8249274    30.801768 0.0028683984   -0.3662056  0.011658095   0.37032859  0.075434197    6.8744315 
  422000    10.767629    1.2974577    9.4701708  -0.32395397   0.86516392     1.022209   0.76096159   -3.5502959            3    5.5615277    7.8697194     7.928674   0.88618982 -0.00019137349 -0.015404926 -0.089674239    5.3945828    5.4122706    1.0852149        0.075    1.2379491          0.5   0.12057943    4.1466441    2.7907298    30.801768 -0.025122869  -0.39838611 -0.0063136558   0.41630523   -2.4855851    6.3977175 
  423000    10.796031    1.2782346    9.5177961     -0.31526   0.85234562    1.0181517   0.74230761   -3.5502959            3    5.7232564     7.945913     8.046136    1.1777202 -0.021988012  -0.10315009 -0.056719898     5.560404    5.5745917    1.0584122        0.075    1.2354571          0.5   0.11760136    4.2516516    2.7883892    30.801768 0.0053181148   -0.3797273  0.013726476   0.35673747   0.61665956    5.3454129 
  424000    10.792001    1.3023853    9.4896158  -0.32806879    0.8684497   0.99343824   0.78558401   -3.5502959            3    5.6455403    7.9820546     7.955742   0.99882437 -0.010508009   0.04318995  0.014281595    5.4731936    5.5004841     1.068388        0.075    1.2373731          0.5   0.11870977    4.2119531    2.8067232    30.801768 0.0021471025  -0.48593452 -0.008898081   0.34661548  -0.17831695    3.7797071 
  425000    10.836877    1.2953158    9.5415615  -0.32155791   0.86373563    1.0100929   0.76664608   -3.5502959            3    5.6299851    7.9034136    7.9964324   0.99010942 -0.0010891717   0.06065564  0.018376577    5.4617932    5.4824971    1.0667541        0.075    1.2338371          0.5   0.11852823    4.2184042     2.809119    30.801768 -0.0070029564  -0.43494381 -0.033815161   0.31443081  -0.86484814    7.0598461 
  426000    10.779836      1.27921    9.5006264   -0.3276019   0.85299608    1.0087361   0.74965785   -3.5502959            3    5.5248088    7.8553557    7.9132194   0.80585127 -0.003909722  -0.18010158  -0.10028018    5.3603438    5.3775189    1.0748507        0.075    1.2325583          0.5   0.11942786     4.186628    2.8151647    30.801768  -0.03112868  -0.31255602  0.010060482   0.38871722   0.73552217   -1.0373905 
  427000    10.818514    1.2804888    9.5380253  -0.32112573   0.85384875    1.0060296   0.75287966   -3.5502959            3    5.6979063    7.9485207    8.0483712     1.096827 -0.0033260267  0.097150731 -0.029787401    5.5327345    5.5510115    1.0812622        0.075    1.2282931          0.5   0.12014025    4.1618026    2.8198228    30.801768 -0.0036865731  -0.31529251  0.010337371   0.37695245   -0.9798902    3.9039015 
  428000    10.798642    1.2922257    9.5064165  -0.30832386   0.86167511    1.0101319   0.76318747   -3.5502959            3    5.8115569    8.1369813    8.0488779    1.2488116  0.015588206  -0.18445437   0.05619782    5.6441237    5.6640632    1.0689549        0.075    1.2349157          0.5   0.11877277     4.209719    2.8070374    30.801768 -0.022491783  -0.41319835  0.043631289    0.3495371   -3.3332016    6.6542481 
  429000    10.783276    1.2704182    9.5128581  -0.31840939   0.84713357   0.99927127   0.74619071   -3.5502959            3    5.2951311    7.6676811    7.7349189   0.48279329  0.015557188 -0.006733856  -0.11510733    5.1314267    5.1492232    1.0412187        0.075    1.2453712          0.5   0.11569096    4.3218587    2.8075404    30.801768 -0.021517463   -0.3533162  0.017700936   0.32236643    1.5758735    3.3958993 
  430000    10.779899    1.2884201    9.4914788  -0.32792801   0.85913747    1.0079917   0.76038441   -3.5502959            3    5.6551572    8.0124014    7.9715299   0.98154026 -0.034362509 -0.035574942 -0.022502955    5.4883389    5.5079759    1.0594683        0.075    1.2443132          0.5    0.1177187    4.2474137    2.8041585    30.801768 -0.024264306  -0.33182748  0.011656914   0.37432803   0.75705366   -1.5935309 
  431000      10.7591    1.2520197    9.5070798  -0.33298649   0.83486514    1.0013645   0.72435924   -3.5502959            3    5.6824298    7.9535889    7.9884873    1.1052131 -0.038282785  0.064617079  0.049648723    5.5235149    5.5362162    1.0550714        0.075    1.2522977          0.5   0.11723015    4.2651144    2.8111647    30.801768 0.00068828311  -0.35974432 -0.0076881053   0.34511264  -0.11936449    2.5603412 
  432000    10.750798     1.274163    9.4766349  -0.32417008   0.84963064    1.0138251   0.74066423   -3.5502959            3    5.7004555    7.9823347    8.0151264    1.1039052 -0.012914378   0.19425205 -0.060733296    5.5379635    5.5524224    1.0485538        0.075     1.250141          0.5   0.11650598    4.2916252    2.8150912    30.801768 -0.0091317226  -0.39555687 -0.025450191   0.36108848   0.29055374    8.0254505 
  433000    10.782133    1.2791987    9.5029348  -0.30066379   0.85298849    1.0073756   0.75055068   -3.5502959            3    5.6018576     7.935336     7.977923   0.89231382 -0.0064522057  -0.26924098  0.074364794    5.4371967    5.4547663    1.0404096        0.075    1.2592714          0.5   0.11560107    4.3252195    2.7906324    30.801768 -0.012357638  -0.35508982 -0.021212137   0.27661062   0.33468264    5.0960961 
  434000    10.797964    1.2889164    9.5090472  -0.30093835    0.8594684   0.99316445   0.77080405   -3.5502959            3    5.6116611    7.9709865    7.9208245   0.94317221 -0.038329888  0.018920778  0.043316935    5.4425569    5.4666448    1.0523409        0.075     1.260556          0.5   0.11692676     4.276181    2.7819411    30.801768 -0.016637397  -0.31600719  0.018853031   0.40682384  -0.36568647    5.2490034 
  435000    10.780845    1.2674799    9.5133648  -0.31765046   0.84517427   0.99313049   0.74701369   -3.5502959            3    5.6624054      8.01325    7.8832443    1.0907221 -0.0025241016   0.15070588  0.014997903    5.4985205    5.5173941     1.056773        0.075    1.2464883          0.5   0.11741922    4.2582467    2.8102606    30.801768 -0.0043974034  -0.32348593 -0.018148404   0.36842755   -5.9944785    5.4095339 
  436000    10.779689     1.282874    9.4968146  -0.35151004   0.85543925    1.0207316   0.74574427   -3.5502959            3    5.5981984    7.9711891    7.8707468   0.95265928 0.0021861004 -0.028725694 0.00095230779     5.434592    5.4491569    1.0559056        0.075    1.2443327          0.5   0.11732285    4.2617444    2.8057939    30.801768 -0.0057907978  -0.29985159 -0.0093142521   0.36873306   0.28548053    3.6052047 
  437000    10.761405    1.2505257    9.5108796  -0.32641658   0.83386897   0.96362636   0.74781656   -3.5502959            3    5.4709977    7.7993528    7.8388335   0.77480684 0.0050884419  -0.02133933 -0.00059869729    5.3069367    5.3302944    1.0515055        0.075    1.2553169          0.5   0.11683395    4.2795782    2.7973237    30.801768 0.0016583407  -0.27471635 -0.0035467976   0.31509465   -0.0819396  -0.84498661 
  438000    10.752133    1.2387754    9.5133571  -0.30970775   0.82603368   0.96659755   0.73278604   -3.5502959            3    5.6757078    7.9957715    7.9808265    1.0505252 -0.00086434908 -0.072703418   0.11382515    5.5149442    5.5345706     1.056234        0.075    1.2551012          0.5   0.11735933    4.2604197    2.7904976    30.801768 0.0032613768   -0.3390123 -0.015120243   0.38120211  -0.34889753    3.6116535 
  439000    10.784268    1.2708599    9.5134078  -0.31944516   0.84742809    1.0051031   0.74279991   -3.5502959            3    5.7038852    7.9536802    8.0103907    1.1475847 -0.024660116  -0.20586874 0.0086385923    5.5409247    5.5571257    1.0625338        0.075    1.2548116          0.5   0.11805931    4.2351594    2.8099274    30.801768  0.017949718  -0.33974161 -0.014415375   0.42407166    3.8784069    4.6560919 
  440000    10.752074    1.2744938      9.47758  -0.31803614   0.84985121    1.0054412   0.74661167   -3.5502959            3    5.6634199    7.9433909    7.9571479    1.0897208 -0.015270494   0.17491867 -0.0035672777    5.4996232     5.516611    1.0549164        0.075    1.2705481          0.5   0.11721294    4.2657407    2.8201497    30.801768 -0.0047329776  -0.37987916  0.025195253   0.41268625   -2.6106612 -0.041604759 
  441000    10.786414    1.3009993    9.4854147  -0.32961836   0.86752551    1.0257317   0.76255125   -3.5502959            3    5.8048247    8.0729725    8.0848066    1.2566949 -0.032201836  -0.11029007  0.016135562     5.637531    5.6550531     1.067795        0.075    1.2562116          0.5   0.11864389    4.2142921    2.8117916    30.801768  0.030121076  -0.41421162  0.010070397   0.38272383    1.7721439    7.5479518 
  442000    10.760554    1.2596458     9.500908  -0.32916885   0.83995038    1.0022503   0.73224129   -3.5502959            3    5.5134682    7.8421686    7.9201053   0.77813062 -0.010181485  0.081685419  0.055096853    5.3528241    5.3671253    1.0664096        0.075    1.2782517          0.5   0.11848995    4.2197671    2.8398944    30.801768 0.0037642302   -0.3455937 -0.0070489803   0.41992962    1.4992842    4.4620664 
  443000    10.791685    1.2769205    9.5147642  -0.32776729   0.85146941    1.0094224   0.74665773   -3.5502959            3    5.5585414    7.9016359    7.8564328   0.91755557 -0.020361776   0.21860016  0.059421927    5.3947346    5.4111513    1.0608916        0.075     1.275053          0.5   0.11787684    4.2417152    2.8217804    30.801768 0.0030131801  -0.33620254  0.029943167   0.36004693   -2.4250032    6.1659701 
  444000    10.769862    1.2494363    9.5204257  -0.31356171   0.83314251   0.99133518   0.72816453   -3.5502959            3    5.4489468    7.7546272    7.8328012   0.75941197 -0.012846722  0.059265715  0.049301633    5.2891971    5.3041976    1.0619563        0.075    1.2807204          0.5   0.11799514    4.2374627      2.80626    30.801768  0.017421337  -0.33027135 -0.0025286268   0.38323225  0.042872554   0.32989833 
  445000    10.749917    1.2772013    9.4727153  -0.31424145    0.8516566   0.99675257   0.75540207   -3.5502959            3    5.7265082    8.0875986    7.9956987    1.0962274  -0.01470211  -0.11346786 -0.054742442     5.560783     5.580968    1.0660486        0.075    1.2850269          0.5   0.11844985    4.2211958    2.8172623    30.801768  0.006446389  -0.33543704 0.0027774887   0.38330456    1.0692616    3.0331203 
  446000    10.771431    1.2903523    9.4810788  -0.33103538   0.86042592   0.99019621   0.77437474   -3.5502959            3      5.41195    7.7816338    7.7949391   0.65927705 -0.008484991   0.21964519 -0.025389661    5.2420624    5.2673671    1.0681491        0.075    1.2796241          0.5   0.11868324    4.2128949    2.8204168    30.801768  0.012727429  -0.40589011 -0.0039208948    0.3549932    2.5078924     1.487259 
  447000    10.771413    1.2712028    9.5002104  -0.32628641   0.84765677    1.0096057   0.74018416   -3.5502959            3    5.7813581    8.1097847    8.0639672    1.1703223 0.0084807099 -0.093629788 -0.0098787908    5.6189715    5.6339411    1.0697822        0.075    1.2889002          0.5   0.11886469    4.2064638     2.803291    30.801768  0.009130882  -0.37185089 -0.0057623647   0.36338242   -1.2994689    3.9175816 
  448000    10.773296    1.2841393    9.4891571  -0.33501694   0.85628295    1.0069436   0.75632654   -3.5502959            3    5.6984271    7.9516564    8.0784246    1.0652003 -0.0034099907 -0.078947795  0.083207912     5.532499    5.5513989    1.0630669        0.075     1.272731          0.5   0.11811854    4.2330357    2.8058086    30.801768  0.013820476  -0.34911414 -0.020983634   0.35710081   0.18318905     1.522218 
  449000    10.754445    1.2747591    9.4796862  -0.33587842   0.85002815   0.98991552   0.75723964   -3.5502959            3    5.6221803    7.9533417    7.9235673   0.98963189 0.0068742542 -0.007740824  0.053480612     5.456052    5.4776384    1.0722347        0.075    1.2890637          0.5   0.11913719    4.1968423    2.7944621    30.801768 0.0062881609  -0.39415024 0.0093478483   0.34699264   0.48075754    6.4023231 
  450000    10.719157    1.2593659    9.4597909  -0.33645192   0.83976374   0.99734299   0.73519647   -3.5502959            3    5.6304253    7.9509375    7.9409464   0.99939206   0.01702825   0.13936962 -0.042976067     5.469133     5.484799    1.0712827        0.075    1.2749507          0.5   0.11903141     4.200572    2.8003057    30.801768  0.016574463  -0.41794918 -0.014089845    0.3586767   -1.2212128    8.8369982 
  451000    10.744202    1.2639433    9.4802591  -0.33845037   0.84281599   0.98160907   0.75075312   -3.5502959            3     5.556772    7.8710659    7.9613959   0.83785435 -0.0090383252  -0.11908064  0.086485873    5.3920667     5.413443    1.0713595        0.075    1.2745178          0.5   0.11903994    4.2002708    2.7936195    30.801768 -0.012165368  -0.30735025  0.031831915   0.39628238    1.0577143    3.1532736 
  452000    10.759853    1.2666478    9.4932049  -0.33416644   0.84461938   0.97839278   0.75589806   -3.5502959            3    5.5283687    7.8620014    7.8582361   0.86486851 -0.0010515229 -0.084565833   0.02574348    5.3625347    5.3855093    1.0594079        0.075    1.2797572          0.5   0.11771199    4.2476556     2.799668    30.801768 -0.015320958  -0.34989634 -0.0098763627   0.34028291    2.1434722   0.45357791 
  453000    10.792935    1.2863872     9.506548  -0.33208773   0.85778194    1.0247959     0.746942   -3.5502959            3    5.6690013    7.9291142    8.0149082    1.0629815 0.0098835646 -0.071101149  0.061948657    5.5051321    5.5193664    1.0598629        0.075    1.2787692          0.5   0.11776254    4.2458323    2.8004757    30.801768 -0.012280224  -0.36428809 -0.014768441   0.31170846 -0.044193485    2.0343629 
  454000    10.736824    1.2730725    9.4637514  -0.34249669   0.84890345    1.0069455   0.74403154   -3.5502959            3    5.4888127    7.8708762    7.8363877   0.75917412  0.011253718   0.17593291 -0.045792085     5.325582    5.3417842     1.074865        0.075    1.2966431          0.5   0.11942945    4.1865722     2.839474    30.801768 -0.0028645902  -0.37698057 -0.015292779   0.34304442   0.29875891    4.5445805 
  455000    10.772775    1.2658644    9.5069107  -0.32631869   0.84409701   0.99843331   0.74168972   -3.5502959            3    5.6601227    7.9453666    7.9920855    1.0429161  0.015004725  -0.27215756 -0.0097922412    5.4974058    5.5143372    1.0818225        0.075    1.2955076          0.5    0.1202025    4.1596472    2.8090856    30.801768 -0.022236048  -0.35185123 -0.011673441    0.4105401    4.5670474    5.1815158 
  456000    10.731548    1.2572406    9.4743071  -0.33759108   0.83834655   0.98403223   0.74169461   -3.5502959            3    5.7120984    8.0049183    7.9400196    1.1913574 -0.0050524462   0.11987366 -0.036684415    5.5493804    5.5684156    1.0777915        0.075    1.3136981          0.5   0.11975461    4.1752046    2.8217606    30.801768  0.013195658  -0.43995499  0.025054015   0.42999518    0.5651328    7.1651941 
  457000    10.764569    1.2905208    9.4740485  -0.34583275   0.86053825    1.0335408   0.74571357   -3.5502959            3    5.5879933    7.8982516    7.9409732   0.92475523 -0.016591189  0.085616204  0.078528853    5.4243937    5.4370815    1.0852591        0.075    1.3058626          0.5   0.12058434    4.1464753    2.8038987    30.801768   -0.0090691  -0.35906313  0.023215927   0.40571873 -0.0062958422    2.9012597 
  458000    10.789507    1.2923899    9.4971166  -0.32356944   0.86178459    1.0085813   0.76440187   -3.5502959            3    5.5320514    7.8515281    7.8527407   0.89188541 -0.018193336  -0.10353238   0.10169542    5.3643518    5.3847841    1.0639023        0.075    1.3085145          0.5   0.11821137    4.2297116    2.8176754    30.801768 -0.041836406  -0.40449834  0.016012907   0.36618473    2.1767561    3.3705166 
  459000    10.740189    1.2257741    9.5144149    -0.332916   0.81736419   0.94493986   0.73275773   -3.5502959            3      5.58768    7.9048658    7.9225279   0.93564643 0.0013290624   0.01604175 -0.029360615    5.4269227    5.4497053    1.0719579        0.075    1.3108794          0.5   0.11910643    4.1979262    2.8510275    30.801768 -0.010678401  -0.33886483 -0.010383027   0.34000947   -2.6841577    5.0471812 
  460000    10.774786    1.2756715    9.4991143   -0.3278281    0.8506365     1.016568   0.74051438   -3.5502959            3    5.5334719    7.8733884    7.8158527   0.91117466 -0.019534873 -0.084330006   0.10228664    5.3710129    5.3850384    1.0457688        0.075     1.312076          0.5   0.11619653    4.3030546    2.7864381    30.801768 -0.0057348963  -0.38392688  0.015142085   0.36357019   0.41899701    2.4093862 
  461000    10.731655    1.2495527    9.4821025  -0.32361797   0.83322014    0.9904347   0.72889318   -3.5502959            3    5.3030884    7.7578883    7.6671373   0.48423938 -0.031534485   0.18815057  0.059508319    5.1431788    5.1584707    1.0596912        0.075    1.3076811          0.5   0.11774347      4.24652    2.7833968    30.801768 -0.00088315906  -0.36499612  -0.01691275   0.40260826   -2.5879241   0.24844409 
  462000      10.7777    1.2901189    9.4875814  -0.33520414   0.86027025    1.0153543    0.7573713   -3.5502959            3    5.7427617    8.0674458    7.9791933     1.181646  0.023062723 -0.027900627   0.12120092    5.5766045    5.5945054    1.0645405        0.075    1.3025919          0.5   0.11828228    4.2271758    2.7888975    30.801768  -0.02261263   -0.4188754 0.0066561777   0.35769066    -1.421659   0.28585499 
  463000    10.786358    1.2655145    9.5208438  -0.32243476   0.84386372   0.99885399   0.74102109   -3.5502959            3    5.5941958    7.9034643     7.914284   0.96483896 0.0099918883  -0.22811804 -0.019676422    5.4316256    5.4483488    1.0700788        0.075    1.2955596          0.5   0.11889764     4.205298      2.79444    30.801768 0.0097649546  -0.38599929  0.019107768   0.39756602     1.578355    6.0390572 
  464000    10.814171    1.3061853    9.5079861  -0.34014312   0.87098359    1.0223751    0.7705462   -3.5502959            3    5.6355911    7.9845129    7.9249577   0.99730259  0.031222092  0.060930055  -0.12647706    5.4665434    5.4863096    1.0674086        0.075     1.293824          0.5   0.11860096    4.2158175    2.8265641    30.801768  0.021165511  -0.30649134 -0.0016358975   0.29995233    1.8394372    3.8258233 
  465000    10.806089    1.2915318    9.5145573  -0.33689254   0.86121239    1.0144412    0.7595485   -3.5502959            3    5.6406114    8.0319375    7.9316148     0.958282   0.01938362   0.10353039  0.058392282    5.4739766    5.4924885    1.0722596        0.075    1.2988245          0.5   0.11913996    4.1967447    2.7905141    30.801768  0.007814897  -0.35740004 -0.0099421977    0.3233325   -1.3096805   -4.2572402 
  466000    10.740754    1.2614491    9.4793046  -0.33697789   0.84115281    1.0096045   0.72934987   -3.5502959            3    5.4638776    7.7805341    7.7687968   0.84230193 0.0082239675  0.050905029  0.010094214    5.3038679    5.3164609    1.0524615        0.075    1.2765172          0.5   0.11694016     4.275691    2.8092996    30.801768 -0.028816079  -0.37095204  0.024012726   0.34680435   -3.7896907   0.38054294 
  467000    10.782274    1.2743809    9.5078935   -0.3267138   0.84977597   0.98876878   0.75758274   -3.5502959            3    5.5300872    7.8930171    7.8019795   0.89526507 -0.020504795 -0.034070233  0.020085201    5.3638836    5.3857128    1.0531515        0.075    1.2783626          0.5   0.11701683    4.2728895    2.7973965    30.801768 -0.0078690111  -0.32143107   0.01341452   0.40154309     2.426328     1.159698 
  468000    10.758685    1.2740771    9.4846084  -0.32985502   0.84957335   0.98075506   0.76257877   -3.5502959            3    5.5461322    7.9023355    7.9103394   0.82572164 -0.0017248404  -0.19610926  0.056758941    5.3788325    5.4029279    1.0497658        0.075     1.274666          0.5   0.11664065    4.2866704     2.804385    30.801768 -0.014318471  -0.34417669 0.0081287998   0.38157282   0.35132242    4.5298251 
  469000    10.755084    1.2707176    9.4843668  -0.32435574   0.84733317   0.97988737    0.7594243   -3.5502959            3    5.3807406    7.7312308    7.8472356   0.56375521 -0.018536273  0.013419264 -0.025429752    5.2141329     5.237663    1.0676481        0.075    1.2686829          0.5   0.11862757    4.2148719    2.8149954    30.801768  0.029579079  -0.31900827 -0.0034877317   0.34923345    1.4742437   -5.3717978 
  470000    10.779448    1.2710083    9.5084393  -0.31833042   0.84752701    1.0308741   0.72581268   -3.5502959            3    5.7566896    8.0587663    8.0244794    1.1868232  0.017950289  -0.14931283 0.0074860292     5.597456    5.6061672     1.073463        0.075    1.2617134          0.5   0.11927367      4.19204    2.8134265    30.801768 0.0065816847  -0.42311172 -0.0029131105    0.3204144   0.97038287   0.59756328 
  471000    10.710176    1.2432636    9.4669119  -0.31978668   0.82902649   0.97594488   0.73155067   -3.5502959            3    5.6560357     7.941541    8.0292779   0.99728825 -0.006874991  0.084374485 -0.032616955    5.4955432    5.5135338    1.0690721        0.075    1.2630572          0.5   0.11878579    4.2092576     2.777971    30.801768 -0.010981445  -0.36188949 -0.0063799901   0.34621323    2.2667714    7.0956246 
  472000    10.806133    1.2982711    9.5078615  -0.31845419   0.86570628   0.99897592   0.77732803   -3.5502959            3    5.6357679     7.919775    7.9587592    1.0287695 -0.00082463183  0.047455989  0.035910255    5.4652324    5.4899031    1.0577932        0.075    1.2643706          0.5   0.11753258    4.2541397    2.7835788    30.801768 0.0061349919  -0.38709223 0.0080253921   0.40119848   0.38559582 -0.069732008 
  473000    10.778866    1.2917299    9.4871358  -0.32464402   0.86134447     1.030018   0.74940131   -3.5502959            3    5.6989763    7.9789015    8.0430059    1.0750215   0.02316451  -0.11467796  0.023893577    5.5345676    5.5485789    1.0734547        0.075    1.2572219          0.5   0.11927275    4.1920725    2.8215795    30.801768 -0.0022877538  -0.40297272 -0.00056677091   0.35529343   -2.2670718    2.6544119 
  474000    10.804029    1.2867318    9.5172968  -0.30460008   0.85801171   0.99552537     0.766806   -3.5502959            3    5.5318276    7.9499451    7.8713097   0.77422798  0.022342915   0.13077914 0.0082699281    5.3636005    5.3864666    1.0670707        0.075    1.2684605          0.5   0.11856341    4.2171525    2.8283817    30.801768  0.020643885  -0.33177181 -0.0042718162   0.34469947    2.7323248  0.082186553 
  475000    10.778004    1.2878675    9.4901367  -0.33643657   0.85876903    1.0230649   0.74973848   -3.5502959            3    5.6299601    7.8877472     7.959063    1.0430701  0.025491953  0.093451796   0.11292722    5.4654774    5.4805779    1.0685263        0.075    1.2812425          0.5   0.11872515    4.2114076    2.7789749    30.801768  -0.02200877  -0.43053359 -0.010092086   0.33379458   -2.1117959    8.8784513 
  476000     10.73723    1.2550204    9.4822095  -0.33019515   0.83686608   0.99164849   0.73415921   -3.5502959            3    5.3708896    7.7335791     7.680272   0.69881772 -0.036525034   0.02900478 -0.0087213905    5.2098248    5.2260947    1.0472965        0.075    1.2807961          0.5   0.11636628    4.2967775      2.76796    30.801768 -0.013166708  -0.31246628 -0.023675608   0.37506278  -0.70044496    3.0301477 
  477000    10.703357    1.2323931    9.4709639  -0.34718976   0.82177786   0.98450668   0.71377661   -3.5502959            3    5.6231506     7.924435    7.9176691    1.0273476 0.0019630382  0.073068215 -0.013758655    5.4665574    5.4793985    1.0789654        0.075    1.2813757          0.5   0.11988504     4.170662     2.831143    30.801768 -0.0083642205  -0.39248938 -0.021674859   0.43507278  -0.47449082    4.5053613 
  478000    10.787376    1.2724783    9.5148978  -0.32206792   0.84850725    1.0024792   0.74634407   -3.5502959            3    5.6128024    7.9432059     7.981182    0.9140192 -0.005762839  0.066000744   0.13595921    5.4490644     5.466426    1.0702292        0.075    1.2776057          0.5   0.11891436    4.2047068    2.8422517    30.801768 -0.0024957463  -0.35788648 0.0073659087   0.38534055   0.88986169    4.8169846 
  479000    10.762754    1.2550775    9.5076769  -0.31809153   0.83690418   0.96644984    0.7509938   -3.5502959            3    5.5546165    7.8747719    7.8850667   0.90401097  0.022634526  -0.10695776  0.052003983    5.3898584     5.413501    1.0532265        0.075    1.2767499          0.5   0.11702516    4.2725854     2.795242    30.801768 -0.0048920103  -0.35668195 -0.037914084   0.38810537    0.0828843    5.3270589 
  480000    10.750485    1.2653609    9.4851241  -0.33897337   0.84376125   0.98072818   0.75291414   -3.5502959            3    5.5351184    7.8492697     7.892472   0.86361349  0.003125219 -0.096263273  0.026150233     5.369939     5.391918    1.0676719        0.075     1.273289          0.5   0.11863022    4.2147778    2.8224175    30.801768 -0.001275316  -0.39590078   -0.0111292   0.31413964  -0.30177409    1.5725592 
  481000    10.757639    1.2557455    9.5018933  -0.33064985   0.83734961   0.98390822   0.74011631   -3.5502959            3     5.536256    7.9138392     7.863441   0.83148766  -0.02415449 -0.032058252 -0.040835632    5.3738843    5.3925913    1.0736658        0.075    1.2619864          0.5    0.1192962    4.1912483    2.8133726    30.801768 0.0030672789  -0.42814287 -0.022611588     0.316217    0.7887997    1.6483073 
  482000    10.743781    1.2708815    9.4728999  -0.32704369   0.84744247   0.98955612   0.75317128   -3.5502959            3    5.5532065    7.8730719    7.9019668   0.88458094 -0.010237336  -0.14793927 -0.049956483    5.3879707    5.4087172    1.0733023        0.075    1.2564059          0.5   0.11925582    4.1926677     2.805938    30.801768 -0.029505945  -0.40603573  0.014657701   0.37231025  -0.75281191  -0.61616007 
  483000    10.718134    1.2445953    9.4735384  -0.32407097   0.82991445   0.97879773   0.73113121   -3.5502959            3    5.4467825    7.8952309    7.7312966   0.71382008 0.0014593632  0.046934672 -0.0041350347     5.286382     5.303864    1.0580244        0.075    1.2639733          0.5   0.11755827      4.25321     2.795915    30.801768 -0.030662882  -0.37968557 0.0051660649   0.36998472   -1.9588513   0.51506737 
  484000    10.773369    1.2893794    9.4839895  -0.33817082   0.85977716    1.0123314   0.75856175   -3.5502959            3    5.4262619    7.7785502    7.7680146   0.73222091  0.032224418   0.10786103   0.01481089    5.2598435     5.278447    1.0740678        0.075    1.2667367          0.5   0.11934087    4.1896797    2.8281675    30.801768 -0.0018650073  -0.38069743 -0.0063750969   0.45136871    1.3787002     1.677266 
  485000    10.775119    1.2834386    9.4916807  -0.31714393   0.85581577    1.0216006    0.7457932   -3.5502959            3    5.7303244    8.1094341    7.9516259    1.1299131   -0.0494493   0.10257033  -0.02259694    5.5667072     5.581156    1.0667478        0.075    1.2580247          0.5   0.11852753    4.2184293    2.7842121    30.801768 0.0010040216  -0.37717644 -0.00060003024   0.36221092    1.6154427    5.6293758 
  486000     10.81025    1.3115635    9.4986863  -0.32988941   0.87456984    1.0127133   0.78295106   -3.5502959            3     5.644144    7.9464258    7.9485493    1.0374567   0.02330025    0.1627731  0.027654649    5.4723749    5.4962733    1.0647993        0.075    1.2605154          0.5   0.11831104    4.2261484    2.7970706    30.801768 -0.00080011171  -0.37927548 -0.0015509617   0.37128375  -0.24581614   -2.6706583 
  487000    10.795765    1.2991942    9.4965708  -0.33136482   0.86632182    1.0163258   0.76680614   -3.5502959            3    5.7548521    8.0538794    7.9849246    1.2257522  0.017773735  -0.18067834 -0.053794485     5.586625    5.6064539    1.0670824        0.075    1.2575156          0.5   0.11856471    4.2171065    2.8272708    30.801768 -0.011221426  -0.34005285 -0.0012718377   0.40292416   0.46589608  0.033047914 
  488000    10.733156    1.2529327    9.4802238   -0.3377361   0.83547397   0.95552571   0.75588182   -3.5502959            3    5.5024518    7.8815178    7.8204036   0.80543389 -0.043223461  -0.11068542 -0.054750288    5.3366213    5.3629313    1.0733125        0.075    1.2580151          0.5   0.11925694    4.1926281     2.822816    30.801768 -0.018055627  -0.34277875  0.010586465   0.40458271    2.8734779    7.4272398 
  489000    10.746838    1.2595492    9.4872884  -0.33397497   0.83988595   0.97315116    0.7515011   -3.5502959            3    5.6268964    7.9677639    7.8448945    1.0680309 0.0048185088 -0.070509645 0.0040458352     5.462027    5.4848024      1.06492        0.075    1.2489084          0.5   0.11832445    4.2256694    2.8021275    30.801768 -0.017067201  -0.45302165 -0.029616738   0.33565479   -1.3078479    1.8429301 
  490000    10.755859    1.2625794    9.4932792  -0.32472841   0.84190652   0.97594448   0.75300812   -3.5502959            3    5.6712258    7.9526113    7.9979312    1.0631348  0.015753059 -0.058870874  0.019774797    5.5060258    5.5287239    1.0515018        0.075    1.2628148          0.5   0.11683354    4.2795931    2.7769463    30.801768 -0.035385345  -0.31665873 0.0027275326   0.37648496   -2.1555702    4.2955198 
  491000    10.746754    1.2308149    9.5159387   -0.3259072    0.8207255   0.95794513   0.72970168   -3.5502959            3     5.679693    7.9456778    7.9933212    1.1000801 -0.017075631 -0.045498801 -0.010064761    5.5196062    5.5398193    1.0594081        0.075    1.2681672          0.5   0.11771201    4.2476548    2.8201558    30.801768 -0.041773322  -0.27648847 -0.020669373   0.40475298    1.7613048    7.3497689 
  492000    10.783138    1.2929987    9.4901395  -0.32848648   0.86219055    1.0094507   0.76449956   -3.5502959            3    5.3975734    7.7868133    7.7739704   0.63193667 -0.033707698  0.049091979  0.013141424    5.2298524    5.2501792    1.0541714        0.075    1.2642552          0.5   0.11713016    4.2687555    2.8075679    30.801768 -0.011665975   -0.3267876 0.0045648037    0.3348765   -1.0205169   0.70344262 
  493000    10.753911    1.2712077     9.482703  -0.33352551   0.84765998    1.0191304   0.73385029   -3.5502959            3    5.6138149    7.9481904    7.8917584    1.0014958 0.0028380488  0.086198188 -0.067129606    5.4528179    5.4650072    1.0612394        0.075    1.2563301          0.5   0.11791549    4.2403249    2.8008237    30.801768 -0.029929478   -0.3551367  0.023762302   0.35316897  -0.36797924    1.5337575 
  494000    10.786702    1.2791693    9.5075326  -0.33175804   0.85296892   0.98642037   0.76446496   -3.5502959            3     5.455524    7.8245639    7.8233529   0.71865517  0.012474473   0.21805175 -0.086009156    5.2878105    5.3114925    1.0682898        0.075    1.2584221          0.5   0.11869887    4.2123401    2.8269356    30.801768   0.00703297  -0.38864289  0.010983104   0.25771835   -1.6669866   -2.1526718 
  495000    10.759693    1.2640036    9.4956898  -0.32892304   0.84285621   0.99614343   0.74114668   -3.5502959            3    5.5967531    7.8439224    7.9511297   0.99520736  0.013175547 -0.043151609  0.021640622    5.4341554    5.4513019    1.0551034        0.075    1.2566634          0.5   0.11723371    4.2649848    2.8022498    30.801768 0.0077321512  -0.31307667 -0.015903641   0.37806834   0.30724581    2.3131029 
  496000    10.775816    1.2881177    9.4876987  -0.33385566   0.85893582    1.0267903   0.74753687   -3.5502959            3    5.5306062     7.865045      7.84451   0.88226369 -0.048758693  -0.11072895  0.024220573    5.3666065    5.3806801    1.0563218        0.075    1.2524984          0.5   0.11736909    4.2600654    2.7950626    30.801768 -0.010817349  -0.34049098 0.0070950955    0.3395255   -1.8096882  -0.81467664 
  497000     10.78775    1.2753276    9.5124226  -0.30889414   0.85040718    1.0166785   0.74005882   -3.5502959            3    5.7199633     8.062545    7.9974478     1.099897  0.010539133  0.048771656 -0.096875061    5.5576042    5.5715137     1.060406        0.075    1.2606812          0.5   0.11782289    4.2436575    2.8104112    30.801768 0.0091815799  -0.35256559 -0.025724957   0.33506234   -1.6542001    3.8968422 
  498000     10.76469    1.2762575    9.4884323  -0.33101652   0.85102729    1.0010896   0.75146717   -3.5502959            3     5.518086    7.8672936    7.8843142   0.80265039 -0.025777437  0.086563549 -0.024730436    5.3532241    5.3719126    1.0607448        0.075    1.2539113          0.5   0.11786054    4.2423021    2.7927255    30.801768  0.010270291  -0.36843509  0.012810349   0.37758159   -1.8243033    5.1055123 
  499000    10.735973    1.2750718    9.4609011  -0.33413141   0.85023661    1.0342606   0.72807274   -3.5502959            3    5.5900907    7.9190958     7.936814   0.91436243 -0.00082229096  -0.11324951  0.030827442    5.4303612    5.4390739    1.0511198        0.075    1.2611936          0.5   0.11679109    4.2811485    2.7921718    30.801768   -0.0125207  -0.34588762  -0.01532633   0.34644996    4.6748643    3.0558741 
  500000    10.738107    1.2611025    9.4770048  -0.33637869   0.84092172    1.0020764   0.73397521   -3.5502959            3    5.6744923     7.933003    8.0189398    1.0715341 -0.0033412962 -0.052702256  0.043466801    5.5134678    5.5281747    1.0621074        0.075    1.2685182          0.5   0.11801194    4.2368596    2.8056722    30.801768 0.00022508961  -0.40877471 0.0077334867   0.31123213  -0.82053279    7.5540857 
  501000    10.737217    1.2456895    9.4915274   -0.3429635   0.83064411   0.96524467    0.7413671   -3.5502959            3    5.4847385    7.7773511    7.8882915   0.78857291  0.046565814 -0.096867952 -0.017744971    5.3220924    5.3437989    1.0730727        0.075    1.2803769          0.5    0.1192303    4.1935648    2.7969488    30.801768 -0.0080124848   -0.3545874 -0.0077874955   0.39749107 -0.072778991    5.3614898 
  502000    10.785761    1.3217674    9.4639937   -0.3326086   0.88137395    1.0332021   0.78064975   -3.5502959            3    5.6036289    7.9356104    7.8999628   0.97531346  -0.02470864  0.031432458 -0.065208317    5.4323647    5.4527665    1.0688234        0.075    1.2726727          0.5   0.11875815    4.2102372     2.801556    30.801768 0.0098302563   -0.3369119  0.022702626   0.39696303     1.430224    5.8853512 
  503000    10.754334    1.2510958    9.5032381  -0.34272383   0.83424906   0.99440788   0.72796292   -3.5502959            3    5.4934653     7.811628    7.8532118   0.81555618 -0.0031225363   -0.1889886 -0.045725919    5.3337599    5.3482675    1.0530306        0.075    1.2634419          0.5   0.11700339    4.2733803    2.7940324    30.801768 -0.038327984  -0.38834829  0.015038687   0.35552673    1.1875703    2.9189291 
  504000    10.761206    1.2742398     9.486966  -0.34072025   0.84968185    1.0077414   0.74479858   -3.5502959            3     5.682408    8.0059129    7.9854357    1.0558754  0.042262089  -0.11833621   0.08010929    5.5190091    5.5352633    1.0638874        0.075     1.267083          0.5   0.11820971    4.2297711    2.8070436    30.801768 0.0025766172  -0.32588359 -0.0089797015   0.38418933    2.2563728    3.2550913 
  505000    10.744905    1.2533319    9.4915736  -0.32604141   0.83574012   0.96207547   0.75196597   -3.5502959            3    5.7419892    8.0207594    8.0260407    1.1791674   0.07290127 -0.0043591792  0.013840361    5.5770178    5.6015124    1.0497143        0.075    1.2715762          0.5   0.11663493    4.2868806    2.8025688    30.801768 -0.0022594232  -0.33032968 -0.022175239   0.39765193  -0.91000262    7.0865094 
  506000     10.76984    1.3006321    9.4692082   -0.3426357   0.86728066    1.0441081   0.74991282   -3.5502959            3    5.3641028    7.7851806    7.7124417   0.59468593 -0.031383532 -0.027460103 -0.091276408    5.1995818     5.211648    1.0588526        0.075    1.2813578          0.5   0.11765028    4.2498835    2.7931416    30.801768  0.016972813   -0.3398468 -0.035041954   0.35802937   -2.1189728   -0.2508323 
  507000     10.80863    1.2901451    9.5184846  -0.32612594   0.86028773    1.0358738   0.74374348   -3.5502959            3    5.6985891    7.9707761    7.9737687    1.1512224 -0.019672904 -0.0065594946 -0.012234379    5.5354216    5.5473366    1.0797179        0.075    1.2891997          0.5   0.11996866    4.1677553    2.8308727    30.801768 0.0091413046   -0.3163594   0.03159591   0.34872138   0.37321772    6.8204746 
  508000    10.748987     1.253285    9.4957017  -0.31950909   0.83570888    0.9979936   0.72800836   -3.5502959            3     5.567748     7.918476    7.9396119   0.84515614 -0.027087896   0.10581353 -0.062526271    5.4080326    5.4220266    1.0754859        0.075    1.2817606          0.5   0.11949844    4.1841551    2.8319212    30.801768 0.0086448517  -0.34874336 -0.013182156   0.34088268   -1.0116511    7.9370843 
  509000    10.752141    1.2618048    9.4903362  -0.33079067   0.84139001   0.97931236   0.74990613   -3.5502959            3    5.5804815    7.9096581    7.8861678   0.94561872 -0.010572831 -0.061496288  -0.05948839    5.4159621    5.4374879    1.0522892        0.075     1.281481          0.5   0.11692102    4.2763911    2.8039741    30.801768 -0.010780239  -0.39603656 0.0087222133   0.40976389  0.080510838    5.0920808 
  510000     10.75168    1.2801556    9.4715246  -0.34625815   0.85362658    1.0079983   0.75119924   -3.5502959            3    5.5209634    7.8727309    7.8248021   0.86535715 -0.032505002  0.077412167  0.012847033    5.3561602    5.3737812    1.0609153        0.075    1.2787594          0.5   0.11787948    4.2416203    2.8327927    30.801768  0.019953934   -0.3108695 6.1440544e-05   0.31840877    0.3175093   0.53076454 
  511000    10.706445    1.2577303    9.4487143  -0.34659613   0.83867308   0.98650956   0.74058978   -3.5502959            3    5.6286842    7.9254997    7.9489231    1.0116298 0.0064894179  -0.21357576  0.019775129    5.4662086    5.4846397    1.0536433        0.075    1.2748426          0.5   0.11707148    4.2708949     2.793293    30.801768 0.0095895011  -0.33439601 0.0035669846   0.32748356    1.0975958    5.0847454 
  512000    10.755735    1.2689067    9.4868284  -0.31755552   0.84612568    1.0027248   0.74221311   -3.5502959            3    5.6655189    7.9936335    7.9641688    1.0387544 -0.0015022352  0.076645612 -0.037378858    5.5026872    5.5191067    1.0642667        0.075    1.2703906          0.5   0.11825186    4.2282635    2.8196556    30.801768    0.0192332  -0.36629714  0.036081047   0.35959116   -3.3444135     7.283779 
  513000    10.743029    1.2698786    9.4731503  -0.33972663   0.84677375   0.99461262   0.74869187   -3.5502959            3    5.4924493    7.8732715    7.7868214   0.81725513 -0.0045503191 0.0059273693  0.073794203    5.3281963    5.3472216    1.0649577        0.075    1.2824021          0.5   0.11832863      4.22552    2.8103672    30.801768 -0.011011502  -0.40610703 -0.0036329118   0.37662192   0.40497788    2.3128697 
  514000    10.772224    1.2780842    9.4941398  -0.33205367   0.85224534    1.0127106   0.74576187   -3.5502959            3    5.6958827      7.96946    8.0464962    1.0716918  0.027709333  -0.13432865  -0.16450245    5.5322724    5.5480124    1.0626516        0.075    1.2730214          0.5    0.1180724    4.2346898     2.795898    30.801768  -0.02126339  -0.35990216 0.0043143442    0.3661081    1.2181398    6.2999308 
  515000    10.797887    1.2888047    9.5090825  -0.31785986   0.85939396   0.99944884   0.76649743   -3.5502959            3    5.6802393    7.9856085       7.9533    1.1018095  0.026596484 -0.043750073  0.010258766      5.51208    5.5343055    1.0457014        0.075    1.2717462          0.5   0.11618904    4.3033319    2.7707853    30.801768 0.0010369782  -0.34455089  0.019960179   0.33108942   -2.8538951    6.5858966 
  516000    10.800679    1.2994899    9.5011889  -0.32857943   0.86651901    1.0422532   0.74987849   -3.5502959            3    5.7334011    8.0784546    7.9539923    1.1677565 -0.020050645   0.15435827 -0.0037374072    5.5688877    5.5812172    1.0647575        0.075    1.2777951          0.5   0.11830639    4.2263143    2.8142531    30.801768  0.013809486  -0.33659385 7.3869568e-05   0.34103041    2.5152799     4.114711 
  517000    10.762216    1.2810673    9.4811484  -0.33007283   0.85423451   0.98489443   0.76758894   -3.5502959            3    5.4823724    7.7686435    7.8867662   0.79170738  -0.02730806  -0.03050825 -0.024234404    5.3139735    5.3385637    1.0749133        0.075    1.2688513          0.5   0.11943481    4.1863842    2.8265176    30.801768 -0.0098518349   -0.3111004 -0.0065279291   0.28145786 -0.011411338    3.9819556 
  518000    10.768293    1.2701404    9.4981528  -0.30607226   0.84694831   0.99235557   0.75048485   -3.5502959            3    5.6510261    7.9951049    7.9449162    1.0130571 -0.0075806788  0.071857755  0.042623604    5.4863796    5.5061279    1.0568301        0.075    1.2713561          0.5   0.11742557    4.2580165    2.7765709    30.801768 -0.0026681083  -0.38089473 -0.010203575   0.38467022   -3.3239225    5.6179074 
  519000    10.786356    1.2733416    9.5130141  -0.31310445   0.84908294   0.97715624   0.76415701   -3.5502959            3    5.6349421    7.9955923    7.8878792    1.0213548 0.0074647364  0.055378365  0.024899535    5.4672962    5.4922633    1.0682855        0.075    1.2758892          0.5   0.11869839     4.212357     2.805795    30.801768  0.013891344  -0.29565526 -0.0070290335   0.39460742  -0.17987815    6.8187632 
  520000    10.806281    1.2702407    9.5360402  -0.32044779   0.84701516   0.99287725   0.75024902   -3.5502959            3    5.5331576    7.8638172    7.8807786   0.85487698 0.0032706725  0.027495469 -0.038433182    5.3685629    5.3881833    1.0715776        0.075     1.271999          0.5   0.11906417    4.1994161    2.8218654    30.801768 -0.026969466  -0.41238624 -0.0097697982   0.40579141     2.732774    1.7172833 
  521000    10.753773    1.2566831    9.4970903  -0.32979455   0.83797481   0.98527404   0.74024882   -3.5502959            3    5.7311911       8.0674    7.9703919    1.1557813 -0.018690805  0.098733765 -0.044099225    5.5687903    5.5873269    1.0601496        0.075    1.2737134          0.5    0.1177944     4.244684    2.8045618    30.801768  -0.01707813  -0.27762312 -0.012593664   0.30486916   -2.1886529    7.9990836 
  522000    10.717914    1.2639123    9.4540015  -0.36190703    0.8427953   0.99331671   0.74292655   -3.5502959            3    5.4627683    7.8548246    7.7781935   0.75528685 -0.019309116 -0.093287848  0.042429437    5.2997801    5.3177298     1.071757        0.075    1.2789313          0.5   0.11908411     4.198713     2.796615    30.801768 -0.022290811  -0.39197271 -0.027938579   0.36919803  -0.65298564    3.4352352 
  523000    10.760868     1.255229    9.5056388  -0.33527484   0.83700515   0.98141964   0.74119877   -3.5502959            3    5.5540181    7.8751523    7.8668108   0.92009113  0.019831647    0.1439098   0.11746138    5.3914089    5.4107167    1.0646434        0.075    1.2750121          0.5   0.11829371    4.2267673    2.7911175    30.801768   0.02290302  -0.35486585 -0.020686586    0.3638646  -0.40260741  -0.22601124 
  524000    10.706387    1.2518426    9.4545448  -0.33904989   0.83474707   0.99199249   0.73040014   -3.5502959            3    5.6498254    7.9738562    7.9593098    1.0163103  -0.01128799  -0.18557183 0.0013218942    5.4895853    5.5049803    1.0717894        0.075    1.2698454          0.5   0.11908771     4.198586    2.7966989    30.801768 -0.0086531589  -0.33014147 0.0039257427   0.33494277    4.5863464    2.2466164 
  525000    10.777687     1.303825     9.473862  -0.32922149   0.86940972     1.017494   0.77117286   -3.5502959            3    5.6333149    7.9193262    8.0172966   0.96332178 -0.020202959  0.061858495  -0.11889395    5.4641297    5.4847461    1.0817741        0.075    1.2699478          0.5   0.12019712    4.1598335    2.7961378    30.801768  -0.01880832   -0.4049036 -0.014457647   0.41226164  -0.29706869    1.1787354 
  526000    10.736321    1.2884596    9.4478619  -0.33568457   0.85916382   0.98170506   0.77792352   -3.5502959            3    5.7367678    8.0574677    7.9682551    1.1845805 -0.024235152 -0.034831275 -0.032672869    5.5661016    5.5934247    1.0782606        0.075    1.2747148          0.5   0.11980674     4.173388    2.7919217    30.801768 -0.0037154625  -0.35296048 -0.011019276   0.33575476    1.7589547    4.3047865 
  527000     10.74819    1.3029841    9.4452056  -0.34284445   0.86884894    1.0387544   0.75608864   -3.5502959            3    5.6811996    7.9693981    8.0152864    1.0589142 -0.010178761    0.2830811   0.11355576    5.5153238    5.5295266    1.0721917        0.075    1.2743917          0.5   0.11913241    4.1970105    2.7842813    30.801768  0.012180865  -0.44110582  0.010365002   0.37671968   -1.9348592    2.6274118 
  528000    10.794544    1.2908822    9.5036616  -0.32184173   0.86077927    1.0173856   0.75686735   -3.5502959            3     5.853606    8.1286401    8.0992147    1.3329632  0.012955529   -0.1728318  0.066671505    5.6875593    5.7050531    1.0858329        0.075     1.269875          0.5    0.1206481    4.1442839    2.8205332    30.801768  0.010421731  -0.37956278 0.0077883933   0.42205015   -1.4092974    5.6095519 
  529000    10.739601    1.2608385    9.4787623  -0.33277315   0.84074566    1.0172135   0.72360732   -3.5502959            3    5.8596953    8.0841738    8.1133323    1.3815797 0.0026495294  -0.23574798 0.0093975707    5.7009454    5.7111675    1.0754923        0.075    1.2774881          0.5   0.11949914    4.1841305    2.7974575    30.801768  0.022227034  -0.38400465  0.002583356   0.39985236    2.8281496    7.4002085 
  530000    10.772701    1.2588698    9.5138308  -0.32270504    0.8394329   0.97406661   0.75013707   -3.5502959            3    5.5610146    7.8627473    7.8857965   0.93450003 -0.0043624459   0.15985767  0.010284852    5.3964445    5.4187869    1.0578111        0.075    1.2721482          0.5   0.11753456    4.2540678    2.7917778    30.801768  0.018943575  -0.40664238 -0.0070350086    0.3224775   -1.1705071   -3.3578457 
  531000    10.815567    1.2932899    9.5222769   -0.3100015   0.86238475   0.98297126   0.78244663   -3.5502959            3    5.5406371    7.8785592    7.8556527   0.88769944 -0.022136631 -0.088189715  0.060097297    5.3689787    5.3971092    1.0484324        0.075    1.2795605          0.5   0.11649249    4.2921221    2.8053266    30.801768 -0.0024453452  -0.38090962  0.015561361   0.30075548   0.48587516    1.0242415 
  532000    10.731866    1.2335809    9.4982851  -0.31904928   0.82256988   0.95497779   0.73474921   -3.5502959            3    5.8048426     8.062422    8.1064424    1.2456635  0.031872234 -0.092223827 -0.085702627    5.6436484    5.6654022    1.0518608        0.075    1.2814916          0.5   0.11687342    4.2781328    2.8011616    30.801768 -0.0038395483  -0.33810029  0.010333942    0.4213473   0.53792036    7.7109227 
  533000    10.793161    1.2815796    9.5115818  -0.31029947   0.85457611    1.0100047    0.7514457   -3.5502959            3    5.4934079    7.8367389    7.8772947   0.76619021  0.024985222  -0.28307299 -0.037466035    5.3285507    5.3459328      1.05175        0.075    1.2789484          0.5   0.11686112    4.2785831    2.7856812    30.801768 -0.0054378356  -0.38665201  -0.02664652   0.39890668   0.86992982   -4.5047561 
  534000    10.772803    1.2664957    9.5063073  -0.32697506   0.84451797    1.0361474   0.71729012   -3.5502959            3    5.5632503    7.9201827    7.9431269    0.8264412  0.012972786   0.18040987  0.046239214    5.4058863    5.4119579    1.0818238        0.075      1.27439          0.5   0.12020264    4.1596423    2.8562456    30.801768 0.0040197805  -0.28321746  0.025850306   0.36132413  0.029580788 -0.0076987191 
  535000    10.750738    1.2527311    9.4980073  -0.33552809   0.83533952    0.9811065   0.73863236   -3.5502959            3     5.803607    8.0380763    8.0744991    1.2982455 -0.0032181763 -0.059732579  0.094905284    5.6415608    5.6603513    1.0566586        0.075    1.2775497          0.5   0.11740651    4.2587078    2.8122819    30.801768 -0.0051077278  -0.36452768 -0.0010152687   0.35826815   0.46163635     6.451573 
  536000    10.782632     1.285649    9.4969831  -0.34115155   0.85728969    1.0303044   0.74245572   -3.5502959            3    5.5717181    7.8924777     7.874056    0.9486207  0.033807797 -0.018639084  0.046864916    5.4088332    5.4212789    1.0557449        0.075    1.2841933          0.5   0.11730499    4.2623933    2.8026365    30.801768 -0.027841299  -0.36243265  -0.02975207   0.33582538  -0.79827261    4.5949959 
  537000    10.793706    1.2876662    9.5060395  -0.34107457   0.85863479    1.0320957   0.74350437   -3.5502959            3    5.7022148    7.9752579    7.9997543    1.1316321 -0.023404117  -0.14035446   0.01242198    5.5390997     5.551514    1.0595963        0.075    1.2780492          0.5   0.11773293    4.2469003    2.8033645    30.801768 0.0021920744  -0.38958701 -0.031199355   0.40396768    1.0772098    10.428337 
  538000    10.728855    1.2514801    9.4773749  -0.34706456   0.83450535    1.0011005   0.72393559   -3.5502959            3    5.4369358    7.7837554    7.8738029   0.65324903 -0.044925796 -0.018454422  0.094713205    5.2781139    5.2907607    1.0522498        0.075    1.2806004          0.5   0.11691665     4.276551    2.7973418    30.801768  0.014499681  -0.35211112 0.0019819562   0.34167135   0.32724309    1.8628304 
  539000    10.805532    1.3113138    9.4942185  -0.33136761   0.87440335   0.98770475   0.79931833   -3.5502959            3    5.7954825    8.0956788    8.0497515    1.2410172 -0.0042119357  -0.19865853 -0.053090065    5.6201226    5.6512634    1.0603711        0.075    1.2786421          0.5   0.11781901    4.2437972    2.8008463    30.801768  -0.01769892  -0.25599182   0.03379426   0.41078613    1.5228509    6.1413128 
  540000    10.808784    1.2988394    9.5099441  -0.33625343   0.86608525    1.0197558   0.76412918   -3.5502959            3    5.6978795    7.9862185    8.0057992    1.1016209  0.008415696    0.1607774 -0.006725568    5.5302397    5.5489805     1.056423        0.075    1.2616711          0.5   0.11738034    4.2596573    2.7869594    30.801768 -0.018429586  -0.32099302 0.0021984914   0.36550841   -1.2117508    4.6131693 
  541000    10.791166     1.288617    9.5025489  -0.31636498   0.85926877    1.0179901   0.75394861   -3.5502959            3    5.6644006    8.0149987    7.9852271   0.99297591  0.032881587   0.22983403 -0.010056509    5.4989942    5.5157594    1.0531029        0.075    1.2631284          0.5   0.11701144    4.2730866    2.8024438    30.801768  0.020312937  -0.31751379 -0.0082659804   0.36339335  -0.40230031    4.3188077 
  542000    10.793895    1.2694522     9.524443  -0.31020811   0.84648942   0.97443258   0.76164914   -3.5502959            3    5.6800636    7.9943492    8.0029121    1.0429295 -0.019817149  -0.22717875  0.099172407    5.5129678    5.5377824    1.0554357        0.075     1.262497          0.5   0.11727063    4.2636421    2.7880972    30.801768 -0.0056882182  -0.35961177  0.021447225   0.42827553    0.1707866    3.6832249 
  543000    10.756001    1.2707791    9.4852223  -0.31006925   0.84737417    1.0305838   0.72575128   -3.5502959            3     5.627838    7.9594608    7.9894586   0.93459463 -0.0046290928  -0.23873717  0.061187365    5.4686178     5.477358    1.0714532        0.075    1.2681389          0.5   0.11905035    4.1999035    2.8329537    30.801768 -0.0021649267  -0.40424801  -0.01959509   0.38920624    3.1005621     1.744695 
  544000    10.783929    1.2981594    9.4857698  -0.34021892   0.86563181    1.0154807   0.76621913   -3.5502959            3    5.5977448    7.9566862    7.9435012   0.89304707 0.0091225717     0.363848  -0.19329131    5.4296465    5.4494701    1.0632794        0.075    1.2616114          0.5   0.11814215    4.2321897    2.8133258    30.801768 -0.0089589691  -0.34467161 -0.0077836994   0.36205313   -1.4593452    1.0947072 
  545000    10.783605    1.2836412    9.4999636  -0.31839315   0.85595083    1.0271135   0.74234905   -3.5502959            3    5.5854046     7.948797    7.9609587     0.846458  0.035341219  -0.12240183  -0.02635998     5.422543    5.4354313    1.0611597        0.075    1.2585036          0.5   0.11790663    4.2406437     2.798871    30.801768 -0.0048782632  -0.35521218  0.013157834   0.34573123   0.50399518    3.7276355 
  546000    10.786746    1.2669436     9.519802  -0.34385662   0.84481663   0.99198503   0.74718026   -3.5502959            3    5.5798394    7.9009054    7.9089978   0.92961516  0.011646989 -0.021796355 -0.033763761     5.415918    5.4349954    1.0661268        0.075    1.2571762          0.5   0.11845853    4.2208864    2.8197838    30.801768 -0.0064930874  -0.42348428  0.014580301   0.37042929   0.65435391    1.5799568 
  547000    10.763215      1.25634     9.506875  -0.31651716   0.83774601   0.98525936   0.73987742   -3.5502959            3    5.5544478    7.8721689    7.9229722   0.86820236 -0.038672328   0.14246749 -0.037180487    5.3921285    5.4105858    1.0722627        0.075    1.2639779          0.5    0.1191403    4.1967328    2.8119095    30.801768 0.0062522963  -0.31761602 -0.0027979308   0.42637815   0.33925854    3.0690098 
  548000    10.798707    1.2693546    9.5293527  -0.33689222   0.84642436   0.97431672   0.76161787   -3.5502959            3    5.5366784    7.8708209    7.8528347    0.8863797   0.01657714  -0.23645751 -0.0036602581    5.3695895    5.3944142    1.0623935        0.075    1.2669326          0.5   0.11804372    4.2357189    2.7959748    30.801768 -0.020707098  -0.35874563  0.026580098   0.42280299     2.030679    6.3371247 
  549000    10.783923    1.2679256    9.5159972  -0.34170519   0.84547145   0.98296533   0.75427426   -3.5502959            3    5.8433704    8.0992954    8.0343375    1.3964783 -0.024825442  -0.11052431 -0.037972533    5.6778926    5.6998433    1.0690006        0.075    1.2644813          0.5   0.11877785    4.2095392    2.8200862    30.801768 -0.0053491189  -0.32161962 0.0037804174   0.37851608     2.151517    3.4484611 
  550000    10.760335    1.2617475    9.4985875  -0.31833603   0.84135179   0.99603521   0.73871245   -3.5502959            3    5.3817306    7.7719231    7.7600162   0.61325245 0.0069038056  0.036745734   0.10756498    5.2196669    5.2362952    1.0517387        0.075    1.2613767          0.5   0.11685985    4.2786295    2.7917145    30.801768  0.003788607  -0.35611785 -0.00050664304   0.33913855   -3.0223245     1.038654 
  551000    10.770561    1.2795295     9.491031  -0.32310561   0.85320913   0.99286204   0.76057784   -3.5502959            3    5.6957708    8.0011911    8.0156234    1.0704979 -0.0010089184  0.018057097  -0.01710632    5.5289101    5.5507987    1.0595872        0.075    1.2595147          0.5   0.11773191     4.246937    2.7923844    30.801768 -0.015716548  -0.30212783 -0.0047575423   0.37243292     1.788565    1.1721358 
  552000    10.777469    1.2787013    9.4987675  -0.32159239   0.85265686   0.99436157   0.75865978   -3.5502959            3    5.6201607    7.9732969    7.8932403   0.99394478 -0.022191053 -0.005696209  -0.05765162    5.4537208    5.4749696     1.056866        0.075    1.2503264          0.5   0.11742955     4.257872    2.7909678    30.801768 -0.014813953  -0.31634351 0.0020747352   0.41176481    1.0289691    6.5669978 
  553000    10.757597    1.2700501    9.4875472  -0.33615319   0.84688809   0.98874643   0.75278661   -3.5502959            3     5.769586    8.0875822      7.99449    1.2266857 -0.015296969   0.21217862   0.10636979    5.6044346    5.6252148    1.0663589        0.075    1.2392748          0.5   0.11848432    4.2199675    2.8261676    30.801768 0.0082303009  -0.38369074 -0.0046759673   0.31515279   -1.6732265    4.8482286 
  554000    10.765098    1.2589464     9.506152   -0.3197455   0.83948397   0.97213063   0.75151065   -3.5502959            3    5.5027827     7.861069    7.8493676   0.79791157 -0.0070164963 -0.066196359 -0.046637913    5.3379112    5.3608377    1.0415281        0.075    1.2441568          0.5   0.11572535    4.3205745    2.8047108    30.801768 -0.023752663  -0.33215503  0.006940194   0.33610276  -0.36561644   0.65656063 
  555000    10.751396    1.2646233    9.4867725  -0.32097312   0.84326943   0.98500119   0.74925087   -3.5502959            3    5.7085628    8.0020231    7.9911481    1.1325171 -0.016863509  0.053177481 -0.035374124    5.5441871    5.5647385    1.0668179        0.075    1.2552154          0.5   0.11853533    4.2181518    2.8041744    30.801768 0.0081552467  -0.29483755  0.015051371   0.37523714  -0.73323489    2.7749145 
  556000    10.798904    1.2929813    9.5059231   -0.3285844   0.86217898    1.0047351   0.76761879   -3.5502959            3    5.6907296    7.9507062    8.0099644    1.1115182 -0.039218447 -0.038006989  -0.10742919    5.5223242    5.5440239    1.0658277        0.075    1.2643682          0.5    0.1184253    4.2220708    2.8337423    30.801768 -0.001530926  -0.42330984 -0.0037704408   0.32999579    1.5410709    2.0760674 
  557000    10.856938    1.3074724    9.5494654   -0.3239929   0.87184182      1.01315   0.77811578   -3.5502959            3    5.5628763    7.8547868     7.899547   0.93429508 -0.036587587   0.10411544  0.062194318     5.392168    5.4149419    1.0571315        0.075    1.2596258          0.5   0.11745906    4.2568024    2.8209983    30.801768 -0.0067206669  -0.33015886 0.0094672868   0.28278759   -1.2613533  0.096530452 
  558000    10.754732    1.2618892    9.4928432  -0.31419257   0.84144631   0.98312089   0.74746514   -3.5502959            3    5.5587191     7.938766    7.9010456   0.83634568 -0.031861861  -0.22807818 -0.094231365    5.3947351    5.4151693     1.064243        0.075    1.2622433          0.5   0.11824922    4.2283576    2.8191043    30.801768  0.002353039  -0.38633667  0.013629825   0.32474893   0.81960741   0.86140627 
  559000    10.797626    1.2673523    9.5302738  -0.31447454   0.84508915   0.98215507   0.75417665   -3.5502959            3    5.6510257    7.9269937    7.9803172    1.0457662  0.016565363   0.11487407  0.034125466    5.4855693    5.5076169    1.0725544        0.075    1.2500481          0.5   0.11917271    4.1955915    2.8471152    30.801768  0.012988486  -0.32364702  -0.00363042   0.35950335  -0.42088755   0.58204267 
  560000    10.729317    1.2540415    9.4752755  -0.32987593   0.83621331   0.97039726   0.74721563   -3.5502959            3    5.5493111    7.8865764    7.8527838    0.9085732 -0.0053495951  0.043744432 -0.018356585    5.3853819    5.4076192      1.07723        0.075    1.2517429          0.5   0.11969223    4.1773807    2.8263236    30.801768 -0.013735173  -0.36399934 -0.010430291     0.401055   -2.7324627    10.146221 
  561000    10.788553    1.2899087    9.4986439  -0.31668312   0.86013014   0.97403138    0.7846406   -3.5502959            3    5.7930695    8.0955921    8.0519106    1.2317057 -0.0090744876  -0.15718976 -0.071117198    5.6209297    5.6508469    1.0588854        0.075    1.2486718          0.5   0.11765394    4.2497515     2.802195    30.801768  -0.01650152  -0.42871469  0.015110935   0.34011257    2.6785392    4.4793629 
  562000    10.753874    1.2706108    9.4832635  -0.33599832   0.84726196   0.97900934   0.75989005   -3.5502959            3    5.5358028    7.9223148    7.8284658   0.85662787 0.0070430917  0.014270003  0.098464739     5.369093    5.3928534    1.0700024        0.075    1.2575284          0.5   0.11888915    4.2055982    2.8062111    30.801768 -0.044698109  -0.31770635  0.020428018   0.40146012    0.9599298    5.2927956 
  563000    10.759726    1.2663306    9.4933958  -0.33390255   0.84440786    1.0181329    0.7290964   -3.5502959            3    5.5296314    7.8542008    7.8511855   0.88350776 -0.0036695226 -0.00029408664  0.051523922    5.3696773    5.3809694    1.0643525        0.075    1.2525209          0.5   0.11826139    4.2279227    2.7748069    30.801768  0.012916354  -0.32457296 -0.020157778    0.3376646   0.70218587    1.1813488 
  564000     10.79204    1.3105984    9.4814418  -0.32831113   0.87392632   0.99445849   0.79402864   -3.5502959            3    5.6639332    7.9999977     7.951977     1.039825 -0.018226582  0.044258879   0.14991959    5.4897339     5.518728    1.0641512        0.075    1.2662116          0.5   0.11823902    4.2287224    2.7866195    30.801768 -0.00098664187  -0.37312912  0.003585279   0.33606229    1.3279972    2.3569298 
  565000    10.798688    1.3023319    9.4963565  -0.34173521    0.8684141    1.0215417   0.76682025   -3.5502959            3    5.7628439    8.0625357    8.0881767    1.1378195 -0.0076483575  -0.11780564  0.060812719    5.5946137    5.6136842    1.0691126        0.075    1.2539965          0.5   0.11879029    4.2090983    2.8043131    30.801768 -0.0087539679   -0.3187097  0.033167869   0.33586217    2.2284331    1.7913821 
  566000    10.758176     1.286468    9.4717081  -0.33698741    0.8578358    1.0278296   0.74501264   -3.5502959            3    5.5609872    7.8563938     7.885781    0.9407869 -0.021924302 -0.0015078794 -0.097574233    5.3975413    5.4109094    1.0741446        0.075    1.2622497          0.5    0.1193494    4.1893802    2.8363313    30.801768 0.0065134801  -0.39372862 0.0025924168   0.36993448   0.46958231   -1.6044114 
  567000    10.758883    1.2756232    9.4832595  -0.32392942   0.85060434    1.0059498   0.74752782   -3.5502959            3    5.6959095    7.9975862    7.9648387    1.1253035  0.010918227   0.19380173  0.053202495    5.5319118    5.5490264    1.0706067        0.075    1.2585597          0.5    0.1189563    4.2032242    2.7875093    30.801768 -0.036612058  -0.36116131 -0.022201506   0.41149289   -1.7390159     3.798455 
  568000    10.716425    1.2639924    9.4524325  -0.33414716   0.84284871   0.99564573   0.74146543   -3.5502959            3    5.3263875    7.6909229    7.7710034   0.51723611 0.00015701343  -0.07079421 -0.035335713    5.1637198    5.1810089    1.0668874        0.075    1.2603458          0.5   0.11854304    4.2178774    2.7970283    30.801768 0.0099565142  -0.42953957 -0.012139788    0.3479917   0.32484666    3.8558299 
  569000    10.743287    1.2339827    9.5093047  -0.31858091   0.82283783   0.97801884   0.71986047   -3.5502959            3    5.5540103    7.8667864    7.8707576   0.92448703  0.020232702  -0.04210825 -0.059382292    5.3960825    5.4112056    1.0531465        0.075    1.2531566          0.5   0.11701628    4.2729097    2.7681581    30.801768 -0.015292423  -0.38057547 0.00060381177   0.33080921    1.7989514    4.8881078 
  570000    10.797305    1.2847849    9.5125196  -0.31781969   0.85671351    1.0088429   0.75577971   -3.5502959            3    5.5653753    7.8834987    7.9523732   0.86025398 -0.0013684032  0.046929906 -0.050362183    5.3995672    5.4180697    1.0562703        0.075    1.2610813          0.5   0.11736337    4.2602732    2.7722692    30.801768 0.0040155387  -0.38662044 -0.019949561   0.40955902   -3.1506608    1.0934762 
  571000    10.795681    1.3073758    9.4883057  -0.31633332   0.87177743    1.0154619   0.77646979   -3.5502959            3    5.7542172    8.0264411    8.0645661    1.1716443 -0.00016432428 -0.057392408 -0.013493634      5.58387    5.6059452    1.0596443        0.075    1.2718506          0.5   0.11773826    4.2467079    2.8050816    30.801768 -0.014150069  -0.34112248 0.0015748872   0.36699952   0.92838901   0.90279196 
  572000    10.742878    1.2557387    9.4871394  -0.32725451   0.83734507   0.98567218   0.73893475   -3.5502959            3    5.4394752    7.7985579    7.8052588   0.71460902  -0.03719072  -0.16885844 -0.013378828    5.2773627     5.295553    1.0606074        0.075    1.2626017          0.5   0.11784527    4.2428516     2.796819    30.801768 0.0042510301  -0.38387693 -0.021413882   0.35863014    3.2107785    3.3408868 
  573000    10.739126    1.2515757    9.4875507  -0.32451826   0.83456907   0.97883159   0.73886293   -3.5502959            3    5.7000211    7.9587426    8.0286734    1.1126473  0.027212755   0.29542395  0.073727814    5.5379244    5.5570976    1.0664726        0.075    1.2706597          0.5   0.11849696    4.2195177    2.8043143    30.801768 -0.019934596  -0.34444846 -0.0023586639   0.34447338    -2.394779    4.7486006 
  574000    10.801162    1.3092107    9.4919513  -0.33869962   0.87300099    1.0286874   0.76970581   -3.5502959            3    5.6941927    7.9826136    7.9607226    1.1392419 0.0078565586  0.035302684 0.0022920976    5.5253294    5.5439896    1.0693815        0.075    1.2690071          0.5   0.11882017    4.2080398    2.8101877    30.801768 -0.016254378  -0.34672996 -0.0074493779   0.40798626    1.6223603     6.754156 
  575000    10.757325    1.2388678     9.518457  -0.31958846   0.82609531   0.96019487   0.73715006   -3.5502959            3    5.7648955     8.062106    7.9657041    1.2668763 -0.011307356 -0.047969593  0.053178369    5.6031745    5.6246932    1.0718969        0.075    1.2704435          0.5   0.11909965     4.198165    2.8191811    30.801768   0.01218608  -0.38523935   0.00449038    0.3935896   0.37658916    5.8703899 
  576000    10.774211    1.2665875    9.5076233  -0.33013867    0.8445792    1.0013076      0.74058   -3.5502959            3    5.4021884    7.7578995    7.7263359   0.72232975 -0.016597747  0.028733338 -0.032305116    5.2397149    5.2559831    1.0616497        0.075    1.2591823          0.5   0.11796108    4.2386864    2.7876088    30.801768 -0.020151881  -0.34086597 0.0015679371   0.37372284   -3.2646036    1.6923019 
  577000    10.787667    1.2627025    9.5249644  -0.31218563   0.84198858   0.97667168   0.75266082   -3.5502959            3    5.4146202    7.8392506    7.7993288   0.60528132 0.0097109626  -0.14229872 -0.050994645    5.2494964    5.2720122    1.0578655        0.075    1.2733418          0.5   0.11754061    4.2538488    2.8049934    30.801768  -0.00425427  -0.32421096  0.016284955   0.31395377    1.3000454   0.81717125 
  578000    10.726638    1.2410643    9.4855739   -0.3290887   0.82755993   0.95932848   0.74016664   -3.5502959            3    5.5329719    7.8451117    7.9225037   0.83130035    -0.044812   -0.1084756  0.098665053    5.3705892    5.3928962    1.0618586        0.075    1.2625846          0.5   0.11798429    4.2378523    2.8144658    30.801768 0.0031575987  -0.37165081 -0.013756427   0.37083175    -1.046997    2.3760327 
  579000     10.76828    1.2707668    9.4975135  -0.32495158   0.84736603     1.003373   0.74384801   -3.5502959            3    5.6520711    7.9727007    7.9979417   0.98557095 -0.012863208 -0.025227465 -0.033230938    5.4888807    5.5055643    1.0766144        0.075    1.2621515          0.5   0.11962382    4.1797695    2.8240839    30.801768   0.01073872  -0.33552791    0.0128936   0.41082764   0.27232642    2.4643213 
  580000    10.746928    1.2773018    9.4696264  -0.32386893   0.85172366    1.0008025   0.75281835   -3.5502959            3    5.4316289    7.7865527    7.8431543   0.66517964 -0.020635742  0.081175608  -0.11018443    5.2664705    5.2854974    1.0427093        0.075    1.2661646          0.5   0.11585659    4.3156803     2.785366    30.801768 0.0023325946   -0.3435994 0.0084070094   0.35174783  -0.71600036   0.87217911 
  581000    10.758019    1.2571328     9.500886  -0.33035879   0.83827467   0.99065036   0.73717012   -3.5502959            3    5.8456038     8.073565    8.1189052    1.3443413 0.0054570166 -0.091723817 0.0079668735    5.6838785    5.7009547    1.0672883        0.075    1.2648543          0.5   0.11858759    4.2162929    2.7926851    30.801768 -0.049717567  -0.34065431  -0.01775917   0.36154934    2.6834527     7.169902 
  582000    10.792996    1.2838652    9.5091306  -0.35159399   0.85610023   0.97727463   0.77576852   -3.5502959            3    5.7118782    8.0012386    7.9196127    1.2147832  -0.03083862   0.14848014 0.0030102416    5.5416848    5.5691821    1.0709832        0.075    1.2721809          0.5   0.11899813    4.2017466    2.7897528    30.801768 -0.024408975  -0.37591276  0.025572784   0.41947183   -0.5531778    3.9129509 
  583000    10.740675    1.2529294    9.4877453  -0.32520686   0.83547178   0.96869884    0.7471107   -3.5502959            3    5.5331011    7.8748252    7.8863088    0.8381693 -0.0048970822 -0.095451158  0.039209617    5.3691949    5.3916572    1.0600019        0.075     1.264112          0.5   0.11777799    4.2452753    2.8411928    30.801768  0.011853186  -0.38000167 -0.018258222   0.32510407   0.99294628    3.0176891 
  584000    10.768113       1.2616    9.5065127  -0.31267958   0.84125344     1.016023   0.72524558   -3.5502959            3     5.492809    7.8185989    7.8202047   0.83962331  0.018638668   0.12094254  0.044990004    5.3336997     5.344455    1.0517318        0.075    1.2682803          0.5   0.11685909    4.2786574    2.8199465    30.801768  0.020355782  -0.38126213 0.0064727849   0.31687931  -0.21910557    2.2880376 
  585000    10.778806    1.2778649    9.5009411  -0.32308805   0.85209911    1.0250168   0.73732778   -3.5502959            3    5.6159234    7.9290619    7.8989853     1.019723 -0.0001155923  0.065584186 -0.016809676    5.4541634    5.4662562    1.0519705        0.075    1.2737237          0.5   0.11688562    4.2776863    2.8086076    30.801768 -0.0017013087  -0.32537966 0.0046372252   0.36733308   -2.0712411    1.0996472 
  586000    10.736739    1.2343294    9.5024095   -0.3249255   0.82306898   0.97602333   0.72157368   -3.5502959            3    5.6121627    7.9380129    7.9438927   0.95458253 -0.0068270622 -0.081724612 -0.056901324     5.453859    5.4696493     1.073204        0.075    1.2680746          0.5   0.11924489    4.1930519    2.8174949    30.801768 -0.013599646  -0.37136127  0.005279808   0.32793893     1.161423    5.2357133 
  587000     10.77917    1.2935561    9.4856141  -0.33651654   0.86256224    1.0642435   0.72865104   -3.5502959            3     5.525514    7.9060751    7.8310731   0.83939387 -0.0086802868  0.052821171    0.1171436    5.3656576    5.3701192    1.0703231        0.075    1.2732448          0.5   0.11892479     4.204338    2.8193385    30.801768 0.0052849283  -0.36078365 -0.0028637604   0.37210891   -1.0743228    2.2607775 
  588000    10.767104    1.2715007    9.4956033  -0.33121437   0.84785538    1.0041798    0.7441263   -3.5502959            3    5.3856594    7.8013285    7.7240507   0.63159889 -0.011133218 -0.024064967  0.017318847    5.2224079    5.2390347    1.0680465        0.075    1.2704964          0.5   0.11867184    4.2132996    2.8113264    30.801768 -0.010787444  -0.34867953 -0.0067609575   0.37819864    1.4615203    1.5149306 
  589000     10.76976    1.2581242     9.511636  -0.31865394   0.83893571   0.99282096   0.73682671   -3.5502959            3     5.787286    8.0158305    8.0682346    1.2777929  0.013168398  0.040561955 -0.016846719     5.625636    5.6423199    1.0560259        0.075    1.2729323          0.5   0.11733621    4.2612592    2.8135088    30.801768 -0.001669375  -0.31081567 -0.010090852   0.40582997  -0.21472691    9.3129403 
  590000    10.770101    1.2678588    9.5022421   -0.3324663    0.8454269    0.9970796   0.74480618   -3.5502959            3    5.5328512    7.9274605    7.8610209   0.81007226  0.011014691  0.093431584  0.013607823    5.3694506    5.3872633    1.0518809        0.075    1.2712972          0.5   0.11687565    4.2780509    2.7785822    30.801768 -0.018606829  -0.31379001  0.020938736   0.37772142    3.5005981   -1.9859508 
  591000    10.771101    1.2625709    9.5085301  -0.32352222   0.84190086   0.98714177   0.74554626   -3.5502959            3    5.4775328     7.844035    7.8303049    0.7582586  0.028604741 -0.061595241 -0.043038067    5.3139699     5.333396    1.0577461        0.075    1.2782038          0.5   0.11752735     4.254329    2.8116082    30.801768 -0.0054302881  -0.39415678 -0.011369183   0.35180339   -2.4047671    1.6734182 
  592000    10.787596     1.266032    9.5215637   -0.3150766   0.84420877   0.98999441   0.74749247   -3.5502959            3    5.5012001    7.8400346    7.8322976   0.83126814  0.031217785  -0.11094147  0.039050217    5.3372102    5.3566467    1.0507597        0.075    1.2764902          0.5   0.11675108    4.2826157    2.8266248    30.801768 -0.010933226  -0.41792292 -0.008251516   0.38377204    3.0262786    2.3244822 
  593000    10.747957    1.2740355    9.4739216  -0.31568023   0.84954565    1.0059894   0.74573774   -3.5502959            3    5.6472878    7.9390532    7.9563611    1.0464492  0.030152786 -0.091709481  -0.10878408    5.4836828    5.5003989    1.0454509        0.075    1.2752832          0.5   0.11616122    4.3043627    2.7845617    30.801768 0.0040622854  -0.36754153 -0.033425083   0.36696985    1.3086403    3.7385076 
  594000    10.750407    1.2544768    9.4959304  -0.33018619   0.83650356   0.99424325   0.73182831   -3.5502959            3    5.6784813    7.9734423    8.0268495    1.0351521 -0.042196672   0.18333646  0.066798381    5.5179279    5.5333075    1.0831145        0.075    1.2806459          0.5   0.12034606    4.1546852    2.8265903    30.801768 -0.028568303  -0.35360284 0.0024315547    0.3580114   -2.0794564    1.1423161 
  595000    10.746375    1.2497514    9.4966239  -0.34304903   0.83335262   0.95856644   0.75032402   -3.5502959            3    5.6114454    7.9074162    7.9430319   0.98388799 -0.013946111 -0.079232632  -0.14152922    5.4468342    5.4714809    1.0708606        0.075    1.2797305          0.5   0.11898452    4.2022275    2.8130584    30.801768 -0.0017325751  -0.30956483  0.018007523   0.38007208     1.923866    4.4930503 
  596000    10.804535    1.3052632    9.4992719  -0.33352294   0.87036873     1.009757   0.77791995   -3.5502959            3    5.4962356    7.7920775    7.8686868   0.82794251 -0.012224703  0.012205641 -0.035627766    5.3255703    5.3487966    1.0676659        0.075    1.2705845          0.5   0.11862955    4.2148016    2.7936366    30.801768 -0.0053230233  -0.35987412 -0.030193329   0.39476856   -2.6688542   0.21833813 
  597000    10.791132    1.2809051    9.5102273  -0.32314826   0.85412638    1.0077265   0.75221279   -3.5502959            3    5.6967894    7.9973609    7.9902272      1.10278 -0.0018003521  -0.03187349   0.13215954    5.5317638    5.5496468    1.0682332        0.075    1.2588068          0.5   0.11869258    4.2125633    2.7980319    30.801768  0.016055401  -0.41351427 0.0010806729   0.40115613  -0.63407881    2.0494927 
  598000     10.73062    1.2709427    9.4596776  -0.33965454   0.84748327   0.98274505   0.75777241   -3.5502959            3    5.5025381    7.8216557    7.9144746   0.77148397  0.046174611  0.029020904 -0.064356358    5.3362929    5.3590432    1.0818597        0.075    1.2571414          0.5   0.12020664    4.1595042    2.8446962    30.801768 0.0013537791  -0.35843366 -0.021384701   0.35212915   -2.2460739     3.116671 
  599000    10.768751    1.2558991    9.5128523  -0.33894706   0.83745201   0.98716794   0.73811739   -3.5502959            3     5.668556    7.9708149     8.009331    1.0255222  0.021135993 -0.020806334  0.029479372    5.5066228    5.5244153    1.0685713        0.075    1.2621875          0.5   0.11873014    4.2112306    2.8174029    30.801768  0.016891779  -0.40985825 -0.0054798317   0.37524612    5.4241386    9.7640009 
  600000    10.784065    1.2850212    9.4990441  -0.33995834   0.85687105    0.9701822   0.78177306   -3.5502959            3    5.7661383    8.0610421    8.0088386    1.2285342 -0.0052959447   0.10968269  0.014621198    5.5946277    5.6244778    1.0641514        0.075    1.2739698          0.5   0.11823904    4.2287217    2.8026083    30.801768 0.0022499236  -0.27167393 0.0024819752   0.36696515   -1.4097932    2.7606919 
  601000    10.725847    1.2672249    9.4586216  -0.33444658   0.84500422    0.9947983   0.74562037   -3.5502959            3    5.6010962    7.9159728    7.9399561   0.94735961 -0.023559321  -0.14337906  0.074303491    5.4375169    5.4558413    1.0562689        0.075    1.2762365          0.5   0.11736321    4.2602789    2.8052283    30.801768  0.032189882  -0.32857837  0.013786392   0.40294256    1.8414801    6.0521305 
  602000    10.713209    1.2294105    9.4837986  -0.35917015   0.81978904   0.96069134   0.72631384   -3.5502959            3    5.4867254    7.8129144    7.8271932   0.82006843  -0.03225384  -0.06292573 0.0047024381    5.3273817    5.3464506    1.0547431        0.075    1.2745707          0.5   0.11719368    4.2664416     2.815357    30.801768  0.011588043  -0.41086338 -0.030134929   0.33654324    0.5618863   -1.8063548 
  603000    10.784411    1.2906552    9.4937557  -0.32112933   0.86062789    1.0200132   0.75486635   -3.5502959            3    5.6023209    7.9596204    7.9360703   0.91127206 0.0012921201 -0.008364266  0.096559652    5.4367132    5.4533844    1.0494304        0.075    1.2721023          0.5   0.11660338    4.2880405    2.8033155    30.801768 0.00028822882  -0.40271817 -0.016093921   0.35425328    1.2446257    2.6410314 
  604000     10.81225    1.3170321    9.4952182  -0.32246064   0.87821639     1.060875   0.75697162   -3.5502959            3    5.4831943    7.8414918    7.8864037   0.72168733  0.012839261   0.14179302 -0.029495788    5.3171247    5.3282913    1.0413531        0.075    1.2657812          0.5    0.1157059    4.3213009    2.7710857    30.801768 -0.015031208  -0.30328059   0.02760368   0.37534028   -1.0769895   -1.5638332 
  605000    10.759585    1.2784452    9.4811402  -0.33958319   0.85248605   0.98800671   0.76260475   -3.5502959            3    5.5406678    7.9302146    7.8804791    0.8113098 0.0066255821 0.0032370418 -0.083197825    5.3733624    5.3964047    1.0672652        0.075    1.2643659          0.5   0.11858502    4.2163842    2.8159968    30.801768 0.0008592313  -0.29907861  0.011306147   0.31505501   0.92098119    4.9059263 
  606000    10.753733    1.2779931    9.4757404  -0.31987894   0.85218458    1.0092314   0.74797628   -3.5502959            3    5.5681755    7.9076135    7.8941543   0.90275867 0.0022211058  -0.11585234 -0.027539707    5.4040794    5.4208132    1.0644909        0.075    1.2692732          0.5   0.11827676     4.227373    2.8215513    30.801768 -0.014871824  -0.36767038 0.0001366034   0.33901918    1.0101484    -1.633453 
  607000    10.751612     1.254568     9.497044  -0.32416732   0.83656439   0.97232791   0.74651555   -3.5502959            3    5.7531761    8.0119207     8.057375    1.1902325 -0.0044138136 -0.069939863   0.05179397    5.5894004    5.6112022    1.0552046        0.075    1.2699996          0.5   0.11724496    4.2645757    2.7851766    30.801768 -0.009400013  -0.28689273 -0.019020374   0.42495665  -0.66264897    7.7328242 
  608000    10.768048    1.2641824    9.5038651  -0.32234718   0.84297543   0.97817778   0.75330245   -3.5502959            3    5.4895302    7.7798422    7.8479171   0.84083125 0.0053113377   0.18903067 0.0063474263    5.3242656    5.3467022    1.0564543        0.075    1.2610539          0.5   0.11738381    4.2595312    2.7924991    30.801768  0.013126229  -0.33634317 -0.0078735788   0.38466567      -1.8539    4.6032313 
  609000    10.771531    1.2884666    9.4830646  -0.33782993   0.85916849     1.017549   0.75407516   -3.5502959            3    5.5943156    7.9506335     7.908936   0.92337722  0.010101796  -0.13814143  0.055564594    5.4288815    5.4457388    1.0543019        0.075    1.2496342          0.5   0.11714466     4.268227    2.8064852    30.801768 0.00019276243  -0.39374923 0.0084797632   0.36738134    2.3351392    5.1173336 
  610000    10.798991    1.2794089    9.5195825  -0.31906755   0.85312869   0.99867568   0.75657453   -3.5502959            3    5.7745904    8.1110372    8.0547621    1.1579717 -0.013946449  0.046075862 0.0079232121    5.6086079    5.6287694    1.0578658        0.075     1.249807          0.5   0.11754064    4.2538479    2.8169133    30.801768 0.0057701065  -0.36992347 0.0013535878   0.31713768    1.1883354    5.3966062 
  611000    10.822701      1.30891    9.5137907  -0.31498964   0.87280046    1.0247908   0.77196515   -3.5502959            3    5.7105098    7.9834955    7.9809036    1.1671304 -0.018306307  0.045592737  0.013455995    5.5411509    5.5608757    1.0548736        0.075    1.2564091          0.5   0.11720818    4.2659139    2.8157167    30.801768  -0.01528994  -0.41262155 0.0018604548   0.31838134   -1.0186679     4.891016 
  612000    10.798748    1.3030082      9.49574  -0.32826921   0.86886504     1.025615   0.76486047   -3.5502959            3    5.5624009    7.9878898    7.8258619    0.8734511 -0.017944143 -0.055864908  0.009770369    5.3946007    5.4126464    1.0684484        0.075    1.2549837          0.5   0.11871649    4.2117149    2.8343943    30.801768 -0.010773061   -0.3481085 -0.0075784877   0.36600545   0.56780135     5.901237 
  613000    10.762277    1.2760125    9.4862649  -0.33110725   0.85086392    1.0100093   0.74525838   -3.5502959            3    5.5975993    7.9040033    7.9071393   0.98165541 -0.034959137 0.0086583499  0.017241928    5.4340995    5.4501235    1.0795332        0.075    1.2541437          0.5   0.11994813    4.1684684     2.804758    30.801768  0.024721118  -0.44328606 -0.015874027   0.34598816   -2.0403487    2.2609194 
  614000    10.756335    1.2681208    9.4882141  -0.33201323   0.84560161    1.0228586   0.72793987   -3.5502959            3    5.5512742    7.9854974    7.8349092   0.83341601 -0.0054324067  -0.30357248  0.080503368    5.3915738    5.4019222    1.0916916        0.075    1.2486147          0.5   0.12129907    4.1220431    2.8383287    30.801768 -0.0048971356   -0.4057164 -0.033691526   0.35020551    3.0694309  -0.89060578 
  615000    10.810258    1.3106962    9.4995617   -0.3314926    0.8739915    1.0446578    0.7607267   -3.5502959            3    5.3418582     7.740299     7.795247   0.49002862 -0.0026228274  -0.03787394  0.017928548    5.1749648    5.1893232    1.0872519        0.075    1.2532777          0.5   0.12080577    4.1388752    2.8316873    30.801768 -0.015941523  -0.37239307 -0.030079334   0.36363237   0.96255045   -6.4391284 
  616000    10.762023    1.2553184     9.506705  -0.33881645   0.83706481   0.98880627   0.73638194   -3.5502959            3     5.615851    7.9346669    7.9189858   0.99390032 0.00076634495    0.1534196 -0.060561966    5.4542986    5.4714711    1.0815586        0.075    1.2572879          0.5   0.12017318    4.1606621    2.8184292    30.801768 0.0015473804  -0.37678648 -0.011065979   0.38369834     -1.79811    6.0770892 
  617000    10.769267    1.2771107    9.4921559  -0.31834469    0.8515962   0.99928238   0.75361771   -3.5502959            3    5.6025504    7.9339911      7.86481      1.00885 -0.0085218158  0.027805341 -0.036928912    5.4372166    5.4566408    1.0560719        0.075    1.2582763          0.5   0.11734132    4.2610737    2.8016182    30.801768 -0.011634254  -0.43102574 -0.0058471232   0.34072821     1.346851    3.9006209 
  618000    10.732276    1.2913947    9.4408814  -0.35320656   0.86112096    1.0220994   0.75429925   -3.5502959            3    5.4194777    7.8173117     7.787882   0.65323935 -0.027536141  0.097768104 -0.015383292    5.2539944    5.2702365    1.0752774        0.075    1.2544599          0.5   0.11947527    4.1849666    2.8289003    30.801768  0.014118236  -0.38970799 -0.011673246   0.30251455   -1.1743281 -0.078721342 
  619000    10.778788    1.2794184    9.4993694  -0.33296189     0.853135   0.99738944    0.7574411   -3.5502959            3    5.6952572    8.0502831    7.9405632    1.0949253  0.018001075   0.05467052 -0.049819318    5.5290846     5.549624    1.0716605        0.075    1.2551718          0.5   0.11907339    4.1990909    2.8052608    30.801768 0.0022437711  -0.35022175 -0.0043305664   0.34610195   0.82626846    3.3462347 
  620000      10.7562    1.2513357    9.5048639  -0.34200251   0.83440905   0.99882055   0.72529256   -3.5502959            3    5.4000695    7.7805639    7.7530686   0.66657603 -0.041647597  -0.15966762  0.033169834    5.2409499    5.2542274    1.0629616        0.075    1.2721278          0.5   0.11810684    4.2334549    2.8126921    30.801768  0.014807117  -0.39456346  0.028469276   0.33580326    1.4233319    8.0405961 
  621000    10.770896    1.2769152    9.4939811  -0.32987718   0.85146582    0.9979075   0.75431557   -3.5502959            3    5.6637254    7.9801352    7.9275088    1.0835323 -0.022166554 -0.0038995799 -0.035183439    5.4982386    5.5180166    1.0400085        0.075    1.2607575          0.5    0.1155565    4.3268876    2.7647142    30.801768  0.017171042  -0.38632673 -0.0029629609    0.3251113   0.84140652    8.2983519 
  622000    10.756704    1.2740575    9.4826465  -0.34511147   0.84956029   0.97167956   0.76859729   -3.5502959            3    5.6136406    7.9267045    7.9069496    1.0072678  0.020543244 -0.070370835 -0.0038831149    5.4450206    5.4717615    1.0688735        0.075    1.2683511          0.5   0.11876373    4.2100397    2.7992977    30.801768 -0.017233444  -0.35714111 0.0046327029   0.41267299   0.87344004    1.2498037 
  623000    10.775055    1.2881185    9.4869361  -0.32096487   0.85893639    1.0158602   0.75481246   -3.5502959            3    5.7469509    8.0879056     8.031221    1.1217262 0.0035679149  0.043229289 -0.054882814    5.5813551    5.5986208    1.0750597        0.075    1.2633766          0.5   0.11945108    4.1858141    2.8190178    30.801768 -0.011122004  -0.36404747 -0.0035752958   0.35119577  -0.35795827    1.6042224 
  624000    10.796078    1.2803811    9.5156969  -0.31090959   0.85377696   0.99756158     0.758396   -3.5502959            3    5.3669785    7.7740033    7.7062103   0.62072174 0.0050876807   0.12504186 -0.081284776    5.2005964    5.2213202      1.07054        0.075    1.2669147          0.5   0.11894889    4.2034862     2.825362    30.801768  0.010320081  -0.38034833  0.023150848   0.40542681   -1.9588367    4.4275683 
  625000    10.756015    1.2585627     9.497452  -0.32917203   0.83922816    1.0051634   0.72909929   -3.5502959            3    5.8234976    8.0988843    8.0921513    1.2794571 0.0030555696  -0.13339177  0.025208205    5.6635428    5.6767293    1.0701067        0.075    1.2695427          0.5   0.11890074    4.2051882    2.8117739    30.801768  0.013426283  -0.44251736 0.0069838611   0.31474589    2.2755777   0.48069504 
  626000    10.755387    1.2655344    9.4898525  -0.33233457   0.84387693     1.001432    0.7393273   -3.5502959            3    5.6982137    7.9473606     8.021331    1.1259495 -0.032079594  0.013479555  0.027513083    5.5360151    5.5519903     1.064171        0.075    1.2799616          0.5   0.11824122    4.2286437    2.8192223    30.801768 -0.0067261844  -0.40057759 0.0050709094   0.35218712  -0.34996795     5.812199 
  627000    10.748757    1.2563681    9.4923887  -0.32995558   0.83776471   0.98116884   0.74263106   -3.5502959            3    5.5990182    7.9054629    7.8954209    0.9961709  0.017393488  -0.14762546  0.058543121    5.4360948    5.4557535    1.0690633        0.075    1.2808639          0.5   0.11878482    4.2092922    2.8096852    30.801768 -0.012566943  -0.32105426 0.0074750213   0.37627468   0.42968494     4.933704 
  628000     10.80398    1.2958981    9.5080824  -0.32706271   0.86412392    1.0018171     0.772801   -3.5502959            3    5.5745836    7.9005938    7.8986897   0.92446732   0.01986549   0.06626083 -0.0012036827    5.4050413     5.428304    1.0812156        0.075    1.2734337          0.5   0.12013507    4.1619821    2.8465242    30.801768 -0.010223768   -0.4082829 -0.026711758   0.36293621   0.91691668    2.0561712 
  629000    10.755167    1.2479627     9.507204  -0.32692596   0.83215991   0.95982708   0.74749802   -3.5502959            3    5.5230829    7.8248415    7.8460485   0.89835882 -0.017899193   0.11309256 -0.010832848    5.3590918    5.3829344    1.0729064        0.075    1.2604739          0.5   0.11921183    4.1942147    2.8316539    30.801768 -0.0091450267  -0.40170906  0.032625882   0.40439283   -3.0138534    7.8821412 
  630000    10.770847    1.2868019    9.4840447  -0.32412088   0.85805847    1.0019278    0.7626227   -3.5502959            3    5.5513208    7.9092641    7.9145066   0.83019181  0.032991274 -0.0014307302 -0.054316527    5.3840115     5.405025    1.0702456        0.075    1.2765777          0.5   0.11891617    4.2046425    2.8158664    30.801768 -0.0047673692  -0.38449125 -0.004261862   0.36062534    1.2910819    2.0063342 
  631000    10.707992    1.2537429    9.4542491  -0.35280275   0.83601422    0.9868897   0.73590731   -3.5502959            3    5.7261296    7.9418612    8.0414492    1.1950785 -0.015225335 -0.040380884 -0.011302735    5.5646813    5.5820296    1.0756718        0.075    1.2698703          0.5   0.11951908    4.1834323    2.8109722    30.801768 -0.00077573109  -0.36373924  0.028424178   0.39106816  -0.73981583    4.5392478 
  632000      10.7786    1.2967804    9.4818196  -0.32846388   0.86471222    1.0409129   0.74776057   -3.5502959            3     5.448588    7.7892055    7.8386162   0.71794246 -0.035168333   0.09193079  0.060653999    5.2845393    5.2965998    1.0558339        0.075    1.2690807          0.5   0.11731488     4.262034     2.803314    30.801768  0.014003028  -0.36823382 -0.002972495   0.39665433  0.053239693    2.0547486 
  633000    10.764599    1.2537202     9.510879  -0.32554281   0.83599905    1.0074794   0.72217846   -3.5502959            3    5.5100772    7.8858282    7.8495838   0.79481948  0.033542684 -0.025433083 -0.0045022524    5.3516408    5.3629707    1.0487929        0.075    1.2767617          0.5   0.11653254    4.2906471    2.8061477    30.801768  0.023170233  -0.31596855  -0.01117493   0.34901763    2.4094315    4.7479018 
  634000    10.765379    1.2500463    9.5153329  -0.32265315   0.83354928    0.9992971   0.72354308   -3.5502959            3    5.5915879    7.9492926    7.8664696   0.95900147 0.0055413733 0.0035693617 -0.0024263674    5.4328521    5.4456762     1.068574        0.075    1.2712359          0.5   0.11873044      4.21122      2.81632    30.801768 -0.0058406117  -0.35102956 -0.0064578881   0.34837092   0.31946433    5.7734095 
  635000    10.761872    1.2818579    9.4800142  -0.33507833    0.8547617   0.98182133   0.77051253   -3.5502959            3    5.4044767    7.7662117    7.7771957   0.67002253  0.023136908  -0.21468895  -0.10153358    5.2354364    5.2611167    1.0596504        0.075    1.2817644          0.5   0.11773893    4.2466838    2.8135671    30.801768 -0.008012692  -0.41307393 -0.0055056316   0.34452963   -1.8805012    2.9773388 
  636000    10.789126    1.2890435     9.500083  -0.33967209   0.85955316    1.0071788   0.76161788   -3.5502959            3    5.4390259    7.7792007    7.7808737   0.75700326 -0.0055478009  0.018992265 -0.020224803     5.271937    5.2919633    1.0516017        0.075    1.2797171          0.5   0.11684463    4.2791867    2.8095805    30.801768 -0.014984676  -0.32668437  0.020228405   0.33150544  -0.06984504    1.7080475 
  637000    10.784313    1.2872682    9.4970444  -0.31638375   0.85836941    1.0095949   0.75803784   -3.5502959            3    5.4807736    7.8901542    7.8501943   0.70197243 -0.006747906  0.060005551  0.051328552    5.3144702    5.3333583    1.0578946        0.075    1.2764087          0.5   0.11754384     4.253732    2.8244741    30.801768 -0.031895783  -0.28822753 -0.0089352535   0.36815889    1.7291915   -3.4931718 
  638000    10.808011     1.297703    9.5103082  -0.31967094   0.86532746    1.0354401   0.75242797   -3.5502959            3    5.6876071    7.9768752    7.9545134    1.1314328 0.0090875202  -0.12042778 0.0072188616    5.5225344     5.536418    1.0581354        0.075    1.2829926          0.5    0.1175706    4.2527638    2.7879155    30.801768  0.016805847   -0.4276875  0.020834116   0.28712748    2.6368672    2.1887533 
  639000    10.719852    1.2534432    9.4664088   -0.3437143   0.83581437   0.99358895   0.73111564   -3.5502959            3    5.6395986    7.9854632     7.989976   0.94335668  0.026432489 -0.092575408  0.034384463    5.4792016    5.4945204    1.0693051        0.075    1.2834566          0.5   0.11881168    4.2083406    2.8035336    30.801768 -0.0033527607  -0.40159713 -0.0019106795   0.36782415   -1.1237672    1.3212396 
  640000    10.804261    1.2806694     9.523592  -0.32416418    0.8539692    1.0312331   0.73630595   -3.5502959            3    5.3633939    7.7178746    7.7846176   0.58768962 -0.00046231472   0.11626371  0.080475297    5.2018582    5.2128191    1.0653293        0.075    1.2747068          0.5   0.11836992    4.2240459    2.7947486    30.801768 -0.031429637  -0.37988865  -0.03146486   0.40822056  -0.14271206    1.4986162 
  641000    10.771623    1.2883333    9.4832898  -0.33809333   0.85907957    1.0012804   0.76475468   -3.5502959            3     5.561295    7.8929172    7.9050337   0.88593401 -0.0055558647   0.11238888   0.12183749    5.3935179    5.4150937    1.0643652        0.075    1.2895359          0.5    0.1182628    4.2278723    2.7959664    30.801768 0.0082919697  -0.33626372 0.0038412136   0.34543637   0.15253152     4.049067 
  642000    10.751756    1.2898535     9.461903  -0.32905995   0.86009329    1.0399983   0.74067448   -3.5502959            3    5.7262294    7.9954179    8.0393725     1.143898 0.0013802989  -0.10583672 -0.054295927    5.5637353    5.5743748    1.0683253        0.075    1.2862989          0.5   0.11870281    4.2122001    2.8252377    30.801768  0.022815624  -0.40568243  -0.01743148   0.33628588  0.057452889    5.3651525 
  643000     10.75597    1.2671094    9.4888611  -0.32449271   0.84492718   0.99534712   0.74512675   -3.5502959            3    5.5374379    7.8568893    7.8907085   0.86471593 -0.013626934  0.071053226  0.023017368     5.373967     5.392103    1.0684677        0.075    1.2767645          0.5   0.11871864    4.2116386    2.8136997    30.801768 -0.027040123  -0.37832954 -0.006219966   0.39984018  -0.36971514    3.7492554 
  644000    10.791924    1.2986472     9.493277  -0.32907346   0.86595709   0.99282562   0.78183925   -3.5502959            3    5.6750474    7.9382283    8.0004521    1.0864617 0.0015697149 -0.016118559 0.0051019184    5.5035222    5.5300806    1.0659737        0.075    1.2728974          0.5   0.11844152    4.2214925    2.8102209    30.801768 -0.0013499123   -0.3435593 -0.014561939   0.43351148  -0.21207475    9.6223812 
  645000    10.717865    1.2604627    9.4574023  -0.32908802    0.8404951   0.98059458   0.74756189   -3.5502959            3    5.4257295    7.7876725    7.8186099   0.67090607    0.0177717 -0.0073451207  0.073070432    5.2617243    5.2825486     1.058693        0.075    1.2642191          0.5   0.11763256     4.250524    2.7733889    30.801768 -0.013803247  -0.41791365 -0.0058207912   0.35232602   -2.6565708    1.6703392 
  646000    10.742461    1.2579376    9.4845232  -0.33381619   0.83881129    1.0070258   0.72716531   -3.5502959            3    5.8008932    8.0958789    8.0620219    1.2447787 -0.0081860391 -0.053579866   0.01554222    5.6413627     5.653853    1.0705959        0.075    1.2683601          0.5    0.1189551    4.2032665    2.8139844    30.801768 0.0015002367  -0.37499368 -0.015203235   0.36237784   0.85379607    2.9079529 
  647000    10.718146    1.2362019    9.4819445  -0.31958555   0.82431759   0.98539714   0.71741497   -3.5502959            3    5.7211659    8.0220208     8.019299    1.1221777  0.008062374 -0.034768615  0.038921567    5.5637745    5.5772837    1.0857041        0.075    1.2750904          0.5   0.12063379    4.1447755    2.8179191    30.801768  0.013174952  -0.36772457  0.017240108   0.33971634    1.9042138    4.5333163 
  648000    10.752921    1.2963994    9.4565217  -0.34360666   0.86445823    1.0312656   0.75375828   -3.5502959            3    5.5942404    7.9037915    7.9467839   0.93214582 -0.038961544   0.07081744 0.0098899723    5.4288758    5.4436609    1.0742331        0.075    1.2831377          0.5   0.11935923     4.189035    2.8022507    30.801768  -0.01101773   -0.3296541  0.017303362   0.35984749   -1.3930529    4.7004503 
  649000    10.753987    1.2598595    9.4941272  -0.33126251   0.84009288   0.99067885   0.74018017   -3.5502959            3    5.5481794    7.8722735    7.9430639    0.8292009  0.031121593  -0.19633809 0.0042475733    5.3857937    5.4035261    1.0739981        0.075    1.2686637          0.5   0.11933312    4.1899516     2.804618    30.801768  0.015285879  -0.38550765 -0.0009121432   0.35430361     1.903501    1.9708541 
  650000    10.734671    1.2657558    9.4689151  -0.33750892   0.84402459   0.99792076    0.7419102   -3.5502959            3    5.7108221    8.0129585    7.9715536    1.1479543  0.043339691   0.13624839  0.016481734    5.5480568    5.5651114     1.083769        0.075    1.2731416          0.5   0.12041878    4.1521762    2.8203837    30.801768  0.013187735   -0.3989187 0.0096998171   0.38159531  -0.35815815   0.81777692 
  651000    10.757873    1.2683885    9.4894845  -0.32659399    0.8457801   0.99427231   0.74726301   -3.5502959            3    5.6879922    7.9682902    8.0159593    1.0797271 -0.00071013522   0.13530287  0.089613843    5.5240526    5.5428142    1.0727104        0.075     1.277722          0.5   0.11919005     4.194981    2.8167485    30.801768 0.0016331262  -0.38004102 -0.028487315   0.35011641    1.2261224    1.9981263 
  652000     10.74707    1.2780625     9.469008  -0.34593701   0.85223088     1.022269   0.73937611   -3.5502959            3    5.6404159    7.8821931    7.9301276    1.1089271  0.017330694 -0.079345868    0.1343532    5.4782066      5.49115    1.0585488        0.075     1.265484          0.5   0.11761654     4.251103    2.8117957    30.801768 -0.0048214395   -0.4062188 0.0076536506    0.3695254   0.30491785    1.5780064 
  653000    10.782877    1.2798456    9.5030314  -0.33555217   0.85341985    1.0225248   0.74118663   -3.5502959            3    5.6446682    7.9584427    7.9323387    1.0432231  0.019667908   0.18612261   0.09719637    5.4820616    5.4953649    1.0507169        0.075    1.2723979          0.5   0.11674632    4.2827902    2.8168657    30.801768 0.0017734895   -0.3433943 -0.010419314   0.32744054   -1.5724395     1.044125 
  654000    10.776782    1.2674905    9.5092915  -0.32507512   0.84518135   0.99535492     0.745545   -3.5502959            3    5.6299256     7.936834    7.9582682    0.9946747 -0.016212484   0.10638277 -0.023085663    5.4663629    5.4845895    1.0644529        0.075    1.2734492          0.5   0.11827255    4.2275236    2.8303645    30.801768 0.0080383835  -0.37708594 -0.00029552917   0.38992176    1.8952409    4.0950565 
  655000     10.74619      1.26861    9.4775803  -0.32205155    0.8459278   0.99507645   0.74697387   -3.5502959            3    5.6984562    7.9738067    7.9751284    1.1464336  0.001314376 -0.071295178 -0.023666474      5.53458    5.5531608    1.0567434        0.075    1.2696765          0.5   0.11741593    4.2583658    2.7918316    30.801768 0.0038101941  -0.36442276 -0.015145975   0.36923659    1.5371531    6.9520252 
  656000    10.809654    1.2823684    9.5272858   -0.3282731   0.85510212    0.9984215   0.76003128   -3.5502959            3    5.5861359    7.9810412    7.8614196   0.91594705  0.023815821    0.2087412  0.083848662    5.4193951    5.4403521     1.061912        0.075    1.2653928          0.5   0.11799022    4.2376394    2.7980873    30.801768 -0.011064604  -0.35736818 -0.013102128   0.38236204 -0.088481841    3.6518651 
  657000    10.717399    1.2517681    9.4656307  -0.33789444   0.83469738     1.017115   0.71359692   -3.5502959            3     5.812815    8.0734989    8.1486624    1.2162837  0.016058769 -0.066820992  -0.11309492    5.6562613    5.6643016    1.0804903        0.075    1.2637547          0.5   0.12005448    4.1647758    2.8175564    30.801768 -0.021891889  -0.43875933 0.0067731914   0.33570382  -0.15926394    5.3351113 
  658000    10.762555      1.29478    9.4677746  -0.32809486   0.86337836    1.0180231   0.76077292   -3.5502959            3    5.6506405    8.0183837    7.9212712    1.0122665  0.091872978  0.043819731 -0.042048127     5.483737    5.5019945    1.0796792        0.075    1.2753124          0.5   0.11996436    4.1679047    2.8042925    30.801768 -0.033390117  -0.36471325 -0.024682621   0.42956409   0.18603965   0.36809835 
  659000    10.761494    1.2614578    9.5000361  -0.32661202    0.8411586    1.0051907   0.73229714   -3.5502959            3    5.4848898    7.7788579    7.8665669   0.80924462 -0.014029274 -0.023225638  0.061907885    5.3242335    5.3381176     1.058532        0.075    1.2727752          0.5   0.11761467    4.2511704    2.7945961    30.801768 0.0016221951  -0.31916354 -0.013444342   0.32433697  -0.63988015    3.1141261 
  660000    10.795073    1.3029478    9.4921249  -0.35023503    0.8688248    1.0117088   0.77404879   -3.5502959            3    5.6747405    7.9810091    7.9756485     1.067564 -0.006272229  0.019478382  0.037270759    5.5049245    5.5270165    1.0701436        0.075    1.2649812          0.5   0.11890484    4.2050432    2.8172946    30.801768  0.011436355  -0.36136315  -0.03403858   0.42365874   -1.5720287    6.7297573 
  661000    10.788646     1.271529    9.5171169  -0.34615521   0.84787426    1.0033786     0.744691   -3.5502959            3    5.4649789    7.8074684    7.8302401   0.75722809  0.009828751   0.12529584 -0.012638392    5.3016035    5.3184712    1.0658568        0.075    1.2599843          0.5   0.11842853    4.2219555    2.8311227    30.801768 -0.016453067   -0.3539356  0.014885784   0.36723405  -0.46385879  -0.25608441 
  662000    10.749972    1.2711435    9.4788289  -0.33125031   0.84761719     1.004592    0.7434551   -3.5502959            3    5.6234992      7.92162    7.9653236   0.98355397 -0.0038513438  0.075263158   0.14406312     5.460395    5.4768143    1.0680627        0.075     1.250816          0.5   0.11867363     4.213236    2.8186683    30.801768  0.027468769  -0.37014619  0.027877376   0.36353626   -2.0240525    3.1875405 
  663000    10.826445    1.2916894    9.5347554  -0.32481739    0.8613175   0.98510296   0.77924989   -3.5502959            3    5.7243602    7.9815982    7.9964998    1.1949825 -0.024627847 -0.099053887 -0.078333479    5.5534031     5.580521    1.0676841        0.075     1.257399          0.5   0.11863156      4.21473    2.7972996    30.801768 0.0019590015  -0.40339951 0.0021974673   0.46606479    1.3764208    4.8048223 
  664000    10.765784    1.2699055    9.4958782  -0.32346143   0.84679169   0.99498405   0.74847453   -3.5502959            3    5.5323834    7.8463459    7.8923303     0.858474 0.0077384515  0.065421035  -0.08135763     5.368178    5.3871015    1.0547145        0.075    1.2638899          0.5    0.1171905    4.2665573    2.7913337    30.801768 -0.017486498  -0.32462603  0.020481186   0.33411579    2.2088581    5.1577803 
  665000    10.790073    1.2711314    9.5189416  -0.34457233    0.8476091   0.98323326    0.7576571   -3.5502959            3    5.6604166    7.9559634    7.9846376    1.0406488 -0.026757317 -0.044188495 0.0023747857    5.4941967    5.5168504    1.0758825        0.075    1.2659616          0.5    0.1195425    4.1826128    2.8164595    30.801768  0.018754859  -0.30794901 0.0057055505   0.35857448  -0.61641559    2.5997138 
  666000    10.816149    1.2978773    9.5182722   -0.3256641   0.86544367    1.0149025   0.76629051   -3.5502959            3    5.5508165    7.8962051    7.8787015    0.8775429 -0.0047248193  0.061761006  0.090210001    5.3827025    5.4026262    1.0543927        0.075    1.2752117          0.5   0.11715474    4.2678596    2.8023854    30.801768 -0.0067838723  -0.41027834 -0.017171783   0.32126472   -1.8592694  -0.76062041 
  667000    10.788006    1.2743864    9.5136197  -0.33220089   0.84977961   0.99449745   0.75377605   -3.5502959            3    5.7666497    8.0297734     8.047657    1.2225187 -0.010428442  -0.16106401  0.015063428    5.6012812    5.6214388    1.0757442        0.075    1.2555318          0.5   0.11952714    4.1831505    2.8147311    30.801768 -0.0010419059  -0.35298778 -0.0099572421   0.35702301    1.7536416    3.6636173 
  668000    10.736277    1.2452477     9.491029  -0.31080768   0.83034951    1.0124011   0.70949103   -3.5502959            3    5.6396956    7.9693091    7.9885151   0.96126258 0.0081714889   0.15759997  0.035236034    5.4840427    5.4918705    1.0661749        0.075    1.2687036          0.5   0.11846387     4.220696    2.8329832    30.801768  0.012856321  -0.36819097 0.0066592996   0.28351825   -4.0002664   0.75992163 
  669000    10.734325    1.2630275    9.4712978  -0.35173812   0.84220533    1.0194473   0.72455231   -3.5502959            3    5.4825138    7.8552853     7.849715   0.74254118 -0.011023441  -0.01917003  0.069510012    5.3235566    5.3336599    1.0840455        0.075    1.2762772          0.5    0.1204495    4.1511171     2.826896    30.801768 -0.00060366058  -0.35463845 -0.0020047015    0.3371063    1.7465183    2.2957935 
  670000    10.786018    1.2767751    9.5092428  -0.33733635   0.85137245    1.0118779   0.74486193   -3.5502959            3    5.5316995    7.9084449     7.878601   0.80805262  -0.01731157  0.022975153 -0.078844596    5.3682867    5.3839508    1.0598214        0.075    1.2650638          0.5   0.11775793    4.2459986    2.8086684    30.801768 -0.0013059058  -0.33729195 0.0059809496   0.34443072    1.0211936  -0.99020725 
  671000    10.755081    1.2497129    9.5053677  -0.32467779   0.83332694     0.978374   0.73709818   -3.5502959            3    5.6935148    7.9567286    8.0343265    1.0894892 -0.012805827  0.064317595  0.028331961    5.5318052    5.5506581    1.0514841        0.075    1.2547258          0.5   0.11683157    4.2796652    2.8288273    30.801768  0.028593316  -0.39375988 -0.014165101   0.32068704    -2.298022  0.089826133 
  672000      10.7466    1.2701865    9.4764133   -0.3441973   0.84697903   0.98341625   0.75648565   -3.5502959            3    5.5270677    7.8262008    7.9320129   0.82298947 -0.018881869 -0.099421164 -0.0018858202    5.3611048    5.3834749    1.0700393        0.075    1.2584814          0.5   0.11889326    4.2054528    2.7923009    30.801768  0.011129314  -0.32912958 -0.00050484913   0.41731717  -0.20272396    7.1718353 
  673000    10.803071    1.3071031    9.4959683   -0.3248966   0.87159558    1.0283423   0.76759418   -3.5502959            3    5.6582321    7.9367926    7.9733218    1.0645818 -0.033505818  -0.13302096  0.034463498    5.4898321    5.5080793    1.0502829        0.075    1.2646432          0.5    0.1166981    4.2845598    2.7912901    30.801768 -0.0065417866  -0.41608944 0.0048684533    0.3737927  -0.10475334    3.4542544 
  674000    10.747582    1.2614988    9.4860834  -0.33655772   0.84118597    1.0036188   0.73338888   -3.5502959            3    5.6435844      7.94463    7.9581383    1.0279849  0.010703059   0.25162681 -0.026137535    5.4826886    5.4970417    1.0573759        0.075    1.2724908          0.5   0.11748621    4.2558185    2.8053626    30.801768 -0.0088842438   -0.3685533 -9.5610175e-07   0.33779677   -1.8688115    4.8818317 
  675000    10.782817    1.2801776    9.5026399  -0.34614697   0.85364124    1.0170484   0.74520032   -3.5502959            3    5.6911208    7.9600682     7.912683    1.2006113 0.0088129141  0.092133348 -0.037820616    5.5276337    5.5426172    1.0579112        0.075    1.2768841          0.5   0.11754569     4.253665    2.8050263    30.801768 -0.00011936885   -0.4022666 -0.0045275138   0.32018078   0.99980424    4.9682155 
  676000    10.753743    1.2624674     9.491276   -0.3277917   0.84183182    1.0021744   0.73542617   -3.5502959            3    5.7058712    8.0129124    7.9812071    1.1234941 -0.012631992  0.015101687  0.005583946    5.5445284    5.5595394     1.049413        0.075    1.2700265          0.5   0.11660144    4.2881117    2.7893806    30.801768 0.00062277806  -0.27925722 -0.0024448738   0.35740756     1.963156    6.1190161 
  677000    10.753108    1.2672724    9.4858359  -0.34336951   0.84503591   0.99312928   0.74678399   -3.5502959            3     5.527988    7.8866624     7.822092   0.87520964  0.030603939 -0.035873657 -0.083924712    5.3641535    5.3829769    1.0572851        0.075    1.2647033          0.5   0.11747612    4.2561841    2.8009734    30.801768 -0.011137685  -0.34029149 -0.022651047   0.31539371   -1.1578488    5.7740223 
  678000    10.764372    1.2600281     9.504344    -0.333939   0.84020528    1.0096548   0.72773782   -3.5502959            3     5.580696    7.8766889    7.9369548   0.92844419  0.011247504 -0.0034508111  0.066737587    5.4210399    5.4332719    1.0560982        0.075    1.2632117          0.5   0.11734425    4.2609673    2.7727055    30.801768 0.0033378613  -0.39045413 -0.032571598   0.33325282      2.83286    4.0789973 
  679000    10.766197    1.2865615    9.4796356  -0.33272365   0.85789815    1.0340433   0.74098096   -3.5502959            3     5.760171    8.0136781    8.0598401    1.2069949 -0.040151499 -0.029197922 -0.045247541    5.5976096    5.6091859    1.0656911        0.075    1.2663896          0.5   0.11841012     4.222612    2.8103323    30.801768 -0.036063302  -0.37542961 -0.028239417   0.40844688    -3.563089     5.911368 
  680000    10.780758    1.2581383    9.5226202  -0.32234905   0.83894511   0.97902367   0.74602525   -3.5502959            3    5.4931683    7.9177824    7.8071973   0.75452513  0.026727828  -0.18245963  0.048093516    5.3295002    5.3502168    1.0634748        0.075     1.277856          0.5   0.11816386    4.2314121    2.8257895    30.801768 -0.012541954  -0.36520329 -0.0046161843   0.33681933    1.6029093    3.8430981 
  681000    10.755852    1.2851785    9.4706736  -0.34074114   0.85697597    1.0238353   0.74623867   -3.5502959            3    5.7127896    7.9848896    8.0327407    1.1207385  0.020899599  -0.17437979 -0.0082966193    5.5490747     5.563295    1.0666055        0.075    1.2660654          0.5   0.11851172    4.2189921    2.8032945    30.801768 -0.013173691  -0.33033762  0.023428553   0.39338063    1.5228826    1.9425415 
  682000    10.748998    1.2673284    9.4816693  -0.33927941   0.84507326    1.0226761   0.72718113   -3.5502959            3    5.5481914     7.868584    7.8632312   0.91275911 0.0053165606   0.22504739 -0.036339318    5.3886575    5.3988661    1.0488762        0.075    1.2575856          0.5    0.1165418     4.290306    2.7954546    30.801768 -0.0013594428  -0.33101505 0.0093741493   0.34657486   -4.3922487    4.3088668 
  683000    10.751599    1.2667461     9.484853  -0.33917512   0.84468494   0.97975065   0.75510354   -3.5502959            3    5.6806981     8.001175    7.9801884     1.060731   0.04846054  0.089345487 0.0072390237    5.5150384    5.5376405    1.0698114        0.075       1.2511          0.5   0.11886793    4.2063491     2.786811    30.801768 0.0036142052  -0.38170478 -0.0088875758   0.35270379  -0.87060085  -0.51385325 
  684000    10.727111    1.2575793    9.4695318  -0.34725271   0.83857238    1.0057338   0.72762722   -3.5502959            3      5.64336    7.9011231    7.9456145    1.0833425 -0.001503625 -0.045413543 -0.041447761    5.4837283    5.4965085    1.0727916        0.075    1.2561766          0.5   0.11919907    4.1946637    2.8073645    30.801768 -0.013613469  -0.45787955 0.0074253334   0.31903355    2.9796996    4.3180351 
  685000    10.770739    1.2752251    9.4955142  -0.33437025   0.85033887   0.98308809   0.76230132   -3.5502959            3    5.6416688    7.9607277    7.9588854    1.0053932  0.027731495  0.070405517 -0.0098478857      5.47443    5.4981238     1.075199        0.075    1.2465605          0.5   0.11946655    4.1852718    2.8366177    30.801768  0.017742103  -0.35555942 -0.0078985726   0.33802715  0.057126882    4.0250949 
  686000    10.761955    1.2823439    9.4796107  -0.33832374    0.8550858    1.0185179   0.74662882   -3.5502959            3    5.6945039    8.0140252    7.9157863    1.1537001  0.011360108   0.13597828  0.093853819    5.5307034    5.5457856    1.0775367        0.075    1.2511863          0.5    0.1197263     4.176192    2.8030526    30.801768   0.01017743  -0.37752709 -0.0070408072   0.40003723  -0.19921154    4.2394242 
  687000    10.776551    1.2801946    9.4963569  -0.32328838   0.85365257    1.0048013   0.75337031   -3.5502959            3    5.8179868    8.0821954     8.060389    1.3113759 -0.031491834  0.036608484 -0.0070605262    5.6527073    5.6712714    1.0714131        0.075    1.2666926          0.5   0.11904589    4.2000608    2.8123274    30.801768 -0.014681567  -0.41435893 -0.024117057   0.33544109  0.043776271    6.9172442 
  688000    10.759745     1.258316    9.5014285  -0.33296498   0.83906364   0.98299067   0.74358245   -3.5502959            3    5.7261887    8.0336438    8.0059076    1.1390146   0.02414941 -0.054737469 -0.056337245    5.5630565    5.5826579    1.0640022        0.075    1.2595373          0.5   0.11822247    4.2293146    2.8290217    30.801768 -0.0015859093  -0.36461985 -0.006712177   0.37270733  -0.93545566   0.92501285 
  689000    10.779621    1.2759256    9.5036955   -0.3013436   0.85080598    1.0064955   0.74750055   -3.5502959            3    5.6164869    7.9231079     7.979496   0.94685675 -0.0037426455 -0.067642243 -0.028531658    5.4524952    5.4695241    1.0630092        0.075    1.2578298          0.5   0.11811214    4.2332652    2.8129986    30.801768 -0.021498951  -0.40990939   0.01596508   0.34984123    2.2635514    1.2854162 
  690000    10.710109     1.254121    9.4559882  -0.32274191   0.83626636   0.99395392   0.73162572   -3.5502959            3    5.7383901    8.0333953    8.0187575    1.1630176 -0.0027402736 -0.025862235 -0.040441479    5.5778811    5.5932586    1.0620317        0.075    1.2562059          0.5   0.11800352    4.2371618    2.8202748    30.801768  0.012644065  -0.29731311 -0.0035097615   0.39231795   -1.4202296    6.4541974 
  691000    10.785746    1.2887516    9.4969945   -0.3096525   0.85935852   0.99744739   0.76777045   -3.5502959            3    5.4649941    7.8314449    7.8530865   0.71045102 0.0048129146   0.19130298 -0.017543287    5.2965555    5.3193525    1.0660167        0.075     1.258528          0.5    0.1184463    4.2213223    2.8154813    30.801768 6.3714192e-05  -0.37914969 0.0013479752   0.38138232   -1.0154502    1.2589774 
  692000    10.805347    1.2914844    9.5138629  -0.32807284   0.86118082    1.0118431    0.7612251   -3.5502959            3    5.7192122    7.9087411    7.9557134     1.293182 -0.0018896659   0.14717133  -0.07327175    5.5522095    5.5714685    1.0614908        0.075     1.260377          0.5   0.11794342    4.2393207    2.8007698    30.801768 -0.0020981126  -0.42584432  0.007322314   0.40456955   -1.0588302    6.8194867 
  693000    10.742393    1.2657425    9.4766506  -0.32607037   0.84401571    1.0192191   0.72772015   -3.5502959            3    5.4387823    7.8316939    7.8354657   0.64918729  0.021430804  -0.12670423  0.091095015    5.2791301    5.2899617    1.0687035        0.075    1.2653264          0.5   0.11874483    4.2107097    2.8038623    30.801768 0.0025309764  -0.38805122 -0.0071647071   0.33979892   0.97104106     2.218756 
  694000    10.759712    1.2618896    9.4978229  -0.34856904   0.84144654   0.99170994   0.74174902   -3.5502959            3    5.6294058    7.9237237    7.9194531    1.0450405  0.020006199  0.076735778  -0.04665396    5.4666759    5.4846019    1.0644261        0.075    1.2684796          0.5   0.11826957    4.2276302    2.7904124    30.801768 -0.014583667  -0.36722165  0.008062891   0.37390573  -0.21927046    4.2573419 
  695000    10.716597    1.2449558    9.4716416  -0.34234263   0.83015486   0.98132443   0.72985005   -3.5502959            3    5.5549687    7.8739211    7.8910813   0.89990366 -0.025548784   0.14386595 -0.084260668    5.3948493    5.4116813    1.0577329        0.075    1.2692291          0.5   0.11752588    4.2543823    2.7938572    30.801768  -0.01601714  -0.35912894 -0.0079730725   0.31059814    -2.511067    3.0157136 
  696000    10.760134    1.2500308    9.5101033  -0.33283286   0.83353891   0.96075785   0.74917586   -3.5502959            3    5.5740449    7.9374457    7.9156094   0.86907953 -0.017522185 -0.035106618 -0.0059481835    5.4096856    5.4337605     1.065231        0.075    1.2725995          0.5     0.118359    4.2244359    2.8119507    30.801768 -0.018403213  -0.36138272 -0.0019790991   0.34060582    3.2646881     2.223358 
  697000    10.695624     1.237047    9.4585766  -0.33381043   0.82488114   0.96798553   0.72994221   -3.5502959            3    5.6314305    7.8634528    7.9797426    1.0510961 -0.024910022 -0.060984847 -0.070182613    5.4712909    5.4900908    1.0683789        0.075    1.2731174          0.5   0.11870877    4.2119887    2.8105454    30.801768 0.0020616992  -0.36202723  -0.04071898   0.33456363    1.2530812    5.1405041 
  698000    10.749397    1.2840276    9.4653689  -0.33374461   0.85620848   0.98758115   0.76908928   -3.5502959            3    5.7351576     8.070682    8.0552247    1.0795661 -0.022034737 0.00059283203 -0.018088152    5.5664296    5.5909566    1.0816281        0.075    1.2639527          0.5    0.1201809    4.1603949    2.7902546    30.801768 -0.018160743  -0.40783363 0.0058687717   0.35379283   -4.4664522    6.4625558 
  699000    10.810197     1.278915    9.5312823  -0.31259657   0.85279936    1.0191313   0.74241154   -3.5502959            3    5.5731835    7.8778368     7.902996   0.93871756 -0.025663439  0.092702947   0.10106933    5.4103082    5.4243757    1.0715953        0.075    1.2561349          0.5   0.11906614    4.1993465     2.821277    30.801768  0.023858089  -0.38229408 -0.0086141598   0.42486075   0.10394403    3.4505242 
  700000    10.755076    1.2684669    9.4866087  -0.33333504   0.84583238    1.0037288   0.74105625   -3.5502959            3    5.6485959    7.9687272    7.9982692   0.97879133  0.019386592  -0.13956736 -0.034862301     5.486018    5.5020371    1.0604099        0.075    1.2595856          0.5   0.11782332    4.2436421    2.7723521    30.801768  0.003872855  -0.30654302 -0.0078607192   0.36037168  -0.51520104    4.3134998 
  701000    10.771216    1.2781387    9.4930769  -0.33087988   0.85228168    1.0006286   0.75386365   -3.5502959            3    5.6231543    7.9166281    7.9264146    1.0264201  0.015406279  0.059583153 -0.032963754    5.4577666    5.4770481    1.0676174        0.075     1.263459          0.5   0.11862416     4.214993    2.7969687    30.801768 0.0053926684  -0.34816563   0.03121745   0.40195765   -1.6835846    7.4062323 
  702000    10.759287    1.2836299    9.4756572  -0.33037872   0.85594333     1.030706   0.73994554   -3.5502959            3    5.5577832    7.9040596    7.9558849    0.8134052 0.0014745453  0.032334451  -0.04662603     5.395449    5.4072854    1.0693198        0.075    1.2708482          0.5   0.11881331    4.2082828     2.809303    30.801768 -0.028994709  -0.39099216 -0.017965185   0.38703727     1.487306    2.9898418 
  703000    10.799862    1.3086805    9.4911815  -0.33514651    0.8726474    1.0064714   0.78390276   -3.5502959            3    5.5882598    7.9771531    7.9077172   0.87990926 -0.013594494   0.11151951  -0.03862197     5.416282    5.4413006    1.0710773        0.075    1.2650745          0.5   0.11900859    4.2013772    2.8090464    30.801768 0.0080548408  -0.34783276 0.0085978536   0.34724912   0.35114919   -2.5400896 
  704000    10.759183     1.267558    9.4916252  -0.33865272    0.8452263   0.96952104    0.7628138   -3.5502959            3    5.6505527    7.9675667    7.9217177    1.0623736 -0.026841617 -0.088675071 -0.060545581    5.4832014    5.5089887    1.0637631        0.075    1.2588144          0.5   0.11819591     4.230265    2.7888706    30.801768  0.035652806  -0.38139946  0.039322685   0.43698784    1.4668873  -0.17882916 
  705000    10.741084    1.2714043    9.4696793  -0.32147768   0.84779111   0.98934399   0.75389328   -3.5502959            3    5.4965557    7.8973738    7.8615909   0.73070249 0.0075723037   0.18555406 -0.075299297    5.3311615    5.3520973    1.0837813        0.075    1.2488218          0.5   0.12042014    4.1521292    2.8297036    30.801768 -0.046399524  -0.34455379 -0.035400714   0.39978047   -3.3494113    2.6162147 
  706000    10.772143    1.2869219    9.4852215  -0.33578869   0.85813844    1.0187099   0.75158649   -3.5502959            3    5.6463676    7.9483923     7.929839    1.0608716 -0.030101561 -0.087667615  0.052433066    5.4814795    5.4976214    1.0596445        0.075    1.2539123          0.5   0.11773828    4.2467071    2.7957208    30.801768 -0.010292734  -0.31396937  0.010440643   0.31342985    2.1964918    6.8793597 
  707000    10.810529    1.3064584    9.5040706  -0.33277932   0.87116572    1.0248324   0.76921414   -3.5502959            3    5.6472491    7.9496549    7.9437282    1.0483643  0.016239623 -0.097330337 -0.043274775    5.4784937    5.4976089    1.0594115        0.075    1.2520034          0.5   0.11771239    4.2476412    2.7817638    30.801768 0.00042030245  -0.43895964 -0.0044253781   0.31706426    2.3444668     1.294783 
  708000    10.702076    1.2617177    9.4403583  -0.34927768   0.84133191    1.0156595   0.72561825   -3.5502959            3    5.5624169    7.8573194    7.9404778   0.88945369  0.011815319  0.070954066  0.032485692    5.4032259    5.4141161    1.0728022        0.075    1.2552826          0.5   0.11920024    4.1946223    2.8215244    30.801768    -0.016677  -0.35131693 0.0096884889   0.32243195   -2.3435595    6.3564328 
  709000     10.77047    1.2644227     9.506047  -0.31576882   0.84313565   0.98456737   0.74931674   -3.5502959            3     5.647206    7.9586518    7.9469627    1.0360034  0.042805093 0.0049748474 -0.021303484    5.4828158     5.503445    1.0753482        0.075     1.262834          0.5   0.11948314    4.1846909    2.8274643    30.801768 0.0013427145  -0.41714423  0.033013466   0.39466698    2.6043708     2.076494 
  710000    10.750544    1.2776865    9.4728571  -0.34086474   0.85198018   0.97886726   0.76784481   -3.5502959            3    5.4916719    7.8324062      7.82269   0.81991952 0.0084834832 0.0039597741  0.045982706    5.3232169    5.3487432    1.0538354        0.075    1.2546646          0.5   0.11709282    4.2701166    2.8006007    30.801768 -0.015381842  -0.35183027 0.0063072765   0.33555946   0.82117109    1.6852698 
  711000    10.748018    1.2794348    9.4685836  -0.32683158   0.85314598   0.99532666   0.75883229   -3.5502959            3    5.5503041    7.9650212    7.8906505   0.79524054  0.015114343 -0.087400263  0.035329197    5.3838263    5.4049721    1.0634534        0.075    1.2581203          0.5   0.11816149    4.2314971    2.7830801    30.801768 -0.024231437  -0.33032621  0.012016197   0.30249986    1.0141135   0.69150318 
  712000    10.743103    1.2661619    9.4769407  -0.31867723   0.84429537   0.99786487   0.74239851   -3.5502959            3     5.555934    7.9195469    7.9349017   0.81335353 -0.0055518181   0.29773496  0.022254298    5.3930616    5.4102314    1.0621812        0.075    1.2525289          0.5   0.11802014    4.2365652    2.7903692    30.801768 0.0098804148  -0.37520413   0.01283156   0.33484165   -2.0139685    2.4488053 
  713000    10.746432    1.2686192    9.4778129  -0.33073164   0.84593396    1.0159715   0.73307728   -3.5502959            3    5.3796309    7.7945485    7.7429507   0.60139364 -0.030200713 -0.087908698  0.049288316    5.2188035    5.2312845    1.0713428        0.075    1.2567484          0.5   0.11903809    4.2003364    2.8252202    30.801768  0.017816565  -0.40246685 -0.018552436   0.31959765   0.88057943  0.090327095 
  714000    10.782609    1.2766634    9.5059461  -0.31895686   0.85129794    1.0002157   0.75249964   -3.5502959            3    5.5832178    7.9616717     7.893452   0.89452957  0.050688321  0.034735694 0.00015291213    5.4181293    5.4371719    1.0635192        0.075    1.2421458          0.5    0.1181688    4.2312352    2.7743707    30.801768 0.0028317601  -0.38039006  0.033870993   0.36079252    3.0958515    8.1848292 
  715000    10.801106    1.2828745    9.5182317  -0.34444391   0.85543958    1.0036983   0.75708148   -3.5502959            3     5.322418    7.7076419    7.7265423   0.53306989  0.026668331  0.052164113 -0.093059082    5.1563244    5.1758637    1.0682329        0.075    1.2508114          0.5   0.11869254    4.2125646    2.7983781    30.801768 -0.0069347727  -0.35964819 -0.0088698631   0.34554057   -2.8294125    2.3648412 
  716000    10.760017     1.273763    9.4862544  -0.32906622   0.84936393     1.005132   0.74600564   -3.5502959            3    5.5587998      7.87181    7.8903953   0.91419399 -0.0051886242   0.14481268  0.080884946     5.395136    5.4120361    1.0717985        0.075     1.234787          0.5   0.11908872    4.1985505     2.813495    30.801768 -0.00065017758  -0.35145281 0.0035218553   0.35331209   -1.1940147   0.81597594 
  717000    10.713973    1.2553272    9.4586463  -0.33721592   0.83707064    1.0004667   0.72863098   -3.5502959            3    5.3973763    7.7505256    7.7655715    0.6760319  0.016106842 -0.0091508321 -0.0041381113    5.2375243    5.2512938    1.0580693        0.075    1.2443554          0.5   0.11756325    4.2530297    2.8106897    30.801768  0.023769885  -0.36746844 -0.0083216669   0.35867507    2.6807422    2.8513073 
  718000    10.806479    1.3096973    9.4967816  -0.32074379   0.87332542    1.0094167   0.78307205   -3.5502959            3     5.760067    8.0319229     8.111805    1.1364733  -0.02214857  -0.12518978 -0.011963721    5.5882714    5.6126777    1.0393404        0.075     1.252363          0.5   0.11548227     4.329669    2.8166617    30.801768 -0.020609855  -0.32087973  -0.01467139   0.32469843   -2.3825066    1.5485468 
  719000    10.785536    1.2823754    9.5031607  -0.32082128   0.85510676   0.97697532   0.77431267   -3.5502959            3    5.4776144    7.7539045     7.889632   0.78930656 -0.041452398  -0.21023405 -0.0079200208    5.3077404    5.3349619    1.0681965        0.075    1.2589447          0.5   0.11868849    4.2127082    2.8118054    30.801768 -0.032983764  -0.39243407 -0.021617531   0.33699579    3.1333236     3.987172 
  720000    10.765549    1.3115763    9.4539727    -0.332861   0.87457837    1.0277983   0.77292536   -3.5502959            3    5.5778688    7.9885626    7.8462206   0.89882333  0.013385329   0.11062085 -0.024377471    5.4082992    5.4277955    1.0664518        0.075    1.2518678          0.5   0.11849465    4.2195999    2.7919399    30.801768 -0.0067311539   -0.3481257 -0.0093049944   0.37517321   0.25599559    3.5638465 
  721000     10.74074     1.246187    9.4945529  -0.34746965   0.83097586   0.99764428   0.72035599   -3.5502959            3    5.5767608    7.9182515    7.8290304   0.98300038  0.010488827 -0.029526298  0.081420796    5.4187242    5.4310904    1.0699427        0.075    1.2654557          0.5   0.11888252    4.2058327    2.8195225    30.801768  0.015161052  -0.34060139 0.0045696112    0.3649897    -2.438977    2.0144546 
  722000    10.711807    1.2518963    9.4599103  -0.32671768   0.83478289   0.97318975   0.74297411   -3.5502959            3    5.9004217     8.154498    8.1450828    1.4016845 -0.021030395 -0.080855471    -0.127991    5.7374231    5.7583221    1.0773879        0.075    1.2640537          0.5   0.11970977    4.1767686     2.802223    30.801768 -0.023564542  -0.37661331 -0.0091827482   0.39973186    -1.379164    5.9803769 
  723000      10.7353    1.2719854    9.4633149  -0.33661145   0.84817857    1.0140643   0.73808596   -3.5502959            3    5.3185006    7.7639668    7.7225621   0.46897294  0.017003777  0.025315569  -0.14471759    5.1565744    5.1704327    1.0627892        0.075    1.2541992          0.5   0.11808769    4.2341417    2.8149092    30.801768  0.015745276  -0.32103782 -0.0042971214   0.29946261      1.07358   -2.0103795 
  724000    10.744628    1.2724342    9.4721937  -0.33173247   0.84847785   0.96881593   0.76869993   -3.5502959            3    5.5885009     7.952458    7.8829186   0.93012607 -0.014724174  0.043841663 -0.038434159    5.4198583    5.4470398    1.0788337        0.075    1.2687682          0.5   0.11987041    4.1711712    2.8163099    30.801768 -0.0083473502   -0.3863522 -0.015971133   0.38315625   0.74101638    4.9812381 
  725000    10.756171    1.2795825    9.4765887  -0.33358736   0.85324444    1.0028198   0.75400919   -3.5502959            3    5.7120433    7.9662224    8.0248878    1.1450198 -0.0031954889  0.094994283 -0.097663297    5.5466237    5.5656173    1.0650696        0.075    1.2688023          0.5   0.11834107    4.2250758    2.7853374    30.801768 -0.013126439   -0.3919541  -0.05037224   0.43634181   0.44441494    2.5808817 
  726000    10.775352    1.2872164    9.4881356  -0.33177097   0.85833484    1.0282106   0.74559045   -3.5502959            3    5.4966557    7.9182831      7.80113   0.77055402 -0.0027279335    0.0116341  0.093675812     5.333083    5.3465222    1.0645429        0.075    1.2691443          0.5   0.11828255    4.2271663    2.8024377    30.801768  0.010635624  -0.38091813  0.013093023   0.40572829  -0.69922877   0.22442348 
  727000    10.799659    1.2784399    9.5212196  -0.32835787   0.85248253    1.0017454   0.75345499   -3.5502959            3    5.5397867    7.8467384    7.8327464    0.9398752  0.012453804  -0.21913408  0.067125148    5.3744886    5.3935175    1.0463971        0.075    1.2733451          0.5   0.11626634    4.3004707    2.7885838    30.801768 0.0061989105  -0.34119619 -0.012996767   0.32212979    1.4260428    3.1191654 
  728000    10.812843    1.2875379    9.5253054  -0.31651914   0.85854922    1.0214367   0.75045594   -3.5502959            3    5.7631293    8.0515191    8.0798833    1.1579855   0.01712286 -0.033071298  -0.05456189    5.5984892    5.6139849    1.0687432        0.075    1.2732854          0.5   0.11874925    4.2105531    2.8454542    30.801768 -0.014578343  -0.39949579 0.0080857248   0.32762666   -2.6080451    5.5526274 
  729000     10.78727    1.2719209    9.5153487  -0.31471535   0.84813556   0.99646677    0.7497265   -3.5502959            3    5.6859277     7.999571    7.9944608    1.0637513 -0.036538561   0.10616276  -0.10806987    5.5214476    5.5404292    1.0605192        0.075    1.2583665          0.5   0.11783547    4.2432045    2.7905286    30.801768 0.0069791819  -0.33831958 0.0035910733    0.3298538  -0.85437714    1.9193505 
  730000    10.772155    1.2536666    9.5184886  -0.32526053   0.83596336   0.99718627   0.72896963   -3.5502959            3    5.5981784    7.9488257    7.9055423   0.94016721  0.020300676  -0.14014387 -0.066606855    5.4382521    5.4525749    1.0737137        0.075      1.25398          0.5   0.11930152    4.1910614    2.8266772    30.801768  0.021529145  -0.29936159 -0.00069340261   0.41772107  0.017186808    4.7390618 
  731000    10.793817    1.2865691    9.5072475  -0.33060178   0.85790323   0.99458404   0.76725178   -3.5502959            3    5.4057712    7.7476951     7.766163   0.70345557 -0.015981169   0.29320835  0.011093664    5.2374464    5.2605477    1.0668962        0.075    1.2548575          0.5   0.11854402    4.2178423    2.8278511    30.801768 0.0018709151  -0.35405049  0.012298487   0.32951464   -1.2401298    1.0059231 
  732000    10.774109    1.2496484    9.5244601  -0.31938579   0.83328396    1.0071776   0.71785617   -3.5502959            3    5.4499349    7.7814433    7.7524219   0.81593947  -0.02036968    0.2464074 -0.049735057    5.2924468    5.3028725    1.0639781        0.075    1.2500643          0.5   0.11821979    4.2294104    2.8230824    30.801768 -0.020154508  -0.35062361 -0.00083236238   0.32201748   -3.0980794    3.9223622 
  733000    10.796927    1.2723813    9.5245456  -0.32179797   0.84844255   0.99417224   0.75176506   -3.5502959            3    5.6900791    8.0002943    7.9608366    1.1091065 -0.011723097 -0.029493798  0.049995753    5.5251518    5.5449157    1.0606412        0.075    1.2367968          0.5   0.11784902    4.2427166    2.8124248    30.801768  0.031061694  -0.30829754 -0.029956828   0.40562131     2.471761    4.4615865 
  734000    10.759603    1.2798648    9.4797378  -0.31720545   0.85343268    1.0364091   0.73196724   -3.5502959            3    5.5871367    7.9033306    7.9080126     0.950067 -0.029447627  -0.14339579  0.019322092    5.4265528    5.4358061    1.0616787        0.075    1.2394503          0.5    0.1179643    4.2385705     2.828438    30.801768 -0.024401959  -0.37248128  0.004678648    0.3922329   0.79785291    4.9490097 
  735000    10.778894    1.2754771    9.5034168  -0.33315124   0.85050689    1.0042572   0.74849197   -3.5502959            3    5.5851074    7.9578832    7.9570522   0.84038679  0.017844335   0.24184916 -0.027561547    5.4208982    5.4384714    1.0732201        0.075    1.2585367          0.5   0.11924668    4.1929889    2.8117131    30.801768 -0.014222421  -0.38133987 0.0010429096   0.41499316   -1.3540953   0.56791235 
  736000    10.778287     1.276588    9.5016995  -0.31572827   0.85124764    1.0038745   0.74998075   -3.5502959            3    5.7492203     8.038242    8.0301035    1.1793155 -0.020730671 -0.054527209 -0.0050122858    5.5846845    5.6026403    1.0588639        0.075    1.2425988          0.5   0.11765155    4.2498379    2.8054767    30.801768 -0.003347225  -0.38889761 -0.0081752098   0.37511832    2.0033804    7.2498347 
  737000    10.747945    1.2506268    9.4973181  -0.32057584   0.83393633   0.98859958   0.73130767   -3.5502959            3    5.4489719    7.7745814    7.8737486   0.69858564 0.0094067858  0.030620311 -0.045076796    5.2885327    5.3046222    1.0772143        0.075     1.247238          0.5   0.11969048    4.1774417    2.8080511    30.801768 0.0011889128  -0.38008594 0.0076839019   0.40326627    2.3979516    1.4499577 
  738000    10.770705    1.2690396    9.5016658  -0.33358245   0.84621428   0.97341011   0.76187131   -3.5502959            3    5.5707627    7.9023757    7.9114858    0.8984267  0.015960519  0.078705384  0.062377819    5.4036183    5.4286309     1.056937        0.075    1.2445862          0.5   0.11743744    4.2575859    2.8231574    30.801768 -0.021838796  -0.42508565  0.005131816   0.31095126  -0.59983293    1.4566555 
  739000    10.832259    1.3094993    9.5227592  -0.31875488   0.87319341       1.0242   0.77301298   -3.5502959            3    5.6047072    7.8894707    7.9333119   0.99133887  0.024189993 -0.053523461  0.049714496    5.4351184    5.4551593    1.0521458        0.075    1.2466304          0.5   0.11690508    4.2769739    2.8059978    30.801768  0.011519747  -0.42184154  0.039622899   0.36995991   -1.7870824    3.2323209 
  740000    10.795303    1.3048347    9.4904678  -0.32355779   0.87008296    1.0255054   0.76696237   -3.5502959            3    5.7073004    7.9581047     8.049598    1.1141986  0.046531213   0.13877738 -0.0078976954    5.5390391    5.5575619    1.0611238        0.075    1.2491694          0.5   0.11790264    4.2407872    2.7970324    30.801768 -0.0061060528  -0.35450301   0.01844675   0.45528946   -2.7589303    1.3808217 
  741000    10.773122    1.2566644    9.5164579  -0.33029653   0.83796234   0.97009951   0.75032757   -3.5502959            3    5.5039957    7.8265105    7.8869379   0.79853857 -0.0003163477 -0.061972037 -0.019426438    5.3393837    5.3623472    1.0548907        0.075    1.2480612          0.5   0.11721008    4.2658447    2.8002252    30.801768 -0.00014105423  -0.36788256 -0.034599845   0.38510027   -2.6666668    2.9790133 
  742000    10.766331    1.2649435    9.5013879  -0.33689414   0.84348292   0.97259327    0.7578647   -3.5502959            3    5.4683431    7.8308943    7.8005932   0.77354192 -0.0077117278 -0.038759503 -0.045851589    5.3020777    5.3263306     1.059039        0.075    1.2506232          0.5   0.11767099    4.2491355    2.8124696    30.801768 0.0074827963  -0.33674545  0.038909551   0.36817742    1.4331211    3.2261132 
  743000    10.806759    1.3112569    9.4955023  -0.32557506   0.87436541    1.0619583    0.7498352   -3.5502959            3     5.568782    7.8652729    7.9274789    0.9135942 -0.0017187978  0.042161507 -0.035370031    5.4042781    5.4137209    1.0547419        0.075    1.2510888          0.5   0.11719354    4.2664468    2.8080898    30.801768 -0.015691419  -0.30935936 -0.0027716242   0.38031823  -0.44402554 -0.044110372 
  744000    10.774186    1.2747959    9.4993906   -0.3170991   0.85005267    1.0311226   0.72985482   -3.5502959            3    5.6871981    7.9350592    7.9688815    1.1576535  0.025513063  0.016102756 -0.098743821    5.5270776    5.5366394    1.0601547        0.075    1.2562516          0.5   0.11779496    4.2446637    2.7999965    30.801768 0.0021109312  -0.37037126  0.021204755   0.38671358   -3.1966913    6.1411716 
  745000    10.783474    1.3042098    9.4792642  -0.31137363   0.86966628    1.0133819   0.77433711   -3.5502959            3    5.5147454    7.8980269    7.8588106   0.78739878  0.023465617  -0.13774848 -0.052568272    5.3448661    5.3667772    1.0646998        0.075     1.251731          0.5   0.11829998    4.2265435    2.8352981    30.801768  -0.00157352   -0.3615044 -0.0063815854   0.32721651    2.9770704   -1.2441455 
  746000    10.759581    1.2579365    9.5016444  -0.31837019   0.83881056   0.99131132   0.73762297   -3.5502959            3     5.387725    7.8029408     7.754356   0.60587823   -0.0264557 -0.046794036 0.0051560407    5.2259003    5.2429793    1.0640349        0.075    1.2523446          0.5    0.1182261    4.2291846     2.826142    30.801768 -0.0022377812  -0.39494531 -0.0042383642   0.43589898    1.0600697   -1.4575351 
  747000    10.776597    1.2570409    9.5195562  -0.33377451   0.83821337   0.97284267   0.74892004   -3.5502959            3    5.5615036    7.8928632    7.8892484   0.90239928  0.041978947  0.053427389   0.06672306    5.3972005    5.4194547    1.0677059        0.075     1.251874          0.5   0.11863399    4.2146439    2.8224863    30.801768 -0.0036353439  -0.30365997 -0.020011037   0.35765441   -2.5980859    2.2687879 
  748000    10.728904    1.2701259    9.4587784  -0.33843452   0.84693866     1.020703   0.73160198   -3.5502959            3    5.4789867    7.7962415    7.8255101   0.81520847  0.026438998  -0.11077191  -0.10488305    5.3184829    5.3299494    1.0695482        0.075    1.2552744          0.5   0.11883869    4.2073839    2.8094458    30.801768 -0.016335806  -0.39190237 -0.015698128   0.32177188 -0.097845957    3.6265303 
  749000    10.750618    1.2662327     9.484385  -0.32705945   0.84434262   0.96992887   0.76107021   -3.5502959            3    5.5635054    7.9392263    7.8527398   0.89855012   0.01506752  -0.14624854  0.058378217    5.3965367    5.4218819    1.0511965        0.075    1.2434866          0.5   0.11679961     4.280836    2.7813751    30.801768 -0.00097985402  -0.35042683   -0.0246995   0.35124191    4.3962749     4.287355 
  750000    10.787592    1.2853639    9.5022277  -0.32856883   0.85709959    1.0042979   0.75944785   -3.5502959            3    5.6087834    7.8966312    7.9526184   0.97710048  0.034318015   0.05974052   -0.1249098    5.4421706    5.4621415    1.0560115        0.075    1.2399517          0.5   0.11733461    4.2613171    2.7778222    30.801768 -0.017196074   -0.4735422  0.031842588   0.35689263    -1.292746    1.0079819 
  751000    10.787929    1.2709817    9.5169478  -0.33924736   0.84750932   0.99438267   0.75007031   -3.5502959            3    5.7271637    7.9979427    8.0202405    1.1633079 -0.011516564 -0.087990681 -0.018751077    5.5626082    5.5819695    1.0524646        0.075    1.2393806          0.5   0.11694052    4.2756781    2.7774592    30.801768  0.015616126  -0.36086406 -0.0038505668   0.32022305   -2.4246425    5.9317101 
  752000    10.792365    1.2910996    9.5012653  -0.32385966   0.86092423    1.0295548   0.74900949   -3.5502959            3    5.6337613    7.9604275     7.974209    0.9666473  0.038632386   0.01325534 -0.040566059    5.4694385    5.4834315    1.0565678        0.075    1.2381646          0.5   0.11739642    4.2590736    2.7901487    30.801768  0.010276542  -0.43011195 -0.0034892844   0.36920269    1.1717044    3.5405361 
  753000    10.761422     1.246888    9.5145345   -0.3156791   0.83144324    1.0033457   0.71733999   -3.5502959            3    5.4890224    7.7921742     7.831992   0.84290088 -0.026752157  -0.10822131 -0.049507702    5.3316475    5.3425195    1.0462587        0.075    1.2356193          0.5   0.11625097    4.3010394    2.7980245    30.801768 -0.013070529  -0.33592024 -0.033370698   0.36686065 -0.047212207   -2.5774695 
  754000    10.789216    1.2796342    9.5095823  -0.32595508    0.8532789    1.0083963   0.75035513   -3.5502959            3    5.8797756    8.1173977    8.1165385    1.4053907  -0.02483315  -0.03729587  -0.07162043    5.7151577    5.7325353    1.0584931        0.075    1.2428555          0.5   0.11761034    4.2513269    2.7885306    30.801768 -0.0077100493   -0.4376905 -0.001882814   0.31323271  -0.11276845    3.2306048 
  755000    10.780411    1.2846564     9.495755  -0.31566336   0.85662783    1.0092464   0.75536844   -3.5502959            3    5.5833951    7.9387831    7.9138606   0.89754147 -0.0089338438  0.058372204  0.017836903    5.4176772    5.4360306    1.0645122        0.075    1.2375082          0.5   0.11827913    4.2272885    2.8289797    30.801768 0.0052370984  -0.37482604   0.01819139   0.36098578    1.3907031    3.0192984 
  756000    10.773951    1.2670553    9.5068961  -0.33791947    0.8448911    1.0277677   0.72348891   -3.5502959            3     5.574122    7.9230398    7.8725313   0.92679497  0.029547782   0.12780588  0.084619056    5.4153981    5.4240532    1.0725702        0.075    1.2432126          0.5   0.11917446    4.1955297    2.8289324    30.801768 0.0022704771   -0.4261745 -0.00061713586   0.42681856   0.12693609    6.0660555 
  757000    10.715479    1.2517779    9.4637009  -0.32197059   0.83470393    1.0058982   0.72107324   -3.5502959            3    5.3509362    7.7850371    7.7052047   0.56256686  0.016899215 -0.016418871  0.039247582    5.1927423    5.2040607    1.0636903        0.075    1.2304876          0.5   0.11818781    4.2305548     2.820547    30.801768 0.0077048191  -0.38257517  0.013749823   0.32743126  0.078341675   -3.1996076 
  758000    10.781652    1.2506872    9.5309645  -0.32314003    0.8339766   0.97534906   0.74019374   -3.5502959            3    5.6381248     7.977234    7.9162353     1.020905 -0.0071581013  -0.07958508 -0.038120548    5.4757361    5.4957098    1.0549039        0.075    1.2254274          0.5   0.11721155    4.2657913    2.8055409    30.801768 -0.048751392  -0.32418294  0.002766196   0.33434991    1.1560402    4.2591938 
  759000    10.778714     1.260455    9.5182589  -0.32946085   0.84048997   0.96944748   0.75497237   -3.5502959            3    5.4390314    7.8076292    7.7766766   0.73278843  0.028977467   0.04634821 -0.067241267    5.2734005    5.2974782    1.0684774        0.075    1.2327451          0.5   0.11871971    4.2116007    2.8230704    30.801768 -0.0050819438  -0.37490925  -0.03649171   0.36712867   -0.5267241    4.5936616 
  760000    10.755137    1.2574949    9.4976419  -0.32311634   0.83851608    1.0059802   0.72736941   -3.5502959            3    5.5772472    7.8830179    7.9163902   0.93233364 0.0052911522  -0.11734246 -0.00097776269     5.417672    5.4303597    1.0548635        0.075    1.2427205          0.5   0.11720706    4.2659547    2.7956103    30.801768 -0.014534329  -0.34591194 0.0045388841   0.38740368    1.0116186   -2.5373717 
  761000    10.778605    1.2650641    9.5135408  -0.32798493   0.84356338   0.99601491   0.74241032   -3.5502959            3    5.5958606    7.9655977    7.9278763   0.89410784 -0.024090499  -0.11885495  0.010313967    5.4329856    5.4504281    1.0756185        0.075    1.2425534          0.5   0.11951317    4.1836394    2.8351849    30.801768  0.041239991  -0.31921463 -0.0020893839   0.42182468   0.49756703    4.9749146 
  762000     10.81093    1.3016423     9.509288  -0.33570405   0.86795422     1.040915   0.75316013   -3.5502959            3    5.7466798    8.0742517    8.0337642    1.1320237 -0.011364535  0.069721556 -0.041424171    5.5814465    5.5946913    1.0727592        0.075    1.2358897          0.5   0.11919547    4.1947903    2.8127449    30.801768  -0.00614675   -0.3919418  0.021500688   0.32943697    4.6553156    1.1615131 
  763000    10.724029    1.2347403    9.4892883  -0.33214786   0.82334301    0.9814688   0.71840593   -3.5502959            3    5.7669968    8.0026578    8.0871951    1.2111374 -0.0050038564   -0.2007006 -0.0075130223     5.609388    5.6236883    1.0667867        0.075    1.2473036          0.5   0.11853186    4.2182753      2.82216    30.801768  0.016502861  -0.34635415  0.031930892    0.3561652   -2.1129516    4.1802853 
  764000    10.742799    1.2601665    9.4826326  -0.33327155   0.84029755    1.0071889   0.72953276   -3.5502959            3    5.5377437    7.9238232    7.8202138     0.869194  0.025066735  -0.02881309  0.016197958    5.3776938    5.3906796    1.0646822        0.075    1.2421398          0.5   0.11829802    4.2266135    2.8054858    30.801768 -0.0026030822  -0.35388939 -0.0028793809   0.36586749  0.011967825    3.8187078 
  765000    10.752996    1.2672238    9.4857719  -0.32403479   0.84500345    1.0221547   0.72741188   -3.5502959            3    5.6751459    7.9706719    7.9516315    1.1031344  0.019555203   0.24704944  -0.06539868    5.5155614    5.5258967    1.0584801        0.075    1.2439761          0.5    0.1176089    4.2513791    2.8087012    30.801768  0.012083437  -0.34854304 -0.0027308545   0.38611428   -1.9900081    4.1107554 
  766000    10.774794    1.2502208     9.524573  -0.32348479   0.83366561    0.9890287   0.73057107   -3.5502959            3     5.631395    7.9044334    7.9510024    1.0387493 -0.011107828  0.049318723 -0.027725575    5.4711174    5.4869826     1.058316        0.075    1.2375849          0.5   0.11759066    4.2520383    2.8057036    30.801768 -0.0028809876  -0.35121491 -0.0021737745   0.37549652    3.5528053     5.333457 
  767000    10.790583    1.2946297    9.4959538  -0.33195237   0.86327813    1.0179654   0.76064434   -3.5502959            3    5.4927963    7.8585548    7.7997484   0.82008559   0.01655094  -0.10850673  0.044950531     5.325921    5.3441587    1.0536337        0.075    1.2403514          0.5   0.11707042    4.2709338    2.7775032    30.801768 -0.0084706042  -0.34448439 -0.015423072   0.39197634  -0.98198538    2.1368387 
  768000     10.77996    1.2681903    9.5117699  -0.32214941   0.84564798   0.99850968   0.74422269   -3.5502959            3    5.6008363    7.9131817    7.8674722    1.0218549 0.0061144408  0.006074117 -0.050109487    5.4375637    5.4550395    1.0512287        0.075    1.2516444          0.5   0.11680319     4.280705    2.8193338    30.801768 -0.019215635  -0.34965752  0.034408304   0.33480749    -1.394083    7.0653379 
  769000    10.741913    1.2336171    9.5082961  -0.32765675   0.82259402   0.96061076   0.73104038   -3.5502959            3    5.4469742    7.7639866    7.7643846   0.81255136 -0.0067715028   0.10637009 -0.058353484    5.2865936    5.3067112    1.0464982        0.075    1.2479878          0.5   0.11627757    4.3000553    2.7956344    30.801768  0.036635792  -0.34698039  0.018517854   0.27573795  -0.12837586    3.2403116 
  770000    10.831584    1.2935757    9.5380087  -0.31543204   0.86257528    1.0003165    0.7712198   -3.5502959            3     5.514766    7.8706584    7.8692516   0.80438809 -0.021333407   0.18496228  0.035784059    5.3455706    5.3687055      1.05435        0.075    1.2382899          0.5      0.11715    4.2680326    2.8289192    30.801768 -0.010473366  -0.39214783 -0.004158334   0.31461623  0.015349602    6.2163806 
  771000    10.763888    1.2735263    9.4903617  -0.31716574    0.8492061   0.99082811   0.75526278   -3.5502959            3     5.736122    8.0539174    8.0053788    1.1490698 0.00079939823  -0.19247267 -0.032313966    5.5704273    5.5914469     1.065302        0.075    1.2332777          0.5   0.11836689    4.2241541    2.8132843    30.801768  0.016447964  -0.39089951 -0.0009861547    0.4131152    1.0850004    5.2978317 
  772000    10.720843    1.2747863    9.4460566  -0.32723995   0.85004629    1.0048866   0.74730573   -3.5502959            3    5.4925421    7.8011304    7.8800783   0.79641769 -0.021469268 -0.097583753 -0.041524334    5.3285931    5.3458143     1.040099        0.075    1.2450033          0.5   0.11556656    4.3265111    2.7862954    30.801768 -0.017640832  -0.31365735 0.0054208379   0.38816555    3.2076267    1.4010055 
  773000    10.751306    1.2614654    9.4898404  -0.32770353   0.84116367    0.9717944    0.7545327   -3.5502959            3    5.6636715    7.9861981    7.9391312    1.0656851 0.0086279826  0.068462784 -0.032791677     5.498137    5.5217755     1.042742        0.075    1.2389834          0.5   0.11586022     4.315545    2.7859453    30.801768 -0.011979914  -0.31734435  0.021179111   0.40847313  -0.90711667    1.0931909 
  774000    10.806422    1.2901782    9.5162441   -0.3139957   0.86030981    1.0095977   0.76126852   -3.5502959            3    5.6237951     7.939613    8.0049553   0.92681696 -0.014948454 -0.043974114 -0.018774332    5.4567828    5.4763793    1.0490651        0.075    1.2422576          0.5   0.11656279    4.2895334    2.8093096    30.801768  0.011412251  -0.35801961  0.017872088   0.37313236   -0.9568147     5.012259 
  775000    10.816861    1.2707838    9.5460772  -0.31584483   0.84737735    1.0030069   0.74411052   -3.5502959            3     5.917449    8.1084402    8.1556293    1.4882774 -0.009541641   0.01916728  0.042410846     5.754201    5.7709956    1.0508902        0.075    1.2427505          0.5   0.11676558    4.2820838    2.8098108    30.801768  0.012654667  -0.36947735  0.027607147   0.35762525   0.71228738    8.5816373 
  776000    10.769347    1.2655812    9.5037655  -0.31534064   0.84390816   0.98317403   0.75153104   -3.5502959            3    5.5618204      7.88616    7.8943144   0.90498667 0.0058394939 -0.092524364 -0.0049597807    5.3969444    5.4182628     1.053782        0.075    1.2443397          0.5   0.11708689    4.2703329     2.796299    30.801768 -0.025180105  -0.42633278 0.0078401363   0.38527519  -0.87028518    5.4414213 
  777000    10.768817    1.2879788    9.4808383  -0.33682258   0.85884319    1.0025869   0.76349135   -3.5502959            3    5.7018475    7.9421669    7.9843536     1.179022  0.038145006  0.013348109  0.028827236    5.5343476    5.5554554     1.076319        0.075    1.2549095          0.5   0.11959099    4.1809168    2.8061965    30.801768  0.018965447  -0.39976746  0.036788127   0.41431811  -0.49311452   0.66739643 
  778000    10.778875    1.2708293    9.5080458  -0.33578546   0.84740767   0.99180358    0.7516175   -3.5502959            3    5.5376865    7.8448083    7.8725134   0.89573776  0.018752737   0.15416918 0.0049308083    5.3727916    5.3928689    1.0747428        0.075    1.2460076          0.5   0.11941587    4.1870483    2.8007981    30.801768 -0.0014467123  -0.34685645 0.0082656704   0.35026706  -0.53889738    2.8444996 
  779000     10.78851    1.2864565    9.5020535  -0.31648436   0.85782816     1.038376   0.73798067   -3.5502959            3    5.6471159    7.9449778    7.9868266    1.0095433   0.01240632 -0.088410196  0.024369663    5.4852127    5.4954981    1.0629759        0.075    1.2504063          0.5   0.11810843     4.233398    2.7843928    30.801768  0.003698239  -0.34517042 0.0028132929   0.29630978    2.5754112    3.7637553 
  780000     10.72771    1.2473404      9.48037   -0.3353198   0.83174491   0.98227675   0.73186513   -3.5502959            3    5.7274463    7.9859327    8.0745975    1.1218086  0.022464982   0.11043198   0.10558665    5.5668847    5.5840198    1.0594986        0.075    1.2367105          0.5   0.11772207    4.2472921    2.7780677    30.801768   -0.0138929  -0.32399785 -0.00019319289   0.35503365   -3.5203343    2.1416737 
  781000    10.745222    1.2662977    9.4789239  -0.33774195   0.84438594   0.99237285   0.74620463   -3.5502959            3    5.7100774    8.0048385    8.0038042    1.1215896 -0.012778566 -0.011549951  0.036431154      5.54637    5.5651768    1.0584933        0.075    1.2372244          0.5   0.11761037    4.2513258     2.787453    30.801768 -0.0076462977  -0.30116666  0.023355441   0.34639476    1.9744355    1.6304711 
  782000    10.806945    1.2790121    9.5279331  -0.32691494   0.85286409    1.0153534   0.74503373   -3.5502959            3    5.5606575    7.9312487     7.864525   0.88619871 -0.015829902  -0.15225615  0.065422532    5.3972069    5.4124013    1.0525908        0.075     1.241728          0.5   0.11695453    4.2751658     2.795501    30.801768 -0.016719488  -0.38716203  0.033367088   0.32348319    2.4528455    2.4247459 
  783000    10.755618    1.2549996    9.5006186  -0.32522119   0.83685219   0.97133632   0.74765496   -3.5502959            3    5.6352556    7.9196451     7.879567    1.1065549 -0.038106688  0.047630366  0.070860703      5.47123    5.4934266      1.05267        0.075    1.2386523          0.5   0.11696334    4.2748438    2.8018623    30.801768  0.012903743  -0.35460737  0.021690144    0.3648038   -2.9972887    1.8523328 
  784000    10.795073    1.2901902    9.5048831  -0.32836194   0.86031781    1.0107908   0.76048777   -3.5502959            3    5.5571108    7.9463059    7.8791773   0.84584917  0.015199016   0.18023313 -0.042727542    5.3902698    5.4095208     1.045211        0.075    1.2429186          0.5   0.11613456    4.3053506    2.7898173    30.801768  0.015958937  -0.34333502 -0.010493502   0.37081105   -2.0027121    3.7139499 
  785000    10.790745    1.2784716     9.512273   -0.3201012   0.85250365   0.98308986    0.7659065   -3.5502959            3    5.5304701    7.9610582    7.8141151   0.81623704 -0.044346856  -0.13424925  0.018735981    5.3624404    5.3869249    1.0611035        0.075    1.2474889          0.5   0.11790038    4.2408683     2.798058    30.801768 -0.0071306205  -0.31477836 -0.035022368   0.36431287    2.4195137    5.6154277 
  786000    10.745538    1.2619719    9.4835658  -0.33364546   0.84150144   0.98738221   0.74472083   -3.5502959            3    5.3562938    7.6804282    7.8191828    0.5692705  0.018738042  -0.14177299  -0.08271211    5.1929119    5.2121219    1.0463542        0.075    1.2485949          0.5   0.11626158     4.300647    2.8163504    30.801768 -0.0017552539  -0.33369901 -0.015243734   0.35242543     1.071701  -0.92034841 
  787000     10.74841    1.2700432    9.4783664   -0.3282281   0.84688349   0.97783977   0.76003797   -3.5502959            3    5.6139849    7.9344419    7.8855394    1.0219733  0.016616467   0.07167593 -0.055812663    5.4472426    5.4712062    1.0445329        0.075    1.2536694          0.5   0.11605921    4.3081459    2.8091004    30.801768 0.0077300833  -0.30704227 -0.00010697182   0.38055174     1.624178    3.2830921 
  788000    10.796364    1.3002766    9.4960875  -0.32060307    0.8670436    1.0235276   0.76321538   -3.5502959            3    5.4822711    7.8449847    7.7999821   0.80184651 -0.016225704  -0.14065911 -0.036432705    5.3148318    5.3328214    1.0534064        0.075    1.2553904          0.5   0.11704515    4.2718556    2.8042917    30.801768 0.00014761162  -0.33234825 0.00025090029   0.36063523    0.7675614   -1.3509979 
  789000    10.826893    1.3052927       9.5216  -0.31144306    0.8703884    1.0122349    0.7763035   -3.5502959            3     5.527915    7.8424255     7.910933   0.83038642 -0.012912007 -0.061912025  0.021713834    5.3576043    5.3801141    1.0363623        0.075    1.2575983          0.5   0.11515137    4.3421109    2.7990278    30.801768 -0.014566922  -0.35210994 -0.021625616   0.36151619    1.1843372    1.6870431 
  790000    10.825077    1.2812204    9.5438562  -0.32694242   0.85433659   0.98442065   0.76807434   -3.5502959            3    5.3779059    7.7230337    7.7707764   0.63990771 -0.0017877846 -0.032403606  0.010205185    5.2094006    5.2341664    1.0357372        0.075    1.2551442          0.5   0.11508191    4.3447314    2.8192117    30.801768 -0.015220726  -0.32612486 -0.020527232   0.32040474   -0.7783216   -1.1070174 
  791000    10.740648    1.2746418    9.4660064  -0.32103521   0.84994988    1.0210855   0.73636384   -3.5502959            3    5.6069252    7.9728651     7.973179   0.87473161 -0.010516175  0.021257107  0.024562768    5.4453768    5.4578321    1.0487018        0.075    1.2564314          0.5   0.11652242    4.2910197    2.8122836    30.801768  0.018720661  -0.36785344 -0.016062357   0.37888245    3.4492524  -0.71002027 
  792000    10.785923    1.2908129    9.4951102  -0.33537178   0.86073303    1.0073519   0.76346828   -3.5502959            3    5.6656434    7.9517327    7.9806202    1.0645772   0.02784351  0.023061211 0.00070009611    5.4981485    5.5185555    1.0552128        0.075    1.2379591          0.5   0.11724587    4.2645425    2.8152629    30.801768 -0.012035351  -0.33888729 0.0077415432   0.35946337   -1.2207066  -0.63029318 
  793000    10.740768    1.2528825    9.4878857  -0.31678589   0.83544052   0.97654783   0.74183467   -3.5502959            3    5.5873971    7.8908179    7.9451032   0.92627012  0.017473607   0.08068213  0.055336095    5.4246484    5.4448071    1.0610321        0.075    1.2602521          0.5   0.11789245    4.2411536    2.8110983    30.801768 0.0030717778  -0.34612163 -0.010334363   0.34237731   -3.8019177    6.8532303 
  794000    10.826783    1.2939505    9.5328324  -0.32045312   0.86282525    1.0099599   0.76521802   -3.5502959            3    5.5908181     7.906538    7.8484857    1.0174307  -0.01450456   0.08541955  0.049956872    5.4229394    5.4433495    1.0586493        0.075    1.2407181          0.5    0.1176277    4.2506996    2.7902703    30.801768 -0.0076297371  -0.35081376 -0.013988332   0.35670985    1.7857929    3.3414051 
  795000    10.786527    1.2830791    9.5034477  -0.32780689   0.85557601   0.99739904   0.76150125   -3.5502959            3    5.5908807    7.8952242    7.9423114   0.93510657 -0.033990157  -0.29177545 -0.033082361    5.4238174    5.4452461    1.0566571        0.075    1.2504551          0.5   0.11740634    4.2587137    2.8051739    30.801768 -0.022344807  -0.34007491  0.011346634    0.3698262     2.636362    2.2421595 
  796000    10.770624    1.2594504    9.5111736  -0.31849738   0.83982003    1.0008579   0.73295088   -3.5502959            3    5.5268029    7.8732357    7.8669973   0.84017568 -0.028848394   0.12128548   0.04205834    5.3660032    5.3806633    1.0711057        0.075    1.2646609          0.5   0.11901174    4.2012662    2.8094555    30.801768 -0.0086356454  -0.32975446 0.0043643994   0.36927041   0.24821257    0.9759364 
  797000    10.749995    1.2904535    9.4595416  -0.33027963   0.86049335   0.98688199   0.77669288   -3.5502959            3    5.9654007    8.2759366    8.1033846    1.5168808   0.01907789  0.088093981 -0.086710825    5.7950045    5.8213017    1.0674457        0.075    1.2617756          0.5   0.11860507    4.2156713    2.8190937    30.801768 -0.036604021  -0.36079044 -0.011119171   0.34999586   -1.7840744     2.620083 
  798000    10.800352    1.2917294    9.5086229  -0.32318227   0.86134415    1.0028099   0.76750934   -3.5502959            3    5.3835752    7.7330366    7.7961674   0.62152163 -0.0024580154  -0.12347467   0.05522598    5.2151938    5.2371506    1.0453264        0.075    1.2595124          0.5   0.11614738    4.3048756    2.7999578    30.801768 -0.00066041447  -0.30580867 0.0058984257     0.331498  -0.83337103  0.026122872 
  799000    10.811421    1.2747678    9.5366534   -0.3207982   0.85003392    1.0217802   0.73604152   -3.5502959            3    5.6819265    7.9358875    8.0268902    1.0830017 -0.030752838 -0.0023675062  0.014847511    5.5204487    5.5327319    1.0558202        0.075    1.2630613          0.5   0.11731336    4.2620892    2.8330466    30.801768  0.011148085  -0.35708263 -0.0029021798   0.35957622  -0.75972013  -0.27880823 
  800000     10.74905    1.2616522    9.4873974  -0.32501928   0.84128825   0.98849404   0.74362568   -3.5502959            3    5.6174486    7.9234064    7.8859106    1.0430286  0.024857059 -0.077331155  0.087089046    5.4543069    5.4731142    1.0615391        0.075    1.2670937          0.5   0.11794879    4.2391277    2.7879732    30.801768 -0.00084515006  -0.41348567 0.0081238281   0.35279879      1.30031     2.825085 
  801000    10.735947    1.2554918    9.4804554  -0.32898926   0.83718039   0.97580986   0.74522434   -3.5502959            3    5.5082561    7.9394326    7.9268994   0.65843642 -0.043150552  0.050019188 -0.053107161    5.3447638    5.3657739     1.058683        0.075    1.2830308          0.5   0.11763144    4.2505643    2.8047513    30.801768  0.012805582  -0.26095219 -0.022271341   0.36919342  -0.60854214   0.51632332 
  802000    10.763315    1.2802727    9.4830426  -0.33375194    0.8537047   0.99811434   0.75790772   -3.5502959            3    5.7499969    8.0219982    8.0856718    1.1423207 0.0097831201 0.0089772807  0.073567228     5.583722    5.6042579    1.0559654        0.075     1.276827          0.5   0.11732949    4.2615032    2.8093451    30.801768  0.015267538  -0.36997187 0.00030391431   0.38752356   -1.9785928    1.7316752 
  803000    10.801336    1.2700654    9.5312702  -0.31060668   0.84689828    0.9986602   0.74620542   -3.5502959            3    5.5294085    7.8611971     7.874847   0.85218138 -0.0047186783  -0.20050477 -0.022083012    5.3657009    5.3835898    1.0564628        0.075    1.2760053          0.5   0.11738475    4.2594969    2.8070705    30.801768 -0.012344264  -0.35840139  0.012854622   0.35508149   0.40909972     2.521758 
  804000    10.816023    1.2701783    9.5458446  -0.31239156    0.8469736   0.96458245   0.76901157   -3.5502959            3    5.7257905    8.0379177    7.9988482    1.1406055 -0.058077652 -0.063227573 -0.019214854    5.5570795    5.5849476    1.0619032        0.075     1.275001          0.5   0.11798925    4.2376742    2.8005829    30.801768 -0.026035728  -0.40401796 -0.020715565   0.41123604    3.3887024    8.2916974 
  805000    10.785308    1.2976998    9.4876081  -0.33021251   0.86532533    1.0149903   0.76603493   -3.5502959            3    5.6133743    7.9294553    7.9567614   0.95390612  0.039598739  -0.28313476  -0.13110679    5.4453163    5.4651711    1.0698857        0.075    1.2806432          0.5   0.11887619    4.2060567    2.7920691    30.801768 0.0039672296  -0.39201986 0.0010412421   0.36531563   0.78782497   -1.9242963 
  806000    10.789935    1.2727872    9.5171479   -0.3283477   0.84871325   0.99301295   0.75298759   -3.5502959            3    5.5579644    7.8826454    7.9198356   0.87141228  0.017426648  0.037533052 -0.044232362    5.3927689    5.4129703    1.0758127        0.075    1.2778911          0.5   0.11953475    4.1828842    2.8274721    30.801768  0.018718467  -0.31214231  0.018653523   0.41356484   -2.1801941    1.7579779 
  807000    10.772127    1.2735041    9.4986231  -0.31040432   0.84919125   0.99244443   0.75416229   -3.5502959            3    5.5955838    7.9489554    7.9536176   0.88417834 -0.015054947   0.30641589 -0.061509743    5.4301305    5.4506726     1.069288        0.075    1.2666224          0.5   0.11880978    4.2084077    2.8201708    30.801768  0.016962106  -0.39938427 -0.0005242491   0.29644801   -2.0836414   0.61055645 
  808000    10.756697    1.2549936    9.5017033  -0.32918841   0.83684822   0.98109337   0.74115448   -3.5502959            3    5.4505418    7.8775724    7.8272585   0.64679457 0.0027876302   -0.2062054 -0.038547482    5.2879424    5.3072881    1.0603397        0.075    1.2614959          0.5   0.11781553    4.2439228    2.7991716    30.801768 -0.0034767516  -0.40874158 -0.0041668116   0.30187866    3.3847662     4.975744 
  809000    10.798042    1.2522136    9.5458284  -0.31703646   0.83499442   0.98539293   0.73520459   -3.5502959            3    5.7516416    8.0487615    8.0892334    1.1169299  0.011812043  -0.13249071  0.028367933    5.5903474    5.6077601    1.0610842        0.075     1.261721          0.5   0.11789824    4.2409453    2.8072221    30.801768  0.010257888  -0.36141004 -0.0094957309    0.3255197  -0.91015227    5.1044224 
  810000    10.730389    1.2489303    9.4814584  -0.32334048   0.83280513    1.0035828     0.719451   -3.5502959            3    5.4555655    7.7813028    7.8696452   0.71574835 -0.0086780309   0.10425653  0.045155617    5.2977274     5.309028    1.0595404        0.075    1.2672538          0.5   0.11772671    4.2471244    2.8105733    30.801768 -0.020012227  -0.35071879 0.0013950115   0.44279527   0.14060315     2.648109 
  811000    10.786382      1.29804    9.4883424   -0.3253255   0.86555215      1.02287   0.76116843   -3.5502959            3    5.8549678    8.1287328    8.0913072    1.3448635  0.021513959  -0.17658475  0.017179493    5.6879776    5.7056141    1.0514912        0.075      1.25831          0.5   0.11683236    4.2796362    2.8174155    30.801768 -0.0035134284  -0.39426699  0.008791697   0.37933284      4.21252   0.54438614 
  812000    10.745882    1.2577628    9.4881197  -0.33143715   0.83869472    1.0223344   0.71678238   -3.5502959            3    5.4181728    7.8873247    7.7451754   0.62201838 0.0025857061   -0.2405325 0.0040565533    5.2609202    5.2688973    1.0616251        0.075    1.2562755          0.5   0.11795834    4.2387845      2.80212    30.801768 0.0065973395  -0.33585037 -0.012737205   0.33345478    2.7456864   0.40505672 
  813000    10.757537    1.2704471    9.4870895  -0.33055594   0.84715282    1.0091674   0.73963629   -3.5502959            3    5.5736475    7.8756285    7.8517112   0.99360281  0.021879049  0.037788942 -0.034715757    5.4113811    5.4262946    1.0627328        0.075    1.2611878          0.5   0.11808142    4.2343664    2.8150173    30.801768 -0.019999517  -0.40499953 -0.025659242   0.37591921   -2.3458792    3.9158017 
  814000    10.773423    1.2737971     9.499626  -0.32544305   0.84938665     1.004771    0.7462838   -3.5502959            3    5.6383602    7.9546087    7.8917313    1.0687406 -0.0089523571  -0.11108713 -0.0015911372    5.4746354    5.4916492    1.0529598        0.075    1.2519572          0.5   0.11699553    4.2736675    2.7907483    30.801768 -0.0051701808  -0.40447626 -0.0096422983   0.38602177    3.9414369    2.1442229 
  815000    10.775042    1.2537377    9.5213043  -0.33336342   0.83601073   0.96591373    0.7498622   -3.5502959            3    5.6293909    7.9457697    7.9056746    1.0367285 -0.012997607  -0.12541192 -0.030054949    5.4648811    5.4883537    1.0751788        0.075    1.2460973          0.5   0.11946431    4.1853503    2.8078967    30.801768 -0.0044957828  -0.37482436 0.0073019104   0.38895525   0.89685228    6.1513913 
  816000    10.733674    1.2740296    9.4596443  -0.33378032   0.84954166   0.99588434    0.7524566   -3.5502959            3    5.8917891    8.0943521    8.1301367    1.4508783 0.0042835124  0.087935133  0.048001871    5.7267101    5.7463757    1.0580135        0.075     1.259889          0.5   0.11755705    4.2532539    2.8004066    30.801768 -0.026782522  -0.36016421 -0.010303396   0.27170304   -1.5187923    4.1162982 
  817000     10.75378    1.2691045    9.4846755  -0.32688289   0.84625754   0.99566901    0.7471288   -3.5502959            3    5.7567513    8.0091079    8.0820217    1.1791242 -0.025195289  0.010098132  -0.11499398    5.5928411    5.6113693    1.0711773        0.075    1.2701469          0.5    0.1190197    4.2009854    2.7952555    30.801768  0.012308687  -0.38430408 -0.016415289   0.33663089   -1.5586823    8.6769473 
  818000    10.755998    1.2719524    9.4840454  -0.33093905   0.84815658   0.97252491   0.76569617   -3.5502959            3    5.5426323    7.9269996    7.8357179   0.86517939  0.012525894 -0.081374732 -0.041910084    5.3746487    5.4006297    1.0654197        0.075    1.2484339          0.5   0.11837997    4.2236875    2.8049077    30.801768 -0.024115075  -0.38647618  -0.01362787   0.36097716   0.44267113    -1.577003 
  819000    10.767772    1.2625022    9.5052696  -0.32617381   0.84185506    1.0058447   0.73302211   -3.5502959            3    5.5638669     7.923195     7.913544   0.85486177 0.00053109502   0.18817063 -0.064446841    5.4030516    5.4169992    1.0592906        0.075    1.2465831          0.5   0.11769895    4.2481262    2.7850323    30.801768  0.020701158   -0.3861265 -0.0080085459   0.35584571    1.1928066    1.4603369 
  820000    10.816312    1.2988111    9.5175013  -0.32454881   0.86606635    1.0424692   0.74898064   -3.5502959            3    5.6044594    7.9138188    7.9147173   0.98484198 -0.018401104   0.11933379  0.012888614    5.4401429    5.4522439    1.0556283        0.075    1.2503678          0.5   0.11729204     4.262864    2.7977454    30.801768 0.0031171152  -0.37248587 -0.0097413681   0.29238383   0.16482546    4.1917327 
  821000    10.777415    1.2603908    9.5170247  -0.31279764    0.8404471    1.0274752   0.71628021   -3.5502959            3    5.6729242    8.0353827    7.9575518    1.0258382 0.0033500672 0.0088694557  0.054872267    5.5157818    5.5228981     1.060481        0.075     1.240146          0.5   0.11783122    4.2433576    2.8189852    30.801768  -0.03028715  -0.40065692 0.0099030525   0.41226092  -0.59505713    4.5586278 
  822000    10.738581    1.2340229     9.504558  -0.31582024   0.82286463   0.98213365   0.71716648   -3.5502959            3    5.4777369    7.8412318    7.8250227   0.76695601  0.021315222 -0.032009533 -0.00066405584       5.3204    5.3343313    1.0635163        0.075    1.2495671          0.5   0.11816847     4.231247    2.8276157    30.801768  0.018805577  -0.30375825 -0.0025732656   0.31475341   0.61993052    2.9948296 
  823000    10.771428    1.2692917    9.5021363  -0.31637923   0.84638237    0.9979745   0.74580232   -3.5502959            3    5.6244617    7.9400155    7.9425009   0.99086866 -0.0016816036   -0.1044568  0.023153636    5.4608425    5.4787431    1.0774716        0.075    1.2535321          0.5   0.11971906    4.1764443    2.8394266    30.801768  0.014210783  -0.36139211 -0.016234618   0.37917719 -0.059203846    3.3493074 
  824000     10.78613    1.2783792    9.5077513  -0.32162108   0.85244207    1.0243198   0.73836305   -3.5502959            3    5.6774407    8.0117331    7.9220926    1.0984962 -0.039280491  0.036554005  0.041934849    5.5154536    5.5278753    1.0566976        0.075    1.2467066          0.5   0.11741085    4.2585503    2.8079003    30.801768 -0.0018182783  -0.35365505 0.0059261168   0.40323737     1.520327    6.6437954 
  825000    10.741321     1.278123    9.4631978  -0.33484305    0.8522712     1.001987   0.75294215   -3.5502959            3    5.7875833    8.0626354    8.0115911    1.2885234  0.021786805   -0.2132206 -0.083888959    5.6223977    5.6412788    1.0519277        0.075    1.2510691          0.5   0.11688085    4.2778607    2.8033883    30.801768 -0.00014024413  -0.32735824 -0.015781406   0.34708688   0.71802177     3.774053 
  826000    10.748512       1.2799    9.4686121  -0.34215999   0.85345612   0.98978931   0.76303439   -3.5502959            3    5.8062567    8.0237688    8.0997468    1.2952546 -0.022507003   -0.1352594  0.075316286    5.6388571    5.6617333    1.0485908        0.075    1.2515792          0.5   0.11651009    4.2914738    2.7918791    30.801768  0.014067598  -0.38217487 -0.0030943568   0.30193449  -0.14396513    5.9429297 
  827000     10.82536    1.3050022    9.5203577  -0.33508465   0.87019467    1.0061168   0.78005268   -3.5502959            3     5.634598      7.91283    7.9542168    1.0367472  0.016309264   0.15677175 -0.0017015689    5.4634648    5.4876905    1.0705356        0.075    1.2471155          0.5    0.1189484    4.2035033    2.8124537    30.801768 -0.046522204  -0.41362761 0.0096474037   0.32228825   -2.6059329    4.7102668 
  828000    10.761625    1.2461239    9.5155012  -0.32613559   0.83093378   0.97523415   0.73520109   -3.5502959            3    5.6487495    7.9987039     7.927508    1.0200366  0.013588766 -0.044459208 0.0091129735    5.4874561    5.5063513    1.0571883        0.075    1.2521758          0.5   0.11746536    4.2565739    2.7953191    30.801768  0.029662424  -0.33408252  0.027570918   0.35565339   0.16518239  0.025124947 
  829000    10.764425    1.2609055     9.503519   -0.3303259   0.84079035   0.99732595   0.73691807   -3.5502959            3    5.5055966    7.8059243    7.8980921   0.81277335  0.014895695  -0.16951647 -0.025486562    5.3439265    5.3599727    1.0752165        0.075     1.253303          0.5    0.1194685    4.1852036     2.850533    30.801768 0.0024744577  -0.35726905 -0.022689165   0.30999501     1.542147    3.7271677 
  830000    10.766032    1.2544958    9.5115361  -0.32292191   0.83651623   0.97643477   0.74370197   -3.5502959            3    5.6832587    7.9437695     8.004314    1.1016924 -0.016180676   0.18852653 -0.073604012    5.5201003    5.5406852    1.0677164        0.075    1.2417272          0.5   0.11863516    4.2146022    2.8180646    30.801768 0.0086593612  -0.35604362 -0.031898928   0.38640284   -1.1861355    4.0632959 
  831000    10.758483     1.284327    9.4741557   -0.3307641   0.85640815   0.99921077   0.76168173   -3.5502959            3    5.3721614    7.8044541    7.7209739   0.59105636  0.020973368 -0.0032562626  -0.01416805    5.2050585    5.2262623    1.0604024        0.075    1.2490551          0.5   0.11782249    4.2436721     2.810569    30.801768 0.0031187378   -0.3301333 -0.026541184   0.42087683   0.65061062  0.054782097 
  832000     10.76324     1.271613    9.4916271  -0.32596771   0.84793027    1.0136548   0.73794489   -3.5502959            3    5.7969997    8.0926698      8.07815    1.2201792  0.061531184  -0.14839855 0.0046499273    5.6351043    5.6489915    1.0720258        0.075    1.2543693          0.5   0.11911398      4.19766    2.8279844    30.801768 0.0064027529  -0.29208772  -0.01819946   0.33799886    1.6249001    3.8517161 
  833000    10.771405    1.2769174    9.4944877  -0.32120308   0.85146733    1.0068448   0.74836982   -3.5502959            3    5.6526744    7.9629009    7.9419376    1.0531845  0.031406149  0.003579055  -0.14118334    5.4884919    5.5056606    1.0487123        0.075    1.2590245          0.5   0.11652359    4.2909768     2.785806    30.801768 -0.0055932091  -0.33748256  -0.01123873   0.39370771    1.2930154    4.9820162 
  834000    10.750994    1.2572392    9.4937551  -0.33967623   0.83834559   0.99030585   0.73751757   -3.5502959            3    5.4429671    7.8179929    7.8632787   0.64762957 -0.0063612665 -0.040112894  0.052721881    5.2811655    5.2983682    1.0539975        0.075    1.2636625          0.5   0.11711083    4.2694599    2.7851127    30.801768 0.00054880813  -0.35010337 0.0038456949   0.37275321   -1.2146972    2.8283286 
  835000    10.748652    1.2741208    9.4745308  -0.32496789    0.8496025    1.0049857   0.74650048   -3.5502959            3    5.6435276    7.9200693     7.989316    1.0211975 0.0086675306  -0.10272181 -0.038479474    5.4797553    5.4967853     1.057682        0.075    1.2666471          0.5   0.11752022     4.254587    2.8179543    30.801768  0.030859692  -0.36868044  0.012463663   0.32131649   0.72789342  0.079716262 
  836000    10.726473    1.2588715    9.4676015  -0.33749888   0.83943407    1.0022376   0.73138961   -3.5502959            3    5.6116159    7.9624712     7.949498   0.92287837 -0.022974356 -0.065262761 -0.089173266    5.4511587    5.4652748    1.0614802        0.075     1.267647          0.5   0.11794224    4.2393632    2.8354546    30.801768  0.010143211  -0.35923636  0.012151611   0.43630763   0.35723334    2.6416674 
  837000    10.756449    1.2688968    9.4875524   -0.3231418   0.84611903    1.0042775   0.74116861   -3.5502959            3    5.7182985    7.9842325    8.0235469     1.147116  -0.03266898   -0.1198332 -0.051734524    5.5556959    5.5716595    1.0511201        0.075    1.2714044          0.5   0.11679112    4.2811472    2.8085124    30.801768  0.017263518  -0.31643907 -0.0053667276   0.35544039   0.23312738    6.2386529 
  838000    10.733542    1.2552221    9.4783198  -0.33684836   0.83700059    1.0109628   0.72152849   -3.5502959            3    5.7770774    8.0784826    8.0477204     1.205029 -0.00045413654  -0.14773587  0.012336645    5.6187836    5.6294623    1.0574513        0.075     1.276352          0.5   0.11749459    4.2555152    2.8150157    30.801768 -0.016537048  -0.34719533 0.0053892359   0.43046274    2.6462749    3.1502324 
  839000    10.719791    1.2572233    9.4625674  -0.33827149   0.83833499    1.0030164   0.72904031   -3.5502959            3    5.5676002    7.9415147    7.8559767   0.90530904 -0.023101356 -0.038982791  0.042584835    5.4076584    5.4211454    1.0565831        0.075    1.2888492          0.5   0.11739812     4.259012    2.8103456    30.801768   0.01830925  -0.42515775 0.0085804848   0.30445492    -2.175531   -1.0813504 
  840000    10.794773    1.3005753    9.4941973  -0.32539485   0.86724276    1.0333578   0.75700458   -3.5502959            3    5.4155008    7.7598823    7.8166578   0.66996232 -0.0089872846   0.20831991   0.11913314     5.249424    5.2646158    1.0566509        0.075    1.2856849          0.5   0.11740566    4.2587386    2.8086283    30.801768 -0.0049780766  -0.33548623  0.019167993   0.30107599    2.6659227     1.899131 
  841000    10.778679      1.29691    9.4817694  -0.32324249   0.86479867    1.0214835     0.760836   -3.5502959            3    5.4493325    7.7954142    7.8428539   0.70972937 -0.00028499452 -0.0040981942  0.058924305    5.2824151    5.3001812    1.0550309        0.075     1.276462          0.5   0.11722566    4.2652778     2.813652    30.801768 0.0014765053   -0.3845841 -0.014236843   0.37744901  -0.66034381   -3.2303187 
  842000    10.736288    1.2816244    9.4546633  -0.33820952   0.85460598    1.0053127   0.75461826   -3.5502959            3       5.8354    8.1155332    8.1240891    1.2665779  0.010822477  -0.11149862  0.097231191    5.6698468      5.68861    1.0832228        0.075     1.268057          0.5   0.12035808    4.1542702    2.8396423    30.801768 0.0024273771   -0.3638339  0.022535581   0.38985467    2.0984566    8.5878022 
  843000    10.732811    1.2697046    9.4631069  -0.35585727   0.84665769   0.99716682   0.74679854   -3.5502959            3    5.6083968    7.9080858    7.8959614    1.0211432 0.00083609921  0.077342117  0.010941798    5.4445591    5.4627962    1.0649154        0.075    1.2662915          0.5   0.11832394    4.2256877    2.7773804    30.801768 -0.0058013484  -0.40875488   0.01227139   0.38135753    1.1659651    4.1386763 
  844000     10.75669     1.261111    9.4955787  -0.32410322   0.84092738   0.97604409   0.75131065   -3.5502959            3    5.6742241    7.9809068    7.9544045    1.0873609 0.0013356073  -0.02156514  0.046517063    5.5093965    5.5317077     1.068424        0.075    1.2577855          0.5   0.11871377    4.2118112    2.7983838    30.801768 -0.0099657421  -0.36861492 0.0063593175   0.39377979    1.4977607    5.9172616 
  845000    10.782277     1.293553    9.4887239  -0.33740806   0.86256019    1.0335932   0.74904711   -3.5502959            3    5.5701892    7.9287166    7.8784679   0.90338315 0.0012902759    -0.172459   0.12592162    5.4058582    5.4192698     1.087133        0.075    1.2559689          0.5   0.12079256    4.1393279    2.8513917    30.801768 -0.0075679861  -0.39466426 -0.020972248    0.4197657    1.8813741  -0.93400255 
  846000    10.767251    1.2863954    9.4808555   -0.3307634   0.85778741     1.008756   0.75762662   -3.5502959            3    5.6923172    7.9666918    7.9731925    1.1370671  0.018091247   0.19547706  0.012001486    5.5261039    5.5450243    1.0582582        0.075    1.2644444          0.5   0.11758425    4.2522703    2.8101069    30.801768  0.017064088  -0.43941533  0.027565234   0.38241762   -1.9185544    4.7544843 
  847000    10.757929    1.2944785    9.4634503  -0.32752828   0.86317732    1.0433909   0.74355426   -3.5502959            3    5.6755658    7.9778517    7.9942583    1.0545874 0.00078729701  -0.18024319 -0.056702575    5.5124398    5.5232158    1.0726508        0.075    1.2658786          0.5   0.11918343    4.1952142    2.8149812    30.801768 -0.0019692457  -0.37049104 0.0028988443   0.35581901    1.7582238    3.0314356 
  848000     10.80691    1.2865497    9.5203606  -0.32900898   0.85789029    1.0263318   0.74610025   -3.5502959            3    5.6173515     7.974463    7.8977406   0.97985095  0.013609256  0.045888484 -0.0072151301     5.453667    5.4674923    1.0642439        0.075     1.263342          0.5   0.11824932    4.2283541    2.8103577    30.801768 -0.010813416  -0.42028657 -0.011519254   0.35709478   0.69114281    3.8967324 
  849000    10.750114    1.2754317    9.4746828  -0.32917564   0.85047662    1.0084091   0.74567823   -3.5502959            3    5.4769362    7.7784178     7.866507   0.78588392 0.0032601917  -0.04806271  0.026715906    5.3133443     5.329694    1.0585918        0.075    1.2643775          0.5   0.11762131    4.2509304    2.7982086    30.801768 -0.021349757  -0.35159779 -0.0049061145   0.39318208    3.0477605    2.3654437 
  850000    10.803519    1.2652372    9.5382818  -0.32550343   0.84367876   0.99138022   0.74568718   -3.5502959            3    5.6383736    7.8953504    7.9564508    1.0633196  0.015561027  0.097421481 -0.0066865675    5.4747797    5.4936179    1.0623333        0.075    1.2689251          0.5   0.11803703    4.2359588     2.842494    30.801768 -0.018220802  -0.41157346  0.017314309   0.39904507   -1.4325119   0.80964516 
  851000    10.764643    1.2657219     9.498921  -0.31876157   0.84400196    1.0053226   0.73694614   -3.5502959            3      5.88434     8.079152    8.1686509    1.4052171  0.022702966 -0.096401271  0.023978463    5.7226638    5.7375485    1.0449034        0.075    1.2696225          0.5   0.11610037    4.3066184    2.8187969    30.801768 -0.014827689   -0.4121443 -0.0082884898   0.34276915  -0.22260448    9.3936904 
  852000    10.718476    1.2523018    9.4661744  -0.34041166   0.83505328   0.98991468   0.73229316   -3.5502959            3    5.4718976     7.824151    7.8404958   0.75104602 -0.039857723 -0.088855675   -0.1234249    5.3112422    5.3273559    1.0727843        0.075    1.2796357          0.5   0.11919826    4.1946921    2.8068012    30.801768 -0.0079299136  -0.38593774 -0.033505411   0.37291794  -0.99796616   -1.2622146 
  853000    10.742258    1.2425589    9.4996988  -0.33038567   0.82855657   0.97676611   0.73022124   -3.5502959            3    5.5658806    7.9510746     7.862053   0.88451409 -0.0064447574   0.12938022 -0.051213061    5.4056797    5.4232587     1.069059        0.075     1.286227          0.5   0.11878433    4.2093094    2.8324648    30.801768 -0.0065580725  -0.39563644 -0.015844875   0.30947974  0.046811577    4.9036376 
  854000    10.784893    1.2965343    9.4883588  -0.33096213   0.86454817    1.0037753   0.77220447   -3.5502959            3    5.6647156    7.9848342    7.9371897    1.0721228  0.016748536  0.024283846 0.0039481601    5.4953041      5.51815    1.0504446        0.075    1.2733423          0.5   0.11671606    4.2839005    2.8039275    30.801768 0.0049050379  -0.36625057 -0.00084691094    0.3400819 -0.061784861    4.0750608 
  855000    10.787777    1.2558007    9.5319762  -0.32954685    0.8373864   0.98155214   0.74174571   -3.5502959            3    5.5409741    7.8981833    7.8720168    0.8527223 -0.022800994 -0.098100469   0.11325481    5.3782449    5.3976534    1.0699713        0.075    1.2781445          0.5    0.1188857    4.2057205    2.8223817    30.801768 -0.0023681462  -0.35147297 0.0045694959   0.35422541   0.84239764    3.0732035 
  856000    10.833084    1.2943841    9.5386995  -0.32719894   0.86311435       1.0088   0.76647159   -3.5502959            3    5.6507661      7.99308     7.889372    1.0698463 -0.016255396   0.38750931   0.03264758    5.4826124    5.5034668    1.0653477        0.075    1.2774484          0.5   0.11837196    4.2239732    2.8265531    30.801768   0.01100034  -0.35006178  0.014444292   0.30019215   -2.1148041    6.1366281 
  857000    10.784734    1.2741294    9.5106042  -0.31046854   0.84960825    1.0153494   0.73961243   -3.5502959            3    5.5512864    7.8348131    7.9257945   0.89325161 -0.011961605 -0.073683711   0.01853129    5.3890252    5.4030308    1.0622376        0.075    1.2754168          0.5    0.1180264    4.2363402    2.8253865    30.801768 0.0079156634  -0.37486575  0.011934513   0.36139052  -0.82109532    5.5177069 
  858000    10.790496    1.2997919    9.4907043  -0.31711663   0.86672036     1.007765   0.77316779   -3.5502959            3    5.6413399    8.0055582    7.8749335    1.0435281 -0.030771797  -0.10512363  0.055559391    5.4717172    5.4941918    1.0525676        0.075    1.2697666          0.5   0.11695195      4.27526    2.7920163    30.801768 0.0015377484  -0.34713813 -0.023410486   0.38531635  -0.65972925    5.5099311 
  859000    10.746731    1.2847681     9.461963  -0.32704357   0.85670229    1.0038208   0.75910348   -3.5502959            3    5.5693921    7.8675403    7.9581071    0.8825289 -0.018289264 -0.078392888 -0.016687769    5.4028549    5.4228199    1.0678831        0.075     1.277494          0.5   0.11865368    4.2139443    2.8228544    30.801768 -0.010522293  -0.31084621 0.0075599146    0.3546149     2.574512    2.7849402 
  860000    10.796674    1.2800958    9.5165783  -0.31852972   0.85358675   0.98409576   0.76704138   -3.5502959            3    5.7024371    7.9625621    8.0262558    1.1184933 -0.018581837   0.06515924 -0.048655698    5.5341584     5.558745    1.0608425        0.075    1.2702731          0.5   0.11787139    4.2419116     2.801027    30.801768  0.012171508  -0.39792874 0.0066945861   0.38534598   -3.3733424   0.45245347 
  861000    10.756918    1.2538444    9.5030738  -0.33512433   0.83608187   0.98410699   0.73787206   -3.5502959            3    5.5042393    7.8509771    7.7958764   0.86586437  0.026697485  0.073171318 -0.081532537    5.3423599    5.3605456    1.0642096        0.075    1.2683392          0.5   0.11824552    4.2284902    2.8100277    30.801768 0.0061947911  -0.32941524 -0.021575997   0.37383227  0.024641142    5.9054596 
  862000     10.75942    1.2687585     9.490662  -0.32455738   0.84602682    0.9762198     0.759689   -3.5502959            3    5.8061514    8.1755761    7.9962612    1.2466169 -0.027586195  -0.15330772  0.017448089    5.6394857    5.6636093    1.0770671        0.075     1.263166          0.5   0.11967412    4.1780127    2.8324935    30.801768 -0.011379854  -0.33856223 0.0018610597   0.42470815    1.5443988   0.77472642 
  863000    10.802503    1.2950527    9.5074499  -0.31253534   0.86356023    1.0063995   0.76881207   -3.5502959            3    5.3423341    7.7415614    7.7481399   0.53730091 -0.010128697  0.077707824 -0.0013489722    5.1736669    5.1953853    1.0523872        0.075    1.2632709          0.5   0.11693191    4.2759929    2.7990508    30.801768 0.0029881596  -0.34768804  0.014931099   0.32870179    1.2319865   0.90260617 
  864000     10.76739    1.2723204    9.4950697  -0.32077231   0.84840194    1.0051038   0.74442181   -3.5502959            3    5.5890381    7.9082431    7.9128468   0.94602453 -0.0021598457 -0.067231041  0.025233633    5.4257219    5.4422786    1.0548322        0.075     1.277459          0.5   0.11720358    4.2660812    2.8194085    30.801768 -0.027621361  -0.36585299 -0.023312677   0.39751887   0.62988658    1.9302625 
  865000    10.776172    1.2564156     9.519756  -0.31673441   0.83779642   0.98249998   0.74179793   -3.5502959            3    5.6145048     7.944874    7.9116036    0.9870369  0.011934766  0.031582366 -0.024068234    5.4517642    5.4710457    1.0674848        0.075    1.2799565          0.5   0.11860942    4.2155167    2.8501788    30.801768 0.0053447295  -0.32099881 -0.019865033   0.32784828  -0.46739361    2.8482345 
  866000    10.781411    1.2808485     9.500562  -0.31424613   0.85408861    1.0295988    0.7375926   -3.5502959            3    5.4652349    7.8185117    7.8319285   0.74526457 0.0081207631  -0.21195012  0.024406095    5.3034169    5.3148987    1.0696571        0.075    1.2890377          0.5   0.11885079    4.2069557    2.8519441    30.801768 -0.0041425033  -0.35173676 0.0050653198   0.39399703    1.1999981   0.84454743 
  867000    10.745541    1.2569684    9.4885726  -0.33325311   0.83816502   0.97774239   0.74557843   -3.5502959            3     5.776182    7.9893018    8.0648981    1.2743461  -0.01230491  0.061226423  0.040513288    5.6126119    5.6334176    1.0576129        0.075    1.2932821          0.5   0.11751254     4.254865    2.8172867    30.801768  0.017716527  -0.33172271 -0.0051982052    0.4319642   -1.1650183    9.4277814 
  868000    10.784564    1.2992707    9.4852933  -0.32557872   0.86637283    1.0198231   0.76456352   -3.5502959            3    5.5923622    7.8391134     7.958294   0.97967918 -0.0090897259  0.037684347 -0.024317585    5.4246271    5.4434534     1.061174        0.075    1.2838804          0.5   0.11790822    4.2405865    2.8317734    30.801768  0.020392491  -0.35914341 -0.0078809478   0.35593426   -2.6663131    0.9639476 
  869000    10.754393    1.2614466    9.4929468  -0.33832392   0.84115113    1.0006281   0.73532136   -3.5502959            3    5.4355074    7.8069829    7.7806034   0.71893589 -0.011394749  0.014096388 -0.022765897    5.2741876    5.2894013    1.0580811        0.075    1.2806938          0.5   0.11756457     4.252982    2.7887182    30.801768 -0.025458273  -0.31612262 0.0057634235   0.44519512    1.2991092    2.7099481 
  870000    10.792077    1.2796879    9.5123888  -0.32055649   0.85331471    1.0360097   0.73203652   -3.5502959            3    5.6054758    7.8967511    7.9431897   0.97648663  0.017501179   0.14971677  0.041726761    5.4448767    5.4542035    1.0524024        0.075    1.2865562          0.5    0.1169336    4.2759311    2.8015211    30.801768 0.0045772137   -0.3642905  0.016312554   0.35989471   -3.0460963    5.5079566 
  871000    10.807575    1.2823724    9.5252023  -0.32158594   0.85510478    1.0006408   0.75855866   -3.5502959            3    5.1770256    7.4996008    7.5752235   0.45625244 -0.024006115  -0.16818615 -0.084191406    5.0106079    5.0309177    1.0547775        0.075    1.2900386          0.5    0.1171975    4.2663027    2.8240651    30.801768  0.010777085  -0.32825605  0.016549415    0.3163956    0.3560973  -0.60709833 
  872000     10.71412    1.2544736    9.4596466  -0.32165808   0.83650148    0.9907623   0.73414162   -3.5502959            3    5.7358029    7.9995948    8.0222783    1.1855356  0.021397197 -0.0012386915  -0.11592627    5.5747419    5.5911374    1.0604879        0.075    1.2874729          0.5   0.11783199      4.24333    2.8052013    30.801768 0.0066041845  -0.34328937 0.0069215976   0.34241063   0.95631519    4.3368979 
  873000    10.753201    1.2762347    9.4769666  -0.33161277   0.85101209   0.99592921   0.75487636   -3.5502959            3     5.621568    7.9146987    7.9365574    1.0134478  0.019126299  0.065389756  -0.10518289    5.4559581     5.476148    1.0546301        0.075    1.2854927          0.5   0.11718112    4.2668988    2.8227928    30.801768 -0.0091140334  -0.32064812  0.023929617   0.38893217   0.64961279    7.5927921 
  874000    10.825624     1.293425    9.5321993  -0.33246489   0.86247482   0.96822412   0.79241173   -3.5502959            3    5.6947531    7.9783441    8.0278979    1.0780174 -0.033737307 -0.023866261  0.021366162    5.5209085    5.5533785    1.0746965        0.075    1.2914736          0.5   0.11941072    4.1872287    2.8103001    30.801768  -0.05352473  -0.37438749  0.010406914   0.39034079    1.5046182    4.5908273 
  875000    10.815896    1.2940695    9.5218262  -0.32896726   0.86290456    1.0201001   0.75860124   -3.5502959            3    5.9131586    8.1319229    8.1708985    1.4366544 0.0092103112  -0.14930014  0.088943344    5.7467315    5.7642094     1.073762        0.075    1.2934182          0.5   0.11930688     4.190873    2.7958557    30.801768 0.0087468337  -0.40756448 0.0081881692   0.39219798   -2.1979182    3.8096507 
  876000    10.782016    1.2956926    9.4863238  -0.32701843   0.86398691   0.99698502   0.77578875   -3.5502959            3     5.636158    7.9162971     8.007937   0.98423979 -0.018413875  0.097348746 0.0067746334    5.4659602    5.4905839     1.066995        0.075    1.2905341          0.5   0.11855499     4.217452     2.827377    30.801768 -0.017695868  -0.40794567 0.0086820139   0.34819081   -1.5550711     4.066478 
  877000    10.723298    1.2596059    9.4636921   -0.3544491   0.83992378    1.0089667   0.72772683   -3.5502959            3     5.627925    7.9465085    7.9148116     1.022455 -0.0076812778 -0.011817613 -0.072949251    5.4682714    5.4806014    1.0712987        0.075    1.2890648          0.5   0.11903319    4.2005091    2.8092501    30.801768  -0.02416606  -0.43015901  0.010786499   0.35102769    1.1711785    4.8532527 
  878000     10.76058    1.2782419    9.4823385  -0.31971201   0.85235054   0.98904174   0.76169012   -3.5502959            3    5.5008935    7.8369409    7.8073511   0.85838848  0.042576689   0.23450849  0.054704444    5.3337888    5.3564792      1.07072        0.075    1.2772284          0.5   0.11896889    4.2027796    2.8262003    30.801768 -0.0069627518  -0.36809511 -0.032516534    0.3747245   0.44224641   0.15211594 
  879000    10.782282    1.2811732    9.5011091  -0.32971788   0.85430516   0.98761561   0.76589555   -3.5502959            3    5.5201049    7.8814074     7.886882   0.79202532 -0.0051430088 -0.043498088  -0.08773339    5.3520776    5.3758989    1.0636499        0.075    1.2872941          0.5   0.11818332    4.2307153    2.8110975    30.801768 -0.016769603  -0.37117916 -0.020055249   0.32046785    0.8721477    4.5415276 
  880000    10.792868    1.2954371    9.4974308  -0.33570131   0.86381654    1.0513322    0.7393338   -3.5502959            3    5.6271664    7.9742216    7.9627728   0.94450477  0.040349194  -0.13376957 -0.049688949    5.4649663    5.4736568    1.0661342        0.075    1.2913925          0.5   0.11845935    4.2208572    2.7933884    30.801768 -0.030249249  -0.41136488  0.013277994   0.40073529   0.34327437    3.9669413 
  881000    10.811373     1.277123    9.5342501  -0.32832887   0.85160444   0.99522398   0.75633254   -3.5502959            3    5.5579696    7.8831304    7.8574527   0.93332573 -0.011699245   0.11681946  0.051799131    5.3920403    5.4126526    1.0517885        0.075    1.2826799          0.5   0.11686539    4.2784267    2.7808314    30.801768 -0.022013077  -0.38563557 -0.015894115   0.46036705   -2.5779879    1.2089734 
  882000    10.775394    1.2866443    9.4887498  -0.30519624   0.85795335    1.0025951   0.76200345   -3.5502959            3    5.5736877    7.9225297    7.8599493   0.93858427 -0.016715519 -0.049368531  0.021383626    5.4065143    5.4272945    1.0515031        0.075    1.2900363          0.5   0.11683368    4.2795878    2.8120787    30.801768 0.0048526914  -0.41555038   0.01349408   0.37970733    1.1349215    7.8410932 
  883000    10.751671    1.2623649    9.4893056  -0.33677641    0.8417635   0.99144558     0.742453   -3.5502959            3    5.7640939    8.0613586    8.0611945    1.1697286 -0.0019549347   0.19296021  0.017773201    5.6012095    5.6193286    1.0686712        0.075    1.2834331          0.5   0.11874124     4.210837    2.8388436    30.801768  0.021048745  -0.38063367 -0.010325517   0.34549823   -5.0803398    1.8553404 
  884000    10.734916    1.2599227    9.4749937   -0.3261777     0.840135   0.96851528   0.75500146   -3.5502959            3    5.6064972    7.9345977    7.9466563   0.93823778 0.0051927346  -0.10297569 -0.058961747    5.4408599    5.4650801    1.0679647        0.075    1.2827248          0.5   0.11866275    4.2136224    2.8098939    30.801768 -0.0020830765  -0.38102888 -0.010133273   0.36474208   0.63607653   0.47539142 
  885000    10.736232    1.2575236    9.4787085  -0.34372182   0.83853521   0.97638271    0.7471001   -3.5502959            3    5.5071268    7.8424468    7.9064027   0.77253091 -0.0084095642 0.0059276026 -0.031263276    5.3432229    5.3645609    1.0592794        0.075    1.2863245          0.5   0.11769771    4.2481711    2.7860314    30.801768  0.017260067  -0.26366552 0.0032571469   0.37162378   0.85221749   -1.3964885 
  886000    10.797478    1.2930864    9.5043915  -0.34303977   0.86224904    1.0223564   0.75600753   -3.5502959            3    5.3918839    7.7943734     7.797705   0.58357329  0.028661083     0.172712  0.054651731    5.2260259    5.2426052    1.0574499        0.075    1.2920441          0.5   0.11749443    4.2555208    2.7857405    30.801768   0.01014569  -0.35170444  0.028799443   0.31888947   -1.4214331   0.34556378 
  887000    10.802122    1.2921669    9.5099548  -0.32911349   0.86163592   0.98240606    0.7815753   -3.5502959            3    5.6213343    7.9860928    7.9061883   0.97172178 -0.0085887906  0.011232481  0.043468827     5.449867    5.4778889    1.0581332        0.075    1.2845424          0.5   0.11757035    4.2527729     2.814309    30.801768 -0.010372567  -0.32143405  0.048092299   0.37240341  -0.23673141 -0.024579385 
  888000    10.757493    1.2601074    9.4973855  -0.32980367   0.84025815    1.0345864    0.7112325   -3.5502959            3    5.3931538    7.8163288    7.7337618   0.62937074  0.031056575  -0.17899736 -0.071098066    5.2371188    5.2420893    1.0620912        0.075    1.2805767          0.5   0.11801013    4.2369244    2.8030812    30.801768  0.014782699  -0.38167564 -0.020599244   0.39161021   0.44461217    2.8421225 
  889000    10.809584    1.3160023    9.4935812  -0.34175722   0.87752973    1.0057492   0.79251705   -3.5502959            3    5.7679368    8.0414423    8.0224824    1.2398858  -0.01336019 -0.024906531   0.12174443    5.5940691     5.621083    1.0657709        0.075    1.2840354          0.5   0.11841899    4.2222959    2.8107553    30.801768 -0.010701527  -0.31451036 -0.0091978175   0.37253038   -1.1222593    6.5407042 
  890000    10.805349    1.2938391    9.5115101  -0.32806623   0.86275093     1.032633   0.75000391   -3.5502959            3    5.5388172    7.8580529    7.8887243   0.86967443 -0.0055867068  0.062947997 -0.0023493344    5.3742763     5.388038    1.0535087        0.075     1.295918          0.5   0.11705652    4.2714407    2.8049436    30.801768  0.013469286   -0.3343662  0.013341147    0.3350951    2.2895154    8.2286176 
  891000    10.740482    1.2809077    9.4595745  -0.33058004   0.85412808    1.0153001   0.74717491   -3.5502959            3    5.5236326    7.8283885    7.8857279   0.85678147 -0.0063499313 0.0013535236  0.010789971    5.3597123    5.3753842    1.0738342        0.075    1.3072275          0.5   0.11931491     4.190591    2.8137343    30.801768  0.020765452  -0.43253298  0.011962497   0.37420342   -3.5596926    1.3916235 
  892000    10.798214    1.2822515    9.5159624  -0.32569272   0.85502418    1.0036737    0.7564058   -3.5502959            3    5.7499214    8.0357561    8.0623608    1.1516472  0.030220962 0.0028429084 -0.0016792637     5.583976    5.6033706    1.0711563        0.075    1.3038838          0.5   0.11901736    4.2010677     2.815335    30.801768 -0.010455193  -0.38048615  0.013326128     0.439995    1.6217227   0.35619358 
  893000    10.771801    1.2707734    9.5010277  -0.32486536   0.84737039    1.0154151   0.73584055   -3.5502959            3    5.2678989    7.7300587    7.6729521   0.40068598 -2.0240411e-05   0.13622559  -0.15204541    5.1064653    5.1196337    1.0578757        0.075    1.2972225          0.5   0.11754175    4.2538077    2.8174613    30.801768 -0.0040211485  -0.29584766  0.003098678    0.3992338    -0.632237   0.49319971 
  894000    10.760563    1.2618668    9.4986958  -0.33459394   0.84143133   0.98944529   0.74323094   -3.5502959            3    5.7512517    8.0470477    8.0109688    1.1957385  0.030230871  0.020244504 -0.034085069    5.5881966    5.6067785    1.0753797        0.075    1.2989575          0.5   0.11948663    4.1845686    2.8154878    30.801768 -0.0072277955  -0.40213457 -0.0085562576   0.37641362  -0.35570827    3.9696216 
  895000    10.776716    1.2739611    9.5027549  -0.33127288     0.849496   0.99744046   0.75134484   -3.5502959            3    5.6039163    7.9405674    7.9174739   0.95370751  0.026965401  -0.25723133 -0.022066919    5.4390812    5.4582757    1.0671197        0.075    1.3079729          0.5   0.11856886    4.2169589    2.8237416    30.801768 1.2467706e-05  -0.29015894  0.012412406    0.3799854   0.78793935   -3.1276635 
  896000    10.762142    1.2716011    9.4905411  -0.33553229   0.84792235    0.9975366   0.74865926   -3.5502959            3    5.7407328    8.0291894    8.0462822    1.1467267 -0.0059010618 -0.025035422 0.0025230183    5.5764868    5.5950781    1.0540672        0.075    1.2973057          0.5   0.11711857    4.2691777    2.8152368    30.801768 -0.032474332  -0.36869111 -0.012035339   0.34728828   0.89298097    2.1844135 
  897000    10.822072    1.2655311    9.5565407  -0.30748292   0.84387479    1.0075526   0.73525014   -3.5502959            3    5.6591742    7.9607903    7.9530237    1.0637086 0.0017184667   0.24994093 -0.063204195    5.4978701    5.5120571    1.0518723        0.075    1.2936738          0.5    0.1168747    4.2780858    2.7911271    30.801768  0.007135768  -0.34033949 -0.005587433   0.36230943    1.2430142    2.8309025 
  898000    10.747782    1.2443456    9.5034364  -0.32058772   0.82974796    1.0015708   0.71569709   -3.5502959            3    5.5869567    7.9275219    7.9112227   0.92212557 0.0023695248 -0.037454235 0.0084263329    5.4299423     5.440713    1.0656235        0.075    1.2863774          0.5   0.11840261    4.2228799    2.8028394    30.801768  0.011126238  -0.30863232 0.0072030542   0.39754811   -1.3784276    3.9675938 
  899000     10.75629     1.266231     9.490059  -0.32568862   0.84434148    1.0131516   0.73230113   -3.5502959            3    5.7177311    8.0618036    7.9829473    1.1084426   0.04165433 -0.080388399 -0.010180482     5.557074    5.5697965    1.0646301        0.075    1.2912835          0.5   0.11829224    4.2268201    2.8246626    30.801768 -0.013773428  -0.31671147 -0.0081871059   0.34475967    4.9809472    3.8277072 
  900000     10.81847    1.3266553    9.4918143  -0.33127015   0.88463331     1.026642   0.79044576   -3.5502959            3    5.4156776    7.7945961    7.7950329   0.65740367 -0.041786101  -0.11687716  0.014317938    5.2422642    5.2657731    1.0691529        0.075    1.2684457          0.5   0.11879477    4.2089396    2.8137608    30.801768 0.0071245998  -0.36483493  0.012064812   0.38374978  0.041326589    -1.640667 
  901000    10.795358    1.2909235    9.5044341  -0.34142817    0.8608068    0.9893911    0.7755451   -3.5502959            3    5.8096121    7.9883755     8.134811    1.3056498 0.0013131315   0.19338473  0.017191217    5.6394678    5.6651468    1.0626907        0.075    1.2802831          0.5   0.11807674    4.2345341    2.7867642    30.801768 -0.010253316  -0.35144109  0.031129944   0.32791975   -2.2018087    4.7421093 
  902000    10.781961    1.2761528     9.505808  -0.33097821   0.85095749    1.0064775   0.74776491   -3.5502959            3    5.5117323    7.8460619    7.8930287   0.79610635 -0.011918197   0.11989197 -0.0089018046    5.3476826    5.3647722    1.0727896        0.075    1.2753594          0.5   0.11919885    4.1946714    2.8102368    30.801768 -0.0039650975  -0.36118914 -0.0045859118   0.40434117   0.96711105 -0.008390019 
  903000    10.738135    1.2727245    9.4654109  -0.32796288   0.84867141    0.9767285   0.76375612   -3.5502959            3    5.5561782    7.8781069    7.9784134   0.81201419    0.0268078  -0.18802374  0.022501322    5.3886202    5.4135618    1.0737187        0.075    1.2747294          0.5   0.11930208    4.1910419    2.7966425    30.801768 -0.019180356  -0.36301327 0.0008773979   0.39529348   0.96003018   -2.1615196 
  904000    10.759549    1.2685222    9.4910266  -0.33014086   0.84586924   0.98643479   0.75262782   -3.5502959            3    5.5536471    7.8456992    7.9049419   0.91030024  0.022752925 0.0027098611 -0.091647524    5.3885305    5.4096135     1.055771        0.075    1.2697413          0.5   0.11730789     4.262288    2.8105298    30.801768 -0.014465897  -0.33148188 0.0031869094   0.33940417 0.00060013124    4.2220642 
  905000    10.732605    1.2740666    9.4585384  -0.33258787   0.84956637    1.0095736   0.74338675   -3.5502959            3    5.4716002    7.8379449    7.8560715    0.7207843 0.0030650517 -0.0031585628  0.065562609     5.308511     5.324188    1.0589334        0.075    1.2703391          0.5   0.11765927    4.2495589    2.8226634    30.801768 0.0042584895   -0.2491935 -0.027381099   0.36522029   0.64056112  -0.48598921 
  906000    10.723579    1.2309786    9.4925999  -0.34372938   0.82083467   0.98736071    0.7103058   -3.5502959            3     5.364835    7.7438554    7.7634164   0.58723314 -0.032134519  0.020662576  0.089467379    5.2090033    5.2206662    1.0713679        0.075    1.2778463          0.5   0.11904087     4.200238    2.8333512    30.801768 -0.0073969153  -0.34806868  0.020748628   0.33029963   -1.1560914    4.4494151 
  907000    10.742643    1.2573349    9.4853083  -0.32616018   0.83840941   0.97547209   0.74749659   -3.5502959            3    5.8482842    8.1029606     8.173503     1.268389 0.0040571569   0.14946859 -0.019571019    5.6842934    5.7058513    1.0609758        0.075    1.2773398          0.5   0.11788619    4.2413787    2.7985409    30.801768  0.014366571  -0.33147801 -0.016929865   0.31204708   -1.2651411    9.8384149 
  908000    10.770262    1.2737265    9.4965359  -0.32689982   0.84933955     1.050232   0.71594846   -3.5502959            3    5.4000034    7.7427737    7.7873733   0.66986314 -0.00061900804 -0.0052246712 -0.026689765    5.2429338    5.2466544    1.0600796        0.075    1.2851841          0.5   0.11778662    4.2449644    2.8005915    30.801768  0.017459519  -0.31660291 -0.034577668   0.41900298   -1.5247501   0.13374812 
  909000    10.777792    1.3104211    9.4673711  -0.31996783   0.87380807    1.0420541   0.76215405   -3.5502959            3    5.7682314      8.09165    8.0111751    1.2018692  0.015603442   0.10190375 -0.039405992    5.6010249    5.6160766    1.0504084        0.075    1.2885969          0.5   0.11671204     4.284048    2.8077317    30.801768 0.0093767618  -0.33918467 -0.010121775   0.37449602    1.2358917    2.8044108 
  910000    10.738662    1.2677446    9.4709171   -0.3407588   0.84535073   0.99707792   0.74468041   -3.5502959            3    5.6554311    7.9525213    7.9768629    1.0369091 -0.0042734565 -0.087019546  0.071363471    5.4920581    5.5098434    1.0705053        0.075    1.2847884          0.5   0.11894503    4.2036224    2.8252514    30.801768 -0.0050582762  -0.38519089  0.021431442   0.33731196    2.2692061    6.3872653 
  911000    10.721022     1.268827    9.4521947  -0.34720479   0.84607253    1.0066988   0.73947963   -3.5502959            3    5.4161232    7.7550311    7.8460355   0.64730286 -0.016753347  0.041035188  0.008574034    5.2538911    5.2691307    1.0754379        0.075    1.2826379          0.5    0.1194931     4.184342    2.8258359    30.801768  -0.03669965  -0.39171117  -0.01243563   0.33149793    0.5320488    5.3917269 
  912000    10.766848    1.2896425    9.4772059   -0.3260648    0.8599526     1.014458   0.75743865   -3.5502959            3    5.7460786    8.1260388    7.9805643    1.1316328 -0.010555511 -0.022788736  0.032878102    5.5799066    5.5979532    1.0639274        0.075    1.2842185          0.5   0.11821416    4.2296118    2.7992941    30.801768 -0.042646878  -0.42391754 -0.024405687   0.32790042   -1.0527229 -0.053026318 
  913000    10.784471    1.2692199    9.5152507  -0.33981192   0.84633451      1.00104   0.74368236   -3.5502959            3    5.6533534    7.8640506      8.01661    1.0793995  0.023187058   0.12781098   0.07342267    5.4901993    5.5071872    1.0631528        0.075    1.2817251          0.5   0.11812809    4.2326934    2.7846939    30.801768 -0.035178585  -0.42687456  0.014379255   0.42256898   0.15449393    3.7709413 
  914000    10.742801    1.2637263    9.4790747  -0.34598515    0.8426713    1.0096132   0.73187375   -3.5502959            3     5.616883     7.989657    7.9136741   0.94731785  0.035686973    -0.265294  0.037278218    5.4563196     5.469465    1.0732892        0.075    1.2873832          0.5   0.11925436     4.192719    2.8094069    30.801768 -0.0011322222  -0.39394442 -0.0047283701   0.35301345  0.065406659    4.8951526 
  915000     10.77263    1.2734995      9.49913  -0.35038832   0.84918822    1.0165335   0.73812462   -3.5502959            3    5.4309967     7.747947    7.8314459   0.71359724  -0.01244903   0.18571242 -0.046938818    5.2690619    5.2825682    1.0778248        0.075     1.282691          0.5   0.11975831    4.1750755    2.8327678    30.801768 -0.010518562  -0.39668764 -0.0026397721    0.3374716   0.90331007    2.2615973 
  916000    10.813803    1.2849893     9.528814   -0.3389367   0.85684978    1.0250973   0.74518853   -3.5502959            3    5.5387227    7.8095605    7.9159265   0.89068101 0.0036024552  0.034651961 -0.00062150401    5.3752382    5.3890438    1.0581709        0.075    1.2859375          0.5   0.11757454    4.2526212    2.7982472    30.801768 -0.0027635766  -0.38231367 0.0013191602   0.38470682   -1.1371238  -0.52565267 
  917000    10.790243    1.3035322    9.4867105  -0.34139639   0.86921446    1.0002667   0.78231335   -3.5502959            3    5.4426529    7.8622127    7.7607266   0.70501945  0.006299026  -0.11425954 -0.027240389    5.2710237    5.2965996    1.0719871        0.075    1.2762215          0.5   0.11910968    4.1978118    2.8104248    30.801768  0.006445442  -0.38748059 -0.0046077427   0.37585591  0.010447891   -1.6601771 
  918000    10.810339    1.2941467    9.5161926  -0.32619431   0.86295606    1.0058113   0.76819707   -3.5502959            3    5.5755738    7.8692227    7.9776685   0.87983011  0.014867282  0.033572828 -0.0010496069    5.4070415    5.4287109    1.0587259        0.075    1.2671969          0.5   0.11763621    4.2503919    2.8199645    30.801768 -0.0099987383  -0.31210254  0.025514193   0.33634341  -0.28264667    4.4245809 
  919000    10.820499    1.3021319     9.518367  -0.31004396    0.8682807    1.0057617   0.77710054   -3.5502959            3    5.6454402    7.9335265     7.976959    1.0258351 -0.018076449  0.036426164   0.17099299    5.4749546    5.4985846    1.0647672        0.075    1.2654529          0.5   0.11830747    4.2262758    2.8280867    30.801768 -0.016136833  -0.32180878  0.019889374   0.40876235    1.1305992    5.0220529 
  920000    10.792046    1.2781694    9.5138762  -0.33109211   0.85230217   0.98797761   0.76231778   -3.5502959            3     5.733576    8.0297318    7.9813771    1.1896191  0.018900924  -0.04879808 -0.069464731    5.5663336    5.5893171    1.0589145        0.075    1.2647951          0.5   0.11765717    4.2496347    2.7962567    30.801768  0.010706183  -0.34465683  -0.01241485   0.30180593   0.50011358    5.4059954 
  921000    10.818754    1.2719124    9.5468418  -0.31272791    0.8481299   0.99311685   0.75194663   -3.5502959            3    5.6905377    7.9952885    7.9842151    1.0921096 -0.021890358 -0.096758183 0.0057849229    5.5255706    5.5455284    1.0653334        0.075    1.2629028          0.5   0.11837038    4.2240296    2.8129376    30.801768 -0.014571568  -0.34405429 -0.020904979    0.3858107  -0.34166537   0.10373151 
  922000    10.755552    1.2703615    9.4851905  -0.33297593   0.84709577   0.99102293   0.75161747   -3.5502959            3    5.6236816    7.8790451    7.9829531    1.0090465  0.024549603  0.029355988  0.061947933    5.4587867     5.478978    1.0568359        0.075    1.2618553          0.5   0.11742621    4.2579932     2.794957    30.801768 -0.019490635  -0.33274867 -0.014010682   0.26906405  -0.48072519    4.1477144 
  923000    10.822847    1.2876464    9.5352007   -0.3168022   0.85862155   0.99981854   0.76496459   -3.5502959            3    5.5191339    7.9295295    7.8297499   0.79812218  -0.01287011  0.059736126   0.14607308    5.3513108     5.373146    1.0605785        0.075    1.2692785          0.5   0.11784205    4.2429676    2.8213948    30.801768  0.011067631  -0.37714121  -0.01370554   0.36268363   -2.0078831    2.0320672 
  924000    10.786674    1.2866773     9.499997  -0.32690599   0.85797536    1.0468523   0.73258441   -3.5502959            3    5.6460643    7.9481806    7.9834247    1.0065875   0.01002067 -0.067726895 -0.011997435     5.485345    5.4932088    1.0663991        0.075    1.2751807          0.5   0.11848879    4.2198086    2.8177611    30.801768 -0.014241723  -0.34321633 -0.0099934583   0.35550036   -4.4372467    4.4850915 
  925000    10.759155     1.278256    9.4808989  -0.32879498   0.85235993   0.99764903   0.75597712   -3.5502959            3    5.5545759    7.9204001    7.8655139   0.87781387 -0.021278808 -0.038572493 0.0013918356    5.3887246    5.4089049    1.0565396        0.075    1.2747219          0.5   0.11739329    4.2591871    2.8057049    30.801768 -0.0043968396  -0.39149975 0.0036606323   0.34462583    0.7773112    3.3920629 
  926000    10.774074    1.2545308    9.5195427   -0.3077027   0.83653963     1.011658   0.72029787   -3.5502959            3    5.6716823     7.996639    7.9288142    1.0895937 -0.011898158  -0.15773197   0.02090298    5.5136585    5.5239657    1.0643472        0.075    1.2777577          0.5    0.1182608    4.2279438    2.8216063    30.801768 -0.0094723188  -0.33321238  0.012396517   0.39850346   -1.6627083    3.1627553 
  927000     10.77374    1.2689285    9.5048117  -0.31524769   0.84614019    1.0090129   0.73805216   -3.5502959            3    5.6528601    8.0038758    7.9138441    1.0408605  0.034465059 -0.0012483595 -0.044812717    5.4909413    5.5055298    1.0647082        0.075    1.2744831          0.5   0.11830091    4.2265103    2.8287449    30.801768 -0.0043493138  -0.38769958 -0.0054962575   0.37472178  -0.55808085    6.7455908 
  928000    10.691372    1.2069976    9.4843744  -0.32075223   0.80484379    0.9644529   0.69891263   -3.5502959            3    5.5079819    7.8968501    7.8328741   0.79422147  0.029614254 -0.017039379  0.049000642    5.3546497    5.3671579    1.0466354        0.075    1.2669853          0.5   0.11629282    4.2994916    2.8007809    30.801768 0.0032453513   -0.3905222 -0.026330755   0.33271812    2.9654814    2.8052588 
  929000    10.752462    1.2557699    9.4966923  -0.30747351   0.83736586   0.97892815   0.74345791   -3.5502959            3    5.5847718    7.9584392    7.8737855   0.92209064  0.029275673 -0.037855705  0.016576059    5.4216669    5.4418342    1.0401706        0.075    1.2713422          0.5   0.11557451    4.3262134    2.8008337    30.801768 -0.0027131579  -0.28246458 -0.00050120516   0.40819052   0.73881621    6.4264128 
  930000    10.809506    1.2992561      9.51025  -0.31455131    0.8663631    1.0186152    0.7653512   -3.5502959            3    5.3495806    7.7151958    7.7778966   0.55564939 -0.013207046  0.034983798  0.051365345    5.1816727    5.2008482    1.0414876        0.075    1.2807519          0.5   0.11572085    4.3207427    2.8078453    30.801768 0.0059320395  -0.33234925 -0.0058732645   0.34585267  -0.85975868    -0.336887 
  931000    10.756444    1.2432435    9.5132001  -0.31324181   0.82901306   0.97875386   0.72965876   -3.5502959            3    5.7397134    7.9883057     8.001475    1.2293594  0.027235697 -0.032666922  0.022646399    5.5796359    5.5968013    1.0418224        0.075    1.2791138          0.5   0.11575804    4.3193543    2.7983294    30.801768 0.00032422298  -0.38381459   0.02045631   0.33107701   -1.4962631    4.7267289 
  932000    10.780927    1.2613975      9.51953  -0.33934306   0.84111839    0.9836219   0.74658539   -3.5502959            3     5.716979    7.9881166    8.0376089    1.1252115 -0.025766995   -0.2798166 0.0019236531    5.5531881    5.5733561    1.0606836        0.075    1.2736979          0.5   0.11785373     4.242547     2.825359    30.801768 -0.0090480256  -0.29876981  0.005775224   0.38066244    2.5794015    5.0616299 
  933000    10.790413     1.275025    9.5153876  -0.32439624   0.85020545   0.95936979   0.77786492   -3.5502959            3    5.5927363    7.9425349    7.8772678   0.95840609 -0.0050419908  0.090671791  0.084924086     5.422083    5.4526545    1.0491309        0.075    1.2708393          0.5    0.1165701    4.2892647     2.784949    30.801768 -0.013145463  -0.38432586 -0.018209058   0.33672051   -2.4144905    6.9318857 
  934000    10.823307    1.2736796    9.5496277  -0.32272554    0.8493083    1.0125221   0.74099446   -3.5502959            3    5.6133758    7.9387523    7.9207599   0.98061512   0.01309974 -0.080246921  0.068806697    5.4508114     5.465533    1.0671184        0.075    1.2662104          0.5   0.11856871    4.2169643    2.8189301    30.801768 -0.0080120185  -0.34357191 -0.0027762745   0.33757142    2.7841975    3.0586872 
  935000    10.826251    1.2922026    9.5340487  -0.32582989   0.86165974   0.99865397   0.77080108   -3.5502959            3    5.6384644     7.936994    7.9382906    1.0401086 -0.019303487  -0.12917997  0.029429967    5.4693608    5.4926466    1.0582396        0.075    1.2688501          0.5   0.11758218    4.2523451    2.8154132    30.801768 0.0015026945  -0.34904044  0.012260463   0.34603436   -1.0413136    2.6339457 
  936000    10.722629    1.2443643    9.4782642   -0.3272933   0.82976043     1.001756   0.71559458   -3.5502959            3    5.5739477    7.8900962    7.9252866   0.90646021  0.012501951  0.019588952 -0.0019753099    5.4169557    5.4276769    1.0647638        0.075    1.2742644          0.5   0.11830709    4.2262894    2.8135195    30.801768 -0.013352993  -0.34865254 -0.015243294    0.3798512   -1.7581785    3.7688927 
  937000    10.757624    1.2604168    9.4972072  -0.31191578   0.84046445    0.9729778   0.75258023   -3.5502959            3    5.5667017    7.8635692    7.9665028   0.87003291 -0.016334961  -0.17953584  0.054025787    5.4015955    5.4246329    1.0533494        0.075    1.2714566          0.5   0.11703883    4.2720866    2.8077692    30.801768 -0.010369747  -0.34213112 -0.00081092392   0.31482081   0.91707663    3.2580183 
  938000    10.732287    1.2678415    9.4644451  -0.33488767   0.84541537    1.0397739   0.71637152   -3.5502959            3    5.6444357    7.9551934     7.984251   0.99386262  0.022213955   0.24852939  0.037389199    5.4872732    5.4926138    1.0786105        0.075    1.2685492          0.5   0.11984561    4.1720342    2.8058362    30.801768 -0.025705084  -0.36411986 -0.018123537   0.42664239   -3.1979225     3.375263 
  939000    10.740437      1.23087    9.5095674  -0.31699078   0.82076221   0.98625986   0.71091778   -3.5502959            3    5.7561871    8.0886554    7.9742198    1.2056862   -0.0372994 -0.099474533  0.044228034    5.6002212     5.612179    1.0651536        0.075    1.2706702          0.5    0.1183504     4.224743    2.7821487    30.801768 -0.027589724  -0.41459621 0.0032164775   0.33929721    2.2932921    3.4224294 
  940000    10.761409    1.2659891    9.4954198  -0.32422796   0.84418018    1.0161702   0.73002338   -3.5502959            3    5.5905281     7.948231    7.9083596   0.91499372  0.013836785  -0.11107824   0.10728208    5.4303706    5.4421527    1.0612914        0.075    1.2759096          0.5   0.11792127    4.2401172    2.7973905    30.801768  0.016778743  -0.36713605 -0.0098762327   0.27629022   0.65020291    5.4905182 
  941000    10.801503    1.2936621    9.5078411  -0.32290531   0.86263292    1.0294784   0.75190688   -3.5502959            3    5.8472247    8.0749861    8.1151547    1.3515334 -0.022820159 0.0055860641 0.0062897827    5.6822663    5.6969061    1.0564695        0.075    1.2644019          0.5    0.1173855      4.25947    2.8017589    30.801768 -0.031055016  -0.39884548  0.019736583   0.38566487   0.42886003    4.9818592 
  942000    10.790121    1.2932564    9.4968643  -0.31370328   0.86236237    0.9814073   0.78345024   -3.5502959            3    5.6754027    8.0127892    7.9696975    1.0437213  0.031562406   0.16524849 -0.018288952    5.5035241    5.5321031    1.0547375        0.075    1.2664989          0.5   0.11719306    4.2664644    2.8125561    30.801768   0.01029629  -0.32960959  0.029684003    0.3658276   -1.9429851   0.85407189 
  943000    10.745304    1.2446717    9.5006326   -0.3299807   0.82996538   0.99307718   0.72171227   -3.5502959            3    5.3709766    7.7244541    7.7556285   0.63284715 -0.004908637  0.087302411  0.010542603    5.2126424     5.225973    1.0554437        0.075    1.2616513          0.5   0.11727152    4.2636097    2.8266369    30.801768 -0.0092351497  -0.34944905 -0.021540919   0.31340356   -1.0373996    1.2165721 
  944000    10.776313    1.2730661    9.5032469  -0.31858762   0.84889921     1.019999   0.73533661   -3.5502959            3    5.5515783    7.9013453     7.906421   0.84696871  0.026809212  -0.15722624   0.11954034    5.3902552    5.4026438    1.0497952        0.075    1.2650288          0.5   0.11664391    4.2865505    2.8144911    30.801768 0.0061118623  -0.38004772 0.0092702962   0.33964877    2.0495522   0.61157031 
  945000     10.74053    1.2567983    9.4837315  -0.33156097    0.8380516    1.0019876   0.72925291   -3.5502959            3    5.6434497    7.9725054    7.9514042    1.0064396   0.01534109  0.019345324 -0.021683785    5.4834613    5.4971452    1.0627697        0.075    1.2433757          0.5   0.11808552    4.2342193    2.8046777    30.801768 -0.010789949  -0.41478693  0.029923101   0.39913936   -2.8882663    1.4680142 
  946000    10.747001    1.2605296    9.4864715  -0.33659491   0.84053966   0.99947873   0.73506764   -3.5502959            3    5.7877124    8.0674546    8.0657425    1.2299403 -0.010946631   0.12290648  0.017529611    5.6264483    5.6417742    1.0640874        0.075    1.2405424          0.5   0.11823193    4.2289761    2.8097564    30.801768  0.038160744  -0.38797398 0.0021783287   0.42573505   -1.6825923     4.188035 
  947000    10.750354     1.252951    9.4974034  -0.33558033   0.83548616    1.0032989   0.72410633   -3.5502959            3    5.8368057    8.1107924    8.1499494    1.2496755 0.0059722985  -0.19986307  0.044408208    5.6779464    5.6903097    1.0609139        0.075    1.2578038          0.5   0.11787933    4.2416259    2.8076496    30.801768 -0.0017618701  -0.26442445 -0.015313543   0.35162924 -0.012131451    5.6359374 
  948000    10.805802    1.2585558    9.5472466  -0.32493311   0.83922352   0.98612685   0.74176149   -3.5502959            3    5.5530099    7.8977886    7.8628255   0.89841547 -0.018305958  0.085205115  0.046740682    5.3902772    5.4090212    1.0702667        0.075    1.2589424          0.5   0.11891852    4.2045594    2.8379248    30.801768 -0.0021661841  -0.42215938 -0.0085468652   0.39583725    1.3054864    1.1233564 
  949000    10.801029    1.2989718    9.5020568  -0.34129531    0.8661735    1.0211102   0.76337476   -3.5502959            3    5.6667702    8.0227587    7.9175696    1.0599824 0.0079004632   0.07238534  0.035252859    5.4992959    5.5176735    1.0666015        0.075    1.2614666          0.5   0.11851127    4.2190079    2.8063804    30.801768 -0.0065003932  -0.28602976 -0.0059311557   0.44747873   -4.5728734    5.7416698 
  950000     10.73537     1.262296    9.4730741  -0.33213187   0.84171755   0.99173212   0.74218573   -3.5502959            3     5.712166    8.0011712    7.9637706    1.1715563 -0.0030625355  0.037933918  0.053059301    5.5493403    5.5673589    1.0606358        0.075    1.2497575          0.5   0.11784842    4.2427382    2.8010147    30.801768 -0.015541715  -0.33906959 -0.0072007903   0.37317816    -2.075772    6.2388293 
  951000    10.790783    1.2957456    9.4950372  -0.32762187   0.86402224    1.0071504   0.76908201   -3.5502959            3    5.6327646    7.9170134    7.9628933    1.0183871  0.010553673  0.012826422  0.052126916    5.4640382    5.4857062    1.0688808        0.075    1.2641514          0.5   0.11876454    4.2100109     2.807263    30.801768 -0.0058722193  -0.41264604  0.018112464   0.32819912    2.6356878    6.2685978 
  952000    10.811821    1.2965865     9.515235  -0.29968463   0.86458295    1.0251955   0.75800601   -3.5502959            3    5.6384226    7.9428925    7.9738948   0.99848032 -0.012276883 -0.039877725   0.08697388    5.4721261    5.4887293    1.0547047        0.075    1.2608065          0.5   0.11718941    4.2665972    2.8189483    30.801768  0.029517784   -0.3325743  0.015083907   0.33904548   -1.4983437    1.2981408 
  953000    10.758338    1.2437097    9.5146288  -0.32660199   0.82932395    1.0083166   0.71050099   -3.5502959            3    5.3695749    7.7465643    7.7275121   0.63464832  0.012608641  0.052912444 -0.039570021    5.2137004    5.2223462    1.0449901        0.075    1.2548531          0.5   0.11611002    4.3062607    2.7868271    30.801768  0.010464601  -0.33798136 -0.0020243416   0.35812249   0.15896037    2.5728053 
  954000    10.796546    1.2879066     9.508639  -0.31618591   0.85879507    0.9829924   0.77645241   -3.5502959            3    5.7669806    8.0178953    8.0626042    1.2204424 -0.0011912036  0.042866993 -0.088146382    5.5966372    5.6234496    1.0519451        0.075    1.2577042          0.5   0.11688279    4.2777896    2.7976723    30.801768 -0.0035744546  -0.33693239 -0.0020089484    0.3863885    1.9574212    2.2952425 
  955000    10.814393    1.3111829    9.5032099  -0.32548256   0.87431608    1.0057935   0.78713388   -3.5502959            3    5.6100273     7.940081    7.8943718   0.99562902 0.0087950434   0.16189066   0.12467533    5.4373405     5.463167       1.0543        0.075    1.2587766          0.5   0.11714444     4.268235    2.7962955    30.801768 -0.026995364  -0.32129598 0.0041223483   0.36077527  0.014644371    4.5202171 
  956000    10.803554    1.2828851    9.5206689  -0.31896996   0.85544666   0.98274674   0.77103772   -3.5502959            3    5.8952902    8.1668314    8.0936705    1.4253686 -0.012189695  0.028243234  -0.04980709    5.7261347     5.751795    1.0561021        0.075    1.2616644          0.5   0.11734467    4.2609519    2.7885477    30.801768 0.0015844464  -0.35230846  0.024412894   0.36217514   -2.6182531    4.9349209 
  957000    10.799443    1.2980855     9.501358  -0.33016066   0.86558248   0.99509282   0.77970623   -3.5502959            3    5.7648177    7.9909044     8.057231    1.2463177 0.00096274609 -0.037471594 -0.066271977    5.5937605    5.6195199    1.0524846        0.075    1.2635259          0.5   0.11694274    4.2755968    2.7831067    30.801768 -0.011502394  -0.29178876 0.0075473219   0.38490878   0.30487313    9.7390959 
  958000     10.78535    1.2919255    9.4934243  -0.31708468   0.86147491    1.0251553   0.75285505   -3.5502959            3    5.6670496    8.0320044    7.9890919   0.98005254 0.0020368138 -0.019942484  0.042989119    5.5018832    5.5173622    1.0667624        0.075    1.2622294          0.5   0.11852916    4.2183714    2.8111197    30.801768 -0.037937435  -0.39240455  0.042923705   0.36130877  -0.70915426    3.0803164 
  959000    10.806524    1.2876278    9.5188959  -0.32090752   0.85860918     1.017712   0.75303489   -3.5502959            3    5.5704443    7.8753609    7.9506272   0.88534484 -0.033833293   -0.1390896  0.022505704    5.4052384    5.4218438    1.0577426        0.075       1.2496          0.5   0.11752695    4.2543433    2.8045781    30.801768 -0.0094842789  -0.25271179 -0.0077968798   0.35357737   0.16768548    3.4991565 
  960000     10.74836    1.2637078    9.4846522  -0.32281461   0.84265898    1.0085135   0.73258509   -3.5502959            3     5.782435    8.0647475    8.0496763    1.2328813 -0.00088158987   -0.1480882  0.010268746    5.6217156    5.6351776    1.0673955        0.075    1.2571806          0.5    0.1185995    4.2158695    2.8324628    30.801768  0.022157235  -0.33202743 -0.015683967   0.34557246    1.3000416    6.6242886 
  961000    10.763048    1.2836772    9.4793707  -0.34126488   0.85597487    1.0053184   0.75689494   -3.5502959            3    5.6038069    7.8801539    7.9530169   0.97824987 -0.0020638844   0.25187598  0.038142272    5.4377541     5.457016    1.0762583        0.075    1.2576822          0.5   0.11958425    4.1811525    2.8141205    30.801768  0.016785781  -0.37995855  0.058094993    0.3804908   0.10596368    9.4492069 
  962000    10.770584    1.2748029    9.4957813    -0.331524   0.85005733   0.98609208   0.75983296   -3.5502959            3    5.6218248     7.925294    7.9448014   0.99537912  0.013009662   0.06493515 -0.0086492094    5.4551275    5.4778412    1.0660721        0.075    1.2651665          0.5   0.11845246    4.2211029    2.8257033    30.801768 -0.0012327703  -0.33125784  0.016918111    0.4047507    1.8899445    4.1456572 
  963000     10.80578     1.289409    9.5163711  -0.32217221   0.85979688   0.98898235    0.7741347   -3.5502959            3    5.6094917    7.8970492    7.9326934   0.99873249 0.0041737997  -0.11355294  -0.11962384    5.4396568    5.4650861    1.0588354        0.075    1.2598759          0.5   0.11764838    4.2499523     2.810798    30.801768 0.0037549858  -0.35660271 0.0061039961    0.3861773    1.4680633    5.8991062 
  964000    10.721979    1.2496343    9.4723443  -0.35585806   0.83327453    1.0033761   0.72037058   -3.5502959            3      5.47965    7.7880408     7.834415   0.81649414 -0.0054959466  0.042026918  0.033908089    5.3216102    5.3331427    1.0725674        0.075    1.2743657          0.5   0.11917416    4.1955405    2.8053622    30.801768  0.011867385   -0.3419911  0.014809171   0.42843593   -0.4145303    -3.633948 
  965000    10.776634    1.2695392    9.5070946  -0.32070712   0.84654741    1.0035379   0.74237449   -3.5502959            3    5.8049454    8.1064189    8.0551787    1.2532386 -0.0084159832   0.05013804  0.022309223    5.6420783    5.6584145     1.066565        0.075    1.2707246          0.5   0.11850722    4.2191522    2.8013947    30.801768 0.0069962403   -0.3348285 -0.0067797852   0.37732444   -1.6587718    4.6559683 
  966000    10.804499    1.2902871     9.514212  -0.32136862    0.8603824    0.9833068   0.77888753   -3.5502959            3    5.6563151    7.9637812    7.9708306    1.0343335  0.013236495  -0.17199516  -0.01543429    5.4854375    5.5127382    1.0670684        0.075    1.2768693          0.5   0.11856316    4.2171617    2.8277028    30.801768 0.0097186702  -0.38705557  0.011574215   0.38389177    2.1561618    3.8993353 
  967000      10.7444     1.281741    9.4626592  -0.34254469   0.85468379    1.0079709   0.75297869   -3.5502959            3    5.7218909    8.0174215    8.0533018    1.0949495 -0.0073302375  0.083718989  0.040009911    5.5566974    5.5747127    1.0672982        0.075    1.2736357          0.5   0.11858869    4.2162537    2.8177293    30.801768 -0.0041180527  -0.30914681  0.016759068   0.39677867   0.38496552     3.396741 
  968000    10.753219    1.2714792    9.4817399   -0.3205274   0.84784104    1.0092982   0.74069583   -3.5502959            3    5.4788311    7.8554907    7.8477303   0.73327249 -0.027756558 -0.0045377115  0.068127192    5.3163323    5.3314591    1.0464504        0.075    1.2731059          0.5   0.11627227    4.3002516    2.7757215    30.801768  0.022026805  -0.39737873 -0.0030994518   0.33219606   -1.2648721     5.058116 
  969000    10.803486    1.2642648    9.5392214  -0.31252664    0.8430304    1.0002968   0.73867256   -3.5502959            3    5.7405665    7.9769529    8.0618779    1.1828686 0.0098821669 -0.067480508 -0.016631694    5.5785115    5.5945088    1.0616763        0.075    1.2792566          0.5   0.11796403      4.23858    2.8046014    30.801768  0.027827645  -0.35985954 -0.007402938   0.34260303    1.4237978    2.0080134 
  970000    10.780882    1.2826741    9.4982084  -0.31074116   0.85530596    1.0135553   0.75029846   -3.5502959            3    5.3497264     7.721976    7.7582327   0.56897045 0.0079403109  0.048457222  0.021477242    5.1851208    5.2017328    1.0325097        0.075     1.268346          0.5    0.1147233    4.3583124    2.7978074    30.801768 -0.028616927  -0.33921919  0.012678578   0.34188888    1.5449209   0.98522163 
  971000    10.777617    1.2657073    9.5119099  -0.32461377   0.84399227   0.99596556   0.74315766   -3.5502959            3    5.4706622    7.8637763    7.7987889    0.7494214 -0.024929027   0.14166346 -0.051694757    5.3076233    5.3252369    1.0616955        0.075    1.2588339          0.5   0.11796617    4.2385034    2.8044775    30.801768 -0.0071440307   -0.3501662  0.011037792   0.39725042   -2.8290995    1.9623577 
  972000    10.775527    1.3031431    9.4723835  -0.34610541   0.86895503    1.0387686   0.75625594   -3.5502959            3    5.6898268    8.0011184     7.953074    1.1152879  0.025438898   -0.2797085 -0.011793702    5.5239143    5.5381517    1.0599527        0.075    1.2599109          0.5   0.11777253    4.2454723    2.7874962    30.801768 -0.0089389007   -0.4286546 -0.0054495919   0.38653829    4.0745447    4.4984452 
  973000    10.784331     1.275523     9.508808  -0.34174294   0.85053747   0.95776709   0.77948474   -3.5502959            3     5.552153    7.8615672    7.8937037   0.90118802 -0.0027811546   0.17333366 -0.0085436415    5.3811443    5.4123052    1.0575197        0.075    1.2531805          0.5   0.11750219    4.2552397    2.8111231    30.801768  0.014001979  -0.31520658 -0.023988899   0.34080799   -2.6661212    3.4189603 
  974000    10.741076     1.273473    9.4676025  -0.33926649   0.84917054     1.013865   0.73987121   -3.5502959            3    5.6630337    7.9789298    7.9644658    1.0457056  0.012783535  -0.03307328  0.056378322    5.5007158    5.5149949    1.0435802        0.075    1.2477686          0.5   0.11595335    4.3120788    2.7695679    30.801768 -0.030724971  -0.40762361  0.013570084   0.35348959   0.18463608    4.5474359 
  975000    10.761385    1.2997424    9.4616427  -0.33693939   0.86668737    1.0422457   0.75016399   -3.5502959            3    5.4810903    7.8201935    7.8951232   0.72795418  0.014724691 -0.093853307  0.062351383    5.3165142    5.3289075    1.0681545        0.075    1.2493961          0.5   0.11868383    4.2128737    2.8076025    30.801768  0.002638071  -0.38127591  0.021973155   0.45753385    -1.816711   -0.4347122 
  976000    10.767185    1.2653766    9.5018081  -0.33941634   0.84377171   0.98559091   0.74969514   -3.5502959            3    5.6621454    8.0215014    7.9464756    1.0184592  0.010779495 -0.086793893 -0.059550673    5.4976722     5.518235     1.065055        0.075    1.2518823          0.5   0.11833945    4.2251338    2.7970414    30.801768  0.024001018  -0.34700509 -0.011669062   0.39581263   0.76278772    4.9924389 
  977000    10.779846    1.2821695    9.4976763  -0.32722691   0.85496946   0.99076656   0.76490508   -3.5502959            3    5.5595106    7.8506902    7.9233978   0.90444368   0.02168661 -0.091503595 0.0070847132    5.3917005    5.4148444     1.057408        0.075    1.2585942          0.5   0.11748978    4.2556894    2.8023924    30.801768  0.007020621  -0.27989319   -0.0202613   0.36614937 -0.094349574    4.8222681 
  978000    10.821118    1.3110716    9.5100467  -0.34156115    0.8742418    1.0174457   0.77925493   -3.5502959            3    5.5707856     7.845912    7.9025723   0.96387246 -0.0040380398  -0.16420612 -0.025496824    5.3998274    5.4222239    1.0641519        0.075    1.2556031          0.5    0.1182391    4.2287197     2.810019    30.801768 -0.011672849  -0.36466353 -0.017721587   0.35299533  -0.73959393    6.3803367 
  979000    10.758735    1.2518756    9.5068592  -0.33855468   0.83476905   0.99089521   0.73116705   -3.5502959            3    5.4524081    7.7937258    7.8349045   0.72859412 -0.013856771   0.16528184  0.018189975    5.2919998    5.3077232    1.0765626        0.075    1.2562539          0.5   0.11961807    4.1799704    2.8348512    30.801768  0.019575606  -0.39238013 0.0065023425   0.36393312   -2.8321081    3.4093514 
  980000    10.816382    1.3149628    9.5014191  -0.33730176   0.87683653    1.0082074   0.78972614   -3.5502959            3     6.018237    8.2083438    8.2236038    1.6227634 0.0084311101 -0.077124437  0.016975669    5.8449815    5.8710242    1.0684585        0.075    1.2662831          0.5   0.11871761    4.2116751    2.8018547    30.801768 -0.021341429  -0.43617156  0.013867159   0.39018328    4.7636218    8.5737562 
  981000    10.759426    1.2687473    9.4906783  -0.32886006   0.84601936   0.97794211   0.75853027   -3.5502959            3     5.677438    7.9561528    8.0490718    1.0270894 -0.032847695   0.15675802 -0.042285913    5.5110265    5.5346444    1.0736129        0.075    1.2656514          0.5   0.11929032    4.1914548    2.8196254    30.801768 -0.027776585   -0.3746127  0.010660619   0.38726211    -2.031292    1.7068636 
  982000    10.777171    1.3100534    9.4671176  -0.34869087   0.87356287    1.0084778   0.78409253   -3.5502959            3    5.5381033    7.9008699    7.8395156    0.8739245 -0.016667608  0.019262802  -0.05523875    5.3660838    5.3908511    1.0647087        0.075    1.2714267          0.5   0.11830097     4.226508    2.8143585    30.801768 0.00091750789  -0.27912405  0.013512007    0.4025003   -1.5346876     2.432721 
  983000    10.759178    1.2652562    9.4939216  -0.33307283   0.84369142   0.97503073   0.75658979   -3.5502959            3    5.5794306    7.9277399    7.9179239    0.8926278  0.032651157  0.040811129 0.0094724955    5.4134448    5.4370621    1.0639436        0.075    1.2709314          0.5   0.11821595    4.2295476    2.7969008    30.801768  0.013438777  -0.30430572  0.019550576   0.40879723    -1.709703  -0.50791732 
  984000    10.770854    1.2987206    9.4721333  -0.32742492   0.86600598     1.012667   0.76871516   -3.5502959            3    5.6563428    7.9288547    7.9895381    1.0506356 -0.0074371832  -0.15340011 -0.0018168868    5.4876969    5.5084789    1.0624794        0.075    1.2620825          0.5   0.11805326    4.2353763     2.800561    30.801768   0.01408215  -0.39899357 -0.029632571   0.38898855     1.078601    2.2231233 
  985000    10.760245    1.3065394    9.4537055  -0.32545174   0.87121971    1.0214058   0.77158464   -3.5502959            3    5.6624592    7.9734884    8.0089921    1.0048971 -0.0042584873  -0.16061985 -0.0042337632    5.4931838    5.5133193     1.080511        0.075    1.2521181          0.5   0.12005678    4.1646961    2.8494419    30.801768 -0.0029827799  -0.40050715 -0.0096036072   0.36941474   -1.0706957    1.3653677 
  986000    10.764824    1.2859453    9.4788784  -0.34389358   0.85748726    1.0195545   0.74993953   -3.5502959            3    5.6199237    7.9024433    7.9813933   0.97593442  -0.02283629  0.021961966 -0.024696032    5.4553969    5.4710541    1.0789353        0.075    1.2583711          0.5    0.1198817    4.1707782    2.8356586    30.801768 -0.022129254  -0.35719014  0.021904521   0.37422967  0.028465082    3.0078657 
  987000    10.750796    1.2586952    9.4921009  -0.32378282    0.8393165    1.0093585   0.72645441   -3.5502959            3    5.4497503    7.8071028    7.7846304   0.75751772  0.021747389  0.021468742   -0.0733134    5.2903758    5.3023695    1.0550796        0.075    1.2648498          0.5   0.11723107    4.2650808    2.8162164    30.801768  0.016315249  -0.37647402 -0.011725941   0.34438989  -0.42782749    3.7360814 
  988000     10.78036    1.2833417    9.4970178  -0.32835572   0.85575116    1.0141721   0.75062965   -3.5502959            3    5.6218797    7.9328343    7.9256889    1.0071158 -0.012905505 -0.021880034 -0.054778672    5.4572015     5.473796    1.0641979        0.075    1.2746906          0.5   0.11824421     4.228537    2.8264479    30.801768 -0.0018953868  -0.33590571 -0.0068665854   0.39180917   0.65714065    6.8767629 
  989000    10.769215    1.2868215    9.4823931  -0.33816564   0.85807151    1.0253338   0.74706642   -3.5502959            3    5.5706709     7.885829    7.8670012   0.95918239 -0.0040392541 -0.034893081  0.006739313    5.4067744    5.4209574    1.0542508        0.075    1.2844406          0.5   0.11713897    4.2684342    2.7852235    30.801768 -0.011364362  -0.38070658  0.011644219   0.35098245   0.92780209    5.1385642 
  990000    10.757097    1.2684992    9.4885976  -0.31190312   0.84585394    1.0051214   0.74016531   -3.5502959            3    5.7238944    8.0525638    7.9976008    1.1215186 -0.019101611 -0.012237417 -0.0030607052    5.5615119    5.5771323    1.0415197        0.075    1.2718188          0.5   0.11572442    4.3206094    2.7952891    30.801768 -0.0045982336  -0.36629466 0.00079415679   0.33283392     -2.23249   0.68273964 
  991000    10.749366    1.2558578    9.4935083  -0.31812569   0.83742445   0.97496182   0.74619534   -3.5502959            3    5.3528998    7.7270053    7.7878276   0.54386664 -0.014025212  -0.16321295 -0.0009251145    5.1891945    5.2105414    1.0674229        0.075    1.2706833          0.5   0.11860254    4.2157612    2.8258452    30.801768  0.016898458  -0.35984071 0.0099748439   0.39336053    3.0924692  -0.46698181 
  992000     10.73749    1.2504094    9.4870806  -0.32896122   0.83379138   0.99715008   0.72537536   -3.5502959            3    5.4222719    7.7580564     7.827634   0.68112514 -0.0011517778  -0.05702003 -0.058595801    5.2631341    5.2766736    1.0551481        0.075    1.2803919          0.5   0.11723867    4.2648043    2.8140853    30.801768  0.021576904  -0.39190436 -0.013641019   0.30276516   -1.0030742    3.1620379 
  993000    10.809783    1.3110927    9.4986899  -0.32733255   0.87425589    1.0349466   0.76763052   -3.5502959            3    5.5624786    7.8917244    7.8998555     0.895856 -0.026865134 -0.090746427 0.0071820749    5.3940707    5.4113616    1.0608565        0.075    1.2646312          0.5   0.11787294    4.2418556    2.8231764    30.801768 -0.022957289  -0.34759724  0.039464928   0.30246681   0.53021335    2.7806084 
  994000    10.750339    1.2723996    9.4779395  -0.32284302    0.8484548   0.98234499   0.75965716   -3.5502959            3    5.4037271    7.7761652    7.8237924   0.61122371 0.0082375754  0.069288994  0.063644708    5.2370684    5.2602906    1.0733684        0.075     1.263185          0.5   0.11926316    4.1924096    2.8333679    30.801768 -0.017032915  -0.42058456 -0.0043869147   0.45571146   0.88813443    2.9202551 
  995000    10.783726    1.2922488    9.4914772  -0.32065677   0.86169051    1.0054033    0.7663603   -3.5502959            3    5.7469743     8.029918    8.0526643    1.1583405 -0.030613154 -0.097218792 -0.057187272     5.578845     5.600171    1.0560555        0.075    1.2773622          0.5    0.1173395    4.2611396    2.7865561    30.801768  -0.01793921  -0.37732984 -0.008602528   0.33825629   0.19508025    5.7118606 
  996000    10.795988    1.2593531    9.5366354  -0.31860861   0.83975516   0.99433797   0.73718219   -3.5502959            3    5.5289242    7.8734977    7.8663724   0.84690249 -0.007809921  0.027356988 -0.066336778    5.3671962    5.3837366    1.0663685        0.075    1.2711833          0.5   0.11848539    4.2199297    2.8076983    30.801768 0.00085912198  -0.32904725 -0.013439718   0.34662466   -1.5664675    4.0595233 
  997000    10.750277    1.2563159     9.493961   -0.3187123   0.83772994   0.95466661   0.76021186   -3.5502959            3    5.6274621    7.9254937    7.9707957   0.98609688 0.0076375659   0.13474618   0.06546054    5.4606817    5.4880671    1.0665223        0.075    1.2680063          0.5   0.11850248    4.2193211     2.797686    30.801768  -0.01687769  -0.40900382  0.034967097   0.34602108   -1.2676084    4.7641367 
  998000    10.750646    1.2911269    9.4595188  -0.33795713   0.86094239   0.99929708     0.769178   -3.5502959            3    5.5809075     7.910828    7.9037152   0.92817935 -0.012312605  0.063096465 0.0086175483      5.41216    5.4349958    1.0783249        0.075    1.2707193          0.5   0.11981388    4.1731391    2.7983545    30.801768 -0.021161147  -0.34284356 -0.015791668   0.41515685   -1.6608404    5.5721747 
  999000    10.806471    1.2863577    9.5201132  -0.31721686   0.85776226   0.97843968   0.77776191   -3.5502959            3    5.6946129    7.9898363    7.9885268    1.1054756 0.0093723188  -0.26219617 -0.0041479885    5.5239822    5.5517467    1.0699543        0.075    1.2731679          0.5   0.11888381    4.2057872    2.8130678    30.801768  0.033429595  -0.35598448 -0.021028384   0.30929566    1.0079756     4.204014 
 1000000      10.8244    1.2942529    9.5301473  -0.31517534   0.86302688    1.0120141   0.76418671   -3.5502959            3    5.6423127    7.8807293     7.970395    1.0758137 0.0070380017  0.049585641  0.064146875    5.4746602    5.4945441    1.0703094        0.075    1.2728914          0.5   0.11892326    4.2043918    2.8446227    30.801768 0.0078619876  -0.38119137 -0.0020067045   0.31023991     1.530113    4.4898724 
Loop time of 572.138 on 1 procs for 700000 steps with 4504 atoms

Performance: 528543.955 tau/day, 1223.481 timesteps/s
98.8% CPU use with 1 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 72.942     | 72.942     | 72.942     |   0.0 | 12.75
Bond    | 126.68     | 126.68     | 126.68     |   0.0 | 22.14
Neigh   | 174.53     | 174.53     | 174.53     |   0.0 | 30.50
Comm    | 11.854     | 11.854     | 11.854     |   0.0 |  2.07
Output  | 1.2262     | 1.2262     | 1.2262     |   0.0 |  0.21
Modify  | 173.97     | 173.97     | 173.97     |   0.0 | 30.41
Other   |            | 10.93      |            |       |  1.91

Nlocal:    4504 ave 4504 max 4504 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    1411 ave 1411 max 1411 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    10348 ave 10348 max 10348 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 10348
Ave neighs/atom = 2.29751
Ave special neighs/atom = 6.98401
Neighbor list builds = 87382
Dangerous builds = 0
#undump      comp

unfix abeads_cdz
unfix bbeads_cdz
unfix tbeads_cdz

###############
# Shearing    #
###############

#--- Keep only thermostat on walls ---#
unfix lang_melt

#variable    vtop equal (v_Wall_v/2)
#variable    vbot equal -(v_Wall_v/2)
velocity    twout set $(v_Wall_v/2) 0.0 0.0  units box
velocity    twout set 0.25 0.0 0.0  units box
velocity    bwout set -$(v_Wall_v/2) 0.0 0.0  units box
velocity    bwout set -0.25 0.0 0.0  units box


#--- Number Density profiles ---#

compute         sabeads abeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         sabeads abeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             abeads_sdz abeads  ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} sabeads density/number file abeads_sdz
fix             abeads_sdz abeads  ave/chunk 100 ${Nrepeats} ${Nfreqs} sabeads density/number file abeads_sdz
fix             abeads_sdz abeads  ave/chunk 100 800 ${Nfreqs} sabeads density/number file abeads_sdz
fix             abeads_sdz abeads  ave/chunk 100 800 80000 sabeads density/number file abeads_sdz
compute         sbbeads bbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         sbbeads bbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             bbeads_sdz bbeads  ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} sbbeads density/number file bbeads_sdz
fix             bbeads_sdz bbeads  ave/chunk 100 ${Nrepeats} ${Nfreqs} sbbeads density/number file bbeads_sdz
fix             bbeads_sdz bbeads  ave/chunk 100 800 ${Nfreqs} sbbeads density/number file bbeads_sdz
fix             bbeads_sdz bbeads  ave/chunk 100 800 80000 sbbeads density/number file bbeads_sdz
compute         stbeads tbeads chunk/atom bin/1d z lower ${binres} units reduced # Check bound keyword to maybe only bin melt area
compute         stbeads tbeads chunk/atom bin/1d z lower 0.001 units reduced 
fix             tbeads_sdz tbeads  ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} stbeads density/number file tbeads_sdz
fix             tbeads_sdz tbeads  ave/chunk 100 ${Nrepeats} ${Nfreqs} stbeads density/number file tbeads_sdz
fix             tbeads_sdz tbeads  ave/chunk 100 800 ${Nfreqs} stbeads density/number file tbeads_sdz
fix             tbeads_sdz tbeads  ave/chunk 100 800 80000 stbeads density/number file tbeads_sdz

#--- Temperature and Velocity profiles ---#
compute        eall all chunk/atom bin/1d z lower ${binres} units reduced
compute        eall all chunk/atom bin/1d z lower 0.001 units reduced
#compute        biasT all temp/profile 1 1 1 xyz 100 100 100
fix            temp_prof   all ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} eall temp file temp_sz
fix            temp_prof   all ave/chunk 100 ${Nrepeats} ${Nfreqs} eall temp file temp_sz
fix            temp_prof   all ave/chunk 100 800 ${Nfreqs} eall temp file temp_sz
fix            temp_prof   all ave/chunk 100 800 80000 eall temp file temp_sz
#fix            temp_bias   all ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} eall temp bias biasT file tempb_sz
fix            vel_prof_x_s all ave/chunk ${Neverys} ${Nrepeats} ${Nfreqs} eall vx vy file velp_sz
fix            vel_prof_x_s all ave/chunk 100 ${Nrepeats} ${Nfreqs} eall vx vy file velp_sz
fix            vel_prof_x_s all ave/chunk 100 800 ${Nfreqs} eall vx vy file velp_sz
fix            vel_prof_x_s all ave/chunk 100 800 80000 eall vx vy file velp_sz
#--- Ave s_bot and p_bot ---#

fix             fc_ave all ave/time ${Neverys} ${Nrepeats} ${Nfreqs} v_sbot v_pbot file fc_ave.dump
fix             fc_ave all ave/time 100 ${Nrepeats} ${Nfreqs} v_sbot v_pbot file fc_ave.dump
fix             fc_ave all ave/time 100 800 ${Nfreqs} v_sbot v_pbot file fc_ave.dump
fix             fc_ave all ave/time 100 800 80000 v_sbot v_pbot file fc_ave.dump

#--- Dumps ---#
#dump           shear all image ${Ndump_s} stg3.*.jpg type type zoom 2 view 60 120 bond none none

#--- Run Shear ---#
timestep    ${Tstep}
timestep    0.005
run         ${Nshear}
run         800000
WARNING: Inconsistent image flags (src/domain.cpp:784)
Per MPI rank memory allocation (min/avg/max) = 9.665 | 9.665 | 9.665 Mbytes
Step TotEng KinEng PotEng E_pair Temp c_melTemp c_wallTemp v_Fcatom v_Pcomp2 Press Pxx Pyy Pzz Pxy Pxz Pyz c_melPress c_wallPress v_melDens v_surfcov v_aveRg v_Wall_v2 v_srate v_D v_bwzmax Zhi c_fbwall[1] c_fbwall[3] c_ftwall[1] c_ftwall[3] v_sbot v_pbot 
 1000000    10.833631    1.3034837    9.5301473  -0.31517534   0.86918215    1.0120141   0.77444093   -3.5502959            3    5.6445623    7.8875876     7.970395    1.0757043 0.0070380017  0.049585641  0.064146875    5.4746602    5.4967937    1.0703094        0.075    1.2728914          0.5   0.11892326    4.2043918    2.8446227    30.801768 0.0078619876  -0.38119137 -0.0020067045   0.31023991     1.530113    4.4898724 
 1001000    10.891086    1.3411503    9.5499358  -0.30634883   0.89429877    1.0641486   0.78158491   -3.5502959            3    5.5836397    7.8911116    7.9332482   0.92655931 -0.0079409806     0.366896 0.0040238878    5.4121704    5.4282588     1.047423        0.075    1.2598911          0.5   0.11638034    4.2962583    2.8023469    30.801768  0.010054969  -0.38198621 -0.021433399   0.43786547   -5.0989083    1.7556961 
 1002000    10.901604    1.3665268    9.5350768  -0.32007974   0.91122016     1.090293   0.79237411   -3.5502959            3    5.8433402    8.0985017    8.0761078    1.3554111 -0.019814901  -0.37780227  0.013398753    5.6695038    5.6841418    1.0343608        0.075    1.2875249          0.5   0.11492898    4.3505129    2.7857507    30.801768 -0.0029335805  -0.39529949  -0.01022968   0.37854395    2.7584768    2.1246833 
 1003000    10.929185    1.3686861    9.5604991  -0.31233418   0.91266004    1.1121157    0.7802486   -3.5502959            3     5.424271    7.7587538    7.7572181   0.75684126  0.010396315  0.020689653  -0.16943931    5.2530948    5.2618862    1.0113123        0.075    1.3305691          0.5   0.11236804    4.4496639    2.7960462    30.801768 -0.015592212  -0.36760912 -0.017545165   0.28892337   -1.2301127    4.1583464 
 1004000    11.041851    1.4385789    9.6032724  -0.30925548   0.95926556    1.1803973    0.8124447   -3.5502959            3    5.6895403    7.9161376    7.9940436    1.1584398 -0.011128796 -0.018974005  0.031769421    5.5113007    5.5171854    1.0184293        0.075     1.381372          0.5   0.11315881    4.4185689    2.7953116    30.801768  0.002166258  -0.41792921  0.020284413   0.33392525   0.71907456   0.63429732 
 1005000    11.063792    1.4260591     9.637733  -0.31483173   0.95091718    1.1765175   0.80111912   -3.5502959            3    5.6212773     7.861587    7.9581895    1.0440553  0.015264353 -0.095875036 -0.052676773    5.4455224    5.4494888    1.0094695        0.075    1.4462361          0.5   0.11216327    4.4577872    2.7744349    30.801768 -0.0043237384  -0.33810732 -0.0018918449   0.32068488    1.7716003    4.6907453 
 1006000    11.082866    1.4477978    9.6350678  -0.27018623   0.96541289    1.2107555   0.80248059   -3.5502959            3    5.6997388    7.9806158    7.9737509    1.1448498 -0.013162216 -0.057627655 -0.023098764    5.5236852    5.5229512   0.99614312        0.075    1.5685409          0.5   0.11068257    4.5174232     2.801681    30.801768 -0.012422758  -0.42486383 -0.017985708   0.39012148    1.9380299    4.5029671 
 1007000    11.084574    1.4654014    9.6191722  -0.29608712   0.97715124    1.2381026   0.80383481   -3.5502959            3    5.8592449    8.0561298    8.1058375    1.4157674 -0.0055893185  0.083689679  0.080766016    5.6828942    5.6784642    1.0121766        0.075    1.6329502          0.5   0.11246407    4.4458644    2.8128048    30.801768 -0.0089787777  -0.44299968  0.001204815   0.39480858   -1.1823705    3.8312219 
 1008000    11.156585    1.4841025    9.6724822  -0.29729953   0.98962141    1.2575763   0.81164831   -3.5502959            3     5.246693    7.5788576    7.6069963   0.55422495  0.049415899    -0.143995  0.026076295    5.0686281    5.0630688   0.98310644        0.075     1.705821          0.5   0.10923405    4.5773274    2.8042954    30.801768 -0.019252704  -0.32158358 -0.0018327544    0.3872893   0.81013788    1.4381625 
 1009000    11.126683    1.4986778    9.6280047  -0.28625839   0.99934044    1.3008579   0.79903316   -3.5502959            3     5.930858    8.1609801    8.0951328    1.5364609 -0.035033629 -0.048636636  -0.10363643    5.7555607     5.740914   0.99981445        0.075    1.7645948          0.5   0.11109049    4.5008351    2.7967617    30.801768  0.022459414  -0.43575532 -0.043176584   0.33838177   0.76494602    5.3657066 
 1010000    11.121274    1.4850318    9.6362424  -0.27522962   0.99024108    1.2727336   0.80259262   -3.5502959            3    5.5603072     7.817776    7.8865942   0.97655121 -0.009358586  -0.11175722 -0.011203033     5.384229    5.3744698   0.98984167        0.075    1.8411157          0.5   0.10998241    4.5461816    2.7873454    30.801768 -0.0079636491  -0.42171537 0.00050408903   0.31256943    1.0332979    1.9932807 
 1011000    11.060528    1.4518761    9.6086521  -0.30004262   0.96813233    1.2726939   0.76578749   -3.5502959            3    5.5621681    7.7854339    7.9426379   0.95843241 -0.0046427482  0.066843678  0.063287638    5.3941645    5.3763365    1.0192178        0.075    1.8300853          0.5   0.11324642    4.4151506    2.8022147    30.801768 -0.0030418381  -0.37784189 -0.00035635835   0.37755247  -0.78137609    1.3778769 
 1012000    11.123283    1.4945266    9.6287568  -0.29842896   0.99657234    1.2962184   0.79750957   -3.5502959            3    5.5191148     7.705413    7.9188233   0.93310809 -0.0036211184  0.029838547 -0.010261102    5.3441518    5.3298483    1.0119287        0.075    1.9276948          0.5   0.11243653    4.4469534    2.8368264    30.801768 -6.9003915e-05  -0.30922688 0.0044319356   0.35422729    3.8358724    1.9787907 
 1013000    11.178513      1.49286    9.6856525  -0.29960241   0.99546102     1.283223   0.80430737   -3.5502959            3    5.7726897       7.9166    8.0405084    1.3609607 -0.015687476 -0.062860796 -0.088437311    5.5962353    5.5853207    1.0114876        0.075    1.9521255          0.5   0.11238752    4.4488927     2.800745    30.801768  -0.01461352  -0.34610467  -0.01186655    0.2836424   -3.5351594    2.3148622 
 1014000    11.160474    1.4995641    9.6609094  -0.30146949   0.99993142    1.2813327   0.81301283   -3.5502959            3     5.396403    7.6613833     7.830457   0.69736858 -0.019098273 -0.048290397  0.097331825    5.2180387      5.20931   0.99880319        0.075    1.9814559          0.5   0.11097813    4.5053921    2.8033903    30.801768  0.015700688   -0.3582867 -0.019285167   0.28358663    2.2360096   0.40300759 
 1015000    11.142647    1.5063445    9.6363027  -0.28493336    1.0044527    1.3183082   0.79593557   -3.5502959            3    5.6197216    7.8410116    7.9670412     1.051112   0.02182347  0.079531641 -0.012210808    5.4451039    5.4272297    1.0184754        0.075      1.97887          0.5   0.11316393    4.4183689    2.8246068    30.801768 -0.010224834  -0.38875573 0.0098305343   0.42148517    -1.222914    4.0860487 
 1016000    11.131897    1.5067725    9.6251245  -0.27368673    1.0047381    1.3145705   0.79889874   -3.5502959            3    5.6483885    7.9721422    7.8638732    1.1091501  0.058616196    0.1001409  0.027012442    5.4731207    5.4564424   0.99364658        0.075    1.9955829          0.5   0.11040518    4.5287732    2.8202513    30.801768  0.023213902  -0.38785369 -0.017852908    0.3497239   -6.7577535    4.0235933 
 1017000    11.142842    1.5138205    9.6290217   -0.2971052    1.0094378    1.3053043   0.81289528   -3.5502959            3    5.4718062    7.7630292    7.8376775   0.81471196  0.025111712  -0.20723621 -0.035958186    5.2934678    5.2812131     1.017028        0.075    2.0277055          0.5   0.11300311    4.4246571     2.790463    30.801768 0.00086184536  -0.33604563 -0.0048082901   0.34094238    2.6861926    3.5777141 
 1018000    11.110198    1.4746277    9.6355699  -0.29227508   0.98330345    1.2890531   0.78017346   -3.5502959            3    5.7891231    7.9648412    8.1194069    1.2831213 -0.0057215359   0.10703413  0.032303591    5.6179634    5.6009029    1.0341681        0.075    2.0180195          0.5   0.11490756    4.3513237    2.8452187    30.801768 0.0074297733  -0.38920689  0.017028622   0.32164395   -1.2491282    4.9117767 
 1019000    11.197981     1.504409     9.693572  -0.27124832     1.003162    1.2839456   0.81665572   -3.5502959            3    5.6790501    7.8701121    8.0124648    1.1545734 0.0079050555  -0.17911444   0.14121229    5.4998867    5.4915756    1.0043427        0.075    2.0377584          0.5   0.11159363    4.4805424    2.8093588    30.801768 -0.018182169  -0.33827527  0.017046489    0.4498223    2.5399347    3.1388328 
 1020000    11.178684    1.5274513    9.6512331  -0.28593109     1.018527    1.3161498    0.8208189   -3.5502959            3     5.511658    7.7665077    7.9204917   0.84797465   0.02867717   0.10124318  -0.15789268    5.3315812    5.3194813    1.0136323        0.075    2.0455668          0.5   0.11262581    4.4394799    2.7972748    30.801768 -0.0038389869  -0.33754422  0.014575016   0.36409931  -0.48088607    1.6174051 
 1021000    11.207083      1.52067    9.6864127  -0.28673946    1.0140051    1.3246098   0.80765521   -3.5502959            3    5.6072834    7.8256883    7.9506696    1.0454924   -0.0112806  0.034445399 -0.067817026    5.4300945    5.4138714    1.0108235        0.075    2.0628186          0.5   0.11231372    4.4518158    2.8071695    30.801768  0.027797701  -0.33222674 0.0078680886   0.34656993   -0.5985842    3.4746892 
 1022000    11.175838    1.5222035    9.6536342  -0.29407857    1.0150277    1.3196344    0.8126701   -3.5502959            3    5.6623011    7.9139901     7.972133    1.1007802 -0.024102537  -0.32725361 -0.035941754     5.484012    5.4696155    1.0165703        0.075    2.0767083          0.5   0.11295226     4.426649    2.8071121    30.801768 0.0048947586  -0.37994669 -0.0072894588    0.3637608    1.1390756    5.6520944 
 1023000    11.141136    1.4952584     9.645878  -0.26521377    0.9970603     1.314436   0.78619766   -3.5502959            3    5.6242352    7.8815204    7.9425533    1.0486318  0.046296921  -0.10158345 -0.058946732    5.4517538    5.4323087    1.0118393        0.075    2.0680375          0.5   0.11242659    4.4473464    2.7771914    30.801768  0.040651282  -0.32260651 -0.022441362   0.41926079     1.742865    4.7489545 
 1024000    11.167319     1.502241    9.6650781  -0.26985133    1.0017164    1.2809091   0.81626839   -3.5502959            3    5.8380217    8.0546386    8.0767622    1.3826643 0.0019573897 -0.084249195  0.066007398    5.6589432    5.6509906   0.99464571        0.075    2.0999759          0.5   0.11051619     4.524224    2.7969067    30.801768  0.012206103  -0.35410867 0.0061761679   0.37147372    1.3942464    8.5855457 
 1025000    11.175089    1.5100376    9.6650516  -0.28425022    1.0069153    1.2989639   0.81291285   -3.5502959            3    5.5772394     7.828375    7.9350144   0.96832888 -0.0096576626  -0.32723757  0.026285005    5.3988971    5.3875721    1.0079674        0.075    2.1218018          0.5   0.11199638      4.46443     2.782774    30.801768 -0.0030846179  -0.39803615 -0.0021427449    0.3742225   -1.4027828    6.3120656 
 1026000    11.149793    1.5048543    9.6449392  -0.28929056     1.003459    1.3100189   0.79979717   -3.5502959            3    5.6890632    7.8462494     8.027663    1.1932773 0.00030295253  -0.24215583   0.10461741    5.5135983    5.4977817    1.0131482        0.075    2.1136697          0.5   0.11257202    4.4416009    2.7826071    30.801768  0.007694138  -0.43610315  0.011455171   0.35022251    1.8785513    3.6360868 
 1027000    11.139115    1.5046735    9.6344415  -0.29619893    1.0033384    1.3033338   0.80404568   -3.5502959            3    5.4211452    7.7626977    7.7789082   0.72182954 0.0073414902  -0.19358653  -0.05400795    5.2447482    5.2308397    1.0168414        0.075    2.0675829          0.5   0.11298238    4.4254689     2.804858    30.801768 -0.0051464867  -0.34486448 0.0029934627   0.41365153    2.2022912  -0.61240403 
 1028000    11.192724    1.5546998    9.6380246  -0.28121002    1.0366967    1.3336321   0.83945287   -3.5502959            3    5.5615865    7.8238824    7.9288901    0.9319869  0.029951704  -0.10941635 -0.043776621    5.3774216     5.366857    1.0256703        0.075    2.0643973          0.5   0.11396337    4.3873746    2.7929067    30.801768 0.0037613486  -0.41101576 0.0039010526   0.37113809 -0.0041979246   -1.2008949 
 1029000    11.110494     1.486799    9.6236954  -0.29309906   0.99141944    1.2833569   0.79748528   -3.5502959            3    5.5073236    7.7735987    7.9360386   0.81233352  0.014294793  -0.17183166 -0.051403265    5.3323659    5.3199351     1.017445        0.075    2.0807676          0.5   0.11304944    4.4228436    2.8267194    30.801768   0.04267837  -0.33551702 -0.010904047   0.30687839    1.8501345    6.1670269 
 1030000    11.131166     1.493034    9.6381323  -0.28504071   0.99557707    1.2955177   0.79631787   -3.5502959            3    5.7203262    7.9358778    8.1198937     1.105207  0.028829498  0.087483752  -0.09554865    5.5456246     5.531162    1.0341293        0.075    2.0737681          0.5   0.11490325    4.3514869    2.8144517    30.801768 -0.0020995941  -0.34240071 -0.028224634   0.35060825   -1.6734035    6.6341112 
 1031000    11.115589    1.4692445    9.6463447  -0.28800713   0.97971386    1.2701823   0.78675309   -3.5502959            3    5.3308609    7.6175763    7.7934291   0.58157721    0.0225671  -0.22907751  0.033938425    5.1582577    5.1453961     1.003776        0.075    2.0372011          0.5   0.11153067    4.4830719    2.8253642    30.801768  0.014778612  -0.37080672 -0.0073937952   0.26747892    3.4202673    2.9241735 
 1032000    11.120933     1.503327    9.6176057  -0.30900214    1.0024406    1.2960779   0.80737906   -3.5502959            3    5.7734462    7.9621546    8.1184505    1.2397335  0.015913901  0.075079647  0.035291349    5.5963179    5.5842002    1.0193984        0.075    2.0198378          0.5   0.11326649    4.4143681    2.7894507    30.801768 -0.014040647  -0.32639344 0.0031216045   0.33731227 -0.016658433    2.6667227 
 1033000    11.055879     1.470665    9.5852144  -0.29029682   0.98066109    1.3225993   0.75344457   -3.5502959            3    5.5491697    7.8829792    7.9150415   0.84948836 -0.0080951086  -0.17137185 -0.047342179    5.3838739    5.3560512    1.0121106        0.075     2.078591          0.5   0.11245674    4.4461543    2.7946424    30.801768  0.017502109  -0.39244126 -0.003614022   0.35318878  -0.55166539    3.7540581 
 1034000    11.129398    1.4929807    9.6364173   -0.3048357   0.99554151    1.2836557   0.80415345   -3.5502959            3    5.4428988    7.6543526    7.8837702   0.79057355 -0.012541536  -0.23357137 -0.0098205997    5.2664782    5.2554666    1.0163597        0.075    2.0958138          0.5   0.11292885    4.4275665    2.8195829    30.801768  0.017812799  -0.35220458 -0.0053552744   0.42356217   0.32738368    3.8967871 
 1035000    11.131925    1.5049606    9.6269646  -0.28015066    1.0035298    1.3195221   0.79359032   -3.5502959            3    5.7972536     7.953713    8.1008581    1.3371899   0.01893198   -0.1505191  0.004295149    5.6231504    5.6045845    1.0296242        0.075    2.0906678          0.5   0.11440269    4.3705267    2.8472381    30.801768 -0.0079902474  -0.38782881 0.00018414299    0.3842506 -0.081591229    6.7387014 
 1036000    11.129489    1.4957557    9.6337332  -0.29208955   0.99739188    1.2938391   0.80045842   -3.5502959            3     5.422808    7.7097751    7.8233857   0.73526328 0.0096492166  -0.26375589  0.014086879     5.247198     5.233889    1.0231181        0.075    2.0804977          0.5   0.11367979    4.3983193    2.8028567    30.801768 -0.0063469196  -0.35392485 0.0014918181   0.37167975  -0.74816214     2.629069 
 1037000    11.127498    1.4890452    9.6384532  -0.28661192   0.99291724    1.2694474   0.80923803   -3.5502959            3    5.6570299    7.8680658    8.0135925    1.0894315  0.034307684 -0.013884997 0.0094391712    5.4794938    5.4716724    1.0291061        0.075    2.0988924          0.5   0.11434512    4.3727271    2.8013289    30.801768 0.0036326302  -0.31954601 0.0038651513   0.38158616   -1.2521385    3.8253907 
 1038000    11.119977    1.5027228    9.6172541  -0.30686059    1.0020376    1.2848345   0.81419101   -3.5502959            3    5.5964187    7.8189601    7.9814433   0.98885268  0.013489443  -0.15912662 -0.093266034     5.417796    5.4088144    1.0375544        0.075    2.0758155          0.5   0.11528383    4.3371218    2.8147484    30.801768 -0.0094059856  -0.34309757 -0.020458355   0.37941276    3.8534221    7.0039455 
 1039000     11.11199    1.4807646    9.6312252  -0.30218125   0.98739563    1.2287022    0.8271577   -3.5502959            3    5.5450468    7.7720001     7.939222   0.92391829  0.026705269  -0.11287165 0.0094555702    5.3635793    5.3656386    1.0252066        0.075    2.0676463          0.5   0.11391184    4.3893593    2.8157672    30.801768   0.01334395  -0.37296782 -0.019326609   0.33900732    1.2380953    4.1244249 
 1040000    11.103395    1.5071285    9.5962666  -0.29625681    1.0049755    1.2691275   0.82953909   -3.5502959            3    5.7782173    7.9761313    8.1032939    1.2552267 0.0041361858    0.1488489  0.077390819    5.5962274    5.5929065      1.01822        0.075    2.0713829          0.5   0.11313556    4.4194771    2.8000338    30.801768 -0.0093082029  -0.39470967  0.031900481   0.37906904   -2.2895311    2.0619684 
 1041000    11.076692     1.470424    9.6062681  -0.30873456   0.98050037    1.2464293   0.80387229   -3.5502959            3    5.5571422    7.7755322    8.0249891   0.87090515  0.019209142  -0.18935654  0.011193427    5.3807832    5.3751456    1.0371707        0.075    2.0814714          0.5   0.11524119    4.3387266    2.7974881    30.801768    0.0134238  -0.37495413 -0.035154518   0.32863297   0.36550441    6.8211615 
 1042000    11.083939    1.4802485    9.6036903  -0.30435391   0.98705145    1.2462888   0.81487943   -3.5502959            3    5.7766721    7.9844573    8.0726787    1.2728801  0.026116383  -0.16609537    0.1038073    5.5978983     5.594696    1.0244463        0.075    2.0946507          0.5   0.11382737    4.3926167    2.8125668    30.801768 -0.003396809   -0.3566344  0.036371616   0.41942887  -0.44170421    3.3192096 
 1043000    11.073765    1.4788029     9.594962  -0.29690982   0.98608757    1.2556255    0.8070596   -3.5502959            3    5.6533737    7.9493745    7.9803598    1.0303867 -0.017605971  0.010450003  0.012923668    5.4763155    5.4700343    1.0381084        0.075    2.0261683          0.5   0.11534538    4.3348074    2.7902297    30.801768   0.02834726  -0.35963075  0.036402821    0.4113575   -4.1864736   0.66086779 
 1044000    11.013884      1.45351    9.5603744  -0.29411451   0.96922183    1.2352022   0.79255537   -3.5502959            3    5.5439179    7.8285212    7.8934326    0.9098001  0.017038521  0.046094365   0.04512673    5.3700418    5.3635607    1.0303326        0.075    2.0725355          0.5    0.1144814    4.3675215    2.8006921    30.801768 -0.0030074683   -0.3927324  0.013565028   0.39946049   0.31461456    1.9300991 
 1045000    11.066952    1.4791246     9.587827  -0.31312023   0.98630204    1.2459031   0.81388769   -3.5502959            3    5.6031001    7.8558406     7.963455   0.99000465 -0.0010128019  -0.43479086    0.0598149    5.4245439    5.4211803    1.0486264        0.075    2.0967994          0.5   0.11651405     4.291328    2.7938056    30.801768  0.026738514  -0.35205653 0.00014007426   0.28812233    3.4346788   -1.0132638 
 1046000    11.070196    1.4613357    9.6088606  -0.29946347   0.97444012    1.2443223   0.79517869   -3.5502959            3    5.4196854    7.7158718    7.8013197   0.74186477 -0.0040217459  -0.11038479 -0.017313362    5.2452338    5.2379965    1.0338391        0.075    2.1149271          0.5   0.11487101    4.3527085    2.8284339    30.801768 -0.020335487  -0.29861376 -0.017803174   0.36066361   -3.4133676    1.6411387 
 1047000    11.091185    1.5054405    9.5857445  -0.29754555    1.0038499    1.2973156   0.80890319   -3.5502959            3    5.6324559    7.8742511    7.9406674    1.0824493  0.013694569  -0.09100546 -0.040815559    5.4549933    5.4430292    1.0383898        0.075    2.0805152          0.5   0.11537664    4.3336327    2.8117309    30.801768 -0.0075099545  -0.33690077 -0.0029363088    0.4136962   -1.3103689   -3.3270246 
 1048000    11.093133    1.4830449    9.6100879  -0.28209391   0.98891615    1.2453575    0.8186057   -3.5502959            3    5.5987339    7.9324829    7.9205524   0.94316641  0.037583089  -0.22055212   0.15970553    5.4191426    5.4168938    1.0235528        0.075    2.0921213          0.5   0.11372809    4.3964511    2.7925659    30.801768 0.0055425087  -0.43792072  0.022601967   0.35837363    1.3395189   0.86636991 
 1049000    11.125309    1.5136008    9.6117081  -0.29472438    1.0092913     1.280911   0.82888639   -3.5502959            3    5.5610855     7.759353    7.9708505   0.95305293 -0.037890752 -0.0011946248 -0.013708553    5.3792388    5.3740541     1.036983        0.075    2.1076993          0.5   0.11522033    4.3395118    2.8122991    30.801768  0.020147529  -0.30691092  0.025574919   0.36811658   0.40735929    1.9200948 
 1050000    11.089961     1.487307    9.6026539  -0.28199056   0.99175818    1.2776721   0.80183317   -3.5502959            3    5.7225204    7.9164846    8.0243905     1.226686 -0.00019697944  -0.21301745  0.096922095    5.5466088    5.5359619    1.0282171        0.075    2.1186375          0.5   0.11424634    4.3765077    2.7996363    30.801768 0.0033294532  -0.46765768 -0.0048545556   0.39049305    1.0281079    4.2478456 
 1051000    11.101629    1.4950675    9.6065611  -0.28388629   0.99693303     1.305027    0.7922478   -3.5502959            3    5.7353099    7.9276911    7.9750209    1.3032176 0.0088562727 -0.026110503  0.021115929    5.5615012    5.5447572    1.0185989        0.075    2.0986807          0.5   0.11317766    4.4178332    2.7864071    30.801768    0.0433152   -0.3774008 -0.012144713    0.3780968    1.3769914    3.7482586 
 1052000    11.075759    1.4750152    9.6007437   -0.2733546   0.98356184    1.2703054   0.79308162   -3.5502959            3    5.6124766    7.9052238    7.9317019    1.0005043  0.013744118  -0.13326834   0.14534448     5.438485    5.4269938    1.0198914        0.075    2.0726398          0.5   0.11332127    4.4122343    2.8294019    30.801768 -0.001348022  -0.37795389 -0.030272975   0.36993179    2.7775345    1.8626831 
 1053000     11.08001    1.4614136    9.6185965  -0.30747751   0.97449211    1.2733585   0.77594007   -3.5502959            3    5.7928965    7.9172187    8.1011113    1.3603595  0.016789373 -0.063899809 -0.015481503    5.6226655    5.6069679    1.0297906        0.075    2.0771131          0.5   0.11442117    4.3698206    2.7779838    30.801768 -0.022666126  -0.38678237 -0.013018713   0.34698056   0.72690151    8.5327598 
 1054000    11.089547    1.4882253    9.6013213  -0.29353022   0.99237053    1.2522496   0.81977339   -3.5502959            3    5.4772154    7.6931759    7.8881999    0.8502703 -0.013146156  0.037924833 -0.059390912    5.2973679    5.2943689    1.0138449        0.075    2.0869981          0.5   0.11264944    4.4385487    2.8034074    30.801768 -0.0083647174  -0.36756933 -0.027373889   0.33924055   -4.6155293   0.44938205 
 1055000    11.114029    1.5119564     9.602073  -0.27899091    1.0081948    1.2886633   0.82190009   -3.5502959            3    5.5000257    7.8470705    7.9044654   0.74854106 -0.0012733506  -0.15190741  0.046235158    5.3197117    5.3118623    1.0262299        0.075    2.0710081          0.5   0.11402555    4.3849822    2.8498439    30.801768 -0.028182881  -0.34702842 0.0054131325   0.38407654    1.7173633    3.0798491 
 1056000    11.109941    1.5177563    9.5921852  -0.30631987    1.0120622     1.312615   0.81240168   -3.5502959            3    5.6492702    7.8868876     8.005476    1.0554471 -0.0014531216  -0.10086878 -0.031771879    5.4710401    5.4576096    1.0380985        0.075    2.0940313          0.5   0.11534428    4.3348488    2.7879186    30.801768  0.014353513  -0.34591541 -0.012040606   0.45290524   -1.3812646    4.1950219 
 1057000    11.106262    1.4825362    9.6237261   -0.2992208   0.98857693    1.3133598   0.77278125   -3.5502959            3    5.4985168    7.7336378    7.8215711   0.94034148 -0.012840354  -0.33606431 -0.016958231    5.3289788    5.3067474    1.0075256        0.075    2.0905483          0.5   0.11194729    4.4663877     2.820689    30.801768 -0.0033034273  -0.33525924 0.0022089237   0.31765779    2.1270997    3.4231118 
 1058000    11.121541    1.5150258    9.6065152  -0.29438676    1.0102415    1.3028146   0.81589124   -3.5502959            3    5.5310894    7.7789914    7.9394106   0.87486624  0.024455336   0.11187492  -0.03793125    5.3520937    5.3408598    1.0308976        0.075    2.0696442          0.5   0.11454417    4.3651281    2.8196301    30.801768 0.0028821393  -0.38753397 0.0065208801   0.39023391   0.30655495    3.8433521 
 1059000    11.142014    1.5120327    9.6299815  -0.29170029    1.0082456    1.3057762   0.81059518   -3.5502959            3    5.4281137    7.6902142     7.806706   0.78742084  0.015070713 -0.015545737   0.11366396    5.2502798    5.2374516    1.0144242        0.075    2.1094648          0.5    0.1127138    4.4360141    2.8072145    30.801768  0.015457083  -0.29096563 -0.039173814   0.35512396   0.81840982    2.0739423 
 1060000    11.121864    1.5048782    9.6169861  -0.30162123    1.0034749    1.3157118   0.79603478   -3.5502959            3     5.501424    7.8315434    7.8512551   0.82147339  0.019426847  0.036935186  -0.11573572    5.3267845    5.3093112    1.0335841        0.075    2.0780585          0.5   0.11484267    4.3537823    2.7943223    30.801768 -0.031197951  -0.36870856 0.0020367775   0.42815525  -0.90103575    3.4258585 
 1061000    11.125083     1.488437     9.636646  -0.30237573    0.9925117    1.2808404   0.80097975   -3.5502959            3    5.7238052    7.8551691     8.107115    1.2091316  0.023294572  -0.10550026   -0.1282131    5.5480809    5.5367842    1.0117688        0.075    2.0976455          0.5   0.11241876    4.4476563    2.8043919    30.801768 -0.013761591  -0.38504285  0.011220669   0.32789037    1.6501769    4.6234763 
 1062000    11.115492    1.5074669    9.6080253  -0.30713282    1.0052011    1.3087586   0.80353822   -3.5502959            3    5.4909259    7.7664324    7.8796943   0.82665103 0.0056718535  -0.20546971  0.017308897    5.3146403    5.2998284    1.0483586        0.075    2.1063986          0.5   0.11648429    4.2924243     2.830498    30.801768 -0.022245676  -0.38677233 -0.020505716   0.40608729   0.27968423    1.9009661 
 1063000     11.13574    1.4980064    9.6377341   -0.2907773   0.99889272    1.2838973   0.80957556   -3.5502959            3    5.6708187    7.8747934    8.0352926    1.1023701 -0.00065417119 -0.097217199 -0.031163648    5.4932086    5.4833513    1.0230314        0.075    2.0986775          0.5   0.11367016     4.398692    2.8206465    30.801768   0.03055356  -0.31952137  0.026269494   0.36803369  -0.66055412    3.8163357 
 1064000    11.118297    1.5244209    9.5938764  -0.29545377    1.0165063    1.3098498   0.82164561   -3.5502959            3    5.7342705    7.9689926    8.0761283    1.1576908 -0.015709289  -0.15218653  0.074544034    5.5540124    5.5430137    1.0349535        0.075    2.1017901          0.5   0.11499483    4.3480216     2.805363    30.801768 0.0087930889  -0.40444176 -0.036518985   0.40222468   -1.7395765    2.5610012 
 1065000    11.080562    1.4832948     9.597267  -0.29234032   0.98908281    1.2846415   0.79273765   -3.5502959            3    5.4743884    7.6581871    7.8938068   0.87117124 -0.019209786 -0.065973984  0.028381693    5.3004722    5.2868123   0.99259461        0.075    2.1082027          0.5   0.11028829    4.5335729    2.8237578    30.801768  0.019343105  -0.35719994 -0.015003915   0.28015231   0.16616462    2.5854574 
 1066000     11.11037    1.4997922    9.6105773  -0.30411859    1.0000835    1.2842597   0.81131815   -3.5502959            3    5.5427226    7.8467937    7.9042279   0.87714621 -0.017235048  -0.27837532  0.077569206    5.3647302    5.3552023    1.0375382        0.075    2.0979827          0.5   0.11528202    4.3371899    2.8041231    30.801768  0.011637546  -0.38598356 -0.020856384    0.4266255    1.0416399  -0.37086017 
 1067000    11.089283    1.4561998    9.6330834  -0.28765146   0.97101546    1.2491396   0.78626729   -3.5502959            3    5.5328348    7.7094483    7.8985936   0.99046254 -0.033233323  0.072836125  0.064539779    5.3603382    5.3504425    1.0109815        0.075    2.0966179          0.5   0.11233128      4.45112    2.7984816    30.801768 -0.019829752  -0.37387298 -0.004095262   0.39902102   -1.0266688    2.2704312 
 1068000    11.065885    1.4841442    9.5817405  -0.29229776   0.98964918    1.2552912   0.81321549   -3.5502959            3     5.553309    7.8869543     7.910274   0.86269869 0.0033491295  -0.17051277  0.034651635    5.3749003    5.3700185    1.0367646        0.075    2.0760561          0.5   0.11519607     4.340426    2.8156991    30.801768 -0.0027770481  -0.36482509  0.040344711   0.38443725    1.9292409   0.89171677 
 1069000    11.041031    1.4998997    9.5411318  -0.29464621    1.0001552    1.2919025   0.80635085   -3.5502959            3    5.5960323    7.9318252    7.8811111   0.97516059  0.011712908  -0.24543125 -0.090162961    5.4191296     5.407396    1.0396563        0.075    2.0475088          0.5   0.11551736    4.3283536    2.8144843    30.801768  0.033887614   -0.3419304 0.0075496548   0.41384167   -1.2547329    1.5515194 
 1070000    11.105293    1.4878957    9.6173976  -0.30024784   0.99215075    1.2611868   0.81345903   -3.5502959            3    5.5074813    7.7234243     7.877329   0.92169055 -0.0010490647    0.0750318  0.092175863    5.3290191    5.3233299    1.0425277        0.075    2.0935501          0.5   0.11583641    4.3164321    2.8335072    30.801768 -0.0050542867  -0.38597289  0.025625521   0.40226923    1.0031916   -2.9824005 
 1071000    11.061529    1.4847057     9.576823  -0.29703048   0.99002364    1.2499314   0.81740651   -3.5502959            3    5.6852076    7.9490324    8.0599247    1.0466658  0.024926647  -0.10909575  0.045199793    5.5058795    5.5026997    1.0419017        0.075    2.0723556          0.5   0.11576685    4.3190256    2.7846312    30.801768  0.020183718  -0.37428501 -0.032908548   0.39224261    1.4435098    3.8745708 
 1072000    11.070892    1.4665951    9.6042965   -0.3060116   0.97794718    1.2183786   0.81828823   -3.5502959            3    5.5860747    7.6969061    8.0016383    1.0596798 0.0054985726 -0.059339516  0.066963515    5.4065531     5.408174    1.0223003        0.075    2.1017263          0.5   0.11358893    4.4018375    2.7995126    30.801768 -0.0079629071  -0.36438138 0.00012659467   0.36004669   0.75018973    3.1720255 
 1073000    11.040377    1.4776171    9.5627597  -0.29840981   0.98529686    1.2407671   0.81563142   -3.5502959            3    5.5172917    7.8294105    7.9056499    0.8168147 -0.0027799014  -0.27717741  0.045904729     5.338353    5.3361219    1.0302972        0.075    2.0968844          0.5   0.11447746    4.3676719    2.7857681    30.801768 -0.010339245  -0.33226434 0.00010803857   0.31925238    1.8054337   0.93020354 
 1074000    11.055629    1.4803259    9.5753033  -0.31882516   0.98710308    1.2650602   0.80247202   -3.5502959            3    5.4711049    7.6927684    7.8460615   0.87448469  0.025192028  0.021303748 -0.041984763    5.2950531    5.2863879    1.0353715        0.075    2.1161109          0.5   0.11504128    4.3462661    2.8155157    30.801768 0.0031937327  -0.31327428  0.022579472   0.40632218   -2.1492035    1.0564169 
 1075000    11.057935    1.4575899    9.6003455  -0.29452712    0.9719424    1.2527864   0.78538431   -3.5502959            3    5.7047821    7.8508469    8.0447642    1.2187353  -0.01529108 -0.045061383  0.015192692    5.5324792    5.5218573    1.0154166        0.075    2.1215114          0.5   0.11282407    4.4316785    2.7895468    30.801768 -0.00057578905  -0.37347263  0.007706469   0.40851213     3.155623    3.0141366 
 1076000    11.047254    1.4599103    9.5873434  -0.30357887    0.9734897    1.2383119   0.79759564   -3.5502959            3    5.4941835    7.8042347    7.8791494   0.79916636 0.0079251968 -0.040589275  0.023412311    5.3192016    5.3133722     1.044092        0.075    2.0830422          0.5   0.11601022    4.3099651    2.7849799    30.801768 -0.027537088  -0.38356475 -0.0035359398   0.39257343  -0.98837514    2.7399276 
 1077000    11.046256    1.4659757    9.5802804    -0.289904   0.97753416    1.2630131   0.78789339   -3.5502959            3     5.409694    7.6810486    7.8504227   0.69761079   -0.0105304 -0.099164633  0.045255643    5.2368407     5.225276    1.0329442        0.075    2.1038836          0.5   0.11477158    4.3564792    2.8273341    30.801768 -0.019471496  -0.35740861 0.0039225669     0.277125     2.344123   -0.4849754 
 1078000    11.047762    1.4678389    9.5799232  -0.30641802   0.97877656    1.2521074   0.79722147   -3.5502959            3    5.5680408    7.8276297    7.9138196    0.9626731  0.035182496  -0.11073919  0.048665631     5.393141    5.3852152    1.0436439        0.075    2.0726906          0.5   0.11596043    4.3118158    2.8034831    30.801768  0.019830699  -0.38421347  0.012188732   0.34310952  -0.37061417    2.0792514 
 1079000    11.061798    1.5027658    9.5590323   -0.2945091    1.0020663    1.2761267   0.82003436   -3.5502959            3    5.6265615    7.9050401    7.9703381    1.0043063 -0.0022351818 -0.012568038 -0.035792647    5.4466568    5.4402287    1.0149206        0.075     2.123503          0.5   0.11276895    4.4338444    2.8110452    30.801768 -0.0084573939  -0.33606545  0.020989699   0.31719107    2.7083468    3.3679036 
 1080000    11.081668    1.4783837    9.6032842   -0.3035441   0.98580798    1.2724797   0.79537639   -3.5502959            3    5.6174546    7.7938511    7.9221062    1.1364065  0.021432931 -0.035031755 -0.012537255    5.4429596    5.4316543     1.032854        0.075    2.0976719          0.5   0.11476155    4.3568599     2.835102    30.801768 -0.012516227  -0.36259614 0.0044964909   0.36195019  -0.72614063    2.4184704 
 1081000    11.070151    1.4642304    9.6059205  -0.29079221   0.97637038     1.234344   0.80503553   -3.5502959            3    5.4133819    7.6544814    7.8586922   0.72697201 0.0092943129  -0.26334491 0.0059789009    5.2367677    5.2331499     1.019786        0.075    2.1215402          0.5   0.11330955    4.4126905    2.8149367    30.801768  0.017731386  -0.38091419 -0.00032692837   0.35259921    4.3295902     4.948568 
 1082000     11.07887    1.4733242    9.6055455  -0.31071647   0.98243427    1.3136259   0.76237091   -3.5502959            3     5.357666    7.5601601    7.8356301   0.67720783 0.0020115037  -0.16437518 -0.029733731    5.1904119    5.1658578    1.0354173        0.075    2.1088732          0.5   0.11504637    4.3460737    2.8211914    30.801768 -0.0064202958  -0.38377347 -0.012857388   0.35537204   0.20562225    3.2998326 
 1083000    11.122592    1.4886383    9.6339542  -0.28442005    0.9926459    1.2805701   0.80138324   -3.5502959            3    5.6506423     7.895553    7.9509228     1.105451 -0.020572467  -0.21599619 -0.049514979    5.4748294    5.4636607    1.0127354        0.075    2.0607557          0.5   0.11252615    4.4434116    2.8098146    30.801768 0.0094647726   -0.3114216 -0.019419672   0.33787885   -1.0526464    3.5060334 
 1084000    11.092086    1.4743754    9.6177108  -0.28227414   0.98313518    1.2703106   0.79236733   -3.5502959            3    5.5637348    7.8082705    7.8995774   0.98335639  0.018957933  -0.24296664 0.0047002099    5.3898999    5.3782512    1.0173439        0.075     2.048137          0.5   0.11303821    4.4232831    2.7906393    30.801768 -0.024756862  -0.34363031 -0.0081987857   0.41463296    1.6395389     3.471914 
 1085000    11.096665    1.4820157    9.6146494  -0.28148067    0.9882299    1.2894836   0.78809408   -3.5502959            3     5.592286    7.9034832    7.9226772   0.95069763 -0.0029525885 -0.076445338  -0.10818273    5.4193886    5.4040029    1.0270942        0.075    2.1113717          0.5   0.11412158    4.3812924    2.8150381    30.801768  0.004736546  -0.41153846 0.0091463736   0.42308641   -3.2429929    5.0494709 
 1086000    11.114508     1.506347    9.6081605  -0.27635378    1.0044544    1.3022068   0.80665484   -3.5502959            3    5.5153136    7.8063523     7.888174   0.85141454  -0.01845188  0.061263298 -0.055851348    5.3383442    5.3251728    1.0326154        0.075    2.1153935          0.5   0.11473504    4.3578665    2.8136397    30.801768 -0.0098501506  -0.39486372 0.0017628754   0.39864475     1.522455  -0.48960958 
 1087000    11.114176    1.4966181    9.6175577  -0.29494575   0.99796699    1.3140923   0.78793686   -3.5502959            3    5.6769587    7.9325003     7.979552    1.1188239 -0.031493669  -0.17590997 -0.012110753    5.5040958    5.4850824    1.0200375        0.075    2.0903833          0.5    0.1133375    4.4116026    2.8515137    30.801768 -0.036100623  -0.39970833 -0.012728317     0.297787    1.4133218    6.1400758 
 1088000    11.108225    1.4835526    9.6246719  -0.30621207   0.98925471    1.2692792   0.80324848   -3.5502959            3    5.6820759    7.8544195    8.0799374    1.1118708 -0.031298823  -0.11547549  0.036501588    5.5058538    5.4967429    1.0126743        0.075     2.110247          0.5   0.11251937    4.4436793     2.809629    30.801768  0.010609291  -0.32034254 -0.0026088512   0.34374087    1.6468217    6.4660408 
 1089000    11.129253    1.5236251     9.605628  -0.29720104    1.0159757    1.2888273   0.83475324   -3.5502959            3    5.7653817    7.9751153    8.0759637    1.2450661 -0.0071301851 -0.045244239 0.0065870807    5.5822479    5.5771944    1.0212487        0.075    2.0821932          0.5   0.11347208    4.4063703     2.798234    30.801768  0.012153058  -0.35331447 -0.028385149   0.39288942   -1.6874247    2.8722406 
 1090000    11.109962    1.4972874    9.6126742  -0.29623318   0.99841327    1.2665618   0.82031457   -3.5502959            3    5.7293721    8.0028445    8.0263507    1.1589211 0.0022837662  -0.32979195  0.016355625    5.5494059    5.5444359    1.0090821        0.075     2.075655          0.5   0.11212023    4.4594986    2.7880578    30.801768  0.034274831  -0.31289861 0.0088799564   0.33248641    1.2048534    3.0940204 
 1091000    11.103524    1.5083419    9.5951825   -0.3167935    1.0057845    1.2871083   0.81891974   -3.5502959            3    5.4728018    7.7427611     7.898417   0.77722744 -0.0046455609  -0.14800672 -0.00090983836    5.2931417    5.2848656    1.0383314        0.075    2.0698192          0.5   0.11537015    4.3338766    2.8401088    30.801768 0.0044993969  -0.41114644   -0.0159247   0.34134149    1.2678174   0.19061068 
 1092000    11.091045    1.4778041    9.6132412  -0.28522285   0.98542154    1.2685773   0.79732984   -3.5502959            3    5.4464487    7.7837679    7.8068618   0.74871654 -0.002592127  -0.20762275 -1.2242559e-05    5.2715251    5.2612183    1.0192561        0.075    2.0933326          0.5   0.11325067    4.4149848     2.795041    30.801768 -0.0032368954  -0.38966224  0.017462433   0.38099772    3.1761221    1.8357081 
 1093000    11.122229    1.5054825    9.6167465  -0.30141275    1.0038779    1.2893164   0.81427377   -3.5502959            3     5.639941    7.8813232    8.0241558     1.014344  0.016123768 -0.0037623192  -0.14386879    5.4613001    5.4516823    1.0430513        0.075     2.089858          0.5   0.11589459    4.3142652    2.8222409    30.801768  0.022490255  -0.37747625 0.00051141551   0.40299129   0.43737308    3.1641895 
 1094000    11.108818     1.496421    9.6123966  -0.29785152   0.99783553    1.2688764   0.81781158   -3.5502959            3    5.5569687    7.7563981    7.9223709   0.99213723 -6.7167984e-05 -0.084162015 -0.015763319    5.3775517    5.3716946    1.0004074        0.075    2.1166347          0.5   0.11115638    4.4981674    2.7673442    30.801768  0.007808176  -0.37761274 -0.0046471711   0.35471965    3.6904046    4.7098734 
 1095000    11.122992    1.5063533     9.616639  -0.28330172    1.0044585    1.3315213   0.78715135   -3.5502959            3    5.5206956    7.8039078     7.883298   0.87488101 -0.010289282 -0.036525158  0.057436041     5.348005    5.3262744    1.0201424        0.075    2.1024009          0.5   0.11334916    4.4111487    2.8059869    30.801768 0.0097801642  -0.35118102 -0.015336937    0.3714163   -1.2998487    2.8600613 
 1096000    11.122733    1.4982644    9.6244688  -0.29431671   0.99906478    1.3088825   0.79323312   -3.5502959            3    5.6202211    7.8436254    7.9165743    1.1004635   0.01315257  -0.33726073 -0.026034596    5.4461962    5.4291054    1.0074509        0.075    2.0856374          0.5   0.11193899    4.4667188    2.7776466    30.801768 0.0084839014  -0.32644979 0.0073318905   0.36122764    2.4404375    7.2940764 
 1097000    11.105684    1.4894052    9.6162785  -0.30107185   0.99315732    1.2667041   0.81146379   -3.5502959            3    5.5150012    7.7400139    7.8745097   0.93047991  0.018321399  -0.13170013 -0.070355227    5.3369768    5.3300442    1.0127724        0.075     2.094605          0.5   0.11253026    4.4432492    2.8020264    30.801768 -0.0058110779  -0.35852249  0.004607805   0.32864038     2.078643    4.1415342 
 1098000    11.130836    1.5131334    9.6177025  -0.29343117    1.0089796    1.3274984   0.79736053   -3.5502959            3    5.5052612    7.6892233    7.9071652   0.91939501 -0.030667211   0.27134058 -0.044036986    5.3303308    5.3114274     1.021114        0.075    2.0940792          0.5   0.11345711    4.4069516    2.8307454    30.801768 -0.0023099924  -0.32665856 0.0064203671   0.33201232   -3.8384749    6.4248741 
 1099000    11.179212    1.5148239    9.6643884  -0.28121984    1.0101069    1.2769978   0.83284952   -3.5502959            3    5.8467557    8.0305378    8.1132465    1.3964827 -0.036348615  -0.28267292  0.044302344    5.6640395    5.6602957    1.0103503        0.075    2.0436583          0.5   0.11226114    4.4539009    2.7997793    30.801768 -0.00045301252  -0.37361953 0.0041946597   0.39713352   0.58430988    9.1671793 
 1100000    11.150215    1.5066068    9.6436083  -0.29634406    1.0046276    1.2853452   0.81816578   -3.5502959            3    5.4850162    7.7049656    7.9471171    0.8029659 0.0060492209  -0.21882954  0.014715084    5.3055215    5.2973374    1.0231904        0.075    2.0529226          0.5   0.11368782    4.3980085    2.8168662    30.801768 -0.019245195   -0.3423694  0.031736878   0.44797871   0.27537705    4.1267846 
 1101000    11.089069     1.483231    9.6058385  -0.29582375   0.98904023    1.2396506   0.82261072   -3.5502959            3    5.5841298    7.8013804    7.9680178    0.9829913 0.0078156494   0.28243476 -0.038366983    5.4036599    5.4031231    1.0047815        0.075     2.064871          0.5   0.11164239    4.4785855    2.8006894    30.801768  0.018708333  -0.37222098 -0.007253911   0.27700701   0.97504329   -2.6327163 
 1102000    11.119704    1.5189349    9.6007693  -0.30325131    1.0128481     1.285562    0.8317163   -3.5502959            3    5.5983436     7.828109    7.9467067    1.0202151 0.0093106421 -0.024663003  0.046026107    5.4158761    5.4106331    1.0191066        0.075    2.0700309          0.5   0.11323407    4.4156322    2.7596144    30.801768  0.023884321  -0.38188465 -0.0017684027   0.40904222     0.609417    3.3508229 
 1103000     11.11863    1.4916472    9.6269826  -0.29997957   0.99465232    1.2775848   0.80671267   -3.5502959            3    5.5807239    7.7596067    7.9576308    1.0249343 0.0075960458  -0.14523848 -0.031031957    5.4037419    5.3941782    1.0266053        0.075    2.0831587          0.5   0.11406726    4.3833788    2.8345954    30.801768  0.013034704  -0.33017055  -0.02669888   0.32712072    1.2830218   -1.5102988 
 1104000    11.082786    1.4882616     9.594524  -0.29317099   0.99239473    1.2737504   0.80550371   -3.5502959            3     5.538394    7.7956742     7.888147   0.93136066 -0.025997852 -0.080626568  0.063995218    5.3616771    5.3524081    1.0320757        0.075    2.0981742          0.5   0.11467508    4.3601452    2.8035083    30.801768  -0.01839839  -0.38335873 0.0085853032   0.45610054   -1.8497801    3.4703214 
 1105000    11.128055     1.500019    9.6280356  -0.31101833    1.0002348    1.2795173   0.81472644   -3.5502959            3    5.6352216    7.7889823     7.985452    1.1312305  0.037263596  -0.12557343  0.046033941    5.4564814    5.4483937    1.0251547        0.075    2.1040363          0.5   0.11390607    4.3895816    2.8065133    30.801768 0.0077424991  -0.33799672 -0.012673022   0.38169879    1.3245183    5.7185032 
 1106000    11.133332     1.513137    9.6201947   -0.2812197     1.008982    1.2909929   0.82166112   -3.5502959            3    5.5003383    7.7853647    7.9281015   0.78754881  0.024766546 -0.017344109  -0.03410387    5.3200768    5.3118348    1.0246901        0.075    2.0931382          0.5   0.11385445    4.3915717    2.7977412    30.801768 -0.0022037328  -0.31522269  0.011737674   0.35800807  -0.34004044    4.3551853 
 1107000    11.091382    1.5051779     9.586204  -0.30347686    1.0036748    1.2900678   0.81343534   -3.5502959            3    5.5995902    7.8800293    7.9597276   0.95901374  0.031466967   -0.1488193 -0.0097499927    5.4211333    5.4112218    1.0355708        0.075    2.0488358          0.5   0.11506342    4.3454298    2.8133396    30.801768 -0.015560642  -0.38231307 -0.0084024966   0.37273006    2.5694122    2.0643493 
 1108000    11.063916    1.4737593    9.5901565  -0.30311786   0.98272441    1.2502433   0.80503895   -3.5502959            3     5.737663    7.9236621     8.008008    1.2813189 -0.0026703055  -0.12238245  0.062185716    5.5610481    5.5551095    1.0141004        0.075    2.0625083          0.5   0.11267782    4.4374305    2.8127073    30.801768  0.013187002  -0.35680101 -0.0013333674   0.34183231    2.7009153    5.1855086 
 1109000    11.066383    1.4872263    9.5791569  -0.31406484   0.99170439    1.2912505   0.79270634   -3.5502959            3    5.4812131    7.7629188    7.8784331   0.80228747  0.020910103 -0.0070838828  0.038369583    5.3073038     5.292672    1.0312346        0.075    2.0649012          0.5   0.11458162    4.3637014    2.7980314    30.801768 -0.0062752185  -0.36372016 -0.024088642   0.40343659   -1.6492563    1.2830149 
 1110000    11.083817    1.4689922    9.6148247  -0.29358595   0.97954565      1.24454   0.80353927   -3.5502959            3     5.689974    7.8684664    8.0097799    1.1916757  0.038017519  -0.13343727 -0.031234985    5.5136881    5.5082533    1.0229314        0.075    2.0595172          0.5   0.11365905    4.3991219    2.7915971    30.801768  0.019968872  -0.32821241 -0.0032486819   0.40956929    3.9221007    1.9193113 
 1111000    11.053055      1.45289    9.6001648  -0.28422717   0.96880846     1.260441   0.77506888   -3.5502959            3    5.4094347    7.6604688    7.8452381   0.72259727  0.014164105 -0.029633022 -0.010506993    5.2393949    5.2253923    1.0303979        0.075    2.0558175          0.5   0.11448866    4.3672449     2.811583    30.801768  0.012832936  -0.36089493 0.0081419265   0.40969672   0.11332721    1.5282398 
 1112000     11.07988    1.4603829    9.6194971  -0.27835824   0.97380478    1.2520668   0.78896586   -3.5502959            3    5.5140942     7.808254    7.8585444   0.87548401 -0.0094121758 -0.028325995  -0.16911161    5.3410055    5.3312744    1.0197873        0.075    2.0965738          0.5    0.1133097    4.4126847    2.8028997    30.801768 -0.007504824  -0.32786867  -0.02435494   0.35546094   0.29308197    -1.081708 
 1113000    11.045888    1.4958517    9.5500358  -0.30749263   0.99745591    1.2945915   0.80006432   -3.5502959            3     5.570659    7.8373539    7.9675089   0.90711432 0.0072930809   0.17573824  0.057761597    5.3951355    5.3816301    1.0400804        0.075    2.0949686          0.5   0.11556448    4.3265888    2.8071384    30.801768 -0.023358827  -0.35238018 -0.0092295263   0.29809244   -4.6082115    3.7011793 
 1114000    11.026838    1.4560367    9.5708012  -0.28777014   0.97090668    1.2723251   0.77065481   -3.5502959            3    5.8255989    8.0065146    8.0849578    1.3853245 0.0040570962  -0.15101246  -0.11069605    5.6565275    5.6398212    1.0288081        0.075    2.0779512          0.5   0.11431201    4.3739937    2.7841318    30.801768 0.0099167088  -0.37455598  0.016759789   0.37152901    2.5640078     2.946765 
 1115000    11.081859    1.4666588    9.6152006  -0.28797527   0.97798968    1.2520011   0.79598134   -3.5502959            3    5.5761033    7.8072254    7.9057209    1.0153636 0.0015609681 -0.049319293   0.03213197    5.4014755    5.3932932    1.0206837        0.075    2.0668305          0.5    0.1134093    4.4088093    2.7855334    30.801768 -0.023449776  -0.39007537  -0.03739098   0.34062955    3.2312512    1.7827915 
 1116000    11.089832    1.4748073    9.6150244  -0.28497944   0.98342318    1.2468272   0.80847666   -3.5502959            3    5.4045774     7.752227       7.8066   0.65490508  0.031339094   0.03363227  0.084869767    5.2272083    5.2225227    1.0440957        0.075      2.08145          0.5   0.11601064    4.3099497    2.8139675    30.801768 -0.012370882  -0.42736375  0.021919465   0.34527539   0.24346928    3.5259816 
 1117000    11.115886    1.5246235    9.5912624  -0.30019401    1.0166414    1.2838645   0.83916531   -3.5502959            3    5.7625313    7.9792401    8.0538125    1.2545412  0.035061602  -0.12609251 -0.027591791    5.5784295    5.5750687    1.0365148        0.075    2.0996525          0.5   0.11516831     4.341472    2.8007901    30.801768 -0.016819811  -0.33355364 0.0025553347   0.34498424  -0.56032608   -1.5690543 
 1118000    11.052233    1.4806074    9.5716255  -0.29337236   0.98729081    1.2548266   0.80959578   -3.5502959            3    5.5673386    7.8549569    7.9573668    0.8896922   0.01152372 -0.062341766  -0.08231007    5.3897241     5.384116    1.0303348        0.075    2.0792187          0.5   0.11448164    4.3675125    2.7998794    30.801768 -0.012359457  -0.36254229 -0.00085110343   0.40209877    1.3111824    4.5520185 
 1119000    11.082417    1.4839157    9.5985011  -0.30107031   0.98949683    1.2871025   0.79178943   -3.5502959            3    5.7946346    7.9537987    8.1097829    1.3203221 0.0048368895 -0.090233135  -0.10614485    5.6209265    5.6066991    1.0271095        0.075    2.0948408          0.5   0.11412327    4.3812273    2.7917683    30.801768  -0.01828467  -0.37354449 -0.0019650772   0.38020352   0.85909641    4.6155582 
 1120000    11.111002    1.4831357    9.6278661  -0.29202439   0.98897672     1.242705   0.82047201   -3.5502959            3    5.4756179    7.7234023    7.8818639   0.82158763 -0.017828523   0.14858648 -0.018522884    5.2956173    5.2941652    1.0275794        0.075    2.1091082          0.5   0.11417549    4.3792236    2.8212948    30.801768  -0.02037814  -0.36872163  0.015593866   0.39088234     -3.41551    7.1793462 
 1121000    11.095216    1.4698861    9.6253296  -0.28878527   0.98014171    1.2253995   0.81727131   -3.5502959            3    5.5748316    7.7701868    7.8895121     1.064796  0.019664443   -0.1201926  -0.07100261    5.3955331    5.3959057    1.0290906        0.075    2.1134165          0.5    0.1143434    4.3727929    2.8247888    30.801768 0.0096167189  -0.43384806 -0.00038087571   0.37103338    2.3859894 -0.058349452 
 1122000     11.09939    1.4809753    9.6184143  -0.30256972   0.98753614    1.2650906   0.80317324   -3.5502959            3    5.5197286    7.7296049    7.8996408      0.92994 -0.0083952018   0.08713952 -0.037545547     5.343523    5.3350072    1.0314327        0.075    2.1096193          0.5   0.11460364    4.3628632    2.8037745    30.801768 -0.014238254  -0.38109352 -0.046722285   0.35300382   0.36544265    1.4274067 
 1123000    11.068451    1.5094426    9.5590089  -0.30937811    1.0065185    1.2756092   0.82779575   -3.5502959            3    5.4878857    7.7200893    7.8937445   0.84982321 -0.024854571 -0.0033098402 -0.0037160428    5.3062782    5.3016284    1.0338153        0.075    2.1025103          0.5   0.11486837    4.3528084    2.8144221    30.801768 -0.020604301  -0.45088015  0.012099725   0.44667337  -0.80893451  -0.86297829 
 1124000    11.062657    1.4945307    9.5681266  -0.31179258   0.99657504    1.2826549   0.80654131   -3.5502959            3    5.6355741    7.8633882    7.9598706    1.0834636  0.012308509  -0.25635376  -0.03931495    5.4586296    5.4482881    1.0320848        0.075    2.0316679          0.5   0.11467609    4.3601068    2.8026725    30.801768 -0.012403146  -0.38724827  0.011951295   0.35593477    2.7978567    3.7227207 
 1125000    11.142849    1.5230909    9.6197577  -0.28687163    1.0156195    1.2640794   0.85063098   -3.5502959            3    5.6466911    7.9302161     7.943599     1.066258  0.019540573  0.011689704  0.035084608    5.4600739    5.4621173    1.0282729        0.075    2.0498371          0.5   0.11425254    4.3762702    2.7852495    30.801768 -0.020278622   -0.3923211 0.0045938666   0.40249861   -1.6450266     1.514815 
 1126000    11.132877    1.4936696    9.6392069  -0.28548478    0.9960009    1.2619005   0.81939813   -3.5502959            3    5.5971802    7.8307929    7.9717456   0.98900193 0.0072787314 -0.081828831  0.064675439    5.4174151    5.4129246    1.0265164        0.075    2.1144117          0.5   0.11405738    4.3837584    2.8043058    30.801768  0.022121619  -0.32115091 -0.0098347675   0.44398722    1.1496573   -0.4772682 
 1127000    11.082804    1.5065402    9.5762638  -0.30604228    1.0045832    1.2835109   0.81931263   -3.5502959            3    5.5317253    7.8005998    7.8760421   0.91853409 -0.019075602   -0.1243121   0.10192361     5.351979    5.3443143    1.0307136        0.075     2.073283          0.5   0.11452373    4.3659074    2.7957892    30.801768  -0.03839239  -0.41892689 -0.025063659   0.32584924    1.8314506    3.3699968 
 1128000    11.058432    1.4472961    9.6111363  -0.31240309   0.96507831    1.2357274   0.78530302   -3.5502959            3    5.5607322    7.7381066    7.9081228    1.0359673  0.020117553 -0.054381986  0.047995578    5.3884472    5.3802983    1.0212437        0.075    2.0660348          0.5   0.11347152    4.4063919    2.8003083    30.801768   0.02714291  -0.35071636  0.022134539   0.38969351   -2.9132574     4.221854 
 1129000    11.067945     1.494234    9.5737106  -0.29790676   0.99637722    1.2444207   0.83165879   -3.5502959            3    5.6812875    7.9685714     8.079567   0.99572418   0.03893768  0.011594924 -0.026114362    5.4988326    5.4995843    1.0381964        0.075     2.051567          0.5   0.11535516    4.3344398    2.8091731    30.801768 -0.0056451518  -0.40590586 -0.021364895   0.39825268   -2.1739018    2.2918982 
 1130000    11.111176    1.5146288    9.5965468  -0.30628969    1.0099768     1.285166   0.82719631   -3.5502959            3    5.3427324    7.6276101    7.8522649   0.54832215  0.021044906  -0.16713951 -0.005180731    5.1612565    5.1550797    1.0240758        0.075    2.0591262          0.5    0.1137862     4.394206     2.800599    30.801768 -0.016986875  -0.30832037 -0.0056415545   0.33419766  -0.29157163    -2.478085 
 1131000     11.10473    1.4651592    9.6395712  -0.28288401   0.97698972    1.2350252   0.80561389   -3.5502959            3    5.6833157    7.8881873    8.0308789    1.1308809 -0.0078367589 -0.071519176  0.041124771    5.5065747    5.5029843    1.0330944        0.075    2.0834457          0.5   0.11478826     4.355846    2.8153748    30.801768  0.020880717  -0.36924163  0.016370284   0.39004949  -0.73912001  -0.73822729 
 1132000    11.093387    1.4970058    9.5963811  -0.27541223   0.99822549    1.2669009   0.81977607   -3.5502959            3     5.638554    7.9342875    7.9715234    1.0098511 -0.0010519236 -0.033931492  0.077130688     5.458706    5.4535683    1.0256858        0.075    2.0392467          0.5   0.11396509    4.3873084    2.7752116    30.801768  0.030751788  -0.35246089 -0.0021219981   0.37515298   -1.2092208   -1.0284101 
 1133000     11.07289     1.470766    9.6021245  -0.30023982   0.98072841    1.2645518   0.79219069   -3.5502959            3    5.5448534    7.7092875    7.9067093    1.0185635  0.026547396  -0.13799068   -0.1248933    5.3710573    5.3602107    1.0290402        0.075    2.0591423          0.5    0.1143378    4.3730069    2.8012898    30.801768 -0.019048566  -0.42480338  0.027351556   0.37133065  -0.38349169     3.870764 
 1134000    11.107058    1.5172735    9.5897845  -0.29185376    1.0117403    1.2590584   0.84751032   -3.5502959            3      5.72382    7.9107783    8.0905774    1.1701045 -0.026038373  0.007168126   0.10696619    5.5378875    5.5399794    1.0282277        0.075    2.0891135          0.5   0.11424752    4.3764626    2.8045484    30.801768  -0.01806596  -0.36693849 0.00040823131    0.4161662   -2.4795823    8.6762575 
 1135000    11.102002    1.4706825    9.6313193  -0.28906874   0.98067276    1.2712862   0.78761579   -3.5502959            3    5.4006368    7.7025797      7.84266   0.65667059 0.0046144257 -0.021461265 -0.037777262    5.2278443    5.2150107    1.0418665        0.075    2.1044534          0.5   0.11576294    4.3191716    2.8373736    30.801768 -0.0016719437  -0.34177569 -0.011207382   0.41596474    2.8292788    4.6093394 
 1136000    11.067039     1.485643    9.5813959  -0.28734775   0.99064864    1.2618503   0.81051504   -3.5502959            3     5.462568    7.7396057    7.8634097   0.78468869  0.041590495  0.055335557 0.0098973418    5.2847518    5.2783198    1.0303146        0.075     2.075769          0.5    0.1144794    4.3675981    2.8144738    30.801768 -0.001531062  -0.31249097 -0.022009142   0.39227122   -3.6362788   0.95151272 
 1137000    11.129107    1.4938686     9.635238  -0.28376867   0.99613359    1.2924158   0.79930947   -3.5502959            3    5.5065235    7.7673587    7.9297095    0.8225024 0.0051861665  -0.32051194  0.065552596    5.3311656    5.3178123    1.0243233        0.075    2.0789781          0.5    0.1138137    4.3931444    2.8022777    30.801768 -0.0021348096  -0.37471809  -0.03827838   0.39043789  -0.65044092    -1.444311 
 1138000    11.164588     1.522918    9.6416701  -0.29146976    1.0155041    1.3197007    0.8134197   -3.5502959            3    5.7402185    7.9129677    8.0611096    1.2465783   0.02163491  -0.12874184 -0.029835701     5.561765    5.5475233    1.0221618        0.075     2.112471          0.5   0.11357354     4.402434    2.8089363    30.801768 -0.0078939252  -0.30921782 -0.0050896949   0.41360622   -0.1753518   0.18404566 
 1139000    11.167536    1.5386141    9.6289223  -0.28128958    1.0259705    1.3251362   0.82723831   -3.5502959            3    5.6349575    7.8632818    8.0866343    0.9549565  0.066464326 -0.076002368 -0.070226596    5.4534724    5.4414686    1.0173349        0.075    2.1079374          0.5   0.11303721    4.4233222    2.8111117    30.801768 -0.0059832939  -0.29991794  0.013257926   0.37419322   0.38504373    3.5612879 
 1140000    11.113603    1.4967907    9.6168126  -0.29790218   0.99808209    1.2928525    0.8022649   -3.5502959            3    5.4551677    7.7016531    7.8164187   0.84743143 0.0071242593   0.06913863 0.0084930688    5.2791614    5.2663927    1.0230332        0.075    2.0597796          0.5   0.11367035    4.3986844    2.8106671    30.801768 0.0096682351  -0.33036442 -0.0033988249     0.542093   -1.2690819    2.5687479 
 1141000    11.146773    1.5112099    9.6355633  -0.28191901     1.007697    1.3169733   0.80222888   -3.5502959            3    5.7028261    7.9113164    8.0259392    1.1712225  0.019953092 -0.086007899  0.091572678    5.5268277    5.5105291    1.0341377        0.075    2.0643006          0.5   0.11490419    4.3514513    2.8136785    30.801768 -0.012012026  -0.38364761 -0.028844739    0.3554076     2.365164     4.574354 
 1142000    11.101559    1.4872697     9.614289  -0.31047499   0.99173329     1.298095   0.78819907   -3.5502959            3    5.3709705    7.7070015    7.7487099   0.65720011  0.011533351 0.0023696153 -0.0064110591    5.1980501      5.18143    1.0243642        0.075     2.066727          0.5   0.11381824    4.3929689    2.7918901    30.801768 -1.1244842e-05  -0.34806944 -0.0026233351   0.26127745   -1.7745651    1.6780336 
 1143000    11.099845    1.5080468    9.5917979  -0.30426571    1.0055878    1.3167142   0.79888758   -3.5502959            3    5.5071066    7.7628354    7.8883687   0.87011569 -0.0077575243  -0.14749009 -0.0012803955    5.3318412    5.3148474      1.03184        0.075    2.1207545          0.5   0.11464889    4.3611412    2.8216749    30.801768 -0.0042807245  -0.36543438  0.026068248   0.36758889  0.064052754    2.9246974 
 1144000    11.099556    1.4915038    9.6080522  -0.30859738   0.99455665    1.3079546   0.78634048   -3.5502959            3    5.6466155    7.8173441     8.011359    1.1111435  0.026817353   -0.1771507 -0.0099708504    5.4741028    5.4556354    1.0204965        0.075    2.1241949          0.5    0.1133885    4.4096183    2.7912355    30.801768 -0.0047853011  -0.39031816 -0.018787006    0.4037549  -0.19711092    8.4175501 
 1145000    11.069397    1.4570582    9.6123392  -0.28471332   0.97158783    1.2677108   0.77486063   -3.5502959            3    5.5880793    7.8259322    7.8736573    1.0646483  0.013110549 -0.013009966  0.038122705    5.4180851    5.4029753    1.0013034        0.075    2.0726553          0.5   0.11125593    4.4941424    2.8041261    30.801768 -0.0010443504  -0.30503873  0.019899267   0.33703219    1.5620095    7.5784336 
 1146000    11.078597     1.480772    9.5978245  -0.31546859   0.98740055    1.2970642    0.7816671   -3.5502959            3    5.7818605    7.9679551    8.1241918    1.2534346  0.021614825  -0.13297887 -0.0075929846    5.6103731    5.5924705    1.0465011        0.075     2.057548          0.5    0.1162779    4.3000434    2.8158757    30.801768 0.0096897504  -0.48139268 -0.030607968   0.35025906    1.7490736    4.3168671 
 1147000    11.141489    1.5155266    9.6259625  -0.27219715    1.0105755    1.2911996   0.82417803   -3.5502959            3    5.4933753    7.7961351    7.9354286   0.74856209  0.018266096  -0.29985696  0.074900494    5.3125615    5.3048416   0.99893084        0.075    2.0918603          0.5   0.11099232    4.5048164    2.8030788    30.801768  0.013315213  -0.28471601  0.019282058   0.32257973   0.96705351   -1.8236963 
 1148000    11.152034    1.5252491     9.626785  -0.29988353    1.0170586    1.3254628   0.81217429   -3.5502959            3    5.4456572    7.7461733    7.8523864   0.73841198 -0.0023624606  0.033522165  0.012937632     5.267477    5.2521207    1.0184133        0.075    2.0577268          0.5   0.11315703    4.4186383    2.7817005    30.801768 0.0048384992  -0.40728185  0.010433217    0.3670861    1.0434818    4.9161371 
 1149000    11.130378    1.4939857    9.6363928  -0.27214831   0.99621164    1.2664372   0.81672973   -3.5502959            3    5.6888942     7.996016     8.022404    1.0482626  0.040491862 -0.038178758    0.0504563    5.5097145    5.5039762    1.0100139        0.075    2.0897161          0.5   0.11222376    4.4553844    2.8141773    30.801768 -0.0034291902  -0.37836375 -0.0099976107   0.30786408    -2.483274    2.5366577 
 1150000    11.133718    1.5269253    9.6067927  -0.29833243    1.0181763    1.3384671   0.80538123   -3.5502959            3    5.4033285    7.6535985    7.8480262   0.70836071  0.014568019  -0.22323702 0.0091515725    5.2266385    5.2078931     1.039054        0.075    2.0947775          0.5   0.11545044    4.3308627    2.8282675    30.801768 -0.019164221  -0.39551457 -0.0088147841   0.47755801    1.1242746     3.341505 
 1151000    11.119787     1.524296    9.5954913  -0.28426528     1.016423    1.3380337   0.80274887   -3.5502959            3    5.9085687    8.0516829    8.2141012     1.459922  0.012093767  0.026233578 -0.055633143    5.7324562    5.7131966    1.0094293        0.075    2.1008099          0.5   0.11215881    4.4579645    2.7960482    30.801768 -0.024095343   -0.4185907 -0.00019519419   0.40463694  -0.95362891    7.5776493 
 1152000    11.123882    1.5074976    9.6163849  -0.30069306    1.0052216     1.307483   0.80442132   -3.5502959            3    5.4573152    7.7933019    7.8667274   0.71191621 -0.023434847  -0.28588154 -0.034023819    5.2808358    5.2664039    1.0409427        0.075    2.1050043          0.5    0.1156603    4.3230044    2.8295127    30.801768   0.01844973  -0.30126382 -0.013734569   0.36165844    3.4340669    3.1280397 
 1153000    11.056165    1.4795367     9.576628  -0.29727359   0.98657687     1.290056   0.78495929   -3.5502959            3    5.6433684    7.8805522    7.9799141    1.0696388  0.024731994  -0.11053382 -0.016059372    5.4711587    5.4550017    1.0106483        0.075    2.0754785          0.5   0.11229425    4.4525877    2.8167132    30.801768 0.0089430756  -0.30727087 -0.040326865   0.34734778    1.1492476    4.2316117 
 1154000    11.121113    1.5186682    9.6024451   -0.3248868    1.0126703      1.31264   0.81339809   -3.5502959            3    5.5099959    7.7558598    7.8276861   0.94644191  0.031081366  -0.20088452 -0.048944032    5.3315472    5.3183317    1.0413131        0.075    2.1021538          0.5   0.11570146    4.3214667    2.8077131    30.801768   0.01918905  -0.41518693 0.0037972648   0.34820771    2.9719653    6.6541723 
 1155000    11.056453    1.4615518     9.594901  -0.28573476   0.97458426    1.2529984   0.78964441   -3.5502959            3    5.4458831    7.7743257    7.8085177   0.75480588 -0.006931027   0.23604068    0.0938086    5.2726456    5.2629274    1.0077894        0.075     2.066951          0.5    0.1119766    4.4652188    2.7887032    30.801768  0.020857989  -0.35849419  0.039108654   0.39769928   -1.4008648    1.4975165 
 1156000    11.126111      1.49659     9.629521  -0.29902282   0.99794823    1.2641487   0.82114588   -3.5502959            3    5.5246725    7.8097775    7.8192107   0.94502937  0.015718448  -0.15154025 -0.032968911     5.344524    5.3400887    1.0354038        0.075    2.0283913          0.5   0.11504487    4.3461303    2.8211811    30.801768 0.0024870822  -0.38763671 -0.017759205   0.37982609     3.538652   -1.0399559 
 1157000    11.079086    1.4704668     9.608619   -0.2858828   0.98052891    1.2529142   0.79960377   -3.5502959            3    5.6337388     7.907469     7.987947    1.0058005 -0.0076162242 -0.079827375   0.11875677    5.4583163    5.4507954    1.0340273        0.075    2.0581371          0.5   0.11489192    4.3519161    2.8214803    30.801768 -0.015721184  -0.38461484 -0.014538464   0.29721418   -3.7512419    5.2998673 
 1158000    11.079558    1.5115381    9.5680203  -0.29272265    1.0079159    1.3056253   0.81014627   -3.5502959            3    5.6377947    7.9232122    7.9966552   0.99351679 -0.016929929   -0.1148184   0.16130287    5.4600594    5.4471547    1.0413074        0.075    2.0762733          0.5   0.11570083    4.3214903    2.7999285    30.801768  0.019065241  -0.40589153 0.0079146145   0.42293202    1.9920783    2.7082233 
 1159000    11.038583    1.4376678    9.6009149   -0.2976619   0.95865807      1.23286   0.77651578   -3.5502959            3    5.6009843    7.7273788    8.0594261    1.0161481  0.039063501  -0.18694108 -0.047227061    5.4306271    5.4209691    1.0115988        0.075    2.1151693          0.5   0.11239987    4.4484037    2.7876977    30.801768 -0.0054478965  -0.33239716 -0.0015963238   0.32547464   0.25842121    4.3530517 
 1160000    11.129915    1.4978195    9.6320954  -0.29220738    0.9987681    1.2610302   0.82458726   -3.5502959            3    5.6370709     7.963518    7.9849339   0.96276061 -0.0024681299  -0.22115465  0.053293526    5.4561673    5.4529423    1.0373326        0.075    2.0818872          0.5   0.11525918    4.3380494    2.8124579    30.801768  0.013363278  -0.28796876  0.005692693   0.29237441    1.5486018    1.1648171 
 1161000    11.026401    1.4711017    9.5552997  -0.32655917   0.98095226    1.2710963   0.78820783   -3.5502959            3    5.4053765     7.656197    7.8989902   0.66094245   0.01752132   -0.1409038 -0.082682771    5.2324542    5.2197783    1.0372872        0.075    2.0950438          0.5   0.11525414    4.3382391    2.8439974    30.801768 -0.00031013951  -0.33213595 -0.020564765   0.32376576  -0.78952112   -3.0529287 
 1162000    11.072421    1.4562465    9.6161741  -0.27122464    0.9710466     1.257563   0.78071289   -3.5502959            3    5.7000741    7.9673634    8.0385726    1.0942862  0.019959518 0.0052165558 0.0025703653     5.528796    5.5164518    1.0237407        0.075    2.0868966          0.5   0.11374897    4.3956442    2.8033047    30.801768 -0.0028441364   -0.3057695 -0.0031400839    0.4332789    1.4319111     1.493183 
 1163000    11.092817    1.4822377    9.6105796  -0.28138999   0.98837794    1.2595685    0.8082509   -3.5502959            3    5.5740956    7.8271393    7.9403244   0.95482321 -0.012950467  -0.24871097  0.014700601    5.3967761    5.3901806     1.025637        0.075    2.0843634          0.5   0.11395966    4.3875174    2.8047187    30.801768  0.019799431  -0.32899668 -0.028019149      0.34233     1.557532    5.3718671 
 1164000     11.07109    1.4999332    9.5711567  -0.29616045    1.0001776    1.3094346   0.79471945   -3.5502959            3    5.5431555    7.8981911    7.9450588   0.78621654 -0.015488308  0.024992094 -0.00061858959    5.3688046    5.3519593    1.0364431        0.075    2.0820185          0.5   0.11516034    4.3417724    2.8041268    30.801768 -0.019917604  -0.37774198 -0.029338558   0.38286439   -2.8309012  -0.37219503 
 1165000    11.064501    1.4505312    9.6139702  -0.28156061   0.96723555     1.250106   0.77932707   -3.5502959            3    5.6376843     7.882486    7.9924482    1.0381188 -0.025234306  0.028783726  -0.11352154    5.4667103    5.4551509    1.0232351        0.075     2.095601          0.5   0.11369279    4.3978163    2.8063199    30.801768 -0.0082946017  -0.37947598 -0.017430846   0.37593568    4.4965789   0.60678966 
 1166000    11.116162    1.4994341    9.6167278  -0.30602031   0.99984471    1.2745935    0.8173537   -3.5502959            3    5.5704721    7.8256775    7.9185862   0.96715262 0.00099345271  -0.14080289 -0.094447174    5.3911555    5.3843632     1.048021        0.075    2.0945761          0.5   0.11644678     4.293807    2.8059526    30.801768 0.0045615128  -0.35971063 -0.030560438   0.35197285    1.3900842    5.1781436 
 1167000    11.027989    1.4533461    9.5746426  -0.28684294   0.96911253    1.2177645   0.80397903   -3.5502959            3    5.5229493    7.7994589     7.902795   0.86659407  0.022058329 -0.061410886  -0.16074817     5.346567    5.3451382    1.0267266        0.075    2.1211368          0.5   0.11408073    4.3828611    2.8038362    30.801768 -0.00011233302  -0.38740044  0.022585471   0.29906495    1.9929122   0.28649576 
 1168000    11.033525    1.4389334    9.5945915  -0.30742877   0.95950194    1.2293226   0.78027596   -3.5502959            3    5.5143951    7.7839337     7.872993   0.88625862 -0.015794098  -0.16662768  -0.11395264    5.3432129    5.3348964    1.0542989        0.075    2.1240678          0.5   0.11714432    4.2682394     2.825898    30.801768 0.0079124778  -0.36673652 -0.008728999   0.39659813    2.8168242   -3.2057056 
 1169000    11.008591    1.4551557    9.5534357  -0.30049403   0.97031922    1.2447114   0.78805464   -3.5502959            3    5.4899611     7.797424    7.8848003   0.78765906 -0.019764808  -0.21718475  0.031168284    5.3170723    5.3082154    1.0103192        0.075    2.0768218          0.5   0.11225768    4.4540381    2.7851929    30.801768 -0.013709277  -0.39457726 -0.025686874   0.34080753   0.99775483    1.5853239 
 1170000    11.030365    1.4788275    9.5515378  -0.30247714   0.98610394    1.2503923   0.81056982   -3.5502959            3    5.6316281     7.861187    8.0000619    1.0336354 -0.011168136 0.0077253316  -0.10266521    5.4537998    5.4490529    1.0281601        0.075    2.0925208          0.5   0.11424001    4.3767503    2.7860242    30.801768 -0.005563807  -0.35670551  0.015767675   0.40196058  -0.51203383    3.5327089 
 1171000    11.080541    1.4631661    9.6173752  -0.30849234   0.97566068    1.2187507    0.8142314   -3.5502959            3    5.5404013    7.6932955    7.8831857    1.0447226   0.00222279 -0.019652276  0.058630749    5.3617697    5.3624462    1.0299551        0.075     2.108529          0.5   0.11443946    4.3691225    2.8049815    30.801768  0.025737762  -0.44285869 -0.013974113   0.41857992   -3.0988166    5.2844459 
 1172000    11.084036    1.5097031    9.5743324  -0.28347049    1.0066922    1.3048165   0.80864605   -3.5502959            3    5.5921513    7.8755059    7.9989852   0.90196273 -0.011774497  -0.13225616  0.012423399     5.414745    5.4016293    1.0245217        0.075    2.1080599          0.5   0.11383575    4.3922934    2.7907095    30.801768 -0.016478984  -0.33285454  0.008896462   0.33753403    1.2920912   0.75292478 
 1173000    11.095377    1.5102948    9.5850818  -0.29518951    1.0070868    1.2967374   0.81468043   -3.5502959            3    5.4566033    7.7199969    7.8912521   0.75856099 0.0075529821 -0.066820259 -0.000998804    5.2778732    5.2672611     1.020192        0.075    2.1127701          0.5   0.11335466    4.4109346    2.8286969    30.801768 -0.025476024  -0.31993994 -0.0036191301   0.32073357    0.9352199   0.14885424 
 1174000    11.142358    1.5304366    9.6119215  -0.30207334    1.0205176    1.3130861   0.82617429   -3.5502959            3     5.745552    7.9360108    8.0753475    1.2252977 -0.015851411 -0.034224931  0.088776597    5.5643003    5.5538226    1.0415912        0.075    2.1274414          0.5   0.11573235    4.3203131    2.8107265    30.801768 -0.0015635609  -0.38111629   0.02154251   0.36045462    2.9736629    5.1535917 
 1175000    11.084076    1.4642995    9.6197765  -0.28535787   0.97641648    1.2733244   0.77916864   -3.5502959            3    5.4156277    7.7330368    7.7762158   0.73763036  0.026525955 -0.081245442 -0.042483358    5.2446884     5.229704    1.0191438        0.075    2.0698967          0.5    0.1132382     4.415471    2.8193029    30.801768 -0.026395244  -0.32518163   0.00872459   0.31030977  -0.62879697   -2.1107209 
 1176000    11.120831    1.5015866    9.6192445  -0.29410884    1.0012801    1.2701436   0.82270658   -3.5502959            3    5.3097878    7.5717005    7.7156418   0.64202119   0.02640675  -0.25160428  0.092149119    5.1292969    5.1243287    1.0329102        0.075    2.0905337          0.5    0.1147678    4.3566227    2.7979142    30.801768  0.016297621  -0.32996894  -0.02993723   0.42966986     2.631667    4.3782919 
 1177000    11.089856    1.5131187    9.5767374   -0.3102914    1.0089698    1.2572286   0.84411273   -3.5502959            3    5.5362266    7.7760951    7.9330714   0.89951312 0.0063123301 -0.038881197 -0.060630334    5.3510394    5.3526531    1.0149775        0.075    2.0789146          0.5   0.11277528    4.4335957    2.7806179    30.801768 0.0011289368  -0.37355334 -0.0052895398   0.31309037   -1.2738854    1.0380977 
 1178000    11.162198    1.5154707    9.6467269  -0.29413362    1.0105382    1.2480091   0.85286158   -3.5502959            3    5.6624601    7.9251649    8.0352223    1.0269929  0.030299099  -0.15766333 -0.089645687    5.4753535    5.4802328    1.0234616        0.075    2.0835263          0.5   0.11371795    4.3968431    2.7859509    30.801768   0.03058302  -0.34182595 -0.033293051   0.35450943   0.19591213    6.9895564 
 1179000    11.008048    1.4460812    9.5619672  -0.30678708   0.96426821     1.234655   0.78466717   -3.5502959            3    5.5638036    7.8176738      7.90519   0.96854711 -0.030835592  -0.18080752 -0.071659787    5.3916581    5.3835263    1.0215616        0.075    2.0816844          0.5   0.11350685    4.4050206    2.8074336    30.801768 -0.0078682118   -0.3084287  0.014124563   0.39315128   -0.5240825  0.036794593 
 1180000    11.081679    1.4887039    9.5929755  -0.28669395   0.99268969    1.2799996   0.80183591   -3.5502959            3    5.4989846    7.8122599    7.8446836   0.84001028 -0.013109185  -0.29568222  0.010327055    5.3230724    5.3120863    1.0305018        0.075    2.1025123          0.5    0.1145002    4.3668046    2.8082227    30.801768 -0.0060190747  -0.41621356  0.015659627   0.42416916    1.6804325     2.552575 
 1181000     11.07839    1.4695051    9.6088852  -0.29814939   0.97988761    1.2389653   0.80781923   -3.5502959            3    5.6927933    7.9323332     8.049525    1.0965218 -0.0060592086 -0.067117075 0.0071157708    5.5155685    5.5118866    1.0400409        0.075      2.07696          0.5    0.1155601     4.326753    2.8166996    30.801768 -0.007035481  -0.31533356  0.012447262   0.31337886   0.77608959     5.154096 
 1182000    11.121026    1.5208166    9.6002096  -0.30389792    1.0141029     1.277929   0.83888683   -3.5502959            3    5.3862846    7.6738989     7.790604   0.69435084  0.013558433   0.16055437   -0.0561323    5.2022439    5.1996886     1.020988        0.075    2.1029061          0.5   0.11344312    4.4074953    2.8205371    30.801768   0.01164809  -0.35452274 0.0023971846   0.34819285  -0.93242544  -0.43230835 
 1183000    11.092134    1.5060135    9.5861207   -0.3030651     1.004232    1.3046085   0.80468584   -3.5502959            3    5.5134246    7.8616097    7.8734947   0.80516949 -0.045843556  0.050889392 -0.0077813033    5.3368872    5.3229331    1.0262472        0.075    2.0702459          0.5   0.11402746    4.3849086    2.8192438    30.801768 0.0066879347  -0.30868773 0.0036145109   0.40342188   -1.9646777    2.4114436 
 1184000    11.093756    1.4742148     9.619541  -0.29837279   0.98302816    1.2668281   0.79450685   -3.5502959            3    5.4458946    7.7447886    7.7752638   0.81763136 -0.0040376748 -0.071252822 -0.085035081    5.2715903    5.2609195    1.0284065        0.075     2.097178          0.5   0.11426739    4.3757015    2.8230752    30.801768 -0.015542432  -0.37816037 -0.0079030096   0.36850454    1.8903452   0.71919638 
 1185000    11.114202    1.4898046    9.6243971  -0.29890917   0.99342366    1.2833881   0.80080341   -3.5502959            3    5.6017402    7.8162714    7.9304404    1.0585088 -0.016829337  -0.16890432 -0.0040166509    5.4260545    5.4143471     1.018209        0.075    2.0532847          0.5   0.11313433    4.4195248    2.7869085    30.801768 0.0049959156  -0.32814742 -0.019268416   0.38660495   0.72808934    7.3455302 
 1186000     11.08996    1.4806721    9.6092875  -0.28679187   0.98733395    1.2642525   0.80339417   -3.5502959            3      5.50882    7.8525581    7.8455475    0.8283543   0.02515573  0.050676082  -0.05037409    5.3325659     5.324221    1.0038031        0.075    2.0537935          0.5   0.11153368    4.4829507    2.7882392    30.801768 -0.014137002  -0.31297869 -0.00041787705   0.34911323    0.6767019    1.4043644 
 1187000     11.08558    1.4774941    9.6080861  -0.29699292    0.9852148    1.2917846   0.78153967   -3.5502959            3    5.6048195    7.8270097    7.9407181    1.0467307 0.0025200273 -0.024394196   0.10461186      5.43336    5.4162004    1.0448237        0.075    2.0712457          0.5   0.11609152    4.3069469    2.8156301    30.801768  0.030357999   -0.4701227 -0.018130236   0.41949903    3.6521475   -2.0729123 
 1188000    11.131049    1.5311299    9.5999191  -0.28652559      1.02098    1.2789043   0.84969439   -3.5502959            3    5.5940071    7.8294864    7.9272811    1.0252538 0.0005819674  0.034673701  0.068609543    5.4075954    5.4072687   0.99424017        0.075    2.0679525          0.5   0.11047113    4.5260694    2.7922948    30.801768 -0.0062891963  -0.35862876  0.020193422   0.35724663    1.1172699    3.2182579 
 1189000    11.147361    1.5443683    9.6029926  -0.28513089    1.0298075     1.336031    0.8263794   -3.5502959            3    5.8545214    8.0979423    8.0942571    1.3713648  0.024829474  -0.16696782  0.022975831    5.6732247    5.6594417    1.0290366        0.075    2.0528463          0.5    0.1143374    4.3730223    2.8178051    30.801768 -0.014734344   -0.3817571 0.0031179379   0.34948052  -0.41868309    7.4452109 
 1190000    11.114424    1.5091588    9.6052655  -0.29109844    1.0063293    1.2766359   0.82679715   -3.5502959            3    5.5401778    7.8176986    7.8380278   0.96480701 -0.0041740598  -0.12005699 -0.0086753921    5.3587894    5.3537706    1.0214504        0.075    2.0679415          0.5   0.11349449    4.4055001    2.8032792    30.801768  0.017267685  -0.27368798  0.013690547   0.35369419   -1.1189896    2.0169753 
 1191000    11.109365    1.5049872    9.6043783   -0.3015785    1.0035476    1.3044641   0.80364184   -3.5502959            3    5.4466753    7.7163018    7.8264099   0.79731436 -0.033519228   0.12935999  0.037854022     5.270367    5.2562049    1.0304955        0.075    2.0504638          0.5    0.1144995    4.3668314    2.8042381    30.801768 -0.015736565  -0.38506721 -0.017243994   0.45934252   0.73159674     4.792721 
 1192000    11.116134    1.4836335    9.6325008  -0.29725711   0.98930866    1.2743988     0.799931   -3.5502959            3    5.2938751    7.5600413    7.7808223   0.54076162 -0.0021387551 -0.083481943 -0.044474021    5.1183808    5.1077946     1.020496        0.075    2.0754939          0.5   0.11338844    4.4096205    2.7874683    30.801768 -0.0020829835  -0.38081481 -0.045244385   0.36678303   0.53198171    5.8035612 
 1193000    11.109937    1.5033213    9.6066153  -0.28627148    1.0024368    1.2672021   0.82659129   -3.5502959            3    5.6515236    7.8897701    7.9859535    1.0788473 -0.023266059  0.046532588 0.0061453687    5.4701805     5.466494    1.0222246        0.075    2.0904491          0.5   0.11358052    4.4021635    2.8057736    30.801768 -0.0051404863   -0.3176828 -0.010986481   0.32582574  -0.24935141    2.3171259 
 1194000    11.098015     1.488213    9.6098021  -0.30195697    0.9923623    1.2907653   0.79412529   -3.5502959            3    5.2823018    7.5387763    7.7652763   0.54285275 -0.021473079  -0.17329489  -0.03605471    5.1080812    5.0938315    1.0179734        0.075    2.0844054          0.5   0.11310816    4.4205476    2.7953145    30.801768 -0.012098698  -0.36340958  0.014427585   0.29343996  -0.33079802    3.8428689 
 1195000    11.120588    1.5094901     9.611098  -0.29687076    1.0065502    1.2971493   0.81351234   -3.5502959            3    5.6550726    7.8545659    7.9912241    1.1194277 -0.015786177 -0.021483878  0.054562549    5.4765987    5.4656702    1.0282417        0.075    2.0862875          0.5   0.11424907    4.3764031    2.8244914    30.801768  0.017117882  -0.39219684 -0.0016546408    0.3347547   -1.3837793    4.8735719 
 1196000    11.065165    1.4673385    9.5978262  -0.29650376    0.9784429    1.2815614   0.77706231   -3.5502959            3    5.5539903    7.7835154    7.9803641   0.89809134 0.0057185409  -0.30592911  0.012688827    5.3835131    5.3668639     1.029561        0.075    2.0660805          0.5   0.11439566    4.3707951    2.8151295    30.801768 -0.014123778  -0.43346044  0.017304265   0.33000839   0.15717283   0.54668047 
 1197000    11.094657    1.4705182    9.6241385  -0.28673071    0.9805632     1.266051    0.7909176   -3.5502959            3    5.6964604    7.9439441    8.0625865    1.0828507 -0.023188609  0.073743453  0.054320367    5.5229436    5.5115988    1.0280246        0.075    2.0603407          0.5   0.11422496    4.3773271    2.8210762    30.801768  0.010921584  -0.37096863 -0.025395364   0.41366555   -1.6151995    7.2297814 
 1198000    11.117058    1.5044389    9.6126193  -0.29156703     1.003182    1.2851394   0.81589443   -3.5502959            3    5.4971002    7.6992305     7.913556   0.87851414 -0.025665021   -0.1666914  0.041022756    5.3181038    5.3094514    1.0091845        0.075    2.0632144          0.5   0.11213161    4.4590459    2.7842467    30.801768  0.012455779  -0.36712311 -0.0018074854    0.3421736     2.868115    4.5108199 
 1199000    11.116107    1.5054197    9.6106875  -0.30729849     1.003836    1.2838481   0.81784345   -3.5502959            3    5.5067788    7.7743026    7.8528162   0.89321748 -0.017318316 -0.046388766  0.024794268    5.3273547    5.3193185    1.0097396        0.075    2.0613933          0.5   0.11219328    4.4565947    2.8267914    30.801768 -0.027912925  -0.35864756  0.002693279   0.35674688   -1.9707143    2.9841537 
 1200000    11.126807    1.5028609    9.6239465  -0.30769665    1.0021298    1.2700248   0.82420121   -3.5502959            3    5.7077681     7.896107     8.027202    1.1999952 -0.001879356  0.062619947  0.066875536    5.5269492    5.5223262    1.0213078        0.075    2.0595323          0.5   0.11347865    4.4061152    2.8124334    30.801768  0.012836682  -0.36028701 0.0078201785   0.39134625    1.0265126     4.302078 
 1201000    11.085447    1.4827253    9.6027214  -0.28468534   0.98870308     1.239203   0.82234695   -3.5502959            3    5.7002323    7.8992262    8.0143486    1.1871222 -0.037291765   0.13519026  0.018566904    5.5198203    5.5192909    1.0242267        0.075    2.0392172          0.5   0.11380297    4.3935585     2.823907    30.801768  0.022895599  -0.37140742 -0.0061028636   0.37916167   -3.4378076    4.4314465 
 1202000    11.109277    1.5259331    9.5833443   -0.3058182    1.0175147    1.3061351   0.82579783   -3.5502959            3    5.5714087    7.7841492      7.94629   0.98378688   0.02280864  -0.17985656 -0.0075029788    5.3902396    5.3806942    1.0413845        0.075     2.037182          0.5   0.11570939    4.3211706    2.8202775    30.801768  0.013474344  -0.38213295 -0.057455791   0.36127591    3.4310712  -0.35445225 
 1203000    11.070328    1.4655368     9.604791  -0.27011247   0.97724152    1.2730772   0.78070763   -3.5502959            3    5.6858853    7.9551519    8.0255849    1.0769192  0.036247255  -0.10363128  -0.18032746    5.5146084    5.4999978    1.0196872        0.075    2.0377377          0.5   0.11329857    4.4131182    2.8234456    30.801768 -0.040093952  -0.36777642 0.0095048909   0.31377098   0.80892855   0.85477031 
 1204000    11.080499    1.4853504     9.595149  -0.30150955   0.99045353    1.2600629   0.81137961   -3.5502959            3    5.4100764    7.7026613    7.8375444   0.69002348 -0.0022295057   0.11290997  0.016720473    5.2320705    5.2260891    1.0352033        0.075    2.0384893          0.5   0.11502259    4.3469722     2.804622    30.801768  0.027454582  -0.40042907 -0.0093000784   0.35041568   -2.5937254    -2.543578 
 1205000    11.143187    1.4938244    9.6493626  -0.29011066   0.99610412    1.2550906    0.8241024   -3.5502959            3    5.7345423     8.040924    8.0143345    1.1483683 0.0079115309 -0.065987648 -0.021981678    5.5537451     5.551281    1.0295938        0.075    2.0903528          0.5   0.11439931    4.3706558    2.7852392    30.801768 -0.010454377  -0.37858191 0.00088964474   0.36704888   0.46305207    5.2661518 
 1206000    11.114284    1.4993174    9.6149662  -0.28092032   0.99976693    1.2667306   0.82245733   -3.5502959            3    5.4691041    7.8227071    7.8817161   0.70288902 -0.0076717103  -0.24162655   0.08914541    5.2886678    5.2841432    1.0275508        0.075    2.0707657          0.5   0.11417231    4.3793455    2.7939657    30.801768 0.0015022028  -0.35106138 0.00086296798   0.36315223   0.63663093    3.8688401 
 1207000    11.096983    1.5068407     9.590142  -0.29701672    1.0047836    1.3123168   0.80047447   -3.5502959            3    5.4956512    7.7325811    7.8935781   0.86079433  0.018865424  -0.13988883  0.032858019    5.3200377    5.3040341    1.0353034        0.075    2.0811779          0.5   0.11503372    4.3465518    2.8108604    30.801768 -0.00059099795  -0.36663788 -0.012260902   0.32633885   0.13931183   0.40465155 
 1208000    11.145174    1.5233377    9.6218364  -0.31369419     1.015784    1.2925468   0.83195842   -3.5502959            3    5.6432163    7.7788818    8.0317107    1.1190563 -0.0058031672  0.050844001 -0.070530124    5.4606956    5.4544859    1.0218994        0.075    2.0840995          0.5   0.11354437    4.4035647    2.8001588    30.801768 0.0020177401  -0.39629616 -0.012073538   0.41366316  -0.78615778    2.4134919 
 1209000    11.103905    1.4918362    9.6120691  -0.29618513   0.99477832    1.2679419   0.81334046   -3.5502959            3    5.6293016    7.8164589    7.9661458    1.1052999 0.0030865808  -0.31916156   0.09375247    5.4508654    5.4441639    1.0248941        0.075    2.0586548          0.5   0.11387712    4.3906977    2.7917135    30.801768 0.00087481317  -0.33702298 0.0021666168   0.41311534    1.4501985    4.4260117 
 1210000    11.097008     1.465792    9.6312157  -0.27110182    0.9774117    1.2495967   0.79661874   -3.5502959            3     5.496712    7.8012485    7.8791954    0.8096921 0.0053606292  0.046015746  0.034879425    5.3219444     5.314253    1.0190057        0.075    2.0730062          0.5   0.11322286    4.4160694    2.7794246    30.801768 -0.017116587  -0.31760218 -0.020896791   0.34376061  -0.66514268  -0.78028438 
 1211000    11.133577    1.4942836    9.6392932  -0.29286875   0.99641027    1.2606713   0.82089818   -3.5502959            3    5.6827672    7.8882767    7.9778292    1.1821957 -0.028594543  -0.26628462  0.047403303     5.502673    5.4986911     1.026035        0.075    2.0765253          0.5   0.11400389    4.3858152    2.7989537    30.801768  0.024003664  -0.34264533 -0.019799641   0.39687377   0.33028569    5.0833713 
 1212000    11.085355    1.4894931    9.5958618   -0.3026373   0.99321593    1.2953283   0.79251042   -3.5502959            3    5.5235182    7.8348308    7.9032605   0.83246331 -0.021569677   0.10150969 -0.049966538    5.3496519    5.3343817    1.0272712        0.075      2.05521          0.5   0.11414124    4.3805377    2.8051896    30.801768  0.012177864  -0.33903938 -0.011111681   0.34628345    3.0961855   0.17278903 
 1213000    11.142433    1.4999825    9.6424505  -0.30305018    1.0002104    1.2803594   0.81412539   -3.5502959            3    5.4189448    7.6646037    7.8411441   0.75108656  0.014338547  -0.20248237  0.031079744    5.2403364    5.2319939    1.0356874        0.075    2.0513151          0.5   0.11507638    4.3449402    2.8203766    30.801768 -0.020929158  -0.38057308 -0.010819032    0.3143503   0.92689108    2.0967561 
 1214000    11.123081    1.5098226    9.6132581  -0.29720606    1.0067719    1.3205003   0.79834039   -3.5502959            3    5.7302249    7.8894453    8.0682869    1.2329425  0.028136002  -0.14014703  0.071623892    5.5550796    5.5374129    1.0390481        0.075    2.0660916          0.5   0.11544979     4.330887    2.8214484    30.801768  0.026512014    -0.338044   0.02935595   0.45727925   0.72677062    5.2168556 
 1215000    11.169881    1.5049711    9.6649101  -0.27017109    1.0035369    1.2745944   0.82350396   -3.5502959            3    5.5353671    7.8724366    7.8665961   0.86706857 -0.011399543 -0.063807637  0.056280385    5.3547012     5.349258    1.0227143        0.075    2.0506344          0.5   0.11363492    4.4000559    2.7944709    30.801768  0.025417266   -0.3581354 -0.0099972296   0.42699905  -0.52601365    4.8140447 
 1216000    11.124112    1.4990849    9.6250267  -0.26728956   0.99961184    1.2990251   0.80070513   -3.5502959            3    5.6549821     7.941694    7.9764779    1.0467745 0.0012541772 -0.095265631  -0.05025208     5.479318    5.4653058    1.0183009        0.075    2.0747415          0.5   0.11314455    4.4191259    2.7963438    30.801768 0.0030449686  -0.38791827  0.036518906   0.39025909   -1.3378473    1.9717931 
 1217000    11.121072    1.4992182    9.6218542  -0.30598731   0.99970077    1.3050968   0.79681224   -3.5502959            3    5.5352625    7.7090608    7.8947633    1.0019633  0.005563652  -0.18881757 -0.021213849    5.3604524    5.3446996    1.0192131        0.075    2.0811291          0.5    0.1132459    4.4151711    2.7887039    30.801768 -0.0027817562  -0.42341225 -0.012322481   0.37630822    1.7866174    4.3190905 
 1218000     11.18423    1.5226719    9.6615585  -0.27088275    1.0153401    1.2967542   0.82841859   -3.5502959            3    5.6019672    7.8791705    7.8624613    1.0642697 -0.0032331235   0.25491386 -0.043204855    5.4202231    5.4126225    1.0116479        0.075    2.0744733          0.5   0.11240533    4.4481878    2.8064752    30.801768 -0.00088733424  -0.40541151 -0.003205894   0.36676547   -4.2474407    2.3393676 
 1219000    11.116348    1.5029754    9.6133721  -0.29901692    1.0022061    1.2956736   0.80725764   -3.5502959            3    5.5668647    7.7816956    7.9292555   0.98964309 -0.022801747  -0.34381397 -0.043262002    5.3897631    5.3776778     1.024739        0.075    2.0580754          0.5   0.11385989     4.391362    2.8222521    30.801768 0.0095175304  -0.36129509 -0.069418196   0.42767802    1.8375208    2.6951235 
 1220000    11.109793    1.4879843    9.6218092  -0.27876165   0.99220982    1.2874646    0.7960681   -3.5502959            3    5.6533736    7.9434927    7.9406342    1.0759938  0.041485521  -0.18213097 -0.002628957    5.4787268    5.4653853    1.0156955        0.075    2.0873867          0.5   0.11285506    4.4304617    2.8033151    30.801768 -0.035179325  -0.31415188 -0.014760591   0.32209586  -0.91621483    5.3686844 
 1221000     11.10921    1.5002812    9.6089293  -0.28333736    1.0004096    1.3053362   0.79783369   -3.5502959            3    5.5616929    7.8470758    7.9384279   0.89957511  0.024506348 -0.072669615   0.12822746    5.3866588    5.3710951     1.044925        0.075     2.102571          0.5   0.11610277    4.3065293    2.8005858    30.801768  0.036527905  -0.43352322 -0.016153216   0.34922602    0.5000906    4.8359925 
 1222000    11.086184    1.4480996    9.6380841  -0.28213341   0.96561415    1.2235348   0.79431053   -3.5502959            3    5.6508932    7.8705513    7.9807291    1.1013991 -0.020744897  -0.12790314 0.0083245015    5.4766319    5.4722395    1.0132766        0.075    2.0789648          0.5   0.11258629    4.4410381    2.8247931    30.801768  0.023246573  -0.31777488  0.010730108   0.49138705   -1.5035677    3.6727464 
 1223000    11.101664    1.4737645    9.6278998  -0.30162435   0.98272783    1.2685296    0.7928741   -3.5502959            3    5.8086125    8.0080217     8.071225    1.3465909  0.037054388 0.0039582908  0.050954693    5.6346664     5.623389    1.0474943        0.075    2.1049978          0.5   0.11638826     4.295966    2.8319252    30.801768 -0.013525635  -0.37108649  0.010195359   0.35725193   0.65469186    9.8123899 
 1224000    11.092786     1.477571    9.6152152  -0.28952371   0.98526611    1.2735381   0.79376925   -3.5502959            3    5.6428727    7.7908196    8.0475624    1.0902361 -0.011346729 -0.033524828 -0.022215935    5.4687302    5.4569179   0.99659096        0.075    2.0763163          0.5   0.11073233    4.5153931    2.7882159    30.801768 -0.0095669536  -0.33440183 -0.011067599   0.34330696   -2.0314527    11.070774 
 1225000    11.101089    1.4604239    9.6406655  -0.29192005   0.97383213    1.2360214   0.79969055   -3.5502959            3    5.5589586    7.8645176    7.9121014   0.90025691 -0.031927426 -0.041377723 -0.010697957    5.3835171    5.3784818    1.0375761        0.075    2.0929967          0.5   0.11528623    4.3370314    2.8250692    30.801768 -0.012249244  -0.39304948 -0.0079913662   0.33289642   -2.2079978    1.9991001 
 1226000    11.041604    1.4475532    9.5940507  -0.29422662   0.96524978    1.2354238   0.78579074   -3.5502959            3    5.5194074    7.8407655    7.8983734   0.81908318 -0.0039784242  -0.10779244   0.06630928    5.3470153    5.3390178     1.016597        0.075    2.0622709          0.5   0.11295522    4.4265329    2.8498677    30.801768 0.0095859867  -0.32691861 -0.026868052   0.29592987    3.8982996    1.4744738 
 1227000    11.074159    1.4635243    9.6106348  -0.27877192   0.97589952    1.2667928   0.78265459   -3.5502959            3    5.6131226    7.8488586    7.9536336    1.0368757  0.016674933 0.0087924282 -0.092229062    5.4414186    5.4281527    1.0230042        0.075    2.0853927          0.5   0.11366714    4.3988087    2.8127388    30.801768  -0.01840243  -0.41251883 0.0002489385   0.38866692   -1.1666743    5.9204228 
 1228000    11.072853    1.4598049    9.6130479  -0.30518287    0.9734194    1.2515295   0.78868144   -3.5502959            3    5.5475677    7.7969664    7.9415203   0.90421625  0.012784485  -0.17101357 -0.0048739956    5.3745414    5.3648264    1.0261036        0.075    2.0658924          0.5   0.11401151    4.3855222    2.8279014    30.801768  0.026265779  -0.35669005 0.0056218156   0.35443797   0.66687151    3.2469861 
 1229000    11.078984    1.4905146    9.5884691  -0.30095132   0.99389707    1.3044386   0.78758173   -3.5502959            3    5.3908523    7.6794309     7.815704   0.67742197 -0.0010183592 -0.0084396975 -0.021477041    5.2180673    5.2003855    1.0392341        0.075    2.0778091          0.5   0.11547046     4.330112    2.8172227    30.801768  -0.00437258  -0.36195803  -0.01032813   0.36144125    -1.005521   0.34623447 
 1230000    11.110664    1.5057025    9.6049612  -0.30352342    1.0040246    1.2739928   0.82471687   -3.5502959            3    5.4096554    7.6492325    7.8473961   0.73233763 0.0025931992 -0.083168923 -0.035716975    5.2287234    5.2236342    1.0227398        0.075    2.0836146          0.5   0.11363775    4.3999462    2.8042454    30.801768  0.011598407  -0.35445389 0.0040120958   0.33478727    2.4686457   0.98006717 
 1231000    11.107763    1.5018832    9.6058793  -0.29204031    1.0014778    1.2905555   0.80945074   -3.5502959            3    5.7594463    8.0177201     8.082663    1.1779558  0.038180407    0.1514033   0.17712137    5.5818635    5.5710067    1.0333698        0.075    2.0736687          0.5   0.11481887    4.3546849    2.8190227    30.801768 -0.029127213   -0.3683935 -0.026458784   0.32695512    1.3687214    7.3498706 
 1232000    11.090222    1.4540666    9.6361555  -0.27684495   0.96959299    1.2137335   0.80746233   -3.5502959            3    5.4641204    7.7650276    7.8620999   0.76523362  0.037983502  -0.27502059  -0.08561532    5.2869738    5.2868979    1.0141874        0.075    2.0660425          0.5   0.11268748      4.43705    2.7925525    30.801768 0.0017719768  -0.44547681 -0.016425967   0.37323455   0.63064108    2.2000521 
 1233000    11.095512    1.4932621    9.6022501  -0.29896826   0.99572915    1.2716764   0.81243898   -3.5502959            3    5.6050859    7.8526459    7.9928786   0.96973334  0.029647406 -0.083984895 -0.060615811    5.4268476    5.4194029    1.0392855        0.075    2.0947134          0.5   0.11547617    4.3298977    2.8078565    30.801768  0.047699708   -0.3385182 0.0055105572   0.37648866  -0.61599872    4.7431684 
 1234000    11.099017     1.490986    9.6080314  -0.29879601    0.9942114    1.2738224   0.80848222   -3.5502959            3    5.7263768    7.9389252    8.0832599    1.1569453 -0.0089788334 -0.071420061 -0.059263075    5.5490065    5.5403805    1.0187777        0.075    2.0635106          0.5   0.11319752    4.4170577     2.799788    30.801768  0.020336953  -0.35749034 -0.0013438812   0.28367009  -0.57279717    4.4559598 
 1235000    11.109725    1.4801663    9.6295584   -0.3035945   0.98699665    1.2526819    0.8105332   -3.5502959            3    5.4775263    7.7555272    7.8682087   0.80884293 -0.012719863 -0.016095087  0.011699396     5.299706    5.2946168    1.0243419        0.075    2.0489617          0.5   0.11381576    4.3930646    2.8043208    30.801768 -0.023102445  -0.42657726 0.0013691931   0.37773062   -2.2031255     6.508754 
 1236000    11.077691    1.4632493     9.614442  -0.29531237   0.97571614    1.2594728   0.78722093   -3.5502959            3    5.4435551    7.6981203    7.8602159   0.77232909  0.038121201  -0.13995799  0.047696123    5.2708492     5.259654    1.0219725        0.075     2.076582          0.5    0.1135525    4.4032495    2.8135476    30.801768 0.0012488362  -0.33584744 -0.004261322   0.40095468    2.3628636    2.9743311 
 1237000    11.107073    1.4947578    9.6123154  -0.29893623   0.99672651    1.3157177    0.7847885   -3.5502959            3    5.8503848    7.9581803    8.1416583    1.4513158 -0.012623629 -0.098618628  0.096068144    5.6782126    5.6582712    1.0313213        0.075     2.068883          0.5   0.11459125    4.3633348    2.7758896    30.801768 -0.016071642  -0.45635973  -0.02065686   0.41457313   -1.6683709    3.5886341 
 1238000     11.07325    1.4703553    9.6028952  -0.29760544   0.98045452    1.2461245    0.8039988   -3.5502959            3    5.5532989    7.7958104    7.9567367    0.9073495 0.00064228192  -0.16483279   0.04677339    5.3769122    5.3713468    1.0162245        0.075    2.0659371          0.5   0.11291384    4.4281553    2.8272231    30.801768 0.0027370017  -0.26815708   0.00265295   0.32773091   -1.8663987    3.7872108 
 1239000    11.071172    1.4779194    9.5932526  -0.31084947   0.98549838    1.2809225   0.78924146   -3.5502959            3     5.641183    7.8620835    8.0360231    1.0254423  0.024698234 -0.098742974  0.052146535    5.4680338    5.4541499    1.0330585        0.075     2.089332          0.5   0.11478428    4.3559973    2.8194413    30.801768 -0.015283142  -0.34784453 -0.024428789   0.35851912   -4.6406747    5.6922716 
 1240000    11.055044    1.4732761    9.5817677  -0.30018108   0.98240219    1.2509346   0.80404204   -3.5502959            3    5.5240811    7.7375434     7.907804   0.92689594  0.014290476 -0.019762477 -0.017586326    5.3476849    5.3414267    1.0280281        0.075    2.0949305          0.5   0.11422534    4.3773123    2.8356602    30.801768 -0.0078103351  -0.34015312 0.0038918756   0.39688362  -0.33001504    1.6280041 
 1241000    11.104228    1.4717778      9.63245  -0.29837622   0.98140308    1.2727963    0.7878274   -3.5502959            3    5.7128258    7.9000824    8.0412058    1.1971892 0.00065028569 -0.00067024168  0.016181676    5.5399869    5.5269793    1.0435566        0.075    2.0749893          0.5   0.11595074    4.3121761    2.8266619    30.801768  0.019237124  -0.41714763  0.020372488   0.38854227   -1.9397024    5.9995496 
 1242000    11.118012    1.4818262    9.6361857  -0.28165837   0.98810354    1.2611737   0.80672542   -3.5502959            3    5.6411145    7.9186236    7.9943088    1.0104112  0.050124786  -0.13846031  0.078559514    5.4641296    5.4569651    1.0298739        0.075    2.0649721          0.5   0.11443044    4.3694668    2.7839839    30.801768  0.046554853  -0.39825271 0.0030384188   0.30195709    2.5698747   0.52339468 
 1243000    11.135575     1.494915    9.6406604  -0.29185438   0.99683134    1.3053676   0.79185175   -3.5502959            3    5.4335252    7.7035659    7.8305858   0.76642408 -0.015288239 -0.076373822 -0.0065720929    5.2598035    5.2429229    1.0472616        0.075    2.0806935          0.5    0.1163624    4.2969205    2.8037225    30.801768 -0.012402209  -0.36444297 -0.006979017   0.35177443  -0.35957872    1.1226306 
 1244000    11.136987    1.5242243    9.6127626  -0.28159282    1.0163752    1.2719747   0.84663524   -3.5502959            3    5.5446689    7.8178009    7.9214139   0.89479199 0.0047692968  -0.11540631 -0.0012843269    5.3589284    5.3589424    1.0187955        0.075    2.0742972          0.5    0.1131995    4.4169806    2.8272681    30.801768 -0.023971268  -0.36279536  0.021158605   0.32693145    0.1880239  -0.51421392 
 1245000    11.107995    1.4660166    9.6419788  -0.31531144   0.97756147    1.2646805    0.7868291   -3.5502959            3    5.7180974    7.9096351      8.04117    1.2034871  0.026893653  -0.22423363   0.12736722    5.5454775    5.5334359    1.0441496        0.075    2.0798843          0.5   0.11601663    4.3097271    2.8035946    30.801768 -0.0019626887  -0.38143691 0.0047091958   0.36125285   -2.0940909   0.47351601 
 1246000    11.129204     1.495031    9.6341728  -0.28757063   0.99690869     1.266865   0.81760626   -3.5502959            3    5.5469119    7.7940413    7.9543159    0.8923787  0.019385875  -0.13767599 -0.017825217      5.36754    5.3619315    1.0139475        0.075     2.085452          0.5   0.11266083    4.4380998    2.7685985    30.801768 -0.00016582488  -0.37353929 -0.027512972   0.38327432    1.0539253   0.64429958 
 1247000     11.10175    1.4780158     9.623734  -0.29819991   0.98556266    1.2959133   0.77937129   -3.5502959            3    5.4394227    7.6863256    7.8179687   0.81397378  0.020443569  0.019816454  0.053550874    5.2684389    5.2502007    1.0259033        0.075    2.0873861          0.5   0.11398925    4.3863785    2.7751533    30.801768 -0.0098078791  -0.34652515 -0.021501285   0.40064883    -2.697171     3.892132 
 1248000    11.148811    1.5168137    9.6319976  -0.28669378    1.0114337    1.2930237   0.82439377   -3.5502959            3    5.6532754    7.9081838    7.9708167    1.0808257 -0.031872083  0.062738004   0.05840897    5.4724143    5.4644754    1.0211318        0.075    2.1135372          0.5   0.11345909    4.4068749    2.7801042    30.801768 0.0024242162   -0.3278619 -0.0028057199   0.41014073    1.2193455    3.9015188 
 1249000    11.147498    1.5317778    9.6157199  -0.28657374     1.021412    1.3191561   0.82362424   -3.5502959            3    5.5654066    7.8376862     7.892323   0.96621076  0.055070072  -0.11814953  -0.17426981    5.3847144    5.3727909    1.0261752        0.075    2.0825616          0.5   0.11401946    4.3852163    2.7809463    30.801768 0.0093545816  -0.39782461 -0.00016399345   0.34110853   -1.5211514    1.9150839 
 1250000    11.122494    1.4822989    9.6401952  -0.29338454   0.98841872     1.272291   0.79985131   -3.5502959            3    5.1849309    7.5648634     7.636428   0.35350132  0.013106573  -0.18263638  -0.08326397    5.0094541    4.9991582    1.0176224        0.075    2.0537347          0.5   0.11306915    4.4220725     2.781078    30.801768 -0.014969752  -0.33886834 0.0086678265   0.36486028    1.5602478   -2.5159986 
 1251000    11.146137    1.5076134    9.6385238  -0.27942866    1.0052988    1.2557577   0.83897605   -3.5502959            3    5.6630785    7.8974104    7.9702327    1.1215925 0.0015202533   0.11293931 -0.034496388    5.4790183    5.4797199    1.0275543        0.075    2.0625877          0.5    0.1141727    4.3793306    2.8018495    30.801768 -0.0062399245  -0.35256777 -0.0021685656   0.36799052   -1.3865971    -1.635981 
 1252000    11.133082    1.4906811    9.6424009  -0.28470592   0.99400811    1.2443098   0.82778589   -3.5502959            3    5.5572316    7.7799879    7.9169378   0.97476916 0.0059950094  -0.08880609  0.028011703    5.3756264    5.3755446    1.0229445        0.075    2.1249787          0.5   0.11366051    4.3990654    2.8147937    30.801768 -0.0045761601  -0.36903448  0.019568377   0.36762347    1.9169311    -0.213001 
 1253000    11.090427    1.4884833    9.6019433  -0.30877114   0.99254256    1.2652314   0.81141984   -3.5502959            3    5.8314673    8.0338509     8.105284    1.3552669  0.021878909 -0.027494504  0.075454056    5.6534525    5.6467253    1.0305456        0.075    2.0829309          0.5   0.11450507    4.3666189    2.8088474    30.801768 0.0047242263  -0.39877129  0.013061147   0.34870582     2.221434    6.8262492 
 1254000    11.108457    1.5044706    9.6039869  -0.29962087    1.0032031    1.2641568   0.82989481   -3.5502959            3    5.5003815    7.7583455    7.8869463   0.85585281  0.014774859  -0.10645817  0.056849267    5.3183136    5.3157965    1.0511017        0.075    2.1143837          0.5   0.11678908    4.2812223    2.8253864    30.801768 -0.0055341988  -0.34972644 0.0017138669   0.46805958   0.16960171    4.4376391 
 1255000    11.063885    1.4500381    9.6138469  -0.30369161   0.96690672    1.2650752   0.76881637   -3.5502959            3    5.7011025    7.9382499    7.9687138    1.1963437 -0.0089953165 -0.061037023  -0.15798071    5.5324343    5.5163833    1.0370043        0.075    2.0979153          0.5    0.1152227    4.3394226    2.8235399    30.801768   0.02339968  -0.34548699 -0.014618951   0.38984447    4.3552502    7.3154076 
 1256000    11.057903    1.4790756    9.5788275  -0.29218812   0.98626938    1.2961671   0.78037976   -3.5502959            3    5.5208138    7.8235165    7.8360489   0.90287602 -0.023389614 -0.066104376  0.081123023    5.3496088    5.3315548    1.0268925        0.075    2.0842747          0.5   0.11409917     4.382153    2.7978431    30.801768 0.0048281413   -0.3557421  0.001603889   0.44843258   -2.7739554    1.1692132 
 1257000     11.13411    1.5092935    9.6248162  -0.29139707    1.0064191    1.2850108   0.82137287   -3.5502959            3     5.546273    7.8058848    7.8857348   0.94719954  0.012159025 -0.083107362  0.043183654    5.3660747     5.358643    1.0229146        0.075    2.0704919          0.5   0.11365718    4.3991942    2.8095432    30.801768 0.0036253706  -0.31363478 -0.016981141   0.33278121    1.5740704    3.1319249 
 1258000    11.124238    1.4908935    9.6333448  -0.28591218   0.99414975    1.2728638    0.8090175   -3.5502959            3    5.6044711    7.8886282     7.890653     1.034132  0.046014806 -0.079479642    0.0318065    5.4269834    5.4186147    1.0395398        0.075    2.0762296          0.5   0.11550442    4.3288388    2.8171923    30.801768 -0.0022570104  -0.45930149 -0.011079526   0.38244118    -1.366083    3.1711964 
 1259000    11.100167    1.4846109    9.6155564  -0.28770355   0.98996041    1.2744864   0.80095845   -3.5502959            3    5.5418496    7.8304784    7.9192353   0.87583504  0.030491491 -0.099156655 -0.093260724    5.3661299    5.3557563    1.0319764        0.075    2.0909471          0.5   0.11466404    4.3605649    2.8096091    30.801768 -0.0011801389  -0.35082268  -0.01573543   0.33732251   0.53588507    3.2963376 
 1260000    11.086897    1.4863356    9.6005611  -0.28862409   0.99111045    1.2645496   0.80948784   -3.5502959            3    5.7529202    7.9856973    8.0836597    1.1894037  0.014405567  -0.23174862 -0.027600915    5.5753293    5.5682778    1.0478287        0.075     2.086126          0.5   0.11642542    4.2945949    2.8065028    30.801768  0.033390321   -0.3330329 0.0052308282   0.43985281    2.6171233    3.8331511 
 1261000     11.09445    1.4703737    9.6240763  -0.28658586   0.98046683    1.2555902    0.7977193   -3.5502959            3    5.4996222    7.8066463    7.8558625    0.8363577 0.0021359846  -0.21638728 0.0092899323    5.3246131     5.316288    1.0297858        0.075    2.1225576          0.5   0.11442065    4.3698407    2.8142857    30.801768  0.016184735  -0.34072283 0.0085523286   0.39650986  -0.18431159    4.2545969 
 1262000    11.109347    1.4867441    9.6226026  -0.27912205   0.99138283     1.262823   0.81109073   -3.5502959            3    5.6923092    7.9555774    8.0375901    1.0837601 -0.0055712821  -0.28583231  -0.12897222    5.5143666    5.5079189    1.0333309        0.075    2.1024972          0.5   0.11481455    4.3548489     2.828788    30.801768 -0.010221293  -0.27653215 -0.011000856   0.39638274   0.66005248    3.0004015 
 1263000    11.115171    1.5085119    9.6066587  -0.29317685     1.005898    1.2587567   0.83797825   -3.5502959            3    5.6554951    7.9459199    7.9755339    1.0450314 -0.012053232  -0.21258047  -0.12092073    5.4716537    5.4716985    1.0312768        0.075    2.1094327          0.5   0.11458631    4.3635228    2.8126855    30.801768 -0.014112331  -0.41157387 0.0026618452   0.40494474    1.9563659    7.0851886 
 1264000    11.121291    1.4959188    9.6253718  -0.29143849   0.99750065    1.2877069   0.80472091   -3.5502959            3    5.5902042    7.8020578    7.9587373    1.0098174 -0.0082421847 -0.062879935 -0.013277609    5.4136591    5.4021805    1.0192189        0.075    2.1162841          0.5   0.11324654    4.4151458     2.809959    30.801768 -0.0097499461  -0.32053135 0.0035071533   0.34083998  -0.68141405    5.4733933 
 1265000    11.065698    1.4824566    9.5832415   -0.2996536   0.98852389    1.2776665    0.7964488   -3.5502959            3     5.591254    7.7781295     7.990577    1.0050555  -0.05150733  -0.29039303  0.012696549    5.4165237    5.4046964    1.0220441        0.075    2.1045563          0.5   0.11356046    4.4029409    2.7911099    30.801768 -0.015336685  -0.41586518 0.0095294527   0.36903895   -1.4040648    3.9146834 
 1266000    11.090229    1.4930911    9.5971383  -0.29504498   0.99561511    1.2802169   0.80656476   -3.5502959            3    5.7938313    8.0453149    8.0204525    1.3157266 0.0031327684  0.047278819  0.022182249    5.6168817    5.6069013    1.0401758        0.075    2.0953211          0.5   0.11557509    4.3261917    2.7950897    30.801768 -0.014060013  -0.40106193 0.0017575295   0.36671144   0.10294855    4.2755917 
 1267000    11.075132    1.4613084    9.6138236  -0.28979035   0.97442191     1.246984   0.79337684   -3.5502959            3    5.5891832    7.8501337     7.935539   0.98187682  0.019486631 -0.094954564 -0.098387747    5.4151268    5.4071056    1.0259624        0.075    2.0916181          0.5   0.11399582    4.3861258    2.7860026    30.801768  0.027973116  -0.39267109 -0.0033110353   0.39061027  -0.96930891  -0.63171851 
 1268000    11.057928    1.4850486    9.5728793  -0.29335142   0.99025227    1.2721664   0.80298878   -3.5502959            3    5.7350052    8.0179794    8.0179484    1.1690878 -0.010303767 -0.037868984  0.054957947    5.5588401    5.5492506    1.0387917        0.075    2.0760443          0.5    0.1154213    4.3319559    2.8214259    30.801768  0.001022739  -0.32787965 -0.0029714014   0.40265742  -0.18062393    1.4637179 
 1269000      11.1145    1.5128528    9.6016477  -0.30013988    1.0087925    1.2661789   0.83786045   -3.5502959            3    5.5748549    7.8098093    7.9603065   0.95444894 0.0045026721  -0.22716382  0.043597923    5.3910394    5.3899746    1.0195543        0.075    2.1044175          0.5   0.11328381    4.4136935    2.7989764    30.801768 0.0077695376  -0.33918926  0.011610015    0.3688186    0.1580823    1.4276449 
 1270000    11.091426    1.4986434    9.5927828  -0.29770104   0.99931749    1.2881383   0.80746053   -3.5502959            3    5.5841887    7.7814143    7.9878259   0.98332601 -0.012321676 -0.037243346  -0.11693248    5.4070426    5.3961021    1.0356303        0.075    2.1251742          0.5   0.11507003    4.3451801    2.7973968    30.801768  0.011254008  -0.35312122 -0.0098109403   0.37631595   -1.4837884    3.8259573 
 1271000    11.111973     1.502142     9.609831  -0.27460718    1.0016504    1.2709559   0.82278285   -3.5502959            3    5.6615227    7.9023175    7.9463916     1.135859  0.032185514 -0.050028282 0.0014880411     5.481015    5.4759449    1.0101569        0.075    2.1007113          0.5   0.11223965    4.4547535    2.8002279    30.801768  0.010019556   -0.3534416 -0.017081639    0.3628234 -0.039423539    1.2977474 
 1272000    11.085892    1.4995334    9.5863584  -0.30893872   0.99991097     1.301945   0.79926008   -3.5502959            3     5.534555    7.7545527    7.9527675   0.89634474 -0.024468606  -0.20258299  -0.11989307    5.3592079    5.3444523    1.0331721        0.075    2.1412854          0.5    0.1147969    4.3555185    2.7919679    30.801768  0.035090261  -0.33771238 -0.022797101   0.40338828   0.26706813    1.4683843 
 1273000     11.10723    1.4881776    9.6190523  -0.28864894   0.99233871    1.2796553   0.80148034   -3.5502959            3    5.4242979    7.6756608    7.8852776   0.71195516 -0.012445864    0.1005556 -0.024824154    5.2484637    5.2374498    1.0190257        0.075    2.1228276          0.5   0.11322508    4.4159828    2.8096874    30.801768 -0.0057778417  -0.34142633 -0.023155268   0.38498338   -1.9169095    1.6492798 
 1274000     11.09683    1.4981734    9.5986564  -0.30972064   0.99900409    1.2770581   0.81431293   -3.5502959            3    5.6759063    7.8622137    8.0535152    1.1119902  0.026882499  -0.29609715 -0.028979901    5.4972569    5.4894375    1.0300953        0.075    2.1276793          0.5   0.11445503    4.3685278    2.7954563    30.801768 -0.00022525912  -0.37520714 -0.015939199   0.35538756    2.3218622    2.8032983 
 1275000    11.110748    1.4978568    9.6128914  -0.28654798   0.99879297    1.2835475   0.80964214   -3.5502959            3    5.6016943    7.7526612    7.9987399    1.0536819 -0.001266759  0.020154679 -0.0094948975    5.4240695     5.414278     1.008092        0.075    2.1152402          0.5   0.11201023    4.4638781    2.8051188    30.801768 -0.027699426  -0.40664214 -0.014100212   0.34644043   0.56407425    4.7766778 
 1276000    11.123936    1.5267625    9.5971733  -0.30182656    1.0180677    1.3138729   0.82156912   -3.5502959            3    5.5873304    7.7419099    7.9737873    1.0462941  0.031121504  -0.12574918   0.02636877     5.407089    5.3954861    1.0506813        0.075    2.1178376          0.5   0.11674237    4.2829351    2.8062208    30.801768  0.011943514  -0.48730543 0.0017939866   0.37148843   -1.2902965   0.43511028 
 1277000    11.127875    1.4966713    9.6312037   -0.2807272   0.99800242    1.2966436   0.79960896   -3.5502959            3    5.6011765    7.8167246    7.9886763   0.99812876  0.018547843  -0.20054347   0.10359928    5.4257529     5.411848    1.0262948        0.075    2.1068458          0.5   0.11403275    4.3847052    2.8155706    30.801768  0.020379195  -0.34479402 0.0038499612   0.41714034  -0.24866911    1.3030589 
 1278000    11.109309    1.4867884    9.6225211  -0.29653499   0.99141238    1.2731704   0.80425318   -3.5502959            3    5.6345523    7.8256294    7.9657658    1.1122619  0.026898539 -0.035739565  -0.12088604    5.4581098    5.4486512    1.0481799        0.075    2.0764322          0.5   0.11646443    4.2931563    2.7932925    30.801768  0.020621376  -0.45579531  0.019761989   0.42254401   0.20007071    4.8099752 
 1279000    11.057492    1.4584863    9.5990061  -0.29024771   0.97254011    1.2486061    0.7891623   -3.5502959            3     5.480553    7.7176015     7.891658   0.83239958 -0.012921938   0.10960767  0.023157979    5.3074213    5.2982386    1.0193633        0.075    2.1050879          0.5   0.11326259    4.4145202    2.8027481    30.801768  0.020139271  -0.33131508 0.0021110471   0.34627999   0.54138488    4.9687722 
 1280000    11.123396    1.4892912    9.6341048   -0.2925167   0.99308128    1.2736072   0.80674275   -3.5502959            3    5.7074881    7.8818626    8.0584237    1.1821781 -0.011761053  0.097727476  0.054898341    5.5304995    5.5215232    1.0284734        0.075    2.1225224          0.5   0.11427482    4.3754171    2.7913131    30.801768 -0.039985473  -0.29857547 -0.0066318573   0.45639556  -0.88606625    1.0248269 
 1281000    11.154716    1.5379664    9.6167497  -0.29422828    1.0255386    1.2761026   0.85915343   -3.5502959            3    5.5083117    7.7300433    7.9329394    0.8619524 -0.00039849919  -0.10855145   0.12181116    5.3198248    5.3219824    1.0101267        0.075    2.0991754          0.5    0.1122363    4.4548866    2.8063849    30.801768  0.016970188  -0.41506894  -0.00524497   0.38717004  -0.39571243   -2.0271185 
 1282000    11.102436    1.5036619    9.5987737  -0.29833854    1.0026639    1.2752706   0.82159966   -3.5502959            3    5.4465465    7.7377384    7.8672293    0.7346718 0.0093031413 -0.092978368  0.013555429    5.2662984    5.2603387    1.0323263        0.075    2.0798989          0.5   0.11470293    4.3590867    2.8077254    30.801768  0.015144238  -0.39118411 0.0035040279   0.31240644   -1.7778573    3.0341411 
 1283000    11.119676    1.5040274    9.6156483  -0.29690362    1.0029076    1.2711384    0.8247558   -3.5502959            3    5.5753102    7.8210647    7.8857058    1.0191603 -0.028512647 -0.084804841 -0.0012430518    5.3943697    5.3897058    1.0333056        0.075    2.0891951          0.5   0.11481173    4.3549558     2.821438    30.801768  0.028620535  -0.33416164  0.022368745   0.41444885  0.048480954   -1.3001417 
 1284000    11.079201    1.4674282    9.6117726  -0.30673407   0.97850271    1.2531832   0.79604928   -3.5502959            3    5.5781665    7.7981967    7.9016025    1.0347004 -0.0016903389  0.033830254   0.08128559    5.4035239    5.3951838    1.0286422        0.075    2.0798471          0.5   0.11429358    4.3746991    2.8109265    30.801768 0.0012790024  -0.36803068 -0.015004216   0.31693613   0.73944603  -0.44440705 
 1285000    11.073301    1.4801337    9.5931676  -0.29656862   0.98697491    1.2885932   0.78659593   -3.5502959            3    5.4715795    7.7130887    7.8859028   0.81574691 0.0043422696   0.23874132 -0.050237206    5.2990108    5.2834264    1.0422718        0.075    2.0858215          0.5   0.11580798    4.3174917    2.8341611    30.801768 0.00077590339  -0.40310484 -0.011057434   0.39365849   -2.8106371   0.38318434 
 1286000    11.108635    1.4759464    9.6326884  -0.27377594   0.98418281    1.2378224   0.81573539   -3.5502959            3    5.6899917     7.932613    8.0270188    1.1103434 -0.022607996  -0.14070391  0.085788815    5.5110302    5.5092519    1.0312091        0.075    2.1185165          0.5   0.11457879    4.3638093    2.8125669    30.801768 -0.010484573  -0.41982025 -0.006705717   0.36377914   -1.5489163    6.6090065 
 1287000    11.081043    1.4649639    9.6160786  -0.28423177    0.9768595    1.2464554    0.7977895   -3.5502959            3     5.656657    7.8303997    8.0018896    1.1376817  0.042066405  0.013185436  0.036477796    5.4816326    5.4746567    1.0219379        0.075    2.1169758          0.5   0.11354866    4.4033987    2.8174168    30.801768  0.030188367  -0.35705384  0.022714694   0.32550075   -1.5173858    5.5215411 
 1288000    11.080163    1.4696814     9.610482  -0.30880877   0.98000521    1.2487154   0.80152588   -3.5502959            3    5.6872641    7.9136646    7.9782642    1.1698634 -0.0047510005 -0.043459854  0.023457534    5.5114199    5.5049337    1.0266448        0.075    2.0656647          0.5   0.11407164    4.3832102    2.8201122    30.801768 0.0017726812  -0.29624592 0.0082011778   0.33831458    1.3068773    4.9921847 
 1289000    11.089259    1.4833073    9.6059522  -0.29759547   0.98909113    1.2399999   0.82246302   -3.5502959            3    5.4651857    7.7588411    7.8687778   0.76793824  0.028215152   0.13598041 -0.021592713    5.2847482     5.284128    1.0269254        0.075    2.1022401          0.5   0.11410283    4.3820124    2.8217435    30.801768 -0.0030203193  -0.36434253 -0.00044659479   0.31448464    1.5685819    5.7933455 
 1290000     11.07634     1.470675    9.6056645  -0.29360621   0.98066774    1.2510308   0.80108857   -3.5502959            3    5.3837945    7.6952661    7.7032426   0.75287497 -0.0076291547 -0.040008002 -0.050116427    5.2080463    5.2011261    1.0227599        0.075     2.081776          0.5   0.11363999    4.3998596    2.7988112    30.801768 0.0043306034  -0.40691114  0.020904247   0.40061977    2.5751245     1.111291 
 1291000     11.06656    1.4790818    9.5874787  -0.30835654   0.98627348    1.2782649   0.79230146   -3.5502959            3    5.5365872    7.7905586    7.8655432   0.95365988 -0.0061512811   -0.1546653 -0.034369808    5.3627668    5.3499422    1.0396354        0.075     2.117403          0.5   0.11551504    4.3284407    2.8112483    30.801768  0.027084646  -0.35796598 -0.012128596   0.34733958   -1.2506851    2.8617605 
 1292000    11.074533    1.4902361     9.584297  -0.29560938   0.99371138    1.2621017   0.81545001   -3.5502959            3    5.4216391    7.7053065    7.8500351    0.7095757 -0.017367674  -0.05369507  0.071047245    5.2427402    5.2373542    1.0315688        0.075    2.1064653          0.5   0.11461875    4.3622879    2.8110156    30.801768 -0.0025263879  -0.38463349 0.0071815336   0.30129771   -0.7084121    2.1708993 
 1293000    11.086579    1.4942822     9.592297  -0.31113502   0.99640934    1.2592818   0.82182143   -3.5502959            3    5.5493594    7.7775307    7.9377972   0.93275017 -0.013397663 -0.029157996 -0.059997519    5.3690626    5.3654861    1.0281956        0.075    2.0873739          0.5   0.11424396    4.3765991    2.8022534    30.801768 -0.014808409  -0.37582379 0.0024587287   0.35901002  -0.56730714    1.5794413 
 1294000     11.09412     1.493063    9.6010571  -0.30623049    0.9955964    1.2619864   0.81866706   -3.5502959            3     5.517053    7.7728164    7.8859258   0.89241687 0.0095742763  -0.12798208 -0.038367719    5.3374483    5.3327849    1.0342809        0.075    2.0657165          0.5   0.11492009    4.3508492    2.8115827    30.801768 -0.0027902512  -0.39186288  0.016460683    0.3972618    3.1716934    4.1055629 
 1295000    11.119304    1.4778563    9.6414479  -0.28791349   0.98545633    1.2516261    0.8086698   -3.5502959            3    5.5857146    7.8564958    7.9436789   0.95696923  0.038462179  0.035808693  0.010888551    5.4083032    5.4029593    1.0247717        0.075    2.0887577          0.5   0.11386352    4.3912222    2.8352622    30.801768 -0.0030629402  -0.31975202 0.00030828715   0.42115327   -2.9946336    4.8414694 
 1296000    11.105663    1.4697726    9.6358901  -0.29647645   0.98006597    1.2412903   0.80656896   -3.5502959            3    5.4895801    7.6579963    7.8725994    0.9381447  0.040727835  0.027156813   0.04781599    5.3126296     5.308334    1.0171026        0.075    2.0914582          0.5    0.1130114    4.4243323     2.826613    30.801768 -0.0019129373  -0.34414432 -0.015289747   0.42555541     1.596566  -0.14121005 
 1297000    11.086358    1.4812357    9.6051223  -0.29223033   0.98770978    1.2643422   0.80396058   -3.5502959            3    5.6443722    7.8861714    7.9829008    1.0640444 -0.033325636 -0.086856656  0.019419751    5.4679939    5.4597601    1.0124967        0.075    2.0595056          0.5   0.11249963     4.444459    2.8015996    30.801768  -0.02474856   -0.3932047 -0.022001777   0.36839919   0.77336502    3.1870999 
 1298000    11.061996    1.4647919    9.5972045  -0.30486571   0.97674482    1.2541241   0.79249453   -3.5502959            3    5.7101368    7.8622945    8.0897635    1.1783524 -0.010580323  -0.24186077   0.04078241     5.536274    5.5270167    1.0273393        0.075    2.0690203          0.5   0.11414882    4.3802469    2.8357703    30.801768  0.023776077  -0.37260058 -0.00064425048   0.36141737  -0.40806885    2.5218928 
 1299000    11.122694     1.510282    9.6124124  -0.28807403    1.0070783    1.3136906   0.80338289   -3.5502959            3    5.5120096    7.7200794    7.8823426   0.93360682   0.01899757 -0.060113058 -0.010534927     5.335758    5.3201919    1.0210614        0.075    2.0778489          0.5   0.11345126    4.4071788    2.8043355    30.801768  0.015142442  -0.40551762  0.052192964   0.43127855    1.2297804    2.1818267 
 1300000     11.13583     1.486764    9.6490657  -0.28628708    0.9913961    1.2678428   0.80777188   -3.5502959            3    5.5136394    7.7004051    7.9337191   0.90679412 0.0061014817   0.04033793 -0.071792237     5.336425    5.3285162    1.0124027        0.075    2.0841661          0.5   0.11248919    4.4448716    2.8079578    30.801768 -0.013755343  -0.34518065 -0.022271702   0.30571277  -0.34290847    6.6862343 
 1301000    11.073699    1.4838464    9.5898524  -0.31189606   0.98945059    1.3073882   0.77821113   -3.5502959            3    5.6496851    7.8902196     7.961763    1.0970727 -0.018639337  -0.11361033 -0.028784777    5.4789559    5.4587877    1.0417954        0.075    2.0781107          0.5   0.11575504    4.3194664    2.8061428    30.801768  0.010955166   -0.4628701  0.010211368   0.40414035  -0.59770748    2.4616757 
 1302000    11.086169    1.4697941    9.6163753  -0.29515705   0.98008031    1.2462523   0.80329031   -3.5502959            3    5.5558967    7.7901834     7.950829   0.92667785 -0.010363167 -0.084276691 -0.040803591    5.3796655     5.373926    1.0147252        0.075    2.0885453          0.5   0.11274725    4.4346981    2.8006869    30.801768 -0.023902741   -0.4048856  0.013984231   0.38498106    1.1127566    3.7734386 
 1303000    11.099361    1.5090518     9.590309  -0.28749674     1.006258    1.2811376   0.82368219   -3.5502959            3    5.4718207    7.7783682    7.8525104   0.78458346 -0.002703492   0.11568279   0.14493404    5.2911157    5.2847562    1.0351293        0.075    2.1116351          0.5   0.11501437    4.3472829    2.8348545    30.801768  0.019503631  -0.35017596  0.010166556   0.39371962   -1.0102413     3.747494 
 1304000    11.108866    1.4974377     9.611428  -0.29411228   0.99851352    1.2793369   0.81197902   -3.5502959            3     5.807984    8.0299121    8.0377162    1.3563236 -0.018565455  -0.24899938 -0.040115591    5.6298465    5.6211824    1.0142086        0.075    2.0907933          0.5   0.11268984    4.4369572    2.8183078    30.801768 0.0056590776  -0.40475945 -0.0099055618   0.41497179    -2.375692    3.3043591 
 1305000    11.087549    1.4695341    9.6180152  -0.29607242   0.97990699    1.2414436   0.80620203   -3.5502959            3    5.6733886    7.8777535    7.9319966    1.2104157 -0.031849187 -0.061556102 -0.0030580591    5.4965185      5.49212    1.0108573        0.075    2.1083693          0.5   0.11231748    4.4516667    2.7971725    30.801768 -0.0062690546  -0.42427741 -5.7069029e-05   0.38515315    2.1246331    7.5278196 
 1306000    11.123293    1.5257691    9.5975239   -0.3119749    1.0174053    1.3121019   0.82164428   -3.5502959            3    5.6150893    7.8041046    7.9611783    1.0799851 -0.016410602   -0.1967924  0.056152004    5.4348315    5.4235036    1.0296675        0.075    2.1249972          0.5    0.1144075     4.370343    2.8102874    30.801768  0.002489397  -0.34209621  -0.01467671   0.40068112   -1.1224832    5.4290112 
 1307000    11.158203    1.4975824    9.6606205  -0.29219015   0.99860999    1.2610459   0.82431346   -3.5502959            3     5.539939    7.7707365    7.9664856   0.88259502 -0.020757432  -0.02590193  0.014296328    5.3590956    5.3558083    1.0133593        0.075    2.1168836          0.5   0.11259548    4.4406757     2.802825    30.801768   0.02100118  -0.34766065 -0.012174423    0.3191844   -0.4561771    1.3120261 
 1308000    11.112842    1.4907599    9.6220825  -0.29466737   0.99406067    1.2923614   0.79589236   -3.5502959            3    5.7468012    7.9284612    8.1496008    1.1623417  0.014722691  -0.14929136 -0.0087845208     5.572193    5.5580979    1.0253994        0.075    2.1101828          0.5   0.11393326    4.3885341    2.7977661    30.801768  0.011498751  -0.41984886 0.0053748966    0.4431873   -3.8303732    2.8146413 
 1309000    11.123348    1.5091538    9.6141939  -0.28562524    1.0063259    1.2952161   0.81442542   -3.5502959            3    5.4413509     7.808998    7.8320828   0.68297206  0.016941311  -0.12093338 -0.049933131    5.2626768    5.2522308     1.036268        0.075    2.1036699          0.5   0.11514089    4.3425059    2.8125079    30.801768 0.0047824043  -0.41683285  0.024098802   0.40606413    1.6149627   -2.2649003 
 1310000    11.093452    1.4535215    9.6399306  -0.29078132   0.96922952    1.2511391   0.78196128   -3.5502959            3    5.8025094    7.9516282    8.1466078    1.3092922  0.011841401  0.069611977 -0.0089843934    5.6309574    5.6198251    1.0338062        0.075    2.0623112          0.5   0.11486736    4.3528467    2.8088676    30.801768 -0.022126984  -0.35988702 0.0018706962   0.35223297   -3.5078057    5.5615579 
 1311000    11.137743    1.5089776    9.6287655  -0.29451576    1.0062085    1.2934573   0.81540027   -3.5502959            3    5.5610275    7.7498376    7.9833619   0.94988307  0.018925881 -0.022330826  0.037065136    5.3821395    5.3721642    1.0261419        0.075    2.1219609          0.5   0.11401577    4.3853584    2.8144903    30.801768  0.002740954  -0.41705589 -0.025573572   0.35991555    -1.394959    5.7923527 
 1312000    11.083459    1.4813877    9.6020709  -0.29266796   0.98781114    1.2667226   0.80254517   -3.5502959            3    5.7454519    7.9641048    8.0595123    1.2127385 -0.0022013107 -0.073809991 -0.014538164    5.5693841    5.5604922    1.0235862        0.075    2.1259625          0.5    0.1137318    4.3963078    2.7844397    30.801768  0.030239155  -0.38871365 -0.016612156   0.39832219    1.9528591    1.2106747 
 1313000    11.062797     1.480583    9.5822142  -0.29439746   0.98727451    1.2352896   0.82257165   -3.5502959            3    5.3449828    7.6759624    7.7591185   0.59986748 -0.003892912 -0.050756657 -0.0075813604    5.1645215    5.1646128    1.0298059        0.075     2.088551          0.5   0.11442288    4.3697555    2.8107107    30.801768 -0.0020924988   -0.3595456 -0.018735852   0.39339318     1.366578    -1.343646 
 1314000    11.062251    1.4704554    9.5917959  -0.30209658   0.98052133    1.2647038   0.79174448   -3.5502959            3    5.6808381    7.9025977     8.056928    1.0829885  0.039591233  -0.12942728  0.033441973    5.5071398    5.4961732    1.0339405        0.075    2.1006778          0.5   0.11488227    4.3522815    2.7991848    30.801768  0.014913022  -0.42233484  -0.00349462   0.31779198  -0.59058383    3.8049239 
 1315000    11.059698    1.4648749    9.5948233  -0.31827313   0.97680013    1.2289757   0.80932433   -3.5502959            3     5.507573    7.7727808    7.8754176   0.87452055   0.01792558  -0.21448172    0.1038222    5.3300179    5.3281249    1.0209805        0.075    2.0747589          0.5   0.11344228    4.4075278    2.8131375    30.801768 0.0065843847  -0.30621359 -0.0029173883   0.31657979   0.74921614     3.068722 
 1316000    11.052311    1.4883706    9.5639402  -0.31978819   0.99246741     1.275587   0.80440241   -3.5502959            3    5.5855978    7.9040207    7.9465128   0.90626006  0.067274117   0.11752437 -0.023775627    5.4091226    5.3993438    1.0542478        0.075     2.070063          0.5   0.11713864    4.2684463    2.8269161    30.801768 0.0035557336  -0.39046397  0.017714966   0.39093849  -0.75156556  -0.36948672 
 1317000    11.100164    1.4846488    9.6155153  -0.28207643   0.98998566    1.2314788   0.82962452   -3.5502959            3    5.6092831    7.8857714    7.9769344   0.96514341 -0.0018942976 -0.087694362 -0.042917614    5.4272744    5.4294695    1.0313697        0.075    2.0985964          0.5   0.11459663    4.3631301    2.8294231    30.801768  -0.01264277  -0.38174207 -0.028934068   0.34675191    3.1081637   0.52685419 
 1318000    11.094625    1.4738251    9.6207995  -0.29780102   0.98276829    1.2615961   0.79755611   -3.5502959            3    5.6221574    7.8055687     8.033355    1.0275485 -0.0098251185  -0.12684366   0.11248533    5.4471842    5.4379463      1.03176        0.075    2.0696733          0.5      0.11464    4.3614793    2.8051463    30.801768  -0.01677403  -0.34392273 -0.0024619097   0.42475412    3.0304038    6.3779028 
 1319000    11.048615    1.4562411    9.5923741   -0.3038019   0.97104299    1.2302919   0.79885734   -3.5502959            3    5.7532172    7.9459637     8.095607    1.2180809 -0.025866856  0.046823207 -0.085011995    5.5779585    5.5735769    1.0242881        0.075    2.0837163          0.5   0.11380979    4.3932953    2.8133652    30.801768 -0.034041322  -0.36181568   0.01386181   0.35006527    1.1273394    4.7186441 
 1320000    11.054755    1.4523231    9.6024322  -0.29399723   0.96843043     1.247186   0.78326105   -3.5502959            3    5.6942504    7.9100836    7.9915968    1.1810707  0.011777115 -0.033965904  0.029094379    5.5224133    5.5121433     1.027348        0.075    2.0889044          0.5   0.11414977    4.3802102    2.7737117    30.801768 0.0085362149  -0.37255716 0.0011580534   0.31000113  -0.61098482    7.6543534 
 1321000    11.048465    1.4653596    9.5831051  -0.30386675   0.97712334    1.2509211    0.7952569   -3.5502959            3    5.7413698    7.9422852    8.0223978    1.2594265  0.023516133  -0.12106794 -0.023811635     5.566901    5.5587174    1.0220834        0.075    2.1160068          0.5   0.11356482     4.402772    2.8026519    30.801768  0.015223074  -0.41478495   0.02023126   0.37060027   0.27047845     6.879482 
 1322000    11.040616    1.4706594    9.5699569  -0.30800947   0.98065731    1.2551813   0.79830882   -3.5502959            3    5.5805101    7.7774099    7.9767562   0.98736427 -0.0050869963 -0.023737176  0.054864308    5.4053717    5.3972356    1.0145638        0.075    2.0640688          0.5   0.11272931    4.4354038    2.7828758    30.801768  0.014384199  -0.35601818 -0.011660857   0.38808613   -1.4408542    3.1648347 
 1323000    11.079482    1.4728952    9.6065867  -0.30470937   0.98214819    1.2442237    0.8080854   -3.5502959            3     5.489578    7.7803349    7.9009322    0.7874668  0.010105142  0.066519633 0.0096833256    5.3122947    5.3079035    1.0359644        0.075    2.0660486          0.5   0.11510716    4.3437785     2.826646    30.801768  0.020189018   -0.3909191 -0.0012122723   0.34346812    1.4670976    3.5602704 
 1324000    11.069337    1.4440996     9.625237  -0.29094976   0.96294685    1.1996713   0.80574954   -3.5502959            3    5.5939063    7.8684744    7.9441064   0.96913799 -0.0017391695   0.21891997   0.11270976    5.4171355     5.418737    1.0326006        0.075    2.0513114          0.5    0.1147334    4.3579288    2.8231813    30.801768 -0.0028656923  -0.34070139  0.013047655   0.34006697   0.45953075 -0.018204195 
 1325000    11.081465    1.4897366    9.5917284  -0.29927937   0.99337828    1.2644779   0.81331358   -3.5502959            3    5.4173177    7.7178666    7.8090554    0.7250312 -0.0064054143  -0.11006922  0.051686752    5.2388875    5.2326858    1.0498855        0.075    2.0644046          0.5   0.11665394    4.2861818    2.7817601    30.801768  0.020069424  -0.40167151 -0.027154176   0.37876388   -2.0874082    3.5645118 
 1326000    11.046571    1.4601087     9.586462  -0.30633565   0.97362196    1.2205131   0.80966212   -3.5502959            3    5.6256865    7.8177126    7.9842197    1.0751271  0.041181916  -0.13393109  0.055043168    5.4480573    5.4474741    1.0134596        0.075    2.0954694          0.5   0.11260662    4.4402363     2.790973    30.801768 -0.0097381567   -0.3627768 -0.0064428527   0.34866982    5.3212731    2.3281401 
 1327000    11.071757    1.4466446     9.625112   -0.2990977   0.96464389    1.2642592   0.76558974   -3.5502959            3    5.5332658    7.7546402    7.9432961   0.90186126 0.0042113165  -0.17191733  0.084419327    5.3653056    5.3486659    1.0439369        0.075    2.0871047          0.5   0.11599299    4.3106053     2.840791    30.801768  0.017856965  -0.39317907 -0.011140566   0.33102757  -0.10276584   0.83097127 
 1328000     11.07443    1.4885653    9.5858645   -0.3184418   0.99259724    1.3028584   0.78646805   -3.5502959            3    5.6320075    7.8245174    8.0185997    1.0529055 0.00039659305  0.029868702  0.049122265    5.4594668    5.4417715    1.0290133        0.075    2.1095014          0.5   0.11433481    4.3731213    2.8040382    30.801768  0.025042873  -0.34156776 -0.014072266   0.40718858    4.0052626     10.64496 
 1329000    11.109463     1.503936    9.6055274  -0.29829255    1.0028466    1.2929358   0.81014684   -3.5502959            3    5.6734422    7.8373084    8.0105415    1.1724766 -0.020601689 -0.015158988   0.10041581    5.4957067     5.484655    1.0376109        0.075    2.1158645          0.5    0.1152901    4.3368858    2.8261481    30.801768  -0.02386762  -0.40845153  -0.03388814   0.40795757   -3.0723094    3.5798252 
 1330000     11.14949    1.4961485    9.6533415  -0.28855097   0.99765384    1.2614833   0.82242944   -3.5502959            3    5.6068959    7.7747227    7.9810265    1.0649386   0.03368597  -0.11310121 -0.055417043    5.4264658    5.4227012    1.0244102        0.075    2.0922785          0.5   0.11382336    4.3927715    2.8000059    30.801768 -0.0082333129  -0.37370912  0.001938079   0.38530807    1.1660713    5.5498683 
 1331000    11.073252    1.4751077    9.5981442  -0.31845117   0.98362349     1.256732   0.80221816   -3.5502959            3    5.6110067    7.7795602     8.037413    1.0160469  0.033916227  -0.02072462  -0.07295232    5.4350106    5.4275058     1.045674        0.075    2.0753629          0.5     0.116186    4.3034446    2.8251925    30.801768 -0.0068478699  -0.44801667 -0.026890963   0.31493953    1.9236478    1.9078855 
 1332000    11.126612    1.5112737    9.6153381  -0.27894992    1.0077395    1.2907238    0.8197703   -3.5502959            3    5.3670002    7.6913693    7.8132208   0.59641043   0.02105394  -0.17822825  0.086672946    5.1871534     5.178536    1.0283344        0.075    2.0781582          0.5   0.11425938    4.3760082    2.8157954    30.801768  0.033077028  -0.37920011  0.027840525   0.41667933   -2.0108953    2.0639643 
 1333000    11.121244    1.5062459    9.6149985  -0.29364129     1.004387    1.2795479   0.82162332   -3.5502959            3    5.6436457    7.9362978    7.9902785    1.0043607 -0.0050151833  -0.15932751 -0.029368157    5.4633924    5.4568133    1.0311954        0.075    2.0895618          0.5   0.11457726    4.3638676    2.8213948    30.801768 -0.023983716  -0.29896634 -0.019426642    0.3013719  -0.86160201    4.0296709 
 1334000    11.104614    1.4859016    9.6187126  -0.29495883   0.99082108    1.2638854   0.80944787   -3.5502959            3    5.5101462    7.6953055    7.9403594   0.89477359   -0.0157474   0.10558161  0.097466555     5.332564    5.3256008    1.0341629        0.075    2.0967722          0.5   0.11490699    4.3513455    2.8256692    30.801768  0.029577791    -0.352469 -0.0053389727   0.37908483   -3.3917788    3.4621101 
 1335000    11.095548    1.5127207    9.5828274  -0.29928882    1.0087045    1.3061895   0.81108447   -3.5502959            3    5.7636017     7.947266    8.0476808    1.2958584 0.0086729733  -0.25608526  0.031512357    5.5856605    5.5728793    1.0377351        0.075    2.0990334          0.5    0.1153039    4.3363668    2.8069684    30.801768 -0.0043294707  -0.45696481  0.008784719   0.36688648   -1.5973564    8.1716855 
 1336000    11.040898    1.4646577    9.5762401   -0.3059147    0.9766553     1.249066   0.79571187   -3.5502959            3    5.4127861    7.7150717    7.8496594   0.67362715 0.0098810907   0.21161949  0.097673908    5.2382174    5.2304045     1.019544        0.075    2.0852524          0.5   0.11328266     4.413738     2.831419    30.801768 -0.010771492  -0.26997147 -0.0097051199   0.33493549   -1.4600954    2.2329655 
 1337000     11.09771    1.4878721    9.6098383  -0.30412836   0.99213499     1.282311   0.79937341   -3.5502959            3    5.5230478    7.8233602    7.9319204   0.81386286 -0.030554523  -0.13194244 -0.029127036    5.3476759     5.335812    1.0372706        0.075    2.0928471          0.5   0.11525229    4.3383085    2.8006693    30.801768  0.015468746  -0.39257619 -0.020646188   0.34437707     1.669375   0.42939534 
 1338000    11.096127     1.484783    9.6113445  -0.30347775   0.99007512    1.2638239   0.80824608   -3.5502959            3    5.3964717    7.6761738    7.7561959   0.75704541  0.033793713  -0.17825101  -0.14130933    5.2191532    5.2119353     1.012353        0.075    2.0751721          0.5   0.11248367    4.4450899     2.782692    30.801768 0.0015907145   -0.3126461 -0.0078645195   0.36382412    1.6152081   -1.6643295 
 1339000    11.054499    1.4611131     9.593386  -0.31110161   0.97429173    1.2310327   0.80377649   -3.5502959            3    5.6921253    7.8617459    8.0677004    1.1469297 0.0009682882  -0.11120465   -0.1063087    5.5157874    5.5123769    1.0329818        0.075    2.0685943          0.5   0.11477576    4.3563206      2.83225    30.801768 0.0059410483  -0.41346817  0.017704506   0.30170243    1.5607473    1.7545724 
 1340000    11.069516    1.4838838    9.5856324  -0.28885412   0.98947553    1.2687427   0.80397342   -3.5502959            3    5.4496692    7.7825279    7.8509661   0.71551376  0.016607938  0.026422786 -0.0039844878    5.2732881    5.2644146    1.0392487        0.075    2.0490604          0.5   0.11547208    4.3300511     2.827045    30.801768  0.003700359  -0.39120493 -0.032403025   0.35152157   0.46987768    2.6804176 
 1341000    11.042175    1.4609274    9.5812476   -0.3029695   0.97416792    1.2390365   0.79824324   -3.5502959            3    5.5337301    7.8193962      7.92809    0.8537041 -0.014305064  -0.04995515 -0.031178966    5.3586061     5.352813    1.0319296        0.075    2.0707573          0.5   0.11465884    4.3607627    2.7821351    30.801768  0.033406289  -0.28523021 -0.0015939925   0.41208118    2.5841307    6.0276852 
 1342000    11.070154    1.4860754    9.5840786  -0.30527642   0.99093694    1.2746555   0.80247275   -3.5502959            3    5.7285706     7.952189     8.049411    1.1841118 0.0054623003  -0.21129822 -0.028359364    5.5525187    5.5424526     1.033255        0.075    2.0991748          0.5   0.11480611    4.3551689     2.804533    30.801768 0.0050015131  -0.38094712   0.00798451   0.37163281   -1.1070954    2.4090196 
 1343000    11.064623    1.4791255    9.5854976  -0.31566834   0.98630268    1.2580892   0.80577822   -3.5502959            3    5.3853432    7.6884138    7.8429671   0.62464889  0.012166406  -0.17580442  0.033513206    5.2085662    5.2016442    1.0333485        0.075    2.0977195          0.5    0.1148165    4.3547748    2.8243973    30.801768 -0.0036230599   -0.3170987 -0.018331323   0.29801337    1.1367613    0.5617358 
 1344000    11.078851     1.468702    9.6101487  -0.28336757   0.97935211     1.254985   0.79626508   -3.5502959            3    5.6586219    7.9044069    8.0047255    1.0667334 -0.031225477  -0.10038941   0.10740309    5.4839319    5.4753761     1.036451        0.075    2.0701036          0.5   0.11516123    4.3417391    2.8268776    30.801768  0.027970378  -0.42647302 0.0078191941   0.36951756   -1.2857641    4.6198774 
 1345000    11.069077    1.4571087    9.6119683  -0.28840779   0.97162154    1.2352447   0.79652479   -3.5502959            3    5.5652727     7.821235    7.9407565   0.93382645  0.028396106  0.098445493   0.01008738    5.3905257    5.3849092    1.0134093        0.075    2.0698452          0.5   0.11260104    4.4404564    2.7875471    30.801768 -0.012585541  -0.31056904  0.016928688   0.36054791    1.8749257    4.1637767 
 1346000    11.122153    1.5108944    9.6112589  -0.31068842    1.0074866    1.3170809   0.80180675   -3.5502959            3    5.5522709     7.742398    7.9358556   0.97855914 0.0021478791  -0.23482242  0.020631127    5.3763651    5.3599582     1.028553        0.075    2.0576159          0.5   0.11428367    4.3750783    2.7939923    30.801768 -0.011157553  -0.31073911  0.017477674   0.37648324    1.1307861    4.1388993 
 1347000    11.139627    1.5011527    9.6384743  -0.27633885    1.0009907    1.2708552   0.82175093   -3.5502959            3    5.6948199    7.9341538    8.0056268    1.1446792   0.03184761 -0.067004373  0.020148539    5.5145387    5.5092568    1.0371563        0.075    2.0315745          0.5   0.11523959    4.3387868     2.821691    30.801768 -0.025146921  -0.34675231 -0.0054779238   0.36851097    2.7689666    3.1211347 
 1348000    11.111549    1.5086871    9.6028621  -0.29662082    1.0060148     1.280211   0.82389384   -3.5502959            3    5.4653764    7.6470229    7.8773788    0.8717274 -0.0042151402   0.23809623  0.031981358     5.284625    5.2784472    1.0294967        0.075    2.0333868          0.5   0.11438852    4.3710679    2.7926587    30.801768  0.022664585  -0.43683662 0.00077349983   0.30906627  -0.81869916    3.1796804 
 1349000    11.099687    1.4819333     9.617754  -0.28360538   0.98817495    1.2647239    0.8044815   -3.5502959            3    5.4096112     7.676454    7.8418365   0.71054293 -0.010038474   -0.2805435 -0.049534094    5.2331186    5.2249433    1.0272499        0.075    2.0720659          0.5   0.11413888    4.3806284    2.8104069    30.801768  0.015836677  -0.29929995 -0.015013133   0.36553274  0.095861876  -0.74977045 
 1350000    11.068269    1.4474718    9.6207972  -0.29369999   0.96519548    1.2576845   0.77088453   -3.5502959            3     5.712905    7.8576458    8.0836277    1.1974416 -0.020640279 -0.091493408  0.078042733    5.5437832    5.5292651     1.041495        0.075    2.0621013          0.5   0.11572167     4.320712    2.8252709    30.801768 -0.018940512  -0.32586674 0.0082546957   0.34294929     0.728511    4.4623548 
 1351000    11.080335    1.4781988    9.6021365  -0.29755814   0.98568475     1.258424   0.80452592   -3.5502959            3    5.6274045    7.8720357    8.0233363    0.9868414  -0.01918618   0.25089763 -0.021635861    5.4509021    5.4436565    1.0384406        0.075    2.0786563          0.5   0.11538229    4.3334207    2.8037779    30.801768 -0.026833916  -0.33481396 0.0058969411   0.39017339 0.0058685163   -1.5851597 
 1352000    11.078866    1.4704226     9.608443  -0.28822764   0.98049941    1.2736626   0.78574541   -3.5502959            3    5.4699789    7.7503245    7.8796023   0.78000985 0.0050922272 -0.00096998342 -0.034643823    5.2975968    5.2840059    1.0163131        0.075    2.0793533          0.5   0.11292367    4.4277695     2.778818    30.801768  0.030208138  -0.29116437 -0.012666994   0.36826597  -0.70008529   -1.8653576 
 1353000    11.137079    1.5042735    9.6328059  -0.29612931    1.0030717    1.3201141    0.7924331   -3.5502959            3     5.605117    7.7867704    7.9735679    1.0550127 0.0094208475  -0.11209958 -0.081401079    5.4312677    5.4123614    1.0388906        0.075    2.1188054          0.5   0.11543229    4.3315435    2.8023446    30.801768  0.009315164  -0.37999013  0.022799083   0.40167548   0.29085321    6.1581374 
 1354000    11.105876    1.4880049    9.6178713  -0.30007861   0.99222359    1.2855912   0.79733789   -3.5502959            3    5.4549511    7.7456551    7.8122414    0.8069567  0.016441974  0.047332319  0.007948179    5.2800257    5.2672363    1.0185861        0.075    2.1038525          0.5   0.11317624    4.4178885    2.8209526    30.801768 -0.016601713  -0.35744544  0.015316391    0.3222873   -2.1300991    3.2306397 
 1355000     11.09941    1.4876884    9.6117219  -0.28563797   0.99201252    1.3037702   0.78488706   -3.5502959            3    5.6628074    7.9325147    7.9642692    1.0916382  0.014104818  -0.21897429  0.017353907    5.4906136    5.4724382    1.0240058        0.075    2.0962211          0.5   0.11377842    4.3945063    2.8011186    30.801768 -0.0034723268  -0.41540736  0.023765357     0.381087    2.6674415   0.89068147 
 1356000    11.148058    1.5371317    9.6109267  -0.29880962     1.024982    1.3035284   0.83997277   -3.5502959            3    5.5548085     7.778059    7.9589678   0.92739857   0.02514668 0.0092232111 -0.039258981    5.3705296    5.3644746    1.0216424        0.075    2.1158228          0.5   0.11351583    4.4046722     2.818465    30.801768 0.0030693919  -0.31164519  -0.01253414    0.3330384  -0.12595171  -0.53665187 
 1357000     11.11843    1.5082745    9.6101551  -0.30388787    1.0057397    1.3031548   0.80816509   -3.5502959            3    5.8202753    7.9657817    8.1331362    1.3619079  0.026936402  -0.15511725  0.072961487    5.6429746     5.629996    1.0190485        0.075    2.0807186          0.5   0.11322761     4.415884    2.7782756    30.801768 -0.0078669099  -0.31906762 -0.019918769   0.33701669  -0.49852681    4.9149745 
 1358000    11.130486    1.4911916    9.6392941  -0.28650114   0.99434851    1.2889778   0.79862384   -3.5502959            3    5.4918376     7.782837    7.8846209   0.80805492  0.052184157   0.09310924 -0.085765998    5.3166301    5.3036283    1.0167335        0.075    2.1012758          0.5   0.11297039    4.4259387    2.7749388    30.801768 -0.0088180917  -0.29341004 0.0029715963   0.36918458   -1.2733863    3.7226089 
 1359000    11.111562    1.5005553    9.6110065  -0.28947672    1.0005924    1.3042556   0.79885746   -3.5502959            3    5.6690715    7.8710368    8.0537253    1.0824524 -0.021374186  0.098946225 -0.054268097    5.4938127    5.4786314     1.027445        0.075    2.0806011          0.5   0.11416056    4.3797965    2.7987786    30.801768  0.016668809  -0.40747091 -0.044780526   0.42343528   -2.2664818    2.3528869 
 1360000     11.13483     1.514079    9.6207506  -0.29534556    1.0096102    1.3003223   0.81649828   -3.5502959            3     5.810943    8.0329522    8.1109441    1.2889327  0.016164092  -0.25622217 0.0044241085    5.6318141    5.6210773     1.015042        0.075    2.1110211          0.5   0.11278244    4.4333141    2.8239484    30.801768 -0.00066000733  -0.33772147 0.0011046595   0.40959903    2.9572782    2.8170492 
 1361000    11.098665    1.4833852    9.6152797  -0.29607814   0.98914309    1.2714958   0.80158727   -3.5502959            3    5.4321971    7.6875376    7.8461756   0.76287788 -0.018591257   0.16502998 -0.073969416    5.2563394    5.2465404     1.021502        0.075    2.0739494          0.5   0.11350022    4.4052778    2.8079424    30.801768 -0.0019308341    -0.384427 -0.0054697241   0.34496373   -1.8473864  -0.96060463 
 1362000    11.102077    1.4680115    9.6340655  -0.28276213   0.97889168    1.2716711   0.78439251   -3.5502959            3    5.6471822     7.885238    8.0036303    1.0526783 -0.027873912  -0.39771056   0.04365531    5.4750969       5.4615    1.0300222        0.075    2.0504399          0.5   0.11444691    4.3688381    2.8026884    30.801768  0.014275171   -0.3899384 -0.016483722    0.3810412    3.0576809    1.2472755 
 1363000    11.075408    1.4770275    9.5983805  -0.28442438   0.98490368    1.2669064   0.79757925   -3.5502959            3    5.4856607    7.8102989    7.8629167    0.7837663 -0.008982359   0.29173399  0.028479742    5.3106823    5.3006741    1.0341001        0.075    2.0483629          0.5   0.11490001    4.3516098    2.8471324    30.801768  0.026723382  -0.32102656 -0.026335067   0.38072692  -0.93768694   -0.3180006 
 1364000    11.138736    1.4900188    9.6487172  -0.28788053   0.99356645     1.264664   0.81350323   -3.5502959            3    5.7237323    7.9627053    8.0635192    1.1449725 -0.032959637  -0.36068388 -0.010679804    5.5452605    5.5390732    1.0215718        0.075    2.0812272          0.5   0.11350798    4.4049766    2.7814267    30.801768 -0.0069913047  -0.38314956 0.0009811286   0.33737517    1.7284656    8.2149308 
 1365000    11.101911    1.5003895    9.6015216  -0.28709642    1.0004818    1.2856299   0.81106973   -3.5502959            3    5.5762122    7.8288932    8.0393321   0.86041124 0.0071219623  0.035061163 0.00092247057    5.3982742    5.3884918    1.0330934        0.075    2.0864873          0.5   0.11478816    4.3558501    2.8180619    30.801768 0.0041982757  -0.39049995 -0.0051287048    0.3980943    1.5484941    3.5346432 
 1366000    11.090116    1.4977992     9.592317  -0.28224071   0.99875458    1.2897096   0.80547695   -3.5502959            3    5.6035334    7.8805496    7.9452091   0.98484136 -0.015735785  -0.12804633  0.055674747    5.4268224    5.4152172    1.0067684        0.075    2.0910091          0.5   0.11186315    4.4697471    2.7757375    30.801768 -0.0046016846  -0.37922275 -0.050064201   0.46455474   0.49544371    2.0660828 
 1367000    11.097863    1.4754649    9.6223981   -0.2846838   0.98386168    1.2627186   0.79863056   -3.5502959            3    5.4242943    7.7605621    7.7688238   0.74349686 0.0091688473  -0.10269401  0.029788124    5.2490853    5.2399192    1.0152261        0.075    2.0853516          0.5   0.11280291    4.4325099    2.8197103    30.801768   0.01564254  -0.35774157 0.0036224915   0.40607004  -0.21739147    1.6174793 
 1368000    11.127148    1.5071906    9.6199579  -0.29056139    1.0050169     1.312362   0.80083307   -3.5502959            3    5.6715346    7.9512221    7.9951665    1.0682151  0.033259016 -0.043870083  -0.05860745    5.4958424    5.4799109    1.0342555        0.075    2.0874548          0.5   0.11491728    4.3509559    2.8041602    30.801768  0.028652649  -0.40448146 -0.023740066   0.31510223   0.31383588    4.3669828 
 1369000    11.119065     1.474266    9.6447986   -0.2832248   0.98306225    1.2742886   0.78959824   -3.5502959            3    5.5526117    7.7856285    7.8803419   0.99186487  0.030199383  -0.10749711  -0.13951047    5.3793843    5.3665473    1.0165089        0.075    2.0776561          0.5   0.11294543    4.4269167    2.8251798    30.801768  0.040253385  -0.33562689 -0.028058726   0.41183984    0.2778056    2.8113019 
 1370000    11.151466    1.4986074     9.652859  -0.28787885   0.99929344    1.3004218   0.79924515   -3.5502959            3    5.6982587    7.9042216    7.9950813    1.1954732  0.012861355  0.046399925 -0.025760358    5.5229149    5.5083784    1.0242721        0.075    2.1115777          0.5   0.11380801    4.3933639    2.7967534    30.801768  0.013916117  -0.39162632 -0.024174759   0.39965195   0.39185089    4.4935871 
 1371000     11.11674    1.5137105    9.6030294  -0.30181671    1.0093644    1.3182596   0.80415064   -3.5502959            3    5.6106616    7.8976282    7.9471724   0.98718429 0.0069434239  -0.26636376  0.017567812    5.4342416    5.4181768    1.0430874        0.075    2.0753145          0.5    0.1158986    4.3141159    2.8009898    30.801768 0.0091322282   -0.4134989 -0.016492292   0.37079509   0.37623875  -0.16952796 
 1372000    11.098078    1.4789541    9.6191237  -0.28699995   0.98618837    1.2905329   0.78399467   -3.5502959            3    5.4925508    7.8019796    7.9034599   0.77221292  0.014716245  -0.11300678   0.08878894    5.3205528    5.3041145    1.0390091        0.075    2.0958167          0.5   0.11544546    4.3310496    2.8320263    30.801768  0.020024322  -0.34427011 -0.017800147   0.32289725   0.70271373   0.75974807 
 1373000    11.083864    1.4773212    9.6065425  -0.28724301   0.98509953    1.2792257   0.78970633   -3.5502959            3     5.613846    7.8734876    7.9737886   0.99426178  0.026335685  -0.20404184 -0.038738317    5.4405949    5.4270607    1.0142983        0.075    2.0772434          0.5   0.11269981    4.4365645    2.8008112    30.801768 -0.020967318  -0.40072147 -0.005300804   0.32238654    1.7940991    2.0523767 
 1374000    11.116921    1.5151105    9.6018104  -0.29478401     1.010298    1.3274576     0.799584   -3.5502959            3    5.6159379    7.9136783    7.9198459    1.0142894 -0.027308833  -0.19651531 -0.033649965    5.4405197      5.42211    1.0324136        0.075    2.0942799          0.5   0.11471262    4.3587182    2.8007131    30.801768 -0.018465959  -0.35708968  0.012483662    0.3255266      1.96784    3.2861156 
 1375000    11.061683    1.4612791    9.6004036  -0.28914005   0.97440241    1.2559573   0.78737213   -3.5502959            3     5.577459    7.7709855    7.9546404    1.0067512 0.0062546968 0.0035954375 -0.0055710658      5.40472    5.3940713    1.0286586        0.075    2.1102499          0.5    0.1142954    4.3746292    2.8074345    30.801768 0.0049440924  -0.43453001 -0.028601399   0.34490951   0.38060011  -0.83541155 
 1376000    11.136051    1.5227305    9.6133202  -0.28794052    1.0153791    1.3321305   0.80493869   -3.5502959            3    5.6308455    7.8685922    7.9767126    1.0472318 -0.021450957  -0.16231118 -0.068426912    5.4542527    5.4363354    1.0290996        0.075    2.0993311          0.5    0.1143444    4.3727546     2.801588    30.801768  0.019552939  -0.38385842 0.0053654109   0.38805585    1.5862534    5.9168991 
 1377000    11.103284    1.5103676    9.5929165   -0.3067253    1.0071353    1.2873186   0.82103003   -3.5502959            3    5.5696257    7.7955022    7.9193192   0.99405578 -0.0019966319 -0.015496121   0.06072497    5.3895026    5.3816588    1.0139368        0.075    2.0977753          0.5   0.11265964    4.4381466    2.8117929    30.801768  0.015077593  -0.34258094 0.0064655657   0.31062388    1.6283892   0.76998241 
 1378000    11.113668    1.5003657    9.6133028   -0.2973081    1.0004659    1.2942859   0.80528215   -3.5502959            3    5.3478634    7.6554182    7.7839134   0.60425862  0.015609051 -0.026525643  0.025814512    5.1711952    5.1588791    1.0355756        0.075    2.0719429          0.5   0.11506395    4.3454096    2.8239476    30.801768 -0.036062993  -0.35277448 -0.016946922   0.42179298  -0.10782536    2.8267434 
 1379000    11.110946    1.4986499    9.6122956  -0.29601686   0.99932181     1.305543   0.79588394   -3.5502959            3    5.5371569    7.8480829    7.9105556    0.8528321 -0.013736715  0.035259494  0.048519631    5.3625505    5.3465289    1.0180465        0.075    2.0766498          0.5   0.11311627    4.4202304    2.8040228    30.801768 -0.018382247  -0.35402425 0.0038086443   0.32173839   -1.2411648  -0.73000861 
 1380000    11.151587    1.5042577    9.6473292  -0.29026913    1.0030612    1.2977121   0.80732533   -3.5502959            3    5.5497076    7.8179739    7.8987906   0.93235824 -0.056367264  -0.22437894 -0.069342405    5.3725911     5.360223    1.0356512        0.075    2.0746599          0.5   0.11507236    4.3450922    2.8058497    30.801768 -0.025166829  -0.40362721 -0.011728966   0.40478352     3.074678    3.9231103 
 1381000    11.136319    1.5050755    9.6312431  -0.29345406    1.0036065     1.283548   0.81766078   -3.5502959            3     5.562566    7.7911512    7.9431683   0.95337843 0.0011196936 -0.032593006 -0.074456063     5.383182    5.3751496    1.0128898        0.075    2.1092506          0.5   0.11254331    4.4427342    2.7885527    30.801768  0.021663171  -0.41324287 -0.015627749   0.37468352  -0.80629005    5.3728499 
 1382000     11.13332    1.4997276    9.6335927  -0.30464134    1.0000404    1.2971215   0.80268608   -3.5502959            3    5.4998554    7.7132106    7.9568413   0.82951445 -0.031196453  -0.30891638 -0.021120274    5.3237567    5.3104571     1.042984        0.075    2.1212581          0.5   0.11588711    4.3145436    2.8048182    30.801768  0.026102044  -0.37878275  -0.02376336   0.38040918   0.97501829    1.9570306 
 1383000    11.116444    1.4616152    9.6548291  -0.28174855   0.97462653    1.2584628   0.78607798   -3.5502959            3     5.441455    7.7422773     7.821557   0.76053052 -0.00029072316 -0.095395623 -0.045880624    5.2689999    5.2577013    1.0059141        0.075    2.1162548          0.5   0.11176824    4.4735428     2.797754    30.801768 -0.0057226412  -0.36080673 -0.0092702808   0.28651058  -0.43453187   -1.2095679 
 1384000    11.126533    1.4929909     9.633542  -0.29103851   0.99554831    1.2785467   0.80756512   -3.5502959            3    5.6431257    7.8309911    8.0078911    1.0904949 -0.0065117821 -0.051007865 0.0099781023    5.4659566    5.4564395    1.0229117        0.075    2.0887259          0.5   0.11365686    4.3992065    2.7984517    30.801768 -0.029966113  -0.45732401 -0.0062170585   0.38587117  -0.93731011     5.039406 
 1385000    11.147191    1.5101149    9.6370759  -0.28867517    1.0069669    1.2916007   0.81789938   -3.5502959            3    5.5262674    7.8193242    7.8579517   0.90152633 -0.014548006 -0.0093734861 0.0041661069    5.3468311    5.3376752   0.99670714        0.075    2.1182869          0.5   0.11074524    4.5148668    2.7906382    30.801768   0.02587626  -0.36462718 -0.023236179   0.32194239  -0.67852369    3.4926436 
 1386000    11.160078    1.5240814    9.6359969  -0.30610114    1.0162799    1.3151166   0.81776311   -3.5502959            3    5.7491367    7.9236894    8.0547855    1.2689352 -0.017120445  -0.16028335  0.035115145    5.5697303    5.5571108    1.0153959        0.075    2.0744967          0.5   0.11282177     4.431769    2.7950655    30.801768  0.022410379  -0.42321671 -0.0072981169   0.34241309   0.90005457  -0.42174706 
 1387000    11.123233    1.5084508    9.6147826  -0.28534646    1.0058572    1.3173145    0.7989368   -3.5502959            3    5.6884585    7.9193482    7.9979827    1.1480448  0.014083617 -0.050493883 -0.011634673    5.5131824    5.4961117    1.0218243        0.075    2.0449706          0.5   0.11353604    4.4038881    2.8412536    30.801768 -0.0044206065  -0.39905697  0.014652498     0.368512     0.338399    4.3996885 
 1388000    11.180928    1.5149145     9.666013  -0.27676556    1.0101673    1.3072141   0.81283944   -3.5502959            3    5.5253121    7.7783927    7.9020411   0.89550249  0.039173167 -0.051557419  0.019375559    5.3469859    5.3344401    1.0242625        0.075    2.0359866          0.5   0.11380695    4.3934048    2.7975633    30.801768 -0.0036176436  -0.39363195 0.00035408411   0.35703052    3.1688286    6.2101451 
 1389000    11.175521     1.533362     9.642159  -0.29264591    1.0224683    1.3172797   0.82663287   -3.5502959            3    5.5509108    7.7446699    7.9295439   0.97851851 0.0027621167  0.015909425 -0.020488483    5.3695585     5.358569    1.0141424        0.075     2.101321          0.5   0.11268248    4.4372469    2.8013915    30.801768  0.036069103  -0.32495325 -0.0066559588   0.33090806  -0.84300709    1.2766876 
 1390000    11.229374    1.5329914    9.6963828  -0.28397681    1.0222212    1.3152433   0.82757654   -3.5502959            3    5.5565604    7.7645843    7.9441648   0.96093204  0.032163125 -0.016823213 -0.034482836    5.3750011     5.364516    1.0105481        0.075    2.0750625          0.5   0.11228312    4.4530291    2.7920431    30.801768 -0.0046407354  -0.40794137 -0.018830409    0.3479443   -1.6344222    1.2190344 
 1391000    11.198114    1.5539596     9.644154  -0.28449156    1.0362031    1.3477072   0.82926278   -3.5502959            3    5.6101079     7.849376     7.954579    1.0263688   0.02515214 -0.062749722 -0.012477268    5.4281786    5.4133233    1.0148017        0.075    2.0958416          0.5   0.11275575    4.4343637    2.7907868    30.801768 0.0033614293  -0.32440732 -0.0056910823   0.39186516    2.5327364    7.6159235 
 1392000    11.160619    1.5029538    9.6576652  -0.28971813    1.0021917    1.3025867   0.80263254   -3.5502959            3    5.6127686     7.776014    7.9715352    1.0907567 -0.027843537 -0.092461998  0.030832922    5.4366817    5.4225723    1.0132277        0.075    2.0339177          0.5   0.11258086    4.4412523    2.8243975    30.801768  0.017716635  -0.36139093  0.011439022   0.29467544   -2.8166503     5.246432 
 1393000    11.129517      1.49955    9.6299674   -0.2799129     0.999922    1.2983422   0.80167635   -3.5502959            3    5.5358004    7.7803826    7.9195205   0.90749811 -0.0090169861  0.071192326 -0.033968318    5.3599233    5.3462238    1.0118946        0.075    2.0384188          0.5   0.11243274    4.4471034    2.8043334    30.801768  0.015137934  -0.26136726 -0.020175855   0.40434895  -0.41269884    -0.422121 
 1394000    11.116357    1.4912003     9.625157  -0.28386338   0.99435429    1.2941777   0.79517263   -3.5502959            3    5.6434179    7.8730995    7.9852494    1.0719049  0.014280714  0.057520739 -0.079039654    5.4689676    5.4544494    1.0159537        0.075    2.0221844          0.5   0.11288375    4.4293356    2.8177997    30.801768 -0.032696798   -0.3856707  0.023446006   0.38497821   0.81531553     8.660305 
 1395000    11.133167    1.4889836    9.6441835   -0.2913189    0.9928762    1.3066148   0.78443265   -3.5502959            3    5.3321311    7.6889797    7.6949521   0.61246143 -0.014234617  0.073247875 -0.019251151    5.1600369    5.1413466    1.0276867        0.075    2.0338984          0.5   0.11418741    4.3787663    2.7967198    30.801768 0.0022954937  -0.34918887 -0.044726586   0.36407099   0.29685275   -3.5581201 
 1396000    11.131804    1.4741864     9.657618   -0.2709804    0.9830092    1.2566551   0.80124597   -3.5502959            3    5.7865943    7.9601136    8.0987786    1.3008906 -0.023826929  -0.26290193 -0.013209223    5.6108115    5.6031046    1.0051944        0.075    2.0281924          0.5   0.11168826    4.4767461    2.8003505    30.801768 0.0080687608  -0.32043844 0.0062765226   0.45144793    2.6358604    2.4665618 
 1397000    11.106529    1.4949919    9.6115374  -0.30218934   0.99688262    1.2931146   0.80009225   -3.5502959            3    5.5253945    7.7480148    7.9554889   0.87267994 0.0085465681   0.14708314  0.048519733    5.3498649    5.3365812    1.0262235        0.075     2.100163          0.5   0.11402484    4.3850096    2.7601712    30.801768 -0.019045787  -0.35571777 0.0092907695   0.41282183   0.77114482    3.5722891 
 1398000     11.10342    1.4857199    9.6177004   -0.2929501   0.99069992    1.2813975   0.79759068   -3.5502959            3     5.543835    7.7860464    7.8562635   0.98919495  0.025565053  -0.18965388 -0.043581626    5.3688541    5.3567325   0.99958947        0.075     2.091678          0.5    0.1110655    4.5018482    2.7879138    30.801768 0.0037183727   -0.3252262 -0.013896751   0.34271721    2.5046016     5.344104 
 1399000    11.136229    1.5312715     9.604958  -0.29396976    1.0210744    1.3296245   0.81609444   -3.5502959            3    5.5196903    7.7437622    7.9141659   0.90114269 -0.0071010787  0.015589543 -0.094547713    5.3406499     5.325546     1.043777        0.075    2.0898104          0.5   0.11597522    4.3112657    2.8342654    30.801768 -0.00096935748  -0.32182132 0.0062410463   0.43574725   -1.6863514   0.73410964 
 1400000    11.104844    1.4970938    9.6077503  -0.29680233    0.9982842    1.2971658   0.79973084   -3.5502959            3    5.5429362    7.7489313    7.9901634   0.88971393 -0.0046365696  -0.14505706 -0.053853295    5.3674858    5.3535314    1.0101145        0.075    2.1180357          0.5   0.11223494    4.4549405    2.8171726    30.801768  0.031440184  -0.39832734 -0.0081888995   0.28890126   -1.5172751      2.68907 
 1401000     11.16903    1.5085128    9.6605174  -0.29340989    1.0058985    1.3125555   0.80217302   -3.5502959            3    5.5614846    7.7657866    7.9187158   0.99995146  0.011092667  0.017244239 -0.041343487    5.3854985    5.3698327    1.0185111        0.075    2.0806034          0.5    0.1131679     4.418214    2.7672485    30.801768 0.0082030086  -0.38439399 -0.022801977    0.4133947    0.5862704    2.1497562 
 1402000     11.12017    1.4880943    9.6320755  -0.28432625   0.99228316    1.2796116   0.80141688   -3.5502959            3    5.4357068    7.7037058    7.8244108   0.77900374 -0.0052163005  -0.18426104   0.02767874    5.2598865    5.2488651    1.0050203        0.075    2.0933292          0.5   0.11166892    4.4775216    2.7769851    30.801768 -0.0042176548  -0.32847321 -0.016734549   0.40658056    1.1262637    4.4541605 
 1403000    11.103027    1.4858852    9.6171417    -0.291789    0.9908101    1.2666996   0.80755655   -3.5502959            3    5.6140763    7.8198314    8.0307231   0.99167434 -0.0064543244  0.061835268  0.020854647    5.4369091      5.42912    1.0264498        0.075    2.1251613          0.5   0.11404998     4.384043    2.7978486    30.801768 -0.008055198  -0.44518912 -0.043589885   0.30961793    1.4355034    5.5656157 
 1404000    11.115066    1.5123492    9.6027164  -0.29203311    1.0084567    1.3103353   0.80791243   -3.5502959            3    5.7590534    7.9240281    8.0706077    1.2825243 -0.033610894 -0.045370218  0.069504632    5.5818081    5.5677256     1.013636        0.075    2.1086538          0.5   0.11262622    4.4394636    2.7846289    30.801768 0.0070829105  -0.36091524 -0.012984368   0.34258903   -1.2013428    5.3038077 
 1405000    11.090605    1.4793577    9.6112477  -0.30748538   0.98645746    1.2770049   0.79344657   -3.5502959            3    5.5726557    7.8170378    7.9278147   0.97311444 -0.038691026   0.03948782 -0.017911167     5.398584    5.3861946    1.0262378        0.075    2.0606256          0.5   0.11402642    4.3849488     2.806537    30.801768 0.0064192202  -0.34232598 -0.035233641   0.33484676   0.80435845    6.0611296 
 1406000    11.120055    1.4856746    9.6343802  -0.28996872   0.99066971    1.2839688   0.79582905   -3.5502959            3    5.4894054    7.7434405    7.8895488   0.83522696 -0.020656959  -0.22964601 -0.0030129041    5.3148111    5.3019276    1.0201317        0.075    2.0674036          0.5   0.11334797    4.4111951    2.7936766    30.801768 -0.028283984  -0.43274653 0.0073280929   0.38329123   -1.1219238   -4.3090706 
 1407000    11.110516    1.4969927    9.6135237  -0.28431336   0.99821678    1.2751145   0.81429491   -3.5502959            3    5.6190868    7.8873098    7.9490162    1.0209345 0.0023523642 -0.083723862  0.069356586    5.4404413    5.4329018     1.032049        0.075    2.0522148          0.5   0.11467212    4.3602579    2.8312604    30.801768 -0.020955217  -0.33540589  0.012711178   0.33748358    3.0412647    2.7690569 
 1408000      11.0925    1.4785257    9.6139746  -0.27736089   0.98590267     1.276251   0.79302413   -3.5502959            3    5.5019459    7.7847398    7.9222237    0.7988741 0.0080190803  -0.15916136 -0.047289487    5.3279669    5.3155949    1.0202886        0.075    2.0877515          0.5   0.11336539     4.410517     2.811916    30.801768 -0.00025126777  -0.32940675 -0.026813135    0.3360967    2.6365982    4.1888858 
 1409000    11.105105    1.4703147    9.6347907   -0.2753643   0.98042751    1.2800377   0.78138261   -3.5502959            3    5.7582076    7.9658594    8.0643014    1.2444621 -0.024649515 -0.083008588  -0.09636919    5.5867826    5.5713037    1.0242428        0.075    2.0827861          0.5   0.11380475    4.3934896    2.8331495    30.801768 -0.0035167689  -0.41454305 0.0018454071   0.36101367   0.11041867    8.2033928 
 1410000    11.150398    1.5238262    9.6265714  -0.29993967    1.0161097    1.3209103   0.81362355   -3.5502959            3    5.6992212    7.8803516    8.0093064    1.2080055 0.0048394145 -0.085706857   0.03932001     5.520723    5.5063493    1.0214225        0.075    2.1022352          0.5   0.11349139    4.4056204    2.7934522    30.801768 -0.007190921  -0.30921847 0.0057598555   0.42112398  -0.54761992    3.9375793 
 1411000    11.134321    1.5062361    9.6280847  -0.27562892    1.0043804    1.2959961   0.81066514   -3.5502959            3    5.5641915     7.863618    7.8765532   0.95240335  0.022123849  0.037151391 -0.011214701    5.3863423    5.3749575     1.028986        0.075     2.057979          0.5   0.11433178    4.3732374    2.8084864    30.801768 -0.018713659  -0.41853571 0.0022239924   0.34287542    1.3139934    4.9067159 
 1412000    11.087987    1.5033587    9.5846286  -0.29040454    1.0024617    1.2763763   0.82052684   -3.5502959            3    5.3627195    7.7029827    7.8357237   0.54945228 -0.018852827  -0.19832626 0.0020164643    5.1827068    5.1763503    1.0288247        0.075    2.0834245          0.5   0.11431385    4.3739232    2.8094345    30.801768 -0.0046168138  -0.37986696 -0.0087836805   0.30227647   -1.1585809     -1.60113 
 1413000    11.127754    1.5083098    9.6194441  -0.28914197    1.0057632    1.2791565   0.82417652   -3.5502959            3    5.7067421    7.9021961    8.0217248    1.1963054 -0.015627537  0.027564999 -0.024212132    5.5259287    5.5199669    1.0228027        0.075    2.0714932          0.5   0.11364474    4.3996757    2.8147486    30.801768 0.0084815891  -0.33486572  0.014693067   0.38178349  0.018532519     3.493941 
 1414000    11.115173    1.4885316    9.6266416  -0.29212629   0.99257479    1.2675127    0.8099552   -3.5502959            3    5.3516549    7.6063308      7.79576   0.65287401 -0.024453489  -0.22101206   0.01640139    5.1739615    5.1665799    1.0394052        0.075    2.1200475          0.5   0.11548946    4.3293994    2.8153063    30.801768  -0.01791461  -0.30509341 -0.010505404   0.38818814   -1.5381269   -5.7850538 
 1415000    11.143224    1.4894287    9.6537949  -0.29358157   0.99317296    1.2664622   0.81165085   -3.5502959            3    5.5429765    7.7417103    7.8713901    1.0158292 0.0069966494  -0.25818227 -0.032450122    5.3649111    5.3580549    1.0355505        0.075     2.113873          0.5   0.11506117    4.3455146    2.8022222    30.801768 0.0023415097  -0.38584909  0.027122736   0.36745568    1.0984233   -1.1638661 
 1416000    11.089186    1.4768109    9.6123752  -0.30609315   0.98475922    1.2587456   0.80277007   -3.5502959            3    5.7235883     7.883722    8.0532202    1.2338227 -0.0017589528  0.054653906 -0.0028168725    5.5474712    5.5397934    1.0287697        0.075    2.0996349          0.5   0.11430775    4.3741567    2.8024199    30.801768  0.019477179  -0.36103295 -0.032817499   0.40468467   -1.3835705    3.8590174 
 1417000     11.06131    1.4592686    9.6020418  -0.31369253   0.97306179    1.2786651    0.7700254   -3.5502959            3    5.4086591    7.6488801    7.8019028   0.77519437 -0.0026213667  -0.12835212  0.075702256    5.2397257    5.2219557    1.0222109        0.075    2.1130095          0.5   0.11357899    4.4022227    2.7900162    30.801768  0.027454263  -0.35012797 -0.017895809   0.33180417   -3.3208538   0.62615298 
 1418000    11.083428    1.4917133    9.5917146  -0.30806013   0.99469638    1.2827965   0.80331739   -3.5502959            3    5.4782738    7.7185491     7.893893   0.82237942  0.014845144 -0.087106804  -0.06528656    5.3020366    5.2909672    1.0197239        0.075    2.0806177          0.5   0.11330265    4.4129594    2.8001816    30.801768 0.0018543065  -0.31547375 -0.0058757668   0.32865811   0.67940027   -1.5574247 
 1419000     11.10239    1.4610034     9.641387  -0.29736644   0.97421854    1.2569495   0.78640546   -3.5502959            3    5.5873125    7.8131536    7.9265085    1.0222753 -0.017054124  -0.17749178 -0.021690896    5.4147855    5.4037798    1.0256042        0.075    2.0801348          0.5   0.11395603    4.3876573     2.797613    30.801768 -0.020418352  -0.41581909  -0.04327244   0.35306159   0.95097162    1.7248671 
 1420000    11.089282    1.4787507    9.6105318  -0.27080833   0.98605273    1.2481531   0.81197487   -3.5502959            3    5.5437585    7.8851667    7.9122347   0.83387402 0.0010318812   0.10412178 -0.055899585     5.365622    5.3615102    1.0410717        0.075    2.1045772          0.5   0.11567463    4.3224689     2.818847    30.801768 -0.025675181  -0.38306258  0.011685927   0.38671197  -0.65246464  -0.15557289 
 1421000    11.023793    1.4410406    9.5827521  -0.29195429   0.96090706    1.2676229   0.75712576   -3.5502959            3     5.533496    7.8145029    7.8882084   0.89777682 0.0039078703 -0.017468474  -0.09986531    5.3673927    5.3484049    1.0444158        0.075    2.1041915          0.5    0.1160462    4.3086289    2.8032743    30.801768 -0.0083473867  -0.35661665  0.014526567   0.32474733   -1.7170257 -0.043685916 
 1422000    11.088858    1.4643501    9.6245078  -0.28420051   0.97645021    1.2430481   0.79937544   -3.5502959            3    5.8401222    8.0230159    8.1177189    1.3796318 -0.0045464058 -0.053395953 -0.051046861    5.6647498    5.6586193    1.0228692        0.075    2.1080703          0.5   0.11365213    4.3993896    2.7987553    30.801768 -0.0066474791  -0.30487672 -0.017713395   0.40671138    2.0920024    6.4942827 
 1423000    11.056271    1.4736551    9.5826154  -0.29258536   0.98265493    1.2754985   0.78811448   -3.5502959            3    5.7148672    8.0131244    7.9935816    1.1378955 -0.033512776 -0.0096031243  0.020209124    5.5419653    5.5286261    1.0493346        0.075    2.1036226          0.5   0.11659273    4.2884321    2.8248744    30.801768 0.0023654313  -0.36519702  0.018350637   0.35118339    -1.629079     2.492949 
 1424000     11.06624    1.4363119    9.6299279  -0.28771994   0.95775391    1.2050372   0.79352718   -3.5502959            3    5.7542647    7.9260884     8.072737    1.2639688  0.021594747  -0.27878627  0.013680194    5.5801754     5.578312    1.0291812        0.075    2.1161017          0.5   0.11435346     4.372408     2.808631    30.801768 0.0013413504   -0.3981009 -0.0014755488   0.45514948    1.8889076    4.5455912 
 1425000    11.037796    1.4818021    9.5559936  -0.31083061   0.98808744    1.2650382   0.80412652   -3.5502959            3    5.3910131    7.6444164    7.8236011   0.70502181 -0.030319673  -0.11335504  0.058303625    5.2145984    5.2062994    1.0147834        0.075    2.1115606          0.5   0.11275371    4.4344438    2.7872798    30.801768   0.01966658  -0.33223738 -0.010858057   0.44099667   -1.2250046    8.1826092 
 1426000    11.092125    1.4503999    9.6417252    -0.286584   0.96714802    1.2509614   0.77861187   -3.5502959            3    5.6420527    7.7929488    7.9490849    1.1841244 -0.011895853   -0.1080936 0.0064206485    5.4712356    5.4593944    1.0329872        0.075    2.0846275          0.5   0.11477636    4.3562978    2.8029291    30.801768   0.01897466  -0.47743029 -0.0011327235   0.36208533   -4.1459976    5.2526022 
 1427000    11.076113    1.4883015    9.5878114  -0.29035133   0.99242135    1.2316538   0.83356573   -3.5502959            3    5.4766877    7.7631478    7.8325429   0.83437242 -0.025535101  -0.19691735  0.054170531    5.2938144    5.2968486    1.0284087        0.075    2.1077071          0.5   0.11426763    4.3756924    2.8014025    30.801768  0.022182202  -0.35985933 -0.012800173   0.44954395     1.782521    4.8371256 
 1428000    11.064117    1.4784901    9.5856271  -0.29136824   0.98587893    1.2644083   0.80086657   -3.5502959            3    5.6390682    7.8804133    7.9697731    1.0670182 -0.0053630788  -0.16351359  0.061441723    5.4633687    5.4544465    1.0301831        0.075    2.1082241          0.5   0.11446479    4.3681554    2.8201905    30.801768  0.021451924  -0.39015616 -0.023272651   0.43897786   -1.4012037    1.9717134 
 1429000    11.109424    1.5144203    9.5950034  -0.28178745    1.0098377    1.2910071   0.82307715   -3.5502959            3    5.6672517    7.8802008    8.0210264     1.100528 -0.031690575  -0.26046569   0.07316945    5.4866795    5.4787462    1.0231132        0.075    2.0958004          0.5   0.11367924    4.3983403     2.797848    30.801768  0.029448458  -0.35150646  0.011608975   0.39739317    1.2435539    6.4604235 
 1430000    11.123557    1.5041755    9.6193814   -0.2962396    1.0030064    1.2616071   0.83126401   -3.5502959            3     5.605102    7.8474727    7.9529439    1.0148892 -0.021672613   -0.1573999  0.056104256    5.4227336    5.4208892    1.0342286        0.075    2.1151112          0.5   0.11491428    4.3510692    2.8060434    30.801768  0.022397741  -0.34177522  0.014544529   0.43755687     2.502553  -0.22291627 
 1431000     11.05205    1.4488331    9.6032173  -0.29916617   0.96610322    1.2561665   0.77340703   -3.5502959            3    5.3875067    7.6330843     7.804606   0.72482987  0.017148308 -0.0090352306  -0.03704042    5.2178315    5.2040884    1.0192594        0.075    2.0790491          0.5   0.11325104    4.4149705    2.8131939    30.801768  0.018950104  -0.33689872   0.01135489   0.34064235   -1.5752838    2.2455392 
 1432000    11.089117    1.4847313     9.604386  -0.28924569   0.99004068    1.2673486   0.80584282   -3.5502959            3    5.7576133    7.9263669    8.0714568    1.2750163 0.00043183913 -0.083731831  0.012288927    5.5808221    5.5725623    1.0260986        0.075    2.1074355          0.5   0.11401096    4.3855434    2.8235864    30.801768 -0.025913079    -0.348273  0.017896798   0.37161373    3.8133005    2.0354247 
 1433000    11.121957    1.5082938    9.6136633  -0.30599735    1.0057525    1.3118132   0.80242378   -3.5502959            3    5.6766181    7.7830543    8.0687545    1.1780454 -0.028043172 -0.057596537 -0.0011717819    5.5005769    5.4850745    1.0208583        0.075    2.1466162          0.5    0.1134287    4.4080553     2.795102    30.801768  0.004289582  -0.38391828 -0.012697856   0.30013807  -0.15460744    2.9800484 
 1434000    11.121184    1.5107386    9.6104458  -0.28243845    1.0073827    1.2991672   0.81355629   -3.5502959            3    5.5699641    7.8265121    7.9024619   0.98091829 -0.011993397  -0.23389583  0.049953366    5.3914806    5.3802671    1.0168857        0.075    2.1203682          0.5    0.1129873    4.4252761    2.8046505    30.801768 -0.033116134  -0.38130957 0.0062837964   0.36362813    0.8576411    2.8043948 
 1435000    11.092082    1.4786922    9.6133901  -0.29599568   0.98601372    1.2753919   0.79378088   -3.5502959            3    5.5377833    7.7937587    7.8539303   0.96566101 0.0027735753 -0.0057421849  0.073790768    5.3636383    5.3515578    1.0258674        0.075    2.1116078          0.5   0.11398527    4.3865318    2.7914072    30.801768  0.033398175  -0.36348703 -0.0089506342   0.39566062   0.73294798  -0.81229888 
 1436000    11.149385    1.4864897     9.662895  -0.26876041   0.99121323       1.2685   0.80702984   -3.5502959            3    5.7135962    7.9502903    8.0593424    1.1311559 0.0096349533  -0.18620051    0.1660658    5.5365445     5.528377    1.0137755        0.075     2.094325          0.5   0.11264172    4.4388527    2.7906733    30.801768 -0.0062929241  -0.40020278 0.0068740373   0.34909439    1.1323938   0.75023891 
 1437000    11.102454    1.5177387    9.5847155  -0.27862121    1.0120505     1.308154   0.81535126   -3.5502959            3    5.5575294    7.8898343    7.9306435   0.85211048 0.0046207474  -0.25932198   0.16631584    5.3786522    5.3665202    1.0357021        0.075    2.0540657          0.5   0.11507801    4.3448786    2.8042994    30.801768 -0.0064372908  -0.35675135  0.010657663   0.40852479  -0.17103017    4.7502325 
 1438000    11.117379    1.5172263    9.6001529  -0.30622754    1.0117088    1.2826882    0.8317309   -3.5502959            3    5.5682948    7.7935589    7.9644702   0.94685541 0.0060202262 -0.042715841  0.045627287    5.3858241     5.381004    1.0246985        0.075    2.0906762          0.5   0.11385539    4.3915358    2.7886102    30.801768 -0.011526611  -0.36824842 -0.0086374591   0.36154075   -1.0521195    1.3121588 
 1439000    11.089597    1.4889789    9.6006179  -0.30438582   0.99287301    1.2592011   0.81598386   -3.5502959            3     5.495277    7.7118925    7.9102087   0.86372967 -0.0088921337 -0.082674421  0.062558743    5.3162609    5.3114155    1.0248973        0.075    2.0613337          0.5   0.11387747    4.3906839    2.8283345    30.801768 -0.017987663  -0.39919801 -0.0031555028   0.41475444    1.3843694    5.6753673 
 1440000    11.075987    1.4648078    9.6111796  -0.28400794   0.97675543    1.2727076   0.78014383   -3.5502959            3     5.732368    7.9852184    8.0298261    1.1820597 -0.0037492928  -0.16135766   -0.0195282    5.5612148    5.5465345    1.0331931        0.075     2.088946          0.5   0.11479924    4.3554297    2.8183885    30.801768 0.0068977716  -0.40962886 -0.0045649217   0.33771537  -0.68016676    5.4880157 
 1441000    11.122555    1.5048587    9.6176968  -0.29921599    1.0034619    1.2841677   0.81700754   -3.5502959            3    5.3789094    7.6191951    7.8300984    0.6874348   -0.0424886   0.15411682  0.067205299    5.1996688    5.1914025    1.0247011        0.075    2.0709848          0.5   0.11385568    4.3915245    2.8324286    30.801768 -0.016308052  -0.30981442 -0.0075480799   0.40087684    1.5249557  -0.50061647 
 1442000    11.107432    1.4887157    9.6187159  -0.29011757   0.99269755    1.2809872    0.8011917   -3.5502959            3    5.6319451    7.8371261    8.0133603    1.0453489 0.0033105644 -0.071601211 -0.010803861    5.4561743    5.4449026    1.0244832        0.075    2.0657024          0.5   0.11383146    4.3924587    2.8106996    30.801768 0.0082281762  -0.41303277  0.014492199   0.39357948    1.3244218    3.2392566 
 1443000    11.135201    1.4917299    9.6434714  -0.29476676   0.99470744    1.3025073   0.79021717   -3.5502959            3    5.6417003    7.8761105    7.9411576     1.107833 -0.013429111  -0.02184843  0.093135289    5.4683372    5.4515156    1.0265715        0.075    2.0631206          0.5    0.1140635    4.3835233    2.8434762    30.801768 -0.0057264371  -0.39613521  0.044430229   0.38505023    3.3361635    3.1008904 
 1444000      11.1291      1.50083    9.6282697  -0.29251815    1.0007755    1.2738818   0.81937802   -3.5502959            3    5.4936141    7.8004246     7.886697   0.79372055  0.021793544  -0.10414865  0.045871883    5.3138534     5.307609    1.0192363        0.075     2.083317          0.5   0.11324848    4.4150703    2.7968747    30.801768  0.015167874  -0.32138653  0.036648459   0.34998118    4.1786003    -1.404607 
 1445000    11.094643    1.5031194    9.5915237  -0.31548639    1.0023021    1.3196783     0.791441   -3.5502959            3    5.5635886    7.7638666    7.9529703   0.97392911  0.025937406  -0.23499779 -0.075207322     5.389957    5.3708967     1.044545        0.075    2.0956887          0.5   0.11606056    4.3080959       2.8118    30.801768 -0.014461053  -0.29796021 0.0044781247   0.37930349   0.40910157   -1.5257526 
 1446000    11.143899     1.486131    9.6577675  -0.29333915   0.99097404    1.2456174   0.82186108   -3.5502959            3    5.4973107    7.7603515    7.8431332   0.88844725 -0.014133153 -0.053543242 -0.087005513    5.3170052    5.3154327    1.0259559        0.075    2.0680963          0.5    0.1139951    4.3861535    2.8379749    30.801768  0.014709401   -0.3787625  0.011700798   0.39652818    0.8827107    1.0085119 
 1447000      11.1116    1.4771566    9.6344429  -0.29070966   0.98498976    1.2777072   0.79053406   -3.5502959            3    5.5815345    7.8671794    7.9171225   0.96030152  0.023066729  0.015151982  0.024877851    5.4081018    5.3949709    1.0473683        0.075    2.1016414          0.5   0.11637426    4.2964829     2.832559    30.801768 0.00076740986  -0.41622225  0.014689873   0.43826317  -0.68924259    1.9457702 
 1448000    11.070267    1.4824488     9.587818  -0.30023433   0.98851868    1.2619895   0.80687403   -3.5502959            3    5.8222906    7.9869966    8.1471651    1.3327101 -0.0044856981 0.0047609453  0.056479918    5.6452731     5.638022    1.0299524        0.075     2.112674          0.5   0.11443915    4.3691341    2.8002341    30.801768 -0.0076945822  -0.34460877 -0.022196218   0.43528031    0.4710559    4.4732268 
 1449000    11.079637    1.4712958    9.6083408  -0.29768514   0.98108172    1.2752739   0.78564304   -3.5502959            3    5.6079804    7.9507545    7.9467908   0.92639574   0.04783419 -0.061751471    0.0119552    5.4356207    5.4217721     1.029022        0.075    2.1101675          0.5   0.11433577    4.3730845    2.8114558    30.801768 -0.0060343261  -0.26392751 0.0071767891   0.32215105    2.1498535  -0.33977897 
 1450000    10.999766    1.4321802     9.567586  -0.31901404   0.95499884    1.2270043   0.77431705   -3.5502959            3    5.5442367    7.8019496    7.8977843   0.93297622 -0.019273129  -0.22837229  0.037495828    5.3743618    5.3650765      1.03064        0.075     2.092561          0.5   0.11451556     4.366219    2.7948054    30.801768  -0.01281177  -0.37190186 0.0042808846   0.39855272    3.3220183   0.93637275 
 1451000    11.060512    1.4839929    9.5765191  -0.30526617   0.98954829    1.2690063   0.80391918   -3.5502959            3     5.703814    7.8804182    8.0259152    1.2051085 0.0047214502 -0.025047161 -0.0016689177    5.5274447    5.5185208    1.0382597        0.075    2.0769765          0.5   0.11536218    4.3341759    2.7881868    30.801768  0.023575218  -0.36950514 0.0014005517   0.32381957   -4.8423869     1.875124 
 1452000    10.992061    1.4481431    9.5439178  -0.30179072   0.96564311    1.2398474   0.78350185   -3.5502959            3    5.5022403    7.8391189     7.858038   0.80956401 0.0047542235 -0.011713827  0.043963269    5.3303504    5.3212048     1.048998        0.075    2.0799311          0.5   0.11655534    4.2898079    2.8059447    30.801768 -0.019685093  -0.31164517 0.0082403851   0.28810302    1.4485106    3.2642494 
 1453000     10.98953    1.4432646    9.5462652  -0.31884901   0.96239005    1.2163236   0.79373893   -3.5502959            3    5.4852908    7.7425763    7.9070132    0.8062829 -0.0025123051  -0.12345752 -0.012582192     5.311155    5.3076901    1.0615505        0.075    2.0929854          0.5   0.11795005    4.2390826     2.828928    30.801768  0.029634195  -0.40622081 -0.0087830166   0.35791097     3.767984   0.23039115 
 1454000     11.08718    1.5022283    9.5849519  -0.29366873    1.0017079    1.2618786   0.82892019   -3.5502959            3    5.7651508    8.0266914     8.042011    1.2267499  0.010844327 -0.098927394  0.022265277    5.5832967    5.5808984    1.0370687        0.075    2.0888514          0.5   0.11522985    4.3391534    2.8130113    30.801768 -0.0068086993  -0.43266314 -0.040321392   0.35796071   0.08747088    2.7506558 
 1455000    11.072991    1.4793017    9.5936897  -0.29652579   0.98642013    1.2492542   0.81185409   -3.5502959            3    5.4997512    7.7791291    7.8921444   0.82798002  0.035545354 -0.094976243 -0.026030068    5.3216411    5.3173422    1.0365923        0.075    2.0865272          0.5   0.11517692    4.3411474    2.8326718    30.801768 -0.021433434  -0.35271103 -0.0078457127   0.38599446 -0.028680139   -2.7292715 
 1456000    11.047536    1.4585448    9.5889914  -0.29883006   0.97257915    1.2537983   0.78577165   -3.5502959            3    5.5317852    7.8021335    7.9175622   0.87565978 0.0059565733  -0.15342012  0.076764426    5.3593973    5.3487126    1.0341171        0.075    2.1161431          0.5    0.1149019    4.3515381    2.8160287    30.801768  0.010322775  -0.35553963  0.016533922   0.42206566   0.21425403    4.6116647 
 1457000    11.034418    1.4578347    9.5765831  -0.29740152   0.97210565    1.2393597   0.79459252   -3.5502959            3    5.7619056    8.0354955    8.0517523     1.198469  0.036769718   -0.0971495 -0.082018336    5.5875826    5.5809413    1.0237528        0.075    2.0889525          0.5   0.11375031    4.3955926    2.7955544    30.801768 0.0094067704  -0.32535476 0.00026275619    0.3721049   0.70245747    3.8462734 
 1458000    11.081227    1.4594898    9.6217371  -0.29997716   0.97320925    1.2509076   0.78874525   -3.5502959            3      5.55496    7.8505134    7.8691426   0.94522415 -0.029012274 -0.025032525  0.055746482    5.3819198    5.3723096    1.0432848        0.075    2.0691671          0.5   0.11592054    4.3132995    2.8472218    30.801768 -0.014795612  -0.37655272 0.0074009212   0.41354398    0.1664057    5.9715342 
 1459000    11.065601    1.4652321    9.6003688  -0.30768772   0.97703835    1.2683206   0.78353496   -3.5502959            3     5.714747    7.8849787    8.0139049    1.2453575  0.025053371 -0.035542612    0.0933999    5.5428498     5.529554    1.0301184        0.075    2.0882921          0.5    0.1144576    4.3684299    2.8231685    30.801768 -0.012908463  -0.38104375 -0.012504298   0.33872839    1.1684011    4.9488926 
 1460000    11.108372    1.4831718    9.6252003  -0.28609883   0.98900077    1.2644164   0.80606194   -3.5502959            3    5.5320238    7.8348355    7.8488557   0.91238017 -0.010708963  0.035341042  0.037942703    5.3551845    5.3474009    1.0097203        0.075    2.0841976          0.5   0.11219114    4.4566798    2.8002659    30.801768 -0.0039893443  -0.32645858 -0.023023205   0.31543248  0.017171573   -1.4774674 
 1461000    11.114321    1.4641325    9.6501882  -0.27503257   0.97630509    1.2356322   0.80406934   -3.5502959            3    5.8503407    8.0651835    8.1007225     1.385116   0.01976813 -0.080736821  0.038805439    5.6739385    5.6699206    1.0260767        0.075    2.0662879          0.5   0.11400852     4.385637    2.7963569    30.801768  0.017778261  -0.36539805  0.014591741   0.40543244   -4.3413714    3.1672842 
 1462000    11.112789    1.4975033    9.6152855  -0.29755626   0.99855722    1.2992591    0.7987925   -3.5502959            3    5.3878448    7.6485351    7.8540105   0.66098889 -0.0086034095   -0.1203685 -0.018339123    5.2126003    5.1981344    1.0303898        0.075    2.0816923          0.5   0.11448775    4.3672793    2.8174362    30.801768 0.0072368002  -0.33528357  0.019305171   0.40375214    -2.333521   0.46395498 
 1463000    11.057926    1.4519612    9.6059648  -0.29189002   0.96818907    1.2558499   0.77709267   -3.5502959            3     5.713599    7.8920677    8.0552708    1.1934585 0.0021282121  0.053091111  -0.10719433    5.5431151    5.5302269     1.030798        0.075     2.069098          0.5   0.11453311    4.3655499    2.8317908    30.801768 -0.010540236  -0.43044694 -0.050782499   0.37533846    3.2240835   0.63218058 
 1464000    11.085616     1.500555     9.585061  -0.30670046    1.0005922    1.2906309    0.8079251   -3.5502959            3    5.5271238    7.7508438    7.9212061   0.90932142 -0.016579009  -0.11299893  0.015677456    5.3498757    5.3386731    1.0240811        0.075    2.1007404          0.5   0.11378678    4.3941834    2.7990705    30.801768  0.020477246  -0.35320363  0.022827762   0.39279236   0.45155114    2.4977135 
 1465000    11.125771    1.5307736    9.5949975   -0.3194628    1.0207424    1.2855209   0.84489483   -3.5502959            3    5.5731936    7.8316705    7.9288054   0.95910507  0.022436077  0.036786165 -0.020488882    5.3878349    5.3854892    1.0360347        0.075    2.1180076          0.5   0.11511497    4.3434838    2.8133591    30.801768 -0.026985193  -0.37148464 -0.013775066    0.4345515   0.90828821    3.0915178 
 1466000     11.08596    1.4927807    9.5931795  -0.28547498   0.99540816    1.2538806   0.82374835   -3.5502959            3    5.5981411    7.8226973    7.9578388    1.0138873  0.024460401  -0.18083544 -0.011453133    5.4174217    5.4150566     1.021135        0.075    2.0918236          0.5   0.11345944    4.4068611      2.78657    30.801768   0.01961697   -0.4015314 -0.029234973   0.34984714    1.7616453   0.91438585 
 1467000     11.04574     1.465667    9.5800727  -0.30068223   0.97732833    1.2635218   0.78721189   -3.5502959            3    5.6545583    7.8662879    7.9862154    1.1111716  -0.02420926 -0.0034778119  0.062145496    5.4818544     5.470066    1.0476659        0.075    2.0790131          0.5   0.11640732    4.2952624    2.8106771    30.801768 -0.010864666  -0.35674736 0.0064917291   0.39841205  -0.81904778    7.7519918 
 1468000    11.074896    1.4780977    9.5967983  -0.29908761   0.98561732    1.2747012   0.79358022   -3.5502959            3     5.678518    7.9143268    7.9975184    1.1237087 -0.028194892 -0.004718539 -0.021599407     5.504417    5.4923933    1.0579614        0.075    2.0771782          0.5   0.11755127    4.2534632     2.806372    30.801768  0.011187524  -0.38855692 -0.0089569466   0.41096956    -1.390191    5.3276511 
 1469000    11.041674    1.4665153     9.575159  -0.30719376   0.97789401    1.2477243   0.79866841   -3.5502959            3    5.3945352     7.678807    7.8686738   0.63612472  -0.03427282 -0.074436627 -0.092628412    5.2193179    5.2123495    1.0377965        0.075    2.1148118          0.5   0.11531072    4.3361104    2.7992549    30.801768  0.011360478   -0.3359432 -0.0044941996   0.42418278   -1.6038156     1.943193 
 1470000     11.08772    1.4752893     9.612431  -0.29623758   0.98374459    1.2498501   0.80700021   -3.5502959            3    5.3788338    7.6744262    7.7579606   0.70411454 0.0018138889 -0.075448821 -0.0095603607    5.2017886    5.1963377    1.0204468        0.075    2.1367856          0.5   0.11338298     4.409833    2.7897144    30.801768 0.0052439256  -0.37856852 0.0085467469     0.289063   -2.5127476     4.429672 
 1471000    11.077752    1.4859249    9.5918266  -0.29743564   0.99083657    1.2769186   0.80079931   -3.5502959            3    5.5211137    7.8475905     7.875473   0.84027747 -0.034892517  -0.16560225 -0.088905337    5.3454289    5.3346652    1.0447101        0.075    2.0985085          0.5    0.1160789    4.3074149    2.8167145    30.801768  0.025507642  -0.36314313 0.0052852596    0.3943319    3.0614155   0.78119002 
 1472000    11.062156    1.4591856    9.6029701  -0.28888336   0.97300641    1.2378901   0.79707123   -3.5502959            3    5.6232989    7.8706473    7.9477307    1.0515189 -0.033708569 -0.071546562 -0.093964534    5.4484321    5.4425492    1.0359695        0.075    2.1032074          0.5   0.11510772    4.3437572    2.8254424    30.801768 -0.0085850728  -0.41660241 -0.013350474   0.34694888  -0.52657722    2.1470792 
 1473000    11.093545    1.4972357    9.5963092  -0.28925567   0.99837877    1.2349266    0.8413121   -3.5502959            3    5.6179485    7.8499703    7.9588187    1.0450565 -0.027208135 -0.019685019 -0.077766719    5.4333758    5.4376315    1.0270486        0.075    2.0869926          0.5   0.11411651     4.381487    2.7949729    30.801768  0.008170471   -0.3885475 -0.016751696   0.37141338    1.0473094    2.8405442 
 1474000    11.080037    1.4593161    9.6207204  -0.29044675   0.97309348    1.2296839   0.80267796   -3.5502959            3    5.7400922    7.9615025    8.0663591     1.192415 -0.012861858 -0.073135878 -0.084016335    5.5639953    5.5605407    1.0101599        0.075    2.0491312          0.5   0.11223999    4.4547404    2.7819488    30.801768 0.0035490059  -0.36286555  0.018753233   0.33456835   -1.4592778    4.2835817 
 1475000    11.043223    1.4883566    9.5548665  -0.31218414   0.99245811    1.2737348   0.80561968   -3.5502959            3    5.5392759    7.8380427    7.9091424   0.87064274  0.019842901 -0.097743495  0.064283876    5.3625337    5.3532924    1.0435232        0.075     2.061801          0.5   0.11594702    4.3123145     2.816848    30.801768 -0.0063051727   -0.3855731 -0.0023834872    0.3814081    2.2841671    1.9971685 
 1476000    11.070962    1.4698696    9.6010924   -0.3011827   0.98013065    1.2428561   0.80563454   -3.5502959            3    5.4792956    7.7718798    7.8357203   0.83028657  0.050778137 -0.077740666 -0.062731234      5.30255    5.2978207     1.036528        0.075    2.0405376          0.5   0.11516978    4.3414166    2.8026566    30.801768  0.032719127  -0.35159121 -0.020353817   0.40848202   -0.6587951    1.3312902 
 1477000    11.074214    1.4693771    9.6048373  -0.29044609   0.97980229    1.2648272   0.79046452   -3.5502959            3     5.475235    7.7698589    7.8538984   0.80194751  0.001509923  -0.19415738 -0.079734367    5.3018175     5.290552    1.0293763        0.075    2.0558224          0.5   0.11437515    4.3715791    2.8049052    30.801768 0.0054923774  -0.33674971 -0.0079475145    0.3203403    2.5566953   0.99568087 
 1478000    11.063708    1.5037412    9.5599667  -0.31243518    1.0027167    1.2913491   0.81098646   -3.5502959            3    5.2926708    7.5900706    7.7734273   0.51451455 -0.0070736401  0.097448655  0.048048054    5.1147511    5.1041153    1.0210766        0.075    2.0623102          0.5   0.11345295    4.4071131    2.8216642    30.801768  0.023188036  -0.33544992  0.021925346   0.48639547  -0.92439889   0.97117039 
 1479000    11.071257    1.4868001    9.5844571  -0.30896299   0.99142019    1.2504562   0.81938381   -3.5502959            3    5.6229142    7.8207766    8.0000735    1.0478924 -0.041253656  0.011574235  0.041660607    5.4431522    5.4403296    1.0244399        0.075    2.0871168          0.5   0.11382665    4.3926444    2.7938238    30.801768 -0.0003559766   -0.3852795 -0.021188653   0.40274314    1.7070429    4.9158825 
 1480000    11.134962    1.4926353    9.6423264   -0.3052242    0.9953112    1.2537206   0.82369326   -3.5502959            3    5.7675017    7.8847899    8.0784453    1.3392699  0.023633808 -0.083639986 -0.023319825    5.5867943    5.5844405    1.0236865        0.075    2.0756798          0.5   0.11374294    4.3958771    2.7885478    30.801768  0.018715079  -0.42156496 -0.0065129042   0.31284496  -0.39457208    6.4896311 
 1481000    11.088226    1.4914792    9.5967466  -0.29593017   0.99454028    1.2936476   0.79583531   -3.5502959            3    5.6002819    7.8696214    7.9443184   0.98690608 -0.0031465745  -0.03140358  0.011800742    5.4256862    5.4113908    1.0248693        0.075    2.1061089          0.5   0.11387436    4.3908039     2.796564    30.801768  0.024525086  -0.35576976  0.027299099    0.4019664   0.88951169    5.7135087 
 1482000    11.089756    1.4830401    9.6067162  -0.28573444   0.98891298    1.2758434   0.79831036   -3.5502959            3    5.6523932    7.8501379    8.0505543    1.0564874   0.03521133  -0.14645658 -0.00089380389    5.4772545    5.4661018    1.0302742        0.075    2.0825322          0.5   0.11447491    4.3677693    2.8382975    30.801768  0.013577312  -0.38451136 -0.0076317183   0.44037756   -2.5690593    2.9346537 
 1483000    11.088282    1.5057641    9.5825182  -0.29766672    1.0040656    1.2608519   0.83353125   -3.5502959            3    5.6066776    7.8011802    8.0318743   0.98697837  0.019903329   0.02878343  0.054919357    5.4238119    5.4225752    1.0106306        0.075    2.0594746          0.5   0.11229229    4.4526656    2.8039951    30.801768 -0.0062561115   -0.3864732   0.03575561   0.53648307    2.8456147    1.2162469 
 1484000    11.057673    1.4813042     9.576369  -0.30392977   0.98775546    1.2781214   0.79486586   -3.5502959            3    5.5373032    7.8109495    7.9398123    0.8611478 -0.0037954739  -0.30211749 0.0015529266    5.3629201    5.3506791    1.0377812        0.075    2.0488085          0.5   0.11530902    4.3361742    2.8011995    30.801768 -0.0030218841  -0.38867241 -0.022100357   0.39946934     2.444915     1.394608 
 1485000    11.082659    1.5042758    9.5783837  -0.28632056    1.0030732    1.2705513   0.82542246   -3.5502959            3    5.6024895    7.8940932     7.967141   0.94623424 -0.026976194  -0.10515872  -0.03296874    5.4214027    5.4169707    1.0185521        0.075    2.0768701          0.5   0.11317245    4.4180363    2.8071632    30.801768 -0.0075571558  -0.37794235  0.010791419   0.29386899   -1.2416633    2.8527654 
 1486000    11.104847    1.4821265    9.6227208  -0.29174416   0.98830379    1.2713323   0.80029786   -3.5502959            3    5.5965505    7.8280083    7.9492039    1.0124393  0.021525993  -0.17274935    0.0824648    5.4209757    5.4109177    1.0233919        0.075    2.0680897          0.5   0.11371021    4.3971424    2.7909007    30.801768  0.026351035  -0.34875299 0.0079620561   0.38946625   -1.6130439    1.1728925 
 1487000    11.112743    1.5016307    9.6111122  -0.30009444    1.0013094     1.289403   0.80993729   -3.5502959            3    5.5550938    7.8475247     7.940795   0.87696163 0.0088417717  0.019882766 -0.067304094    5.3774042    5.3668224    1.0293655        0.075    2.0727792          0.5   0.11437394     4.371625    2.8187382    30.801768 -0.016361172  -0.35013026  0.014375526   0.36932511   0.19764589    8.0809172 
 1488000    11.156873    1.5115451    9.6453276   -0.2963683    1.0079205    1.2991714   0.81444946   -3.5502959            3    5.5628874    7.7719219    7.9079058    1.0088346  0.035340497  0.037667887 -0.078731136     5.384208    5.3731898    1.0176205        0.075    2.1147077          0.5   0.11306895    4.4220806    2.7869664    30.801768  0.039628739  -0.29353128 0.0082107484   0.33437986   -1.0179822    7.0891536 
 1489000     11.09594    1.4989347     9.597005  -0.30164697   0.99951173    1.2861146   0.80913101   -3.5502959            3     5.560199     7.789639    7.9261113   0.96484658 -0.0029425564 -0.088595906  0.098408746    5.3826863    5.3724078    1.0106756        0.075     2.112501          0.5   0.11229729    4.4524671    2.8002084    30.801768 -0.023094996  -0.33693189 -0.0016756602   0.41750256  -0.60443856    4.0298457 
 1490000    11.097608    1.4949482    9.6026597  -0.30647643   0.99685345    1.2777307   0.81028251   -3.5502959            3    5.5686749    7.7098417    7.9580931      1.03809  0.053344456  -0.13469796 0.0086996782    5.3909097    5.3821079    1.0177793        0.075    2.0819743          0.5   0.11308659    4.4213908    2.8046001    30.801768 -0.0074461167  -0.48921982 -0.0030235638   0.28648647     1.467608   0.81603007 
 1491000     11.12317    1.4854076     9.637762   -0.2841459   0.99049163    1.2569496   0.81351513   -3.5502959            3    5.6976776    7.8704032    8.0195568    1.2030726  0.030756062 -0.036896998 -0.050746452    5.5192031    5.5141449    1.0213435        0.075     2.060333          0.5   0.11348261    4.4059615    2.8185826    30.801768 0.0040707528  -0.33600053 0.0002407311   0.40118282     1.343971    7.2170931 
 1492000    11.113258    1.5000775    9.6131808  -0.28958351    1.0002737    1.2751213   0.81771714   -3.5502959            3    5.8024602    8.0547288    8.0928342    1.2598175 -0.035879111 -0.010416258  0.011165276    5.6230639    5.6162742    1.0306862        0.075    2.0592287          0.5   0.11452069    4.3660235    2.7903189    30.801768  0.015782687  -0.41181658 -0.032973847   0.38927142    -1.653087    6.3392977 
 1493000    11.098497    1.5041746    9.5943223  -0.29238773    1.0030058    1.2263914   0.85470103   -3.5502959            3    5.7985723    7.9643891    8.1036774    1.3276504   0.01146297  0.044753112 -0.020141421    5.6110622    5.6195016    1.0095761        0.075    2.0662373          0.5   0.11217513    4.4573161     2.757432    30.801768 0.0046800096  -0.39035599 -0.033619037   0.34166153    1.4251866    1.3936312 
 1494000    11.101091    1.4873363    9.6137549  -0.30783237   0.99177776    1.2780663   0.80160339   -3.5502959            3    5.4069511    7.6330412    7.8553257   0.73248623 0.0025809954  -0.41200346 -0.015690899    5.2310899     5.220335    1.0329625        0.075    2.0577784          0.5   0.11477361    4.3564023    2.7895075    30.801768  -0.01984327  -0.40386913  0.029672766   0.33763358    1.5326556   0.49032018 
 1495000    11.081655    1.4743472    9.6073076  -0.28912069   0.98311639    1.2635286   0.79684988   -3.5502959            3     5.546403    7.8792604    7.9032653   0.85668334 -0.0088718762  0.045708702 -0.013413996    5.3715847    5.3619097    1.0214353        0.075     2.073987          0.5   0.11349282    4.4055652    2.8120971    30.801768 -0.026812321  -0.31438641 -0.018823867   0.33212347   -1.7626369    2.0299429 
 1496000    11.116151    1.5196678    9.5964834  -0.30180489    1.0133369    1.2978253   0.82436859   -3.5502959            3    5.3805102    7.6361907    7.8582722   0.64706769 -0.00025867723  -0.16904049 -0.0026404068    5.1996547    5.1910091     1.035143        0.075    2.0732164          0.5   0.11501589    4.3472255    2.8038115    30.801768 -0.022372239  -0.38723977 -0.015636306   0.43412518  -0.83115315   0.31084184 
 1497000     11.09992    1.4859011    9.6140193  -0.28618526   0.99082075    1.2829795   0.79673906   -3.5502959            3    5.7017455    7.9316042    7.9471501    1.2264822 -0.038691596  -0.13372742 -0.020967256    5.5269515    5.5144121     1.005658        0.075     2.043989          0.5   0.11173978    4.4746822    2.7831289    30.801768  0.021225549  -0.38503921  0.015508443   0.39028498    3.0738909    3.6193203 
 1498000    11.064879     1.470048    9.5948307  -0.30444358   0.98024967    1.2792241   0.78162786   -3.5502959            3    5.4254755    7.7530779    7.8305531   0.69279552 -0.025156501 -0.075388981 -0.014918775    5.2539967    5.2386904    1.0245297        0.075    2.0514994          0.5   0.11383663    4.3922594    2.8162333    30.801768  0.017897242  -0.38732865 -0.027108048   0.37441393   -1.9268817   0.49111951 
 1499000     11.07166    1.4890427    9.5826173  -0.28800608   0.99291557    1.2741659   0.80609481   -3.5502959            3    5.7771797    7.9764494    8.1013337    1.2537561  0.015652617  -0.21933726   0.12391417    5.6003332    5.5911332    1.0252373        0.075     2.047595          0.5   0.11391525    4.3892278    2.8207779    30.801768  0.028586057  -0.38857094 0.0010201651   0.35098537    1.9000952    5.7532668 
 1500000    11.056508    1.4496394    9.6068687  -0.30220088   0.96664086    1.2450166   0.78172364   -3.5502959            3    5.4925571    7.7151212    7.8389316   0.92361841 0.0049473138   0.11142567 -0.032725369    5.3210573    5.3107668     1.034949        0.075    2.0785193          0.5   0.11499433    4.3480404    2.8008964    30.801768 -0.0022740784  -0.34321594  0.019655883   0.39122962   -1.7111395    2.9617413 
 1501000    11.061354    1.4990795    9.5622749  -0.30809606   0.99960829    1.3085533   0.79435768   -3.5502959            3    5.7056248    7.9351807    8.0381576     1.143536  0.013125582 0.0069450002 -0.032339571    5.5313532    5.5145572    1.0370698        0.075    2.0883213          0.5   0.11522998    4.3391486    2.8048766    30.801768  0.020552768  -0.35042874 0.0070466811   0.31446185    1.5295333    8.1094954 
 1502000    11.088441    1.4774434     9.610998  -0.29243022   0.98518097    1.2671298   0.79789252   -3.5502959            3     5.586919     7.795585    8.0002153   0.96495657  0.032409367   0.19512627  0.041024447    5.4118719    5.4018998    1.0173742        0.075    2.1151989          0.5   0.11304158    4.4231511    2.7900984    30.801768 -0.013712104  -0.37371676  0.030160244   0.36146465   -3.0237258    2.5066238 
 1503000    11.062789    1.4832907    9.5794979  -0.30743196    0.9890801    1.2746281   0.79939761   -3.5502959            3    5.5789864    7.8192512    7.9394948   0.97821315 -0.0025180746  -0.10753122  0.053143809    5.4036091    5.3928724    1.0376605        0.075    2.0729866          0.5   0.11529561    4.3366785    2.8135038    30.801768 0.0032004642  -0.39751306 -0.015052753   0.45019484   0.63746375    5.9070729 
 1504000    11.112503     1.475985    9.6365176  -0.29644736   0.98420855    1.2585381   0.80199078   -3.5502959            3    5.5882129    7.7589416    7.9708222     1.034875  0.020683665 -0.019155554 -0.0052687335    5.4122668    5.4044483    1.0149845        0.075    2.0991843          0.5   0.11277606    4.4335651    2.8273004    30.801768 -0.021637593  -0.33251948 -0.017252749   0.34065049   -1.0358607     -1.05668 
 1505000    11.077953    1.4557823    9.6221709    -0.288057   0.97073703     1.261805   0.77737393   -3.5502959            3    5.5461933    7.8249533    7.8948419   0.91878484 -0.011686013   0.14184189 -0.042033637    5.3756478    5.3619517    1.0199347        0.075    2.0916852          0.5   0.11332608    4.4120471    2.8130634    30.801768 0.0052385077  -0.39824341  0.019125425   0.36104033   0.08613665    1.0879737 
 1506000    11.106415    1.4824739    9.6239416  -0.28619257   0.98853542    1.2760688   0.79753135   -3.5502959            3    5.5681869    7.8135428    7.9291299   0.96188813 -0.010607556  -0.14192161 -0.006210328    5.3932191    5.3818626    1.0139355        0.075    2.0999104          0.5    0.1126595    4.4381523    2.8038426    30.801768  0.013075473  -0.30728779  0.024294077    0.3739658   -2.8863374    5.1437651 
 1507000    11.088297    1.4666453    9.6216513  -0.28637163   0.97798067    1.2526285   0.79554879   -3.5502959            3    5.6889515    7.9103008    8.0175935    1.1389603 -0.014295032    0.0716083  -0.07497471    5.5144187    5.5060498    1.0284584        0.075    2.0982635          0.5   0.11427316    4.3754807     2.822441    30.801768 0.0057538593  -0.37073485 -0.011729782   0.44004574 -0.039223351     4.651599 
 1508000    11.069953    1.4692047    9.6007488  -0.28686807   0.97968729    1.2420487   0.80543329   -3.5502959            3    5.5193435    7.7262941    7.8749157   0.95682053 -0.015363102  -0.13038029  -0.14737815    5.3426421    5.3379865    1.0125681        0.075    2.0796233          0.5   0.11250757    4.4441455    2.8037908    30.801768  0.021506389  -0.36461851 -0.0031201104   0.47935648   0.84139472    3.0193199 
 1509000    11.106998    1.4991333    9.6078647  -0.29482694   0.99964413    1.2743752   0.81716485   -3.5502959            3     5.503679    7.7504322    7.8949003   0.86570447 -0.013096762   0.01828606   0.14654784    5.3244038    5.3176019    1.0389499        0.075    2.0828192          0.5   0.11543888    4.3312964    2.8284536    30.801768 -0.017486994  -0.38875594 -0.002532298   0.33835564  -0.48778456    1.2594111 
 1510000    11.096842    1.4878706    9.6089713  -0.29983601     0.992134    1.2715786   0.80651481   -3.5502959            3    5.4285864    7.6712902     7.829298   0.78517105 -0.023253396  -0.30248772 -0.0045711528    5.2516477    5.2429177    1.0395457        0.075    2.0944465          0.5   0.11550507    4.3288142    2.8249558    30.801768  0.018661343  -0.35687868  0.011636245   0.38338693 -0.014372106   0.32246764 
 1511000     11.02689      1.43075    9.5961398  -0.28939156   0.95404515    1.2188043   0.77818586   -3.5502959            3    5.5164869    7.7992337    7.8436379   0.90658905 0.0020714696  0.016937617 -0.036403238    5.3457632     5.338524    1.0082806        0.075    2.0942961          0.5   0.11203118    4.4630432    2.7960709    30.801768  0.014008253  -0.32518485 -0.0091494962   0.44970221    2.9755169    2.5671709 
 1512000    11.093611    1.4607805     9.632831  -0.28596601   0.97406991    1.2583274    0.7852408   -3.5502959            3    5.4534813    7.7631591    7.8340185   0.76326608 0.0032948344 -0.057930177 -0.041544474    5.2812098    5.2697474    1.0408649        0.075    2.0988938          0.5   0.11565166    4.3233277    2.8109641    30.801768 -0.038864615  -0.37172903 -0.017039811    0.3566854   -2.1474426    1.6151944 
 1513000     11.13235    1.4730308    9.6593191  -0.28934563   0.98223862    1.2376254   0.81262758   -3.5502959            3     5.653962    7.7941585    8.0673404    1.1003872 0.0055329826  -0.10882576 -0.061264063    5.4756823    5.4732509      1.00965        0.075    2.0878931          0.5   0.11218333    4.4569901    2.7986505    30.801768 0.0017684788  -0.31856917 0.0041047089   0.34781262    3.0559405   -1.2375043 
 1514000    11.076123    1.4558903    9.6202327  -0.29248469   0.97080908    1.2529963   0.78335665   -3.5502959            3    5.5832561    7.8654909    7.9091181   0.97515923  -0.01805906  -0.21417874  0.080176314     5.411398    5.4003007    1.0221413        0.075    2.0703883          0.5   0.11357126    4.4025222    2.8211865    30.801768 -0.024712255  -0.34496775  0.012098407   0.43458863  -0.85414349    1.7448214 
 1515000     11.07003    1.4679792    9.6020505  -0.28993922   0.97887013    1.2643396   0.78923613   -3.5502959            3    5.4298499    7.7566177    7.7749714   0.75796069   0.03103825 -0.023404422 0.0042915453     5.256702    5.2452382    1.0306414        0.075    2.0544272          0.5   0.11451571    4.3662131    2.8229366    30.801768 -0.027507478  -0.38756941 -0.010805173   0.36420415    1.8961737    2.4190997 
 1516000     11.06443    1.4710959    9.5933344  -0.30902894   0.98094838    1.2673287   0.79070896   -3.5502959            3    5.6626386    7.9564831    7.9614387    1.0699939 0.0016333786 -0.065566702  0.025091067    5.4891675    5.4775904    1.0438419        0.075    2.0483216          0.5   0.11598244    4.3109976    2.8075765    30.801768 -0.0025343557  -0.38226616  -0.02004217   0.34463855    3.8865487    6.2192881 
 1517000    11.048255    1.4460763     9.602179   -0.2979776   0.96426497    1.2208214   0.79386883   -3.5502959            3    5.6215748    7.8487516    8.0401684   0.97580443 0.0077841879  -0.15584914  0.024849175    5.4474105    5.4433174    1.0351313        0.075    2.0825277          0.5   0.11501459    4.3472747    2.8132939    30.801768  0.028008582  -0.32561427 -0.0013537042   0.38134135   -2.9842968    5.4016236 
 1518000    11.051491    1.4774527    9.5740385  -0.30991768   0.98518721    1.2619498   0.80135046   -3.5502959            3    5.6360577    7.8466535     8.012045    1.0494746  -0.01043564  0.057604258 -0.065774344     5.460252    5.4517949    1.0390917        0.075    2.0402747          0.5   0.11545464    4.3307052    2.8185476    30.801768 -0.0020180037  -0.40467756  0.013385632   0.38565653   -1.0019247   0.99573021 
 1519000    11.083917    1.4645726    9.6193444  -0.28119016   0.97659859    1.2470112   0.79698494   -3.5502959            3    5.6834175    7.9167917    7.9980904    1.1353705  0.016531123  0.020353842  0.028426624    5.5085696     5.501336    1.0260772        0.075     2.061238          0.5   0.11400858     4.385635    2.8310192    30.801768 -0.022755316  -0.30878841 -0.049040331   0.42852073  0.031576158    6.6356118 
 1520000    11.067516    1.4975375    9.5699786  -0.29923869   0.99858002    1.2678285    0.8197493   -3.5502959            3    5.5763503    7.8312065    7.9413056   0.95653866 -0.012691917  -0.16316902  0.011142567    5.3965081    5.3912291    1.0423136        0.075    2.0861888          0.5   0.11581262    4.3173187    2.8392511    30.801768  0.026548019  -0.36813988 -0.0018491103   0.36571532    2.6854448    1.3892915 
 1521000    11.112682    1.5113607    9.6013209  -0.30410826    1.0077976    1.2733838   0.83140767   -3.5502959            3    5.3995632    7.6540485    7.8329691   0.71167203   0.01474908   -0.2865706 0.0014659494    5.2171634    5.2136309    1.0335835        0.075    2.0697372          0.5   0.11484261    4.3537846    2.7987386    30.801768 0.0092241243  -0.35518356 -0.011543083   0.37582073    2.6341998   -2.5078669 
 1522000    11.115227    1.4821091    9.6331174  -0.29445559   0.98829219    1.2680696   0.80245005   -3.5502959            3    5.5825815    7.8245102    7.9373603   0.98587403 0.0029081299  0.023273099  -0.08773022    5.4065346    5.3974251    1.0308732        0.075    2.0511353          0.5   0.11454147    4.3652312    2.8304453    30.801768 -0.0037581008  -0.36369379 -0.028894857   0.37710784 0.0066719082    6.8027545 
 1523000    11.086941     1.479796    9.6071451  -0.29544957   0.98674972    1.2555254   0.80822928   -3.5502959            3     5.538835    7.7905919    7.9678813   0.85803172  0.017041436  0.086789927 0.0030584224    5.3615202    5.3555102    1.0401058        0.075     2.057034          0.5   0.11556731    4.3264831    2.8246166    30.801768  0.032823609  -0.33997746 -0.0021498362    0.3191484   -1.0930806    2.9207988 
 1524000    11.063672    1.4985474    9.5651248  -0.29286258   0.99925347    1.2964942   0.80179256   -3.5502959            3     5.645697    7.9706503    7.9689806   0.99746018 -0.0079466953  0.015866121 0.0024819205    5.4697944    5.4563903    1.0363312        0.075    2.0605958          0.5   0.11514792     4.342241     2.824658    30.801768  0.011043603  -0.36043086 -0.037146447   0.32376563    1.8703848  -0.31142969 
 1525000    11.082342    1.5077056    9.5746363  -0.30049153    1.0053603    1.2981803   0.81084386   -3.5502959            3    5.5642991    7.8236497    7.9592051   0.91004265  0.016364476    0.2065217 0.0038131097    5.3864107    5.3747462    1.0474764        0.075    2.0598954          0.5   0.11638626    4.2960397    2.8080002    30.801768 -0.013742342  -0.36866277 -0.027863752   0.35072166   -1.5853924    2.7387738 
 1526000     11.09806    1.4763495    9.6217105  -0.29292961    0.9844516    1.2624028   0.79982347   -3.5502959            3    5.7914597    7.9324589    8.0645604    1.3773597 -0.027795998  0.024085752 -0.004498397     5.615989    5.6071308    1.0072274        0.075    2.1122546          0.5   0.11191415    4.4677101    2.8138033    30.801768 -0.032183966  -0.35558173   0.01411671   0.35570422    1.0804674    6.0959281 
 1527000    11.112871    1.4794187    9.6334522  -0.27584707   0.98649816    1.2905339   0.78451005   -3.5502959            3    5.7950191    8.0223696    8.0319971    1.3306905 -0.0093250703  -0.23473455  -0.01939496     5.622908    5.6065826    1.0343286        0.075    2.0887016          0.5    0.1149254    4.3506483     2.811379    30.801768 -0.017262997  -0.37751038 -0.020805959   0.45042758   -1.4646779    7.1051633 
 1528000    11.092757    1.4648798    9.6278771  -0.29452506   0.97680344    1.2718295   0.78080821   -3.5502959            3    5.4998463    7.7223366     7.865059   0.91214314 -0.0073241661  -0.11259266  -0.08975167    5.3285473    5.3141409    1.0068449        0.075    2.1105317          0.5   0.11187165    4.4694075     2.809885    30.801768 -0.021024709  -0.35134324 -0.019485707   0.36984147    -1.911394    2.0770725 
 1529000    11.128896     1.484873    9.6440227  -0.26626204   0.99013518    1.2928334   0.78903862   -3.5502959            3     5.495386    7.7827518    7.8757186   0.82768753 -0.011468327 -0.045801182 0.0058159648    5.3222814    5.3066138    1.0206456        0.075    2.0904623          0.5   0.11340507     4.408974    2.8387041    30.801768 -0.013064311  -0.38559034 -0.013383059    0.4389964   -1.4897501  -0.28108789 
 1530000       11.149    1.4969169    9.6520833  -0.28244446   0.99816621    1.2922172   0.80282789   -3.5502959            3    5.6098165     7.820814     7.981128    1.0275075 0.0017232856  -0.17219132  -0.06268754    5.4336867    5.4211343    1.0045515        0.075    2.0754251          0.5   0.11161684    4.4796108    2.8033544    30.801768 -0.0071078855   -0.3677281 -0.013185342   0.35312392 -0.003772912    2.7464525 
 1531000    11.132297    1.5009109    9.6313857  -0.28822764    1.0008295    1.3055584    0.7983853   -3.5502959            3     5.670864    7.9070484    8.0294498    1.0760937 -0.029991531  -0.19876685  0.029778369    5.4957088    5.4802337    1.0394108        0.075    2.0555161          0.5   0.11549009    4.3293758    2.8372196    30.801768 -0.0013891645  -0.38779667 -0.0043567165   0.46874465   0.86486781  -0.34044597 
 1532000     11.18481    1.5130936    9.6717167  -0.28261852    1.0089531    1.2486606   0.84978739   -3.5502959            3    5.6661958    7.8863755    7.9887365    1.1234754 0.0023250211 -0.032904195  0.030488073    5.4797637    5.4838734    1.0070707        0.075    2.0776394          0.5   0.11189674    4.4684054    2.8101247    30.801768 -0.0053785616  -0.32957163 -0.0049369066   0.36086489    3.2105308    6.9596948 
 1533000     11.12311    1.4966009    9.6265089  -0.30736161    0.9979555    1.3235378   0.78163121   -3.5502959            3    5.5832142    7.7918191    7.9511192    1.0067043  -0.02178239 -0.083260541  0.041944104    5.4117347    5.3899587    1.0311143        0.075    2.0842418          0.5   0.11456825    4.3642107    2.8224624    30.801768  0.046138229  -0.39925627  0.015503905   0.38393658 -0.077072919    1.1677004 
 1534000    11.108278    1.4996818    9.6085961  -0.29677043    1.0000099    1.3211404   0.78664931   -3.5502959            3    5.3587177    7.7197155      7.79171   0.56472774 -0.010120471  -0.07248046  0.069215084    5.1861373    5.1658123    1.0218268        0.075    2.0777699          0.5   0.11353631    4.4038776    2.8038876    30.801768 -0.016912161  -0.34382066 -0.016857201   0.35248242   0.24687093  -0.92562324 
 1535000    11.091184    1.4701057    9.6210783  -0.29066878   0.98028814     1.269163   0.78838816   -3.5502959            3    5.6701464    7.8594083    8.0106935    1.1403374  0.007051621  -0.13051239 -0.014584501    5.4971845    5.4848304     1.026152        0.075     2.067563          0.5   0.11401689    4.3853154    2.8141308    30.801768 0.0040400722  -0.36221503 -0.018367138   0.37160669    1.5473141    1.3716615 
 1536000    11.109059    1.5123986    9.5966607    -0.304298    1.0084896    1.2928016   0.81963696   -3.5502959            3    5.5004818    7.7728901    7.8910805   0.83747471 -0.0017974405  -0.31245312   0.10602264    5.3206643    5.3117142    1.0297695        0.075    2.0888369          0.5   0.11441884    4.3699098    2.8045252    30.801768  0.014049389  -0.30832645 0.0075953366   0.34223775    1.1439205    1.2146098 
 1537000     11.07752    1.4803915     9.597129   -0.2929055   0.98714684    1.2608489    0.8053478   -3.5502959            3    5.7415852    7.9287449    8.0462105    1.2498001 -0.0088041783  -0.20197854  0.029545035    5.5649025    5.5574832     1.026004        0.075    2.0553984          0.5   0.11400044     4.385948    2.7893928    30.801768 0.0078956159  -0.40347612  0.042916401   0.40897652    1.8821472     3.291204 
 1538000    11.041022    1.4539433    9.5870783  -0.31830618   0.96951078    1.2344713    0.7935232   -3.5502959            3    5.4627139    7.6409073    7.9047798   0.84245454 0.0010612465   0.10687345  0.034654703    5.2886254    5.2824634    1.0462797        0.075    2.0897441          0.5   0.11625329    4.3009534     2.796166    30.801768 0.0046237426  -0.34203598  0.029666313   0.54687998   -2.1159714      2.36038 
 1539000    11.079665     1.479807    9.5998579  -0.29754456   0.98675712     1.251039   0.81122756   -3.5502959            3    5.7459414    7.8656407    8.1274121    1.2447713 -0.00055932596 -0.079947952 -0.025239085    5.5679688    5.5632717    1.0178071        0.075    2.1142914          0.5   0.11308967    4.4212702    2.7970701    30.801768 -0.018210124  -0.39604142 -0.031592089   0.35011475   -1.2830693    8.3949092 
 1540000    11.069012    1.4883592    9.5806525  -0.31581602   0.99245983    1.2770822   0.80339465   -3.5502959            3    5.2158855    7.6308548    7.6742869    0.3425148 -0.022021823   -0.1208372  0.063120944    5.0396313    5.0294132     1.049648        0.075    2.0726579          0.5   0.11662756    4.2871514    2.8069211    30.801768 -0.0024076088  -0.31119138 0.0076896726   0.34751625   -2.5922452   -5.0529097 
 1541000     11.01795    1.4422597    9.5756899  -0.29034763   0.96171996    1.2093573   0.79725905   -3.5502959            3    5.7346609    7.9907885    8.0198495    1.1933448    0.0239824  -0.15115304 -0.063679431    5.5597529    5.5580774    1.0198396        0.075    2.1013978          0.5   0.11331551    4.4124585    2.7650419    30.801768  0.015411699  -0.37821578  0.016056978    0.3355251   0.89333866    4.4727664 
 1542000    11.065681    1.4918272    9.5738534  -0.30767784   0.99477236    1.2797746   0.80545519   -3.5502959            3    5.5661769    7.7777522    7.9812092   0.93956941 -0.029791194 -0.023058031 -0.010313784    5.3894707    5.3793115    1.0448799        0.075    2.0993148          0.5   0.11609777    4.3067149    2.7992142    30.801768 0.0081657803   -0.3406683 -0.028067347   0.28761935     -1.75679  -0.79650495 
 1543000    11.075033    1.4681487    9.6068841  -0.26761996   0.97898318    1.2234876   0.81661381   -3.5502959            3    5.6201725    7.8777338    7.9293447     1.053439  0.040571216   -0.0083947  0.028049489    5.4410182    5.4415258    1.0239115        0.075    2.1046133          0.5   0.11376795     4.394911    2.8059854    30.801768 -0.029602707  -0.32681239 0.0067365324   0.35336007 -0.048307039    3.5836329 
 1544000    11.117426    1.5088747    9.6085512  -0.30758509    1.0061398    1.2797575   0.82440395   -3.5502959            3    5.5947563    7.7610364    7.9919455    1.0312872 -0.0058075469  0.011538862  0.073221347     5.413893    5.4078934    1.0436112        0.075    2.0906297          0.5    0.1159568    4.3119508     2.802435    30.801768 -0.029314705  -0.40338622 -0.0022897451   0.33138092  -0.22694319   0.90370349 
 1545000    11.065048    1.4706161    9.5944321  -0.29199454   0.98062848    1.2892412   0.77559199   -3.5502959            3    5.3203579    7.6402551    7.7694678   0.55135093  0.028223818  -0.16454679 -0.071221376    5.1502033    5.1321102     1.016841        0.075    2.0792869          0.5   0.11298233    4.4254707    2.8114843    30.801768  0.021350455  -0.39074501 -0.011874791    0.3778304    1.5668756    2.1578041 
 1546000    11.100031    1.4997965    9.6002347   -0.2960213    1.0000864    1.2902961   0.80730537   -3.5502959            3     5.574586    7.9078292    7.9421487   0.87377995     -0.03121 0.0014261525   0.02724414    5.3974739    5.3861842    1.0431432        0.075    2.0553662          0.5   0.11590479    4.3138854    2.8202093    30.801768 0.0019899459  -0.34744845 -0.0091808393    0.3590139     1.296111   -0.4913226 
 1547000    11.100451    1.4850313    9.6154195  -0.27358695   0.99024072    1.2625949   0.80933992   -3.5502959            3    5.6753736    7.9303345    8.0251669    1.0706195  0.040241808  -0.26318471  0.021490905    5.4978152    5.4910167    1.0378923        0.075    2.0562233          0.5   0.11532136    4.3357101    2.8398304    30.801768 -0.0014117752  -0.34795094  0.027065616    0.3769614   -1.5415469    3.2358985 
 1548000    11.095085    1.5038664    9.5912191  -0.31717166    1.0028003    1.2951473    0.8085977   -3.5502959            3    5.3490848      7.66701    7.7827719   0.59747262 -0.013781429   0.14996833  0.042337546    5.1716892    5.1599748    1.0343993        0.075    2.0603532          0.5   0.11493326    4.3503509    2.8092172    30.801768  0.011695125  -0.34752285  0.050160972   0.34411999   -2.1688901    3.8278358 
 1549000    11.096201    1.4694865     9.626714  -0.30047846   0.97987521    1.2397221   0.80729487   -3.5502959            3    5.5620723    7.7711125    7.9515511   0.96355331  0.053026995 -0.051092665 -0.040095856    5.3849625    5.3810551    1.0289979        0.075    2.0760872          0.5    0.1143331    4.3731867    2.7797124    30.801768 8.2236563e-06  -0.35538434  0.003064489   0.39521457  -0.86328838    6.3592848 
 1550000    11.120431     1.508666    9.6117651  -0.31183095    1.0060007    1.2700814   0.83061217   -3.5502959            3    5.4970637    7.8007686    7.8443791   0.84604346 -0.0094652591  -0.15278937  0.085420554    5.3148384    5.3116136    1.0294434        0.075    2.0375882          0.5    0.1143826    4.3712942    2.8205031    30.801768 -0.0019558354  -0.41188259 -0.016946399   0.32660621    0.2100553    3.0416286 
 1551000    11.074603    1.4398482    9.6347553   -0.2977358   0.96011196    1.2383593   0.77527773   -3.5502959            3    5.5019447    7.7057802    7.9199452   0.88010862 -0.0046857965  -0.13780178 -0.031137234     5.331859    5.3211264    1.0321299        0.075    2.0960592          0.5    0.1146811    4.3599162    2.8344721    30.801768 0.00022969666  -0.37412277 -0.022998841   0.32698554     1.018032   -1.2133408 
 1552000    11.073262    1.4891819    9.5840801  -0.31004219   0.99300841    1.2913511   0.79481176   -3.5502959            3    5.5854183    7.8189796     7.933316    1.0039591 0.0034268389 -0.024337982  0.025107405    5.4110471    5.3968625    1.0315649        0.075    2.1033839          0.5   0.11461832    4.3623045     2.831675    30.801768  0.039422455  -0.38279976 -0.0045678552   0.33826802   -2.0691984   0.66583131 
 1553000    11.069215    1.4837997    9.5854149  -0.30199839   0.98941945    1.2571112   0.81162144   -3.5502959            3    5.6784048    7.9170772    7.9853512    1.1327858 0.0088701626  -0.11919857  0.028393492    5.5003458    5.4948485     1.034931        0.075    2.1038949          0.5   0.11499233    4.3481159    2.7972106    30.801768 -0.0032890011  -0.37990381 -0.0057812667   0.44356115      1.91102    6.4032235 
 1554000    11.065938    1.4671314    9.5988065  -0.27959463   0.97830484    1.2528621   0.79593335   -3.5502959            3    5.6140355    7.8789384    7.9452237    1.0179443  0.024329107  0.044279449 -0.051749476    5.4394182    5.4310996    1.0322753        0.075    2.0582376          0.5   0.11469725    4.3593023    2.8137002    30.801768 -0.039265789  -0.39892394  0.018356445   0.33221952    2.1114035    4.9438495 
 1555000    11.044361    1.4688491    9.5755118  -0.30660402   0.97945022    1.2644597   0.79012257   -3.5502959            3    5.5953207    7.8524115    8.0095022   0.92404828 -0.015284699   0.14370282 -0.061474079    5.4219783    5.4106914    1.0509662        0.075    2.0881702          0.5   0.11677402    4.2817742    2.8182567    30.801768  0.004824622  -0.34272656  0.016673208   0.37786274   -1.0161403    3.4109932 
 1556000    11.064656    1.4704245    9.5942318   -0.2902659   0.98050069    1.2534286   0.79921443   -3.5502959            3    5.8259687    8.0340978     8.123973    1.3198354  0.031343186 -0.064940239  0.020093454    5.6506316    5.6429502    1.0377117        0.075    2.0995969          0.5    0.1153013    4.3364646    2.8026244    30.801768   0.01085445  -0.33009017 -0.012392368   0.46733234   -1.6545648    6.1141054 
 1557000     11.10501    1.4774854    9.6275246  -0.30082878   0.98520899    1.2994852   0.77640483   -3.5502959            3    5.6783073    7.8226469    8.0596137    1.1526614 -0.0012584307 -0.0038731104 -0.033555924    5.5079744    5.4885638    1.0390035        0.075    2.1058469          0.5   0.11544483    4.3310731    2.7988482    30.801768 -0.004705037  -0.36112791  0.010532211   0.41246366   0.62601529   -1.7895505 
 1558000    11.105552    1.4809413    9.6246106   -0.2829501   0.98751344    1.2815608   0.79217357   -3.5502959            3    5.6463158    7.8868065    7.9872403    1.0649005 0.0090420036 -0.051533972    0.1024883    5.4725234    5.4591895    1.0222143        0.075    2.0878689          0.5   0.11357936    4.4022082    2.7929891    30.801768  0.013833558  -0.38575503 0.0048218103   0.38279219   -0.3566692    1.9057472 
 1559000    11.118049    1.5055349    9.6125137  -0.29549987    1.0039128    1.2838292   0.81798399   -3.5502959            3    5.7289729    7.9491168    8.0839964    1.1538056 -0.0071386724 -0.018521699  -0.11259828    5.5495181    5.5415155     1.036595        0.075    2.1057441          0.5   0.11517722    4.3411361    2.8012679    30.801768 -0.011836747  -0.33890958 -0.0059655396   0.37720527   0.27002024    9.6644534 
 1560000    11.072751    1.4788212    9.5939294  -0.29328391   0.98609973    1.2615709   0.80312285   -3.5502959            3    5.4813418    7.7735648    7.9048483   0.76561241  0.011172547 -0.092847012 0.0024101683    5.3051473    5.2971344     1.017297        0.075     2.120304          0.5     0.113033     4.423487    2.8188251    30.801768 -0.038235058   -0.4148372 -0.033213553   0.39509877   -1.0210497     1.500494 
 1561000    11.103675    1.4801236    9.6235516  -0.29103552   0.98696821    1.2399364   0.81896861   -3.5502959            3    5.4647959    7.7233423    7.8589922   0.81205333 0.0056112155  0.095347668  0.039614217    5.2851251    5.2837474    1.0426406        0.075    2.0903398          0.5   0.11584895    4.3159647    2.7949496    30.801768 -0.020793482  -0.42105841 0.00064948893   0.27687565    1.7454358    4.9448872 
 1562000    11.079317    1.4771865     9.602131  -0.28816554   0.98500968    1.2489053   0.80973661   -3.5502959            3    5.6004801     7.824418    7.9649785    1.0120437  0.008869836  -0.31584399  0.056442637    5.4228346     5.418122     1.014623        0.075    2.0978106          0.5   0.11273589    4.4351448    2.8113848    30.801768  0.015181603  -0.37451387 -0.0047608171   0.31778889   -2.7533626   -0.9609353 
 1563000    11.124897    1.4872318    9.6376657  -0.31728825   0.99170802    1.2395223   0.82714041   -3.5502959            3    5.3517634    7.6139855    7.8046453   0.63665956  0.015221052 -0.007671469 -0.031945846    5.1702998    5.1707754    1.0523792        0.075    2.0866784          0.5   0.11693102    4.2760253    2.8325521    30.801768 -0.0023613428  -0.41683275 -0.018837991   0.38207493   -2.4173299   -1.4887452 
 1564000    11.125955    1.5055626    9.6203924  -0.29092317    1.0039313    1.2685726   0.82816886   -3.5502959            3    5.5635469    7.7468985    7.9226801     1.021062 -0.014928682 -0.065272128 -0.036673917    5.3818576    5.3783171    1.0102271        0.075    2.1034259          0.5   0.11224745    4.4544442    2.8020555    30.801768 -0.0036675668   -0.3407923  0.024350707   0.33316375   0.39198805    4.7955636 
 1565000    11.122478    1.4902629    9.6322148   -0.2871466   0.99372925    1.2900792   0.79685919   -3.5502959            3    5.6380587    7.9035135    8.0144354   0.99622716 -0.00084616885   -0.2602299  -0.12330288    5.4632383    5.4496886    1.0334352        0.075    2.0946911          0.5   0.11482613    4.3544095    2.8138912    30.801768 -0.055543976  -0.42487702  0.012291951   0.33991086    0.9797784    4.0324268 
 1566000     11.09585    1.4969135    9.5989364  -0.29843636   0.99816393    1.2854621      0.80732   -3.5502959            3    5.7780477    7.9895355    8.0585536    1.2860541 0.0069658529  0.060669174 -0.063709579    5.6009324    5.5903518    1.0313582        0.075    2.0742998          0.5   0.11459535    4.3631786    2.7810956    30.801768  0.041122205  -0.38502648 -0.027940504   0.31077292   -1.1271134    8.3812606 
 1567000     11.11413    1.4960291    9.6181009  -0.30926855   0.99757423    1.2810765   0.80925645   -3.5502959            3    5.5199794    7.7392398    7.8627582   0.95794013 -0.0050130313  -0.24214056 -0.036997937    5.3424393    5.3329239    1.0227356        0.075    2.0839826          0.5   0.11363729    4.3999641    2.7878249    30.801768  0.016042826   -0.3287374  0.027606991   0.40498749    1.0279858    0.9570148 
 1568000    11.141312    1.4822504    9.6590615  -0.29041095   0.98838641    1.2387242   0.82213803   -3.5502959            3    5.5216345    7.7360112    7.9540487   0.87484351 -0.0062480448  -0.16322371  0.007464963    5.3412683     5.340763    1.0314669        0.075    2.0750968          0.5   0.11460743    4.3627189    2.7986854    30.801768 -0.0034951265  -0.31667792 0.0019804473   0.34688296   -1.3676708    4.2387994 
 1569000    11.106932    1.4729415    9.6339908  -0.29509564   0.98217904     1.261083   0.79691598   -3.5502959            3    5.5315634    7.7474705    7.9286475   0.91857215 -0.0049403977 -0.079973132 -0.054519673    5.3567306    5.3474272    1.0254067        0.075    2.1058547          0.5   0.11393407    4.3885028    2.8226508    30.801768 -0.013118096  -0.29302605 -0.012236848   0.37967906    1.0637755    4.3664875 
 1570000    11.113644    1.4619563    9.6516874  -0.29595916   0.97485395    1.2487468   0.79292336   -3.5502959            3    5.6571493    7.8617785    8.0255606    1.0841089  0.031597768  0.061982291 0.0040960789    5.4831924    5.4748144     1.025162        0.075    2.1086852          0.5   0.11390689    4.3895502     2.809861    30.801768  0.014746896  -0.34412908 -0.0053806839   0.31152308   -1.3059902    8.0850433 
 1571000    11.082702    1.4664247    9.6162772  -0.29822935    0.9778336    1.2367783   0.80585296   -3.5502959            3    5.4839797    7.7719638    7.9156996   0.76427551 -0.025407836   0.22689993   0.16269082    5.3071862    5.3033923    1.0304233        0.075     2.067044          0.5   0.11449148    4.3671372    2.8063287    30.801768 -0.009932936  -0.35265536   -0.0269341   0.30607631    -5.036051    4.0063495 
 1572000    11.104635    1.4825218    9.6221132  -0.29657946   0.98856733    1.2709552   0.80098787   -3.5502959            3    5.5080447    7.7590017    7.9248183   0.84031424 -0.021021372  -0.43885642 -0.067954677    5.3323186     5.322467    1.0333852        0.075    2.0713245          0.5   0.11482058    4.3546199    2.7893304    30.801768 -0.013586686  -0.39977057 -0.021724304   0.36450287     3.078329    4.6593933 
 1573000     11.10064    1.5042966    9.5963434  -0.29301048    1.0030871    1.3191151   0.79312367   -3.5502959            3    5.4656396    7.7992839    7.7681498     0.829485  0.023146348 -0.076627753 -0.016925668    5.2916387    5.2730298    1.0367905        0.075    2.0822596          0.5   0.11519894    4.3403177    2.8366106    30.801768 -0.00052031736  -0.42680208 -0.031124906   0.39225393   0.69791846    3.1388117 
 1574000    11.075996    1.4711932    9.6048027  -0.29843171   0.98101331    1.2411186   0.80826138   -3.5502959            3    5.4767288    7.7657596    7.8728522   0.79157445  0.011365809 -0.021118131  0.047402931    5.2994069    5.2955076    1.0385896        0.075    2.0348209          0.5   0.11539885    4.3327989    2.8334555    30.801768 0.0028511745  -0.37734634 0.0076266101   0.31895304  0.035485868   -3.7701518 
 1575000    11.066892    1.4661599    9.6007323  -0.28975498   0.97765699    1.2702131   0.78330601   -3.5502959            3    5.6277339    7.8318784    8.0533464    0.9979769  0.013619159  -0.23214701 -0.038991754    5.4558869    5.4422646     1.041656        0.075    2.1081109          0.5   0.11573955    4.3200443    2.8356067    30.801768 0.0053327253   -0.3476269 0.0019724454   0.39611334   0.63297684      3.84289 
 1576000    11.116219    1.4811674    9.6350521     -0.30323   0.98766419    1.2363205   0.82253465   -3.5502959            3    5.3313352    7.5911486    7.7735224   0.62933445 0.0052870977  -0.26928883   0.11071869    5.1508819    5.1508146    1.0215102        0.075    2.1166834          0.5   0.11350113    4.4052424    2.8032386    30.801768  0.022580509  -0.34276222 -0.015961038   0.33013004    2.0801103   -1.4083443 
 1577000    11.083316    1.4652881    9.6180278  -0.30636831   0.97707567    1.2835143   0.77348483   -3.5502959            3    5.7435445    7.8941192     8.077101    1.2594134 0.0064134984   -0.1696926  0.082991262    5.5738522     5.556133    1.0176193        0.075    2.0746175          0.5   0.11306881    4.4220859    2.7963174    30.801768 -0.025166386   -0.3793834 -0.015063481   0.29800372    5.3788113    5.4993446 
 1578000    11.145447     1.510833    9.6346138  -0.28500816    1.0074457    1.3009052   0.81250443   -3.5502959            3    5.7435799     7.841489    8.0571602    1.3320905  0.016152782    0.0388784  -0.12064408    5.5653272    5.5536291    1.0175225        0.075    2.0539624          0.5   0.11305806    4.4225065    2.7786241    30.801768 0.0095817447  -0.39591995  0.022450945   0.43537382  -0.67132102    4.9392312 
 1579000    11.119216    1.4853968    9.6338188  -0.27596201   0.99048447    1.2917561   0.79033751   -3.5502959            3    5.3650398    7.6874315    7.7757083   0.63197957  0.047112061 -0.021576565 -0.025427248    5.1916502    5.1764249    1.0247737        0.075     2.090431          0.5   0.11386374    4.3912134    2.8034539    30.801768 -0.0019631465  -0.35065817 0.0074616239   0.38887447   -2.9053725  -0.13855309 
 1580000     11.06318    1.4690217    9.5941582   -0.2823307   0.97956528    1.2799099   0.78003127   -3.5502959            3     5.374099    7.6958609    7.8623382    0.5640979 -0.015074206  -0.01296098  -0.15708689    5.2029705    5.1872138    1.0243703        0.075    2.0837576          0.5   0.11381892    4.3929427    2.8024529    30.801768 -0.0080318675  -0.44142748 -0.062260146   0.42070373  -0.52815772    1.3449631 
 1581000    11.078239    1.4785527    9.5996868  -0.29062769   0.98592069    1.2797408   0.79073146   -3.5502959            3    5.6414261    7.8737456    8.0145669    1.0359658 0.0099450165 -0.021345126 -0.027831881    5.4679501    5.4545656    1.0284222        0.075    2.1103474          0.5   0.11426913    4.3756349    2.8019213    30.801768 -0.021923674  -0.38136749 0.00026811889   0.33344615   0.75353182    3.7331916 
 1582000    11.095787     1.494416    9.6013714  -0.30561426   0.99649857    1.2671587   0.81672754   -3.5502959            3    5.5942113    7.8179349    7.9507437    1.0139554  -0.02109648  0.074633915  0.036056087    5.4150321     5.409188     1.036415        0.075    2.0782642          0.5   0.11515722    4.3418901    2.8156427    30.801768  0.020914084  -0.36467634    0.0220334   0.39568063   -3.3254843    0.8157508 
 1583000    11.099563    1.4937915    9.6057714  -0.29917401   0.99608213    1.2987769   0.79499004   -3.5502959            3     5.550838    7.8592622    7.9081769   0.88507492  0.010648672  -0.18484264 -0.070700379    5.3764277    5.3611979    1.0163066        0.075     2.095692          0.5   0.11292295    4.4277977    2.8068644    30.801768 -0.0064634476  -0.31150471  -0.03938083   0.36797484       1.7134    1.7868145 
 1584000    11.043751    1.4497548    9.5939957  -0.30218497   0.96671785    1.2789977   0.75923552   -3.5502959            3    5.5136913    7.8150694    7.9136572   0.81234738 -0.043800391 -0.084336755  0.029188105    5.3471251    5.3269393    1.0380943        0.075    2.0847381          0.5   0.11534381    4.3348664     2.794471    30.801768  0.028303843  -0.33887457 -0.0088577737   0.35967545    2.5008021   0.96812505 
 1585000    11.066406     1.483181    9.5832247  -0.31202778   0.98900689    1.2727455   0.80052862   -3.5502959            3    5.5562005    7.7628011    7.8853582    1.0204423  0.044995202  -0.20670725 -0.0055301313    5.3805751    5.3703614    1.0341301        0.075    2.0877707          0.5   0.11490335    4.3514834    2.8320436    30.801768 0.00091602346  -0.39079056  0.011783932   0.38020826    1.3887162   -1.5761343 
 1586000    11.092987    1.4701939    9.6227931  -0.30917224   0.98034695    1.2163858   0.82361238   -3.5502959            3    5.4034844     7.654362    7.8571444   0.69894674 0.0021659028  0.093298114 -0.0015440339    5.2227948    5.2258746    1.0319145        0.075    2.0989734          0.5   0.11465716    4.3608265    2.8012986    30.801768 -0.005458503  -0.37293045 -0.017041671   0.39458436   -2.4620709   -2.1851446 
 1587000    11.090993    1.4948539    9.5961388  -0.30817261   0.99679058    1.2620591   0.82060808   -3.5502959            3      5.57091    7.7679754    7.9441675    1.0005872 -0.0033829785 -0.073025054 -0.038644001    5.3908795    5.3866313    1.0401305        0.075     2.114557          0.5   0.11557005    4.3263803    2.8075136    30.801768 -0.015812273  -0.39778858 -0.001243986   0.39640441   0.56436391   -2.4365151 
 1588000    11.042615    1.4422613    9.6003538  -0.29192085   0.96172106    1.2280187   0.78484068   -3.5502959            3    5.3904689    7.6544645    7.8217381   0.69520413  0.016018167   -0.1564681 -0.087150795    5.2182852    5.2111606    1.0310734        0.075    2.0821337          0.5   0.11456371    4.3643839    2.8028923    30.801768   0.00651575  -0.38418551 -0.011175329   0.37922783  0.048209156    4.6896435 
 1589000    11.044041    1.4652469     9.578794  -0.29669431   0.97704818    1.2440603   0.79969792   -3.5502959            3    5.5836452    7.8922585    7.9205786   0.93809842 -0.0093044776  0.057144798 0.0096026464     5.408202    5.4019945    1.0620512        0.075    2.0839834          0.5   0.11800568     4.237084    2.8424504    30.801768 -0.021554193  -0.44998642 -0.0090913555   0.30908212    3.0702117    3.7071958 
 1590000     11.02295    1.4513966    9.5715538  -0.28717529   0.96781264    1.2327371   0.79184838   -3.5502959            3     5.545995    7.8187782    7.9526581   0.86654881 -0.015599904 -0.0083604803 -0.0048044645     5.372274    5.3659977    1.0254591        0.075    2.0709753          0.5    0.1139399    4.3882783    2.7966593    30.801768 -0.034971984  -0.39739768  0.014763789   0.37873249   -1.9470591   0.77273284 
 1591000    11.060041    1.4664872    9.5935539  -0.29865328   0.97787522     1.275682   0.78002969   -3.5502959            3    5.5075582    7.8085131    7.8715333   0.84262817 -0.018249331  -0.16078913  -0.14024819      5.33643    5.3212903    1.0477561        0.075    2.0679645          0.5   0.11641734    4.2948928    2.8379093    30.801768 -0.0072619739  -0.41627209 -0.0050218736   0.37128214   0.39934042    3.5614258 
 1592000    11.099465     1.487497    9.6119683  -0.28480693   0.99188488    1.2709993   0.80648535   -3.5502959            3    5.6874392    7.8961364    8.0452652    1.1209161  0.025236501 -0.054683652 -0.015006599     5.510507    5.5018551    1.0187533        0.075    2.0482569          0.5   0.11319481    4.4171635    2.7878809    30.801768 -0.0021111153  -0.39702549 -0.012796731   0.30728543   -0.1866021    0.6779052 
 1593000    11.076241    1.4924531    9.5837875   -0.3028965   0.99518971    1.2662458   0.81515466   -3.5502959            3    5.7291603    7.9484866     8.034041    1.2049534  0.011141056 -0.0096278989 -0.0091984663    5.5503262    5.5442703    1.0334161        0.075    2.0738542          0.5   0.11482401      4.35449    2.7770082    30.801768 -0.022200997  -0.37616545 0.0076511165   0.40393335    2.4977874    5.8697317 
 1594000    11.084316    1.4821845    9.6021312  -0.28952033   0.98834244    1.2819815   0.79327459   -3.5502959            3    5.7598168    7.9417536    8.1215492    1.2161475  0.027179237    0.0065588   0.11472251    5.5857828    5.5726291    1.0427065        0.075    2.1067877          0.5   0.11585628    4.3156919     2.814985    30.801768 -0.029618824  -0.46000438 -0.022957623   0.36993941   -1.5563785   -1.1128384 
 1595000    11.125433    1.5054204    9.6200125  -0.28516264    1.0038365    1.2847972    0.8172125   -3.5502959            3    5.5858211    7.8504057    7.9452377   0.96182007  0.020703649  -0.32460733   0.10800551    5.4065356    5.3982223    1.0268719        0.075    2.0676438          0.5   0.11409688     4.382241    2.7929145    30.801768 -0.0067808302   -0.3347696 -0.005339106   0.41515642    1.0116836     3.913959 
 1596000    11.054389    1.4577718    9.5966175  -0.28227513   0.97206367     1.243335   0.79187683   -3.5502959            3    5.5956329    7.8084125    7.9701838    1.0083023 0.0044750079    0.2456268  -0.10345887    5.4219056    5.4140881    1.0097308        0.075    2.0403078          0.5   0.11219231    4.4566334    2.7988458    30.801768 -0.0016532203  -0.38840382 -0.037454426   0.34640252    1.2453189    3.9677379 
 1597000    11.083234    1.4839016    9.5993325  -0.30055339   0.98948741    1.2655382   0.80612602   -3.5502959            3    5.5692969    7.8924994    7.9340601    0.8813313 -0.027383384 0.0041725901  0.031326759    5.3924435    5.3845102    1.0256474        0.075    2.0107902          0.5   0.11396083    4.3874725     2.790099    30.801768  0.006764814  -0.36183655  0.055483363   0.42766408   -1.2900825   0.92495855 
 1598000    11.064537    1.4629334    9.6016033  -0.29323289   0.97550549    1.2569828   0.78852723   -3.5502959            3    5.7429644    7.9512307    8.0616579    1.2160045 -0.0074617207 -0.081122621  0.029794978    5.5699719    5.5594268    1.0297518        0.075    2.0256121          0.5   0.11441687     4.369985    2.8025397    30.801768 -0.021429567  -0.39947735  0.004134602   0.31209662  -0.45746528    7.9136887 
 1599000    11.078273    1.4819868    9.5962863  -0.29252345    0.9882106    1.2824774   0.79272497   -3.5502959            3    5.2928817    7.6362999    7.7513508   0.49099445   0.01085102  0.071657187   0.00166308    5.1189684    5.1056216    1.0216324        0.075     2.046329          0.5   0.11351471    4.4047155     2.780025    30.801768   0.01363623  -0.39433104 -0.015046901   0.36391348 -0.002427766   -5.8718357 
 1600000    11.086483    1.5044044    9.5820785  -0.29187319     1.003159    1.3022077   0.80449624   -3.5502959            3    5.5944401    7.8237329    7.9317409    1.0278465 -0.003584799 -0.032495886  0.039467697    5.4179443    5.4042991     1.030846        0.075    2.0849029          0.5   0.11453845    4.3653465    2.7935632    30.801768  0.032429358  -0.45012037 0.0040461768    0.3305106    2.5744373    4.6223924 
 1601000    11.112091    1.5044972    9.6075934  -0.29743587    1.0032208    1.2708305   0.82548258   -3.5502959            3    5.6092917    7.8621327    7.9728447   0.99289764  0.016025982 0.0089105046 -0.0042228949    5.4281917    5.4237322    1.0303078        0.075    2.1111156          0.5   0.11447865    4.3676268    2.8133409    30.801768 -0.023198266  -0.35129616 -0.021826484   0.37901121   -3.0173607  -0.44941566 
 1602000    11.097327    1.4736036    9.6237232   -0.2924019   0.98262058    1.2545981   0.80196763   -3.5502959            3    5.6733312    7.8280435    8.0452216    1.1467286 0.0062713776 -0.069289992  0.073332741    5.4973902    5.4901419    1.0279261        0.075    2.0954793          0.5   0.11421401    4.3777468    2.8154399    30.801768  0.017420399  -0.38501509 -0.015556963   0.36215231    2.9537958     1.905072 
 1603000    11.115436      1.47769    9.6377463  -0.28444627   0.98534542     1.265826   0.79903422   -3.5502959            3      5.55592    7.8473494    7.9391684   0.88124235  0.012359717  -0.16755477  0.015108717    5.3806225    5.3710913     1.025797        0.075    2.0939455          0.5   0.11397745    4.3868327    2.8230367    30.801768 -0.0034828644  -0.34611197  0.013383427     0.398763  -0.19561361   -1.4175983 
 1604000    11.151235    1.5032262    9.6480084  -0.28656916    1.0023733    1.2802996   0.81776845   -3.5502959            3    5.7274171     7.928168    8.0506239    1.2034595  0.024692508    0.1258122  0.064648548    5.5480096     5.540475    1.0178883        0.075    2.0989395          0.5    0.1130987    4.4209171    2.7961835    30.801768 -0.027497983  -0.38516033 -0.016507241   0.39712383  -0.57120356     3.715673 
 1605000    11.066525    1.4520753    9.6144495  -0.27900183   0.96826519     1.264466   0.77148493   -3.5502959            3    5.5966355    7.8783826    7.9886844   0.92283939 -0.010667247  -0.30607417  0.066923707    5.4273819    5.4120053    1.0265188        0.075    2.0905303          0.5   0.11405765    4.3837482    2.8246514    30.801768 -0.0006142464   -0.3195277 -0.0030825319   0.38249541    3.2848771    3.7726667 
 1606000    11.133656    1.5289603    9.6046952  -0.29359076    1.0195333    1.3076619   0.82814445   -3.5502959            3     5.600566    7.8252067    7.9815562   0.99493495 -0.023014708  0.099949075  0.051588154     5.418882    5.4096286    1.0165608        0.075    2.0954183          0.5    0.1129512    4.4266905    2.8093199    30.801768   0.02534449  -0.41626843  0.030088561   0.41597294    -3.950266    7.7492164 
 1607000    11.144058    1.5240698    9.6199884  -0.29423305    1.0162721    1.3013869   0.82688803   -3.5502959            3    5.5939876    7.8055245    7.9674537    1.0089845 0.0097464734  -0.14420191 -0.079527547    5.4125793    5.4039664    1.0190745        0.075    2.0932961          0.5    0.1132305    4.4157714    2.8062566    30.801768 -0.013879077  -0.29964518 0.00022988987   0.40493944  -0.37490642    7.2004585 
 1608000    11.133304    1.5107884    9.6225159  -0.29111984     1.007416    1.2933755   0.81746638   -3.5502959            3    5.6585068    7.7955544    8.0449711    1.1349951 -0.0026935284 -0.078072054 -0.071358112    5.4791656    5.4696555    1.0386347        0.075    2.1356306          0.5   0.11540385     4.332611    2.7917268    30.801768  -0.02718512  -0.41272556 -0.0031125527    0.3618012   0.12537171     2.155603 
 1609000    11.128807    1.5086333    9.6201738  -0.29478404    1.0059789    1.2924029   0.81571964   -3.5502959            3    5.5159401    7.7323762    7.9405421    0.8749021 -0.0063650447  -0.20548356 -0.090793061     5.336982    5.3272307    1.0093485        0.075    2.1083321          0.5   0.11214983    4.4583215    2.8004282    30.801768  0.040328275  -0.30534601 -0.0057726174     0.387672    1.2766019    1.4980855 
 1610000    11.103826    1.4783935    9.6254322  -0.30124572   0.98581456    1.2823822   0.78879667   -3.5502959            3    5.6888958    7.8642968    8.0744721    1.1279184 0.0013948127 -0.041725049  0.015325709    5.5158442    5.5016496    1.0442684        0.075     2.091733          0.5   0.11602983    4.3092368    2.8019826    30.801768  0.010326297  -0.39738846 -0.0038741292   0.41205419  -0.33651755    5.2706294 
 1611000    11.111204    1.4968992    9.6143046   -0.2849222   0.99815442    1.2636832   0.82179924   -3.5502959            3    5.3467622    7.6927741    7.7580679   0.58944453 0.0027743397  -0.20418286  -0.02988397    5.1664703    5.1622463     1.024922        0.075    2.0795326          0.5   0.11388023    4.3905778    2.8174318    30.801768 -0.0011368986  -0.35889766 -0.003596513   0.32490659   0.64976709    1.3064466 
 1612000    11.114453    1.4989511    9.6155016  -0.29032663   0.99952265    1.2808714   0.81263886   -3.5502959            3    5.6861586    7.9278382    8.0143387    1.1162989 -0.0066228744   0.17589606  0.043282438    5.5078764     5.499133    1.0339389        0.075     2.082915          0.5    0.1148821     4.352288    2.7986106    30.801768 -0.017832086  -0.43307043  0.018149909   0.37759341    0.4883374    8.4255834 
 1613000    11.094886    1.4948662    9.6000198  -0.29108419   0.99679875    1.2726773   0.81355468   -3.5502959            3     5.474967    7.7902739     7.829693   0.80493412  0.016028377  -0.10255827 -0.00038486489    5.2964839    5.2891379    1.0265277        0.075    2.0659407          0.5   0.11405863    4.3837103    2.8067132    30.801768 -0.011534696  -0.36184235 0.0072263931   0.40118418   -2.4565909    4.9522278 
 1614000    11.093644    1.4836354    9.6100087  -0.28803428   0.98930993    1.2279159   0.83087012   -3.5502959            3    5.7912352    8.0282538    8.0534134    1.2920386 -0.013622917 -0.030765913  0.068833364    5.6089533    5.6119419    1.0310633        0.075     2.034827          0.5   0.11456259    4.3644265    2.8115611    30.801768 -0.031819428  -0.40001491 0.0025335014   0.39081106    0.9443084    5.0697762 
 1615000    11.077956     1.461186    9.6167696  -0.30642691   0.97434033     1.252509   0.78956374   -3.5502959            3    5.4792953    7.7471434    7.8225517   0.86819089  0.022535528 0.0018293306  0.021852046    5.3060755    5.2964111    1.0346913        0.075    2.1029561          0.5    0.1149657    4.3491232    2.8198585    30.801768  0.015030469  -0.30639823 -0.007707684    0.4302341  -0.14892097    1.4717327 
 1616000    11.051083    1.4925703    9.5585122  -0.30471335   0.99526783    1.2983919   0.79388973   -3.5502959            3    5.6975333     7.913876    8.0338592    1.1448645 0.0057008111  -0.19938399  0.083293428    5.5233644    5.5079494    1.0340482        0.075    2.0864666          0.5   0.11489424    4.3518281      2.83928    30.801768  0.026819298  -0.40538667 0.00073268499   0.38099979   0.25319274    0.4374246 
 1617000    11.096125    1.4872983     9.608827  -0.29129408   0.99175242    1.2850545   0.79691016   -3.5502959            3    5.6317737     7.908868    8.0104234   0.97602987  0.015023792 -0.023804028  0.035389925    5.4569422    5.4441374     1.015852        0.075    2.0728308          0.5   0.11287245    4.4297791    2.8011529    30.801768 -0.017170006   -0.3464418 -0.025782191   0.41066227    1.0136316    3.1689681 
 1618000    11.106244    1.5051959    9.6010478  -0.30758048    1.0036868    1.2634877   0.83114584   -3.5502959            3    5.3494712    7.6773294    7.7829222   0.58816206 0.0039114486  -0.15944133  0.032607632    5.1671288    5.1649839    1.0378872        0.075     2.086646          0.5    0.1153208    4.3357313    2.8058253    30.801768  0.015089495  -0.39096975 -0.023370563   0.35854761   -1.1607382    2.6670957 
 1619000    11.100771    1.5005494    9.6002214  -0.29624252    1.0005884    1.2986567   0.80257726   -3.5502959            3    5.4517194    7.8365494    7.8026684   0.71594046 -0.0037769481   0.10690452 0.0071026058    5.2756446    5.2620969    1.0263158        0.075    2.0807522          0.5   0.11403509    4.3846153     2.803061    30.801768 -0.0088952834  -0.39208287 -0.029022052    0.3002638  -0.14019928   -0.7440896 
 1620000    11.061612    1.4734023    9.5882094  -0.30522265   0.98248631    1.2979639   0.77288151   -3.5502959            3    5.6481358    7.8524471    7.9269098    1.1650504  0.037885384  -0.31576901  0.080652728    5.4785758    5.4586144     1.027572        0.075    2.0772885          0.5   0.11417467    4.3792552    2.8083773    30.801768 0.0090488521  -0.41389628 -0.0073043486   0.36337831    2.2233854    6.0641374 
 1621000     11.09926    1.4626545    9.6366059  -0.28281125   0.97531958    1.2300226   0.80616109   -3.5502959            3    5.4445315    7.7745601    7.8765018   0.68253255  0.031856676  0.093212934   0.12074355    5.2676704    5.2649306      1.02333        0.075       2.0891          0.5   0.11370333    4.3974085    2.8100599    30.801768  0.016517514  -0.42824204   0.02307902   0.29336501   -1.1048323    2.6774883 
 1622000     11.08212    1.4625122    9.6196075  -0.30140375   0.97522468    1.2549454   0.78941545   -3.5502959            3    5.5808592    7.7945648    7.9587595   0.98925326 -0.031665688  -0.13327635 0.0077259551    5.4076719    5.3976192    1.0445526        0.075    2.0999745          0.5    0.1160614    4.3080645    2.8064464    30.801768 -0.018710548  -0.36909367 -0.025535947   0.39936171  -0.71152988    4.1363949 
 1623000    11.101293    1.4776776    9.6236158  -0.28700344   0.98533718     1.269923   0.79629372   -3.5502959            3    5.6187269    7.8536861    8.0039248   0.99856971 -0.0065140861   0.06257322 -0.030946417    5.4440306    5.4332999    1.0275845        0.075    2.1255598          0.5   0.11417605     4.379202    2.8211705    30.801768 0.0089945912  -0.35047902 -0.012319762   0.26951495   0.25613332   -2.0501696 
 1624000    11.072721    1.4565639    9.6161576  -0.30286503   0.97125823    1.2427295   0.79093804   -3.5502959            3    5.4808502    7.7988182    7.9195235   0.72420891  0.039253487 -0.083191122 -0.050960195    5.3073289    5.2993939     1.038435        0.075    2.1183064          0.5   0.11538166    4.3334442    2.8343243    30.801768 -0.027407228  -0.41653267 -0.0036127965   0.31245599  -0.86173603  -0.77485089 
 1625000    11.095798     1.477903    9.6178951  -0.29627641   0.98548746     1.247336   0.81157695   -3.5502959            3     5.572324    7.8207617    7.9368791   0.95933136 -0.0067896895  0.065601306  0.022444195    5.3942748    5.3901951    1.0191234        0.075    2.1161504          0.5   0.11323593    4.4155597    2.7881051    30.801768 0.0036689048  -0.41793202 -0.018474166    0.3978707   0.25225633    4.9544784 
 1626000    11.082107     1.455175    9.6269323  -0.30723272   0.97033208    1.2661059   0.77383681   -3.5502959            3    5.4267343    7.6324323    7.8524669   0.79530369 -0.028005334  -0.21788509  -0.12853791    5.2569648    5.2418647    1.0136446        0.075    2.1109682          0.5   0.11262718    4.4394257    2.8066049    30.801768 0.0042215335  -0.28547556 0.00053057433   0.28073943   0.45446432   0.84725124 
 1627000    11.113616    1.4987472    9.6148691  -0.31290583   0.99938667    1.2732186   0.81750568   -3.5502959            3    5.5240322    7.7446666    7.9739958   0.85343428 -0.0018451851 -0.072566497  0.033812588    5.3446823     5.338124    1.0336559        0.075    2.0571665          0.5   0.11485065    4.3534799    2.8058611    30.801768 0.0038112978  -0.33464463 -0.0093247627   0.34770894  0.022124266    5.2665106 
 1628000    11.107686    1.4928879    9.6147986  -0.29072835   0.99547961    1.2605415   0.81943413   -3.5502959            3    5.5678088    7.8692612    7.9014591   0.93270609 -0.032989549  -0.11050047 0.0051457802    5.3880358    5.3837517     1.034459        0.075    2.0693375          0.5   0.11493989    4.3500998    2.8039168    30.801768  0.015164359  -0.34599036 -0.011375987   0.38513668   0.47275747    2.6650282 
 1629000     11.07846    1.4574433    9.6210169  -0.28031209   0.97184466    1.2784748   0.76812444   -3.5502959            3    5.7161549    7.9075436    8.0288254    1.2120958 -0.027402579  -0.11357376 -0.036340026    5.5476386    5.5294793    1.0326582        0.075    2.0884613          0.5   0.11473979     4.357686    2.8126386    30.801768  0.015396302  -0.34554917  0.020807669   0.35633948  -0.39299365    8.8041855 
 1630000    11.115673    1.5023099     9.613363  -0.30553572    1.0017623    1.2582358   0.83143527   -3.5502959            3     5.312397    7.6258866    7.7378817   0.57342264 0.0034541854 -0.015155052  0.030605813    5.1299911    5.1286765    1.0338337        0.075    2.0978303          0.5   0.11487041     4.352731    2.8022992    30.801768  0.018113719  -0.36193175  -0.02399987   0.39938693  -0.31754468    2.4876259 
 1631000    11.089495    1.4675383     9.621957  -0.30286006   0.97857612    1.2592692   0.79212095   -3.5502959            3    5.5648041    7.7593419    7.9677092   0.96736136 -0.036898306  -0.13400922 -0.027935028    5.3910233    5.3809328    1.0329918        0.075    2.1084169          0.5   0.11477686    4.3562786    2.8174912    30.801768 -0.032067638  -0.41322011 -0.017165385   0.34607614    3.1287622    5.0987312 
 1632000    11.075172    1.4688332     9.606339  -0.30174912   0.97943957     1.252448   0.79809931   -3.5502959            3    5.5284123    7.7877031    7.8484963    0.9490374  0.025427246  -0.12114067 -0.066610305    5.3533199    5.3455369    1.0260495        0.075    2.1021791          0.5    0.1140055    4.3857534    2.8157701    30.801768 -0.0087241237  -0.38750436 -0.043150088    0.4076566    1.1403364   -1.0814075 
 1633000    11.167683    1.5179683    9.6497148  -0.29448057    1.0122036    1.2775342   0.83598555   -3.5502959            3    5.5408333    7.7142754     7.949529   0.95869552  0.006170993 0.0025347919  0.021221274    5.3574292     5.354295    1.0250105        0.075    2.0889419          0.5   0.11389005     4.390199    2.8065878    30.801768 0.0080044971  -0.33549682 -0.015173449   0.37290907    1.1978209    1.4695021 
 1634000    11.135935    1.4984718    9.6374631  -0.29239923   0.99920302    1.2881482   0.80726329   -3.5502959            3    5.7397269    7.9930232    8.0414092    1.1847481 0.0016788524  0.047609887  0.056093556     5.562624    5.5516387    1.0269255        0.075    2.0435979          0.5   0.11410283    4.3820121    2.8018836    30.801768 0.0071708163   -0.3729962 -0.0026632719   0.34450151    1.6321485     3.776033 
 1635000    11.106574    1.4898119    9.6167621  -0.29283133   0.99342847    1.3067088   0.78529013   -3.5502959            3    5.4369005    7.6858202    7.8674056   0.75747566 -0.001569706  -0.31868413  0.045042292    5.2646182    5.2461023    1.0255329        0.075    2.0319994          0.5    0.1139481    4.3879627    2.7939403    30.801768 -0.0045206604  -0.43685047 -0.019938375   0.39833699   0.77081826   0.10494478 
 1636000    11.094752    1.4908271    9.6039248   -0.2936612   0.99410546    1.3045788   0.78783563   -3.5502959            3    5.5531353    7.7731805    7.9049524   0.98127296  0.019033716   0.21134904 -0.066943355    5.3802946     5.362648    1.0234463        0.075    2.0023495          0.5   0.11371626    4.3969087    2.8125486    30.801768 0.0076054206  -0.46184031  0.021212725    0.4027778   -1.5141039   -2.6269705 
 1637000    11.107623    1.5250058    9.5826176   -0.2917408    1.0168963    1.2919309   0.83422139   -3.5502959            3    5.6680732     7.921213    8.0307177    1.0522888 -0.011793485  -0.26478852 -0.0081588168     5.485056    5.4794327    1.0357368        0.075    2.0606383          0.5   0.11508187    4.3447331    2.8012044    30.801768  0.012735007  -0.39462125   -0.0112562   0.36260446    1.1130233   -2.6506016 
 1638000    11.085804     1.478993    9.6068106  -0.29456929   0.98621428    1.2503573   0.81077693   -3.5502959            3    5.6640477    7.8992344    7.9943655    1.0985432  0.024099325 -0.052464001 -0.013246515     5.486174    5.4814776    1.0262778        0.075     2.065277          0.5   0.11403086    4.3847778     2.788323    30.801768  0.020437648  -0.29533514  0.021568133   0.35467268   0.32987089   -0.4476192 
 1639000     11.08792    1.4946685    9.5932519  -0.29687235   0.99666695    1.2884586   0.80283175   -3.5502959            3    5.6244156    7.8520806    7.9979212     1.023245 -0.001250725  -0.26771137 -0.0062507724    5.4482849    5.4362821     1.046693        0.075    2.0730565          0.5   0.11629923    4.2992548    2.8319406    30.801768  0.034061958   -0.3570432 -0.0097362338   0.37551837   -2.5954084  -0.13960749 
 1640000    11.113576    1.4642927    9.6492831  -0.28944938   0.97641189     1.242395   0.79974625   -3.5502959            3     5.568464    7.7279136    8.0160766   0.96140172 -0.014542267  -0.12218077   0.13128653    5.3930102    5.3870565    1.0348828        0.075    2.1224363          0.5   0.11498697    4.3483186    2.8605256    30.801768  0.032896143  -0.36935653 -0.005277008   0.26030899   -1.7958817    3.9557434 
 1641000    11.110387    1.4754923    9.6348942  -0.29632055      0.98388    1.2447178   0.81064164   -3.5502959            3    5.6866175    7.7847064    8.0757282    1.1994178 0.0065936164  -0.32201144 -0.067290945    5.5087734    5.5048708    1.0409829        0.075    2.0907308          0.5   0.11566477    4.3228375    2.8081603    30.801768  0.027370302  -0.40197155  0.018016371   0.38591268    4.0786445    5.8803537 
 1642000    11.080465    1.4556352      9.62483  -0.29219994   0.97063897    1.2539942   0.78240905   -3.5502959            3    5.6790448    7.9127961    7.9724415    1.1518968  0.015519737   0.22752851   -0.0719527    5.5073946    5.4959436    1.0207508        0.075    2.1100681          0.5   0.11341675    4.4085198    2.8014271    30.801768 0.0018112674  -0.35108362 -0.003385202   0.39989858   -1.2998365    3.5797063 
 1643000    11.133075    1.5056098    9.6274657  -0.29684968    1.0039628     1.306076   0.80326068   -3.5502959            3    5.6557512    7.9031337    7.9392964    1.1248236  0.004981244 -0.033061911  0.026528573    5.4795265    5.4650454    1.0268294        0.075    2.0704358          0.5   0.11409216    4.3824222     2.805628    30.801768  0.022561104  -0.39838571  0.001228098   0.34835271  -0.41927864    2.8465513 
 1644000    11.104823    1.5084108    9.5964119  -0.29754761    1.0058305    1.3338033   0.78791808   -3.5502959            3    5.4938271    7.7554288    7.8868661   0.83918644 -0.046960006  -0.12822905  0.081252891    5.3209683    5.2990727    1.0220048        0.075    2.0308768          0.5   0.11355609    4.4031104    2.8147002    30.801768 -0.0023690794  -0.36574003  0.027718222   0.36100712     1.464154  0.057745886 
 1645000    11.122302    1.4716004    9.6507013  -0.29342132   0.98128477    1.2838438   0.78027759   -3.5502959            3    5.3860032    7.7093884    7.7797991   0.66882212  -0.01816413  0.084644832  0.017584469    5.2148206    5.1985436    1.0242373        0.075    2.0721214          0.5   0.11380415     4.393513     2.810036    30.801768  0.010112816   -0.4346703 0.00015036302   0.31793378  -0.45666936    1.8342318 
 1646000    11.086655     1.447863    9.6387919  -0.29673751   0.96545637    1.2605786   0.76939297   -3.5502959            3    5.6852768    7.8776707    7.9688693    1.2092903 -0.0011935778  -0.14735139  0.047504525    5.5164821    5.5012142    1.0247337        0.075    2.0821397          0.5    0.1138593    4.3913846    2.7865039    30.801768 -0.019672795  -0.32426664  0.011510674   0.39312649    1.3312602    9.1780008 
 1647000    11.088756     1.477277    9.6114792  -0.29793784   0.98507006     1.272052   0.79443171   -3.5502959            3    5.5919528    7.8542637    7.9879997   0.93359486 -0.022517132  -0.20342601 -0.021837899     5.417665    5.4062149    1.0146558        0.075    2.0427711          0.5   0.11273953    4.4350015    2.8043826    30.801768 -0.0056213558  -0.28910286  0.020386126   0.36437468     1.332831    2.0422442 
 1648000    11.082529    1.5001439    9.5823851  -0.29459657     1.000318    1.2914896   0.80689685   -3.5502959            3    5.6677951    7.8481293    8.0728056    1.0824506  0.013832824   0.12399292  0.089054582    5.4907726    5.4792191    1.0226843        0.075    2.0684609          0.5   0.11363158    4.4001851    2.8001119    30.801768 -0.0053226633  -0.31174154 -0.0057813541   0.39872385    1.9934436    3.7178784 
 1649000    11.082906    1.4624759    9.6204298  -0.29168931   0.97520049    1.2329902    0.8039876   -3.5502959            3     5.585316    7.8461619    7.9087933    1.0009929 0.0040027155 -0.043441566   0.15164833    5.4089318    5.4052818    1.0280214        0.075    2.0373506          0.5    0.1142246    4.3773408    2.8121782    30.801768 -0.028022394  -0.33904408  0.035772027   0.35302928  -0.45586959    2.6577471 
 1650000    11.045781    1.4612377    9.5845432  -0.29922974   0.97437481    1.2507515    0.7907909   -3.5502959            3    5.8368879    8.0607462    8.0999021    1.3500155 -0.016993465 -0.099136147  -0.04028474    5.6633989    5.6542603    1.0519342        0.075    2.0427938          0.5   0.11688158     4.277834    2.8028051    30.801768  0.017485559  -0.35315593  0.034208345   0.45979232    3.2287857    4.7328764 
 1651000    11.043891    1.4542774    9.5896132  -0.29356098   0.96973359    1.2300049   0.79686699   -3.5502959            3    5.3346414     7.723155    7.7561325   0.52463677  0.032967423 -0.021760839 -0.0047813218    5.1598193     5.155043    1.0389755        0.075    2.0547543          0.5   0.11544172    4.3311899    2.8316483    30.801768 -0.0099994262  -0.34001411 -0.017868727   0.29801168  -0.64379138  -0.25531531 
 1652000     11.11045    1.4892463    9.6212035  -0.29660457   0.99305138    1.2662351   0.81159952   -3.5502959            3    5.4345169    7.7701207    7.8065708   0.72685939 -0.016292718 -0.037210978 -0.021069585    5.2564628    5.2496285    1.0475858        0.075    2.0447486          0.5   0.11639842     4.295591    2.8168784    30.801768 -0.012220418  -0.34546587 -0.028427717   0.41359573    1.6471237    3.7068641 
 1653000     11.03037    1.4644035    9.5659665  -0.30211013   0.97648579    1.2535468   0.79244723   -3.5502959            3    5.6921744    7.8627244    8.0970948    1.1167041 0.0027033305 -0.0096667614  0.060985276     5.518322    5.5091386    1.0367653        0.075    2.0559403          0.5   0.11519614    4.3404232    2.7976801    30.801768 -0.012669369  -0.36303701 0.0037993971   0.37322907   0.42411264    5.2671864 
 1654000    11.048283    1.4507055     9.597578  -0.31301226   0.96735177    1.2108294   0.80566144   -3.5502959            3    5.4757283     7.778457    7.8636877   0.78504031  0.035501762  -0.15186724 0.00090924282    5.2989769    5.2989299    1.0418039        0.075    2.0467741          0.5   0.11575599     4.319431    2.8159491    30.801768 0.0089898102  -0.33605963 -0.011142892   0.33617996     -1.84393    1.7104498 
 1655000    11.054564    1.4709947     9.583569   -0.3101834   0.98088091    1.2508133   0.80158844   -3.5502959            3    5.7141269    7.9068608    8.0316845    1.2038354 0.0011846429  0.006498987  0.023265544     5.538269    5.5314902     1.035056        0.075    2.0871847          0.5   0.11500622    4.3475908    2.8076238    30.801768  0.010114903     -0.31056 0.0044724065   0.34763642   -1.0121815    6.9793406 
 1656000    11.049866    1.4532037    9.5966622  -0.27671925   0.96901759    1.2603499   0.77547789   -3.5502959            3    5.5066621    7.7853775    7.8320273   0.90258145  0.019742878  -0.34605388 0.0076849075    5.3365325    5.3226329    1.0248013        0.075    2.0634957          0.5   0.11386681    4.3910952    2.8075242    30.801768 -0.014037196  -0.35110887 -0.018119364   0.32074643    5.3235492   0.53590023 
 1657000    11.056858    1.4537143    9.6031437  -0.30878186   0.96935806     1.243636   0.78716917   -3.5502959            3    5.5867579    7.7738036    7.9346565    1.0518138 0.0038695781 -0.020709786 -0.063246557    5.4140635    5.4051693    1.0365433        0.075    2.0717714          0.5   0.11517147    4.3413528    2.8124809    30.801768 -0.027610639  -0.31789509 0.0010946049   0.34607765   -2.8682395    5.7522173 
 1658000    11.140031    1.5322796    9.6077513  -0.30149465    1.0217466    1.2924295   0.84196976   -3.5502959            3    5.5438654    7.8198971    7.9164131   0.89528589  0.016522571 -0.0017521465  0.080705459    5.3591483    5.3551521    1.0205634        0.075    2.0627822          0.5   0.11339593    4.4093293    2.7809779    30.801768   0.01237091  -0.35563561  0.020400358    0.3544713    1.8901885       0.4664 
 1659000    11.077863    1.4812609    9.5966023  -0.29053239   0.98772659    1.2718801   0.79897168   -3.5502959            3    5.6246444    7.8789477    7.9824256      1.01256 -0.0089864103  -0.22933331 0.00097717628    5.4493606    5.4389317    1.0175365        0.075    2.0451744          0.5   0.11305962    4.4224456    2.7926824    30.801768 -0.0014022113  -0.32305492 0.0022692286   0.23723429    1.5805994    3.6336224 
 1660000    11.092265    1.4863579    9.6059073  -0.29395295   0.99112533    1.2677392   0.80738977   -3.5502959            3    5.7068255     7.861087    8.0603095    1.1990799  0.011965318   -0.1061515  0.079927574    5.5296949    5.5217174    1.0218978        0.075    2.0682435          0.5    0.1135442    4.4035713    2.7786367    30.801768 -0.024887411  -0.38700463  0.012875755   0.36341742   -1.3737728    7.6349922 
 1661000    11.073788    1.4653702    9.6084176  -0.27863894   0.97713043    1.2662685    0.7850541   -3.5502959            3    5.4656627    7.7442888     7.867903   0.78479615 -0.0038469624  -0.13658007  0.097501677    5.2934322    5.2807693    1.0292545        0.075    2.0984095          0.5   0.11436161    4.3720965    2.8236431    30.801768  0.030991479  -0.43570065 -0.0016590059   0.33731944    1.2399052    1.4115863 
 1662000    11.083052     1.479651     9.603401  -0.29262262   0.98665306    1.2683537   0.79953033   -3.5502959            3    5.7265501    7.9258252    8.0208558    1.2329691  -0.01180766 -0.045537567 -0.0087495624    5.5511437    5.5413522    1.0262646        0.075    2.0893951          0.5    0.1140294    4.3848342    2.8097314    30.801768 -0.0097575281  -0.38132514   0.02276547   0.35088281    1.4411317    5.0714443 
 1663000    11.098712    1.5033884    9.5953232  -0.28529123    1.0024815    1.2825645    0.8164412   -3.5502959            3     5.674709    7.8758871    8.0337189    1.1145211 -0.015893784 -0.0043536365 0.0016082396    5.4955926    5.4874362    1.0354828        0.075     2.102926          0.5   0.11505364    4.3457989    2.8464377    30.801768 0.0092202197  -0.39248367 0.0075122428   0.34400258   0.55124307    5.0748292 
 1664000    11.053416    1.4734093    9.5800063  -0.29144992   0.98249101    1.3061948   0.76741122   -3.5502959            3     5.663684    7.9782223     7.975749    1.0370808  0.029858922   0.17596604  -0.06685321    5.4953242    5.4729608    1.0191317        0.075    2.0763864          0.5   0.11323686    4.4155234    2.8198357    30.801768  0.035159173   -0.4085523 0.0038352891   0.36434021   -2.9053209    5.1694451 
 1665000    11.115954    1.4897041    9.6262498   -0.2995809   0.99335664    1.3083773   0.78406003   -3.5502959            3    5.4995198    7.7228042    7.8990587   0.87669662 -0.020177418  -0.13515462   0.01278141    5.3275074     5.308478    1.0220407        0.075    2.0573041          0.5   0.11356008    4.4029559    2.8017532    30.801768  0.013007755  -0.38061414 0.00070425694   0.37822366   -0.9705303    4.1794182 
 1666000    11.074393    1.4794317    9.5949613   -0.2927468   0.98650684    1.2885421   0.78585015   -3.5502959            3    5.4981464    7.8394076    7.8867864   0.76824532 -0.026743403   -0.1748939  0.018272147    5.3257413    5.3100008    1.0313764        0.075     2.027101          0.5   0.11459737    4.3631017    2.8229153    30.801768  0.022798791  -0.47586745 0.00043394496   0.29139547   -2.9843666    2.8965762 
 1667000     11.07942    1.4669228     9.612497    -0.290979   0.97816568     1.250269   0.79742735   -3.5502959            3    5.6987918    7.9514315    8.0205294    1.1244144  -0.01152635  -0.02260042  0.084536851    5.5238468    5.5162346    1.0203606        0.075    2.0077419          0.5    0.1133734    4.4102055    2.8043018    30.801768 -0.0039148794  -0.40012627 -0.013633243   0.39160054    2.1671598    3.8666843 
 1668000     11.11244    1.4924804    9.6199595  -0.28237307    0.9952079     1.263853   0.81677752   -3.5502959            3     5.651723     7.882633    8.0006226    1.0719135 -0.031773328 -0.0018500152   0.02338541    5.4725328    5.4671823    1.0326591        0.075    2.0897703          0.5    0.1147399     4.357682     2.820079    30.801768 0.0027781851  -0.37079688  0.012329984   0.35414661   -1.2124601    8.6269227 
 1669000    11.109967    1.5086975    9.6012691  -0.29429616    1.0060217    1.3042873   0.80788124   -3.5502959            3    5.6609274    7.8996142    8.0159076    1.0672605 0.0082374865  -0.16322102  0.067156318     5.483689    5.4704828    1.0305292        0.075    2.1084483          0.5   0.11450325    4.3666884    2.7849787    30.801768  0.023544844  -0.31576526 0.0091383537   0.38810234    2.9057297    3.6681785 
 1670000    11.071234    1.4521357    9.6190981  -0.29267733   0.96830543    1.2384132   0.78889163   -3.5502959            3    5.4050149    7.6456606    7.8185612   0.75082305 -0.015376776  -0.10764031 0.0093344672    5.2319426    5.2241889    1.0217971        0.075    2.1036053          0.5   0.11353301    4.4040057    2.8089108    30.801768 0.0051776557  -0.39223421 0.0025384747   0.37423519   -1.9640908    3.7274902 
 1671000    11.069521    1.4787159    9.5908052  -0.31170811   0.98602952    1.2558479   0.80681489   -3.5502959            3    5.7078351    7.9724267    7.9744557    1.1766229 -0.011395288   -0.2845714    0.1045321    5.5308306    5.5244633    1.0300274        0.075    2.0705795          0.5   0.11444749    4.3688158     2.803572    30.801768 -0.0091071037  -0.40646108  0.012895728   0.41796853   0.64684911     3.733461 
 1672000    11.101879     1.497554    9.6043248  -0.30770057   0.99859105     1.239904   0.83835304   -3.5502959            3    5.6276631    7.7770554     7.973359    1.1325748  0.023379774   -0.1803545 -0.0088603524    5.4437395    5.4466193    1.0191737        0.075    2.0883646          0.5   0.11324152    4.4153416     2.808952    30.801768 -0.019016869  -0.36396793   0.01095024   0.40164396      3.64714    3.3328837 
 1673000    11.112502    1.4811006    9.6314016  -0.28581083   0.98761968    1.2768952   0.79545575   -3.5502959            3    5.5068835    7.8149744    7.8929993   0.81267665 -0.0095328178  -0.16516936   -0.1675359     5.332371    5.3204384    1.0271823        0.075    2.0647673          0.5   0.11413137    4.3809167    2.8297353    30.801768  0.021574066  -0.33046702  -0.00168622   0.35171585    2.5142048    4.1689647 
 1674000    11.070171    1.4556385    9.6145324  -0.29603485    0.9706412     1.260833   0.77786118   -3.5502959            3    5.5211764    7.7498171    7.8661014    0.9476108 0.0056365569  -0.16639878  0.029507965     5.350524    5.3370767     1.005428        0.075    2.0936613          0.5   0.11171422    4.4757058    2.8175024    30.801768 0.0086039197  -0.28758974  0.015902716   0.31592768  -0.24366025     4.003655 
 1675000    11.098178    1.4925148    9.6056632  -0.29151844   0.99523087     1.295819   0.79554057   -3.5502959            3     5.727709    7.9850265    8.0658853    1.1322151 -0.001862371  0.073731529 -0.081082449    5.5531779    5.5385008    1.0407763        0.075    2.0382274          0.5   0.11564181    4.3236956     2.829477    30.801768 -0.021983787  -0.37761586 -0.019170422   0.35764594    1.1602426    1.7991631 
 1676000     11.07684    1.4411486    9.6356916  -0.27917163    0.9609791       1.2401   0.77556385   -3.5502959            3    5.4839073    7.7108158    7.8776011   0.86330506 -0.021776864   -0.2027726   0.03094723    5.3137589    5.3028349    1.0097902        0.075    2.0637809          0.5   0.11219892     4.456371    2.7935398    30.801768  0.026197753  -0.36860732 -0.00076915887   0.33191983    1.6009554    7.1142238 
 1677000    11.126537    1.5271596    9.5993777  -0.29552555    1.0183325    1.3149948   0.82126361   -3.5502959            3     5.752925    7.9294019    8.1134535    1.2159198  0.031990278  -0.02327899 -0.038970242    5.5727507    5.5609169    1.0475354        0.075    2.0876013          0.5   0.11639282    4.2957976    2.8439152    30.801768 0.0016242507  -0.38309326  0.023965366   0.38367987   0.03888947    6.4769627 
 1678000    11.139765    1.5100849    9.6296798  -0.28656033    1.0069468    1.2970259   0.81425525   -3.5502959            3    5.5285822    7.8409765    7.8634684   0.88130177  0.018370122 -0.021934135  0.011797259    5.3499454    5.3391979     1.013429        0.075    2.0816636          0.5   0.11260323    4.4403702    2.7937193    30.801768 0.0040866308  -0.29644417  0.040872217   0.38316215  0.068626246    6.2411006 
 1679000     11.09591    1.4770217    9.6188884  -0.28972374   0.98489978    1.2693822   0.79592497   -3.5502959            3    5.7512102    7.9658229    8.0406906     1.247117  -0.02466672  -0.14744101 -0.070216264    5.5765948    5.5658622    1.0244654        0.075    2.0873806          0.5   0.11382949    4.3925349     2.801917    30.801768 -0.0023950951   -0.3988851 -0.042926359   0.42891664    4.9516918    3.9874345 
 1680000    11.130042    1.5089135    9.6211282  -0.28832506    1.0061657    1.3083321   0.80542905   -3.5502959            3     5.516012     7.756443    7.9442552   0.84733769  0.045997871  0.043970376 -0.046556631    5.3393115    5.3249767      1.02391        0.075     2.094502          0.5   0.11376778    4.3949175    2.8055742    30.801768 -0.020592995  -0.38763816 -0.0050635524   0.34020602   -3.0732226    2.9085182 
 1681000    11.087959    1.4505579     9.637401  -0.28827977   0.96725333    1.2588959   0.77350646   -3.5502959            3    5.7570924    7.9636956     8.121149    1.1864326  -0.02899702  -0.21835555 -0.033563479    5.5873953    5.5732755    1.0431847        0.075    2.0696747          0.5   0.11590941    4.3137136    2.8016922    30.801768 0.0082979956  -0.34626978 -0.030650285   0.37268972    3.8482668   0.74208654 
 1682000    11.077007    1.4870386    9.5899688  -0.28797576   0.99157921    1.2883296   0.79444182   -3.5502959            3    5.6084381    7.8603463    8.0185896   0.94637843  0.020826688 0.0096685164  -0.10118374    5.4341481    5.4203235    1.0290441        0.075     2.094732          0.5   0.11433823    4.3729904    2.8065126    30.801768 -0.021703516  -0.37431372  0.013121405   0.31156228   -1.2571769    2.3939901 
 1683000    11.074407     1.465365    9.6090417  -0.29253405   0.97712693    1.2818602   0.77467116   -3.5502959            3    5.6674807    7.8929308    7.9720349    1.1374763  0.031703415  0.048223547 -0.044003702    5.4975281    5.4803107    1.0333481        0.075    2.0848268          0.5   0.11481645    4.3547766    2.8066092    30.801768 0.0031893184  -0.42069177  0.020023356   0.43521144   -1.0837509    5.8745533 
 1684000    11.081074    1.4877724    9.5933021  -0.29044576   0.99206853    1.2443661   0.82451718   -3.5502959            3    5.6159149    7.8430986    7.9336978    1.0709484 -0.0087539354  -0.10578284  0.052888214    5.4350268    5.4342196    1.0319085        0.075    2.0654401          0.5    0.1146565    4.3608519    2.7959578    30.801768  0.018741637  -0.32410043  0.054031633    0.4392951    3.8336064     2.667211 
 1685000    11.124145    1.5080535    9.6160917  -0.30541351    1.0055923    1.3030153   0.80801243   -3.5502959            3    5.6141686    7.8123374    7.9493202    1.0808482  -0.01991011  -0.25206674  0.074764764    5.4369014    5.4239097    1.0300798        0.075    2.0601938          0.5   0.11445332    4.3685934    2.8093756    30.801768  0.026383233  -0.27242916  0.012195255   0.37308024    1.7295159    4.0669736 
 1686000    11.072683    1.4831342     9.589549  -0.29679068   0.98897574    1.2592569   0.80945418   -3.5502959            3    5.5684154    7.8233524    7.9434896   0.93840405  0.028665198  -0.15014002 -0.023232957    5.3908319    5.3845458    1.0342476        0.075    2.1079236          0.5    0.1149164     4.350989    2.7926101    30.801768 -0.015271946  -0.40419489 -0.026363935    0.3861697 -0.015357808    2.8014374 
 1687000     11.07389       1.4502    9.6236904  -0.28852823   0.96701468    1.2540664   0.77632321   -3.5502959            3    5.5480364    7.8067195    7.8678135   0.96957635  0.011948749  0.047362883  0.022511775    5.3777214    5.3649247    1.0204711        0.075      2.08492          0.5   0.11338568    4.4097279     2.798983    30.801768 -0.0089851383  -0.42902537  0.013084965   0.34589059  0.046184083    5.9508741 
 1688000    11.064819    1.4731584    9.5916605  -0.30694363   0.98232371    1.2686357   0.79213026   -3.5502959            3    5.5246157    7.7327222    7.9249234   0.91620132 -0.032283378  -0.15407515  0.096127559    5.3508328    5.3393767    1.0453346        0.075    2.0947051          0.5   0.11614829    4.3048416    2.8367919    30.801768   0.00699403   -0.3515102 -0.0064256579   0.41498613   0.70716006    7.3930645 
 1689000    11.082003    1.4669685    9.6150348  -0.29294547   0.97819617    1.2558939   0.79373445   -3.5502959            3    5.4655624    7.7247867    7.8092958   0.86260466 0.0071122857  -0.14865091 -0.057551696    5.2914276    5.2821839    1.0213089        0.075    2.0915916          0.5   0.11347877    4.4061106    2.8204042    30.801768 0.0023799534  -0.31470705 0.0050299758   0.35372912    3.0313858    2.7121026 
 1690000    11.088546    1.4747021    9.6138438  -0.30479969   0.98335305    1.2422543   0.81140337   -3.5502959            3    5.7783544    7.9350456    8.1173449    1.2826728 -0.0051926643  -0.13547253  0.096738835    5.6003433    5.5969675    1.0361582        0.075    2.0579488          0.5   0.11512869    4.3429661     2.798199    30.801768  0.024466643  -0.32629605 -0.021016577   0.40848818   -0.5832355    3.4817678 
 1691000    11.066123    1.4697391    9.5963839  -0.28731333   0.98004368    1.2830034   0.77876939   -3.5502959            3    5.5763919    7.8723153    7.9505982   0.90626211 -0.005971891  -0.11545786 0.0074639652    5.4055402     5.389055    1.0301903        0.075    2.0541666          0.5   0.11446559    4.3681251    2.8024342    30.801768  0.046689181  -0.35266769 -0.024803843   0.38065596    2.9653157    4.3554297 
 1692000    11.118957    1.5032429    9.6157141  -0.30768866    1.0023845    1.2885055   0.81232558   -3.5502959            3    5.6242722    7.8447696    7.9807742    1.0472727  0.026324077  -0.21738384   0.11703801    5.4460587    5.4361319    1.0416699        0.075    2.0623399          0.5    0.1157411    4.3199867    2.8120049    30.801768 -0.0080041657  -0.38023052 -0.026660819   0.30761258   0.23138098   0.50902725 
 1693000    11.100126    1.4986947    9.6014314  -0.28940652   0.99935168    1.2743321   0.81670634   -3.5502959            3    5.6122154    7.9402693      7.93822   0.95815694 -0.0050733578   -0.1121064 -0.021831719    5.4330409    5.4261447     1.031173        0.075     2.108825          0.5   0.11457478    4.3639621    2.8034826    30.801768 0.0028254709  -0.31112537 -0.0050323783   0.41083966   0.58274356    2.1773765 
 1694000    11.136229    1.5043157    9.6319136  -0.29045833    1.0030998    1.2933147   0.81031649   -3.5502959            3    5.6456166    7.9313633    7.9067604    1.0987261 -0.012880555  -0.18791389  0.019603289    5.4678439    5.4567741    1.0302701        0.075    2.0799161          0.5   0.11447446    4.3677867    2.7822124    30.801768 -0.021868139  -0.36843106 -0.022763888   0.39347522  -0.43559426    3.1416611 
 1695000    11.087807     1.488054    9.5997533  -0.31615221   0.99225633    1.2784397   0.80215217   -3.5502959            3    5.5336779    7.7004231    7.9432625   0.95734802 -0.025280167 -0.097410435 -0.046076249    5.3576963    5.3470074    1.0232186        0.075    2.1237159          0.5   0.11369096     4.397887    2.7906602    30.801768 0.0014584007  -0.35052248 -0.0015235615   0.26309243    3.1448794    2.0926594 
 1696000    11.092843    1.4902401    9.6026032  -0.28010621   0.99371406    1.2755395   0.80651088   -3.5502959            3    5.5087891    7.7705278    7.8780589   0.87778063 0.0037575147 -0.055492637  0.069520983    5.3318513    5.3225421    1.0189931        0.075    2.0884964          0.5   0.11322146    4.4161241    2.8107548    30.801768 -0.0092119409  -0.34225903  0.011005687   0.31365347   -1.9637879   0.21115635 
 1697000    11.108578    1.4988807    9.6096976   -0.2990027   0.99947573    1.2805053   0.81280436   -3.5502959            3    5.7395487    7.8635488    8.1065611    1.2485362  -0.01580064 -0.069310977 0.0084864284    5.5612302    5.5525765     1.035555        0.075    2.1086852          0.5   0.11506166     4.345496    2.8249362    30.801768 -0.011689128  -0.33297112 0.0017067919   0.36420081   -0.1754322    2.9268883 
 1698000    11.105437    1.4886962    9.6167411  -0.31477414   0.99268451    1.2430289   0.82643337   -3.5502959            3    5.5886982    7.8125968    7.9163593    1.0371386 0.0079740478  0.067271465  0.076962189    5.4073897    5.4071982    1.0256633        0.075     2.122647          0.5   0.11396259    4.3874047     2.797934    30.801768 -0.019372382  -0.39231817  0.010931752   0.36800116  -0.90375986    4.2652749 
 1699000    11.071358    1.4536444     9.617714   -0.2921871   0.96931147    1.2514093   0.78191796   -3.5502959            3     5.621326    7.8250686     8.017048    1.0218615 -0.014034123  -0.18577526  0.048597456    5.4497836    5.4386023    1.0147394        0.075    2.0872311          0.5   0.11274882    4.4346363    2.8047312    30.801768 -0.014342637  -0.39775179 -0.020986109    0.3277457     1.050031    2.2375521 
 1700000    11.079539    1.5206013    9.5589375  -0.33283333    1.0139593    1.3188409   0.81141844   -3.5502959            3    5.3508416    7.6197887    7.7610736   0.67166262 0.0059070207 0.00017361419 -0.023522655    5.1728272    5.1582719    1.0356915        0.075    2.0920703          0.5   0.11507684     4.344923    2.8146203    30.801768 0.0027806567  -0.40943897  0.010259334   0.37389321   -1.1354196    0.2460424 
 1701000    11.068658    1.4531605    9.6154977  -0.30509436   0.96898883    1.2405773   0.78858975   -3.5502959            3     5.430857     7.673556    7.8196686    0.7993464 -0.020721491  -0.33947959 -0.018778396    5.2578508    5.2497149    1.0230217        0.075    2.0989377          0.5   0.11366908    4.3987336    2.7830791    30.801768  0.010285435  -0.40228638 -0.035478143   0.38780487    3.6161406    1.0375651 
 1702000    11.060631    1.4723605     9.588271  -0.29024656   0.98179163    1.2557303   0.79983312   -3.5502959            3    5.8762936    8.0770406    8.1618628    1.3899774 -0.033940671  -0.11537135  0.069681864    5.7008208     5.692939    1.0353472        0.075    2.0822639          0.5   0.11503857    4.3463683    2.8247209    30.801768  0.023437794  -0.32734361 -0.053114202   0.38038405   0.43590844    6.2652564 
 1703000    11.085748    1.4819318    9.6038159  -0.28904222   0.98817392    1.2642406   0.80480148   -3.5502959            3    5.5979828    7.9208816    7.8936957   0.97937107 -0.0092355099   0.14459501 -0.028246848      5.42142    5.4133855    1.0432297        0.075    2.0871326          0.5   0.11591441    4.3135275    2.7939628    30.801768 -0.0089836014  -0.35983188 -0.010504938   0.40638614   -2.3666807    4.6919538 
 1704000    11.061945    1.4860704    9.5758749  -0.30827387   0.99093364    1.2723445   0.80400533   -3.5502959            3    5.5519477    7.7886618    7.9279124    0.9392691 -0.0081921478  0.096576395 -0.068885115    5.3755596    5.3661672     1.020053        0.075    2.0695597          0.5   0.11333922    4.4115355    2.8071868    30.801768 -0.0039435985  -0.34927322 -0.032808751   0.32894736   -1.5716662    4.8819517 
 1705000    11.053668    1.4714763    9.5821914  -0.31506884   0.98120204    1.2371767   0.81119934   -3.5502959            3    5.5618701    7.7863481    7.9042148    0.9950475 -0.019189107  -0.09265186 -0.085531321    5.3839037    5.3812246    1.0205648        0.075    2.0810339          0.5   0.11339608    4.4093234    2.7935675    30.801768  0.027270858  -0.42615392 -0.030961437      0.37079    1.5753235    5.3974637 
 1706000    11.067976    1.4501434    9.6178329  -0.28904529   0.96697696    1.2496929   0.77917116   -3.5502959            3    5.5471562    7.7545816    7.9547478   0.93213932 0.0080001319  -0.25056535  -0.01345436    5.3762164    5.3646831    1.0272123        0.075    2.0830014          0.5    0.1141347    4.3807887    2.8165845    30.801768  0.039304243  -0.30188597  0.023635136   0.44651938 -0.025552999   0.17443622 
 1707000    11.078165    1.5043493    9.5738154   -0.2956217    1.0031222    1.2802778    0.8190306   -3.5502959            3    5.6306903    7.8939504    8.0131331   0.98498744  0.023415997 -0.055156485  0.058430164    5.4510059    5.4437514    1.0306399        0.075    2.0465683          0.5   0.11451555    4.3662193    2.8009967    30.801768 0.00052789513  -0.35257936 -0.006876003   0.34455068   0.56329224    8.4857817 
 1708000      11.0819    1.4896698    9.5922306  -0.29158817   0.99333376    1.2879866   0.79759307   -3.5502959            3    5.5461436    7.8266495    7.9318901   0.87989139 -0.028964553  -0.17511753  0.027717808    5.3711623    5.3580791    1.0109552        0.075    2.0367366          0.5   0.11232836    4.4512356    2.7832248    30.801768  0.039645146  -0.32812916 6.5177859e-05   0.32085851    3.5780641    3.2027054 
 1709000    11.098388    1.4836427    9.6147448  -0.30089745   0.98931481    1.2810219   0.79553319   -3.5502959            3    5.7718994    7.9458979    8.0875723    1.2822279 0.0027865806   0.16813371 -0.010781951    5.5973699    5.5848518    1.0404132        0.075    2.0615579          0.5   0.11560146    4.3252048    2.8089579    30.801768 -0.00093732342    -0.379156  0.011654522   0.44817803    2.0268912    8.8658165 
 1710000    11.075144    1.4757596    9.5993839   -0.2934964   0.98405823    1.2657877   0.79691534   -3.5502959            3    5.5178146    7.8284001     7.870555   0.85448872  0.001603404  0.067199063 -0.026275704    5.3429819    5.3329914    1.0312034        0.075    2.0457585          0.5   0.11457816    4.3638334    2.8349434    30.801768 -0.023827122   -0.3319958  0.004154222   0.40618304   -1.0950529    3.5201108 
 1711000    11.080334    1.4763885    9.6039456  -0.29994913   0.98447761    1.2769222   0.79020331   -3.5502959            3    5.5232955    7.7817597    7.9066557   0.88147109  0.015903268   -0.3000201   0.05329937    5.3499354    5.3368465    1.0307433        0.075    2.0783738          0.5   0.11452704    4.3657813    2.7832769    30.801768  0.014835778  -0.39120714 -0.016165845   0.39552402    1.9751406    5.1059665 
 1712000    11.112479    1.4700173    9.6424616  -0.28844833    0.9802292    1.2543804   0.79812868   -3.5502959            3    5.6324635    7.7622837     8.027298    1.1078089 0.0031037734 -0.068597402 -0.036850835    5.4573647     5.449306    1.0099824        0.075    2.0754632          0.5   0.11222026    4.4555234     2.809296    30.801768 -0.021138405  -0.35358506 -0.019950585   0.34146321    1.6191805    4.2811814 
 1713000    11.110672    1.4797998    9.6308719  -0.30122208   0.98675231    1.2488715   0.81266218   -3.5502959            3    5.4887947    7.6705665    7.9429801   0.85283747 0.0077562603  -0.20837687   -0.0878691    5.3105074    5.3064416    1.0332039        0.075    2.0538003          0.5   0.11480044    4.3553841    2.8138338    30.801768  0.014085609  -0.38061666 -0.016101004   0.43436787  -0.27898551   0.75050909 
 1714000    11.047828    1.4757176    9.5721106   -0.3138563   0.98403022     1.256851   0.80281656   -3.5502959            3    5.5461721    7.8771976    7.8833097   0.87800899  0.012410548  0.080701907 -0.068717712    5.3700448    5.3626538    1.0209292        0.075    2.0441046          0.5   0.11343657    4.4077495    2.7654226    30.801768 -0.00044582465  -0.34278821  0.018392124   0.32571912   -1.7016527 -0.080705208 
 1715000    11.066878    1.4788781        9.588  -0.31184988   0.98613766    1.2709097    0.7969705   -3.5502959            3    5.7369606    7.8815605    8.0644012    1.2649201 -0.017075367   0.17546818 -0.018300581    5.5621158    5.5513895    1.0240098        0.075    2.0487085          0.5   0.11377887     4.394489    2.7800104    30.801768 -0.0053118743  -0.38917742  0.013256832   0.39185277   -1.6871601    4.5574443 
 1716000    11.037504    1.4549832    9.5825209  -0.28309942   0.97020423     1.264442   0.77473124   -3.5502959            3    5.4797529    7.7818828    7.9012807   0.75609515  0.021725735    -0.075984  0.090350258    5.3097871    5.2951262    1.0346604        0.075    2.0542607          0.5   0.11496227    4.3492529    2.8231726    30.801768 -0.032459305  -0.34078607 -0.026408892   0.32426022  -0.13184902    2.8687786 
 1717000    11.076232    1.4971625    9.5790694  -0.29359258   0.99832998    1.2925643   0.80286965   -3.5502959            3      5.59908    7.8268354    7.9978109   0.97259367 0.00013619143 -0.057488709 -0.011515098     5.422941    5.4103471    1.0362086        0.075    2.0846523          0.5   0.11513429    4.3427548    2.8214862    30.801768 0.0080042518   -0.3179223   0.02187149    0.4525432   -2.9097403    2.8747258 
 1718000    11.128838    1.5157297    9.6131083  -0.28402029    1.0107109    1.2941477   0.82244152   -3.5502959            3    5.3772111    7.7436315    7.8418393   0.54616257 -0.010658308  -0.17459025 -0.050307912    5.1967783     5.188247    1.0252581        0.075    2.0745103          0.5   0.11391756    4.3891388    2.8144059    30.801768 -0.018022993  -0.40478482 -0.024582338   0.42461342    1.3289495   -1.2565466 
 1719000     11.09556    1.4858776    9.6096826  -0.28575279   0.99080502    1.2911863   0.79125077   -3.5502959            3    5.5129927    7.8025707    7.8659611   0.87044625   -0.0272543 -0.0060134052 -0.029473492    5.3394027    5.3244609    1.0219284        0.075    2.1291909          0.5    0.1135476    4.4034398    2.8098752    30.801768  0.013226076  -0.34120472 -0.0012628631   0.35655085   0.93787738   -1.6124956 
 1720000    11.070354     1.482428    9.5879255  -0.30326198   0.98850484    1.2708929   0.80092527   -3.5502959            3    5.4516399    7.6952844    7.8614753   0.79815986  0.023865439  0.018609964   0.10343951    5.2759275    5.2660713    1.0347945        0.075    2.0798667          0.5   0.11497717    4.3486894    2.8225654    30.801768 -0.017989474   -0.3721551 -0.038258911   0.34192041    2.8478723  0.044242819 
 1721000    11.131982    1.4797966    9.6521853  -0.28538219   0.98675017    1.2476412   0.81347745   -3.5502959            3    5.5264442    7.7596652    7.9162731   0.90339436 -0.010827567 -0.00028200871  0.036264187    5.3479781    5.3442707    1.0030047        0.075     2.106734          0.5   0.11144496    4.4865195    2.7699313    30.801768  0.015622921  -0.31773374  0.021533116   0.42640487    1.1155585    6.9312557 
 1722000    11.128909    1.4794893    9.6494197   -0.2840866   0.98654525    1.2912737   0.78409613   -3.5502959            3    5.4901094    7.7162941    7.8634341       0.8906  0.029232162  -0.17383172  0.025017504    5.3180891    5.3015649    1.0205964        0.075    2.1023094          0.5    0.1133996    4.4091866    2.7805909    30.801768 -0.0070636288   -0.3338846  0.010043889   0.33096222    1.0385489 -0.020565805 
 1723000    11.094487    1.4748907    9.6195962   -0.2978584    0.9834788    1.2650215   0.79646001   -3.5502959            3    5.7457027    7.9398022    8.0696098    1.2276962  0.036157827  0.006387262 -0.031233833      5.57097    5.5609915    1.0227768        0.075    2.0496128          0.5   0.11364186     4.399787    2.7985339    30.801768 -0.0066127781   -0.3919925 -0.017493607   0.33521701   -1.9956362       3.7723 
 1724000     11.07823    1.4967875    9.5814428  -0.29499155   0.99807996    1.3035268   0.79515702   -3.5502959            3    5.6968069    7.9456216    8.0344109    1.1103882  0.016187868  -0.14937735  -0.05735582      5.52236    5.5064733     1.043569        0.075    2.0523206          0.5   0.11595211    4.3121251    2.8012437    30.801768 -0.017373392  -0.36615065 -0.015570958    0.4902573   -1.5117461    7.3694366 
 1725000     11.09738     1.472008    9.6253723  -0.30038929   0.98155659    1.2492575   0.80374957   -3.5502959            3    5.5197311    7.7493265    7.8728217   0.93704504 -0.0034267414  -0.21025923 -0.041942193    5.3433991    5.3373216    1.0323164        0.075    2.0453362          0.5   0.11470182    4.3591288    2.8251429    30.801768 -0.039529424  -0.42020689 0.0054629023   0.26929612  -0.16810477    2.5987027 
 1726000    11.114085    1.4900582    9.6240269  -0.29716399   0.99359274    1.2814957   0.80234455   -3.5502959            3    5.4303223    7.7350473    7.7995824   0.75633708 8.7011263e-05  0.091158768 -0.0079852983    5.2542985    5.2432055    1.0304079        0.075    2.0855589          0.5   0.11448976    4.3672027    2.8022946    30.801768  0.024146465  -0.39549405  0.017688508     0.380736    1.4463149    4.8148526 
 1727000    11.090471    1.5010654    9.5894056  -0.28356719    1.0009325     1.337377    0.7773799   -3.5502959            3    5.3868179    7.6907361    7.7746023   0.69511537 0.0055993335  -0.36216386  0.053436563    5.2162711    5.1915417    1.0171722        0.075    2.0457861          0.5   0.11301914    4.4240295     2.799799    30.801768 0.0028570666  -0.32582262  -0.03321732    0.3811569   0.66018321    2.3194408 
 1728000     11.11376    1.5044171    9.6093425  -0.28544781    1.0031675    1.3065642   0.80161085   -3.5502959            3     5.794542      8.03823     8.036585    1.3088111  0.039060231   0.19939658 -0.088796894    5.6186792    5.6037649    1.0274781        0.075    2.0393649          0.5   0.11416424    4.3796552    2.7649727    30.801768 -0.018357884  -0.50030397 -0.030868961   0.39226274    1.2402687    3.7027161 
 1729000     11.14634    1.5084483    9.6378913  -0.27736616    1.0058555     1.267826   0.83187134   -3.5502959            3    5.5822367     7.887951    7.9470505   0.91170876 -0.011320452 -0.014760389  0.045672442    5.3997352    5.3971159    1.0297087        0.075    2.0529904          0.5   0.11441208     4.370168    2.8120642    30.801768 -0.0089180518  -0.37967789  0.015690076   0.36413936   -1.1715508    1.1891763 
 1730000    11.085814    1.4847625    9.6010516  -0.30347589   0.99006146    1.2647028   0.80763837   -3.5502959            3    5.5342099    7.8107638    7.9488097    0.8430561  0.027304275  -0.16344851 -0.013412911    5.3570247    5.3495451    1.0297185        0.075     2.067776          0.5   0.11441317    4.3701262    2.7897015    30.801768 0.0097679389  -0.42324389  0.011990545   0.37280127    2.3564892    2.6832151 
 1731000    11.072891    1.4644849    9.6084062  -0.28686792   0.97654012    1.2667813   0.78372944   -3.5502959            3    5.4339224    7.7864428    7.8298893   0.68543504  0.016315547  -0.10862472  0.070655439    5.2619825    5.2489542    1.0218591        0.075    2.0616728          0.5    0.1135399    4.4037384    2.7936903    30.801768  0.021428345  -0.38794275 -0.016210096   0.34135862   -3.0910435   -2.1193377 
 1732000    11.098476    1.4977868    9.6006892  -0.28836708   0.99874627    1.2774728   0.81360741   -3.5502959            3    5.6366935    7.8780537    8.0369147    0.9951121 0.0038051541  0.030176396 -0.081049526    5.4581988    5.4501642    1.0246397        0.075    2.0728957          0.5   0.11384885    4.3917878    2.8017879    30.801768 -0.019280575  -0.30007332 -0.00068892981   0.38963662    1.6179824    7.4532507 
 1733000    11.095824    1.4905959     9.605228  -0.30009564   0.99395131    1.3002767    0.7904421   -3.5502959            3    5.3695503    7.7102224    7.8190099   0.57941864 0.0092455839  0.064477842 -0.035617039    5.1961378    5.1796913    1.0423701        0.075    2.0686465          0.5    0.1158189    4.3170849    2.8095265    30.801768   0.02142753  -0.26175295 -0.0083425679   0.36435629 -0.037349071   0.57665411 
 1734000    11.070498    1.4775451    9.5929529  -0.28203613   0.98524882     1.228931   0.82342898   -3.5502959            3    5.6034391    7.8528866    8.0009019   0.95652877  -0.01441799  0.012080258  0.027751383    5.4227897    5.4239975     1.044142        0.075    2.0878712          0.5   0.11601578    4.3097586    2.8366113    30.801768 -0.0044298001  -0.34929038 0.0087989203   0.39082219    -1.889124    6.4054836 
 1735000    11.101071    1.4715665    9.6295048  -0.29896448    0.9812622    1.2532104   0.80062828   -3.5502959            3    5.6086686    7.8411147    7.8957929    1.0890981 -0.010899861  -0.13498549   0.14599592    5.4330213    5.4256819    1.0341809        0.075    2.0906491          0.5   0.11490899    4.3512698    2.8154982    30.801768 -0.011261369  -0.37711646  0.014046798   0.38244484  -0.24835968    3.0672289 
 1736000    11.100168    1.4963832    9.6037853  -0.29398635   0.99781033    1.2911668    0.8029341   -3.5502959            3    5.4740637     7.769888    7.8689293    0.7833738  0.013212832  -0.11357137 -0.018583633    5.2979106    5.2855348     1.032827        0.075    2.0949532          0.5   0.11475855    4.3569738    2.8127956    30.801768  0.023349176  -0.37082923 -0.013570438   0.34722639   -0.5604162   -0.5693591 
 1737000    11.089553    1.4714088    9.6181441  -0.30764672   0.98115704    1.2861894   0.77850364   -3.5502959            3    5.5109692    7.7185395    7.8794721   0.93489588  0.025170191  -0.15080733  0.056611991    5.3401758    5.3231671    1.0134962        0.075    2.0837369          0.5   0.11261069    4.4400759    2.7912356    30.801768  0.036113436  -0.41388765   0.01742711    0.3256408    3.6085995   -2.2766227 
 1738000    11.124372    1.4875157    9.6368562  -0.28971156   0.99189733    1.2707558   0.80666812   -3.5502959            3    5.3898385    7.6271348    7.8309377   0.71144297 0.0064132146   -0.1130835 -0.031744703    5.2128662    5.2042899    1.0200242        0.075    2.0499871          0.5   0.11333602    4.4116602    2.8194949    30.801768   0.02919288    -0.416064 -0.0084281322   0.33840178    3.3931883    3.2196601 
 1739000    11.101724     1.492859    9.6088651  -0.30619089   0.99546037    1.2766074   0.80870935   -3.5502959            3    5.5113734    7.7206987    7.8883937   0.92502801 -0.0036837504   0.12077695 -0.067668673    5.3339533    5.3249705     1.021004        0.075    2.0875975          0.5   0.11344488    4.4074266    2.8088208    30.801768 -0.0018748892  -0.32512414  0.017982543   0.44359218   -2.1300766   0.25387254 
 1740000    11.111513    1.4816639    9.6298488  -0.30331675    0.9879953    1.2603355   0.80710296   -3.5502959            3    5.5178264     7.683152    7.8564302    1.0138969 0.0094117606  -0.12046105 -0.016153854    5.3407587    5.3337993    1.0178023        0.075    2.0876582          0.5   0.11308914     4.421291    2.8174998    30.801768 -0.00081149464  -0.43453921 -0.0078757099   0.41330932    1.1342746    1.8464964 
 1741000    11.113777    1.5070564    9.6067208  -0.29190495    1.0049274    1.3040409   0.80622207   -3.5502959            3    5.4935723    7.7533991    7.8774778   0.84984008 -0.0071220989 -0.070599429 -0.024541477    5.3166979    5.3031636    1.0276604        0.075    2.0593632          0.5   0.11418449    4.3788784    2.8166452    30.801768 -0.0099680236  -0.33302132  0.023019233   0.37766505    3.1840431    1.5530675 
 1742000     11.09881    1.4827964    9.6160138  -0.29213777   0.98875046    1.2509817   0.81458645   -3.5502959            3    5.7021187    7.9458246    8.0091758    1.1513557  0.012977939  0.035333375 -0.081284358    5.5234092    5.5194574    1.0160677        0.075    2.0857765          0.5   0.11289641    4.4288389    2.8145377    30.801768 -0.010173611  -0.36349031 0.0085446632   0.31603979   -1.9975785    2.6790409 
 1743000    11.100194    1.5036878    9.5965061  -0.28168221    1.0026812    1.2893528   0.81225581   -3.5502959            3    5.7108803    8.0203267    8.0061982    1.1061158 -0.023532627  0.024448094  0.027056732    5.5326821    5.5226162     1.032251        0.075    2.0864469          0.5   0.11469456    4.3594048     2.814872    30.801768 -0.0087356286   -0.3315828 -0.010740196    0.3695086    1.1586327    4.0624233 
 1744000    11.086519    1.5000093    9.5865094  -0.28135942    1.0002283    1.2861063   0.81033029   -3.5502959            3    5.3627199    7.6438711    7.7891776   0.65511088 -0.013334419 -0.098105516 -0.035947979    5.1849441    5.1749299    1.0178244        0.075    2.0668816          0.5    0.1130916    4.4211947    2.8184045    30.801768 0.0025816354  -0.35376251   0.02813646    0.3066429   0.76339717   0.90317826 
 1745000    11.067173    1.4698247    9.5973484   -0.3034686   0.98010076    1.2807298   0.78037766   -3.5502959            3    5.5296381    7.7446094    7.9438942   0.90041075 -0.0051927341 -0.049326807 0.0080346016    5.3584336    5.3426332    1.0201135        0.075    2.0748246          0.5   0.11334595    4.4112737    2.7935902    30.801768 -0.0029866229  -0.38747804 0.0015276604   0.36557866     3.151621    4.2780213 
 1746000    11.159565     1.505331     9.654234   -0.2861011    1.0037768    1.2488862   0.84101403   -3.5502959            3    5.6334199    7.8526954    7.9716065    1.0759577 -0.0013373371 -0.046376019 0.0059615935    5.4489125    5.4510646    1.0113445        0.075    2.0902748          0.5   0.11237161    4.4495225    2.8106896    30.801768  -0.01337167  -0.36350303 0.0077277705   0.40153161   -1.7273748    6.3037525 
 1747000    11.116874    1.5263158    9.5905581  -0.30218715    1.0177699    1.3088547   0.82441288   -3.5502959            3    5.7482593    7.9463139    8.0349347    1.2635294  0.018701727  -0.26447752 -0.053121371    5.5673941    5.5571478     1.030765        0.075    2.0650607          0.5   0.11452944    4.3656896    2.7896537    30.801768  0.008872638  -0.32067371  0.012148564   0.38728672    1.7881635    7.4679402 
 1748000     11.08843    1.4625798    9.6258506  -0.29176601   0.97526972     1.277676   0.77436198   -3.5502959            3    5.6160585     7.866212    7.9175582    1.0644053 -0.015634389   0.23468082 -0.097093832    5.4461738    5.4294995    1.0360841        0.075    2.0654932          0.5   0.11512046    4.3432767    2.8423397    30.801768 0.0010187206  -0.35415962 -0.043371937    0.3035261   -2.2503859    4.4542043 
 1749000    11.078086    1.4670439     9.611042  -0.30812183   0.97824646    1.2308995    0.8104534   -3.5502959            3    5.6549482    7.8614526    8.0047875    1.0986044 0.0026706782  -0.18247091  0.023954657    5.4771454    5.4752192    1.0448201        0.075    2.0649765          0.5   0.11609113    4.3069614    2.8278766    30.801768  0.013116703  -0.34327827 -0.027912516   0.38123963  -0.76929842    3.7212617 
 1750000     11.11367    1.4692182    9.6444519  -0.27706626    0.9796963    1.2521651   0.79871528   -3.5502959            3    5.5862238     7.838371    7.9286173   0.99168312  0.051480298  0.059147687  0.034304189    5.4109963    5.4033897    1.0271557        0.075    2.0710949          0.5   0.11412841    4.3810302    2.8187215    30.801768 -0.0034537557  -0.38508072  0.024391342   0.40059595    1.1570533    3.7528906 
 1751000    11.133992    1.5149944    9.6189972  -0.29370635    1.0102206    1.2957434   0.82056261   -3.5502959            3    5.7122094    7.8668506    8.0350465     1.234731  0.013781984  -0.23745733  -0.01191351    5.5321888    5.5230122    1.0340884        0.075    2.0951022          0.5   0.11489872    4.3516588    2.7975123    30.801768 0.0087497068  -0.36971693  0.026917665   0.44633647    1.9747605    3.2339307 
 1752000    11.106805    1.4845705    9.6222346  -0.30073075   0.98993347    1.2967778   0.78607739   -3.5502959            3    5.5338576    7.7286732    7.9223381   0.95056147 -0.028087869  -0.21367232 -0.061985644    5.3614026    5.3445094    1.0186456        0.075    2.0892308          0.5   0.11318284    4.4176306    2.8085309    30.801768 -0.010950347  -0.35728079 -0.018117801   0.40448713   -4.4637148    1.3976642 
 1753000    11.113371    1.4949291    9.6184419  -0.30134668   0.99684069     1.274335   0.81252126   -3.5502959            3    5.4749095     7.682558    7.8811141   0.86105634 -0.038367098  0.021452758  0.056687483    5.2966531    5.2888383    1.0198499        0.075    2.1014377          0.5   0.11331665    4.4124142    2.7858262    30.801768 -0.0098717523  -0.37940057    0.0116046   0.37407942    2.3768233    4.0578228 
 1754000    11.116273    1.5117577    9.6045152  -0.28582409    1.0080623    1.3141842   0.80469376   -3.5502959            3    5.4829574    7.7133222    7.8948763   0.84067359 -0.015233691 -0.083767797 -0.018589207    5.3064182    5.2910676    1.0175271        0.075    2.0895678          0.5   0.11305857    4.4224867    2.8139224    30.801768  0.020803392   -0.3519986 -0.017452575    0.3596849   -3.4292648   -0.0570768 
 1755000    11.112867    1.4999564     9.612911  -0.29552739     1.000193    1.2908778   0.80709577   -3.5502959            3    5.4776469    7.7300493    7.8955577   0.80733383 -0.041361023 -0.024346458  0.083054775    5.3005808    5.2891603    1.0187055        0.075    2.0720336          0.5   0.11318951    4.4173707    2.7816512    30.801768  0.020507793  -0.32214058  0.041310813   0.44024853   0.12688926   -2.0264827 
 1756000    11.085683    1.5106044    9.5750788  -0.32252771    1.0072932    1.3059046   0.80892303   -3.5502959            3    5.7888098    7.9638211    8.1130982    1.2895099  0.021607501 -0.077191473  -0.02877643    5.6113428    5.5981289    1.0121359        0.075    2.0682821          0.5   0.11245955    4.4460432    2.7674355    30.801768 -0.010645495  -0.35244296  0.030656994   0.37328924    1.5624956    2.8638166 
 1757000    11.129555    1.5252208    9.6043338  -0.30202147    1.0170397    1.3140819   0.81971744   -3.5502959            3        5.535    7.7695057    7.8989254   0.93656884   0.02382156   -0.2337257 -0.078040401    5.3551648    5.3431252    1.0218195        0.075     2.089319          0.5    0.1135355    4.4039088    2.7957954    30.801768 -0.024257504  -0.41494836  0.010260673   0.35918123   -0.8955876   0.30002379 
 1758000    11.080684    1.4736067     9.607077  -0.30700898   0.98262264    1.2750567   0.78835466   -3.5502959            3    5.2781928    7.5051952    7.8162557   0.51312743 -0.031524793  0.056767337  0.066799612    5.1052382    5.0920162    1.0293709        0.075    2.1184203          0.5   0.11437454    4.3716022    2.8129265    30.801768 -0.026251591  -0.40348929  0.030650017   0.41756204   -1.3781887  -0.28990653 
 1759000    11.096739    1.4923259     9.604413  -0.28831844   0.99510485    1.2980318   0.79385794   -3.5502959            3    5.7734764    7.9808483     8.047456     1.292125 -0.020077183 -0.0042585969 -0.073403741    5.5993145    5.5839452    1.0273734        0.075    2.1014425          0.5    0.1141526    4.3801017    2.8069805    30.801768 -0.033353425   -0.3671279  0.008699262   0.35262513   0.06197845    1.5425068 
 1760000    11.099647    1.5108612    9.5887857  -0.30113742    1.0074644    1.2683411   0.83420894   -3.5502959            3     5.497647    7.7143492    7.8970435   0.88154835 -0.034240505  -0.16472792 -0.012350947    5.3146326     5.312451     1.005977        0.075    2.0753724          0.5   0.11177522    4.4732632    2.8129894    30.801768 -0.0042262951  -0.37967682 -0.0020612111   0.34475169    3.0431335   0.55843036 
 1761000    11.123405    1.4985287    9.6248767  -0.30351248   0.99924096    1.2643089   0.82319291   -3.5502959            3    5.7551133    7.9371744     8.015697    1.3124685 -0.037851804 -0.016998059   0.12494219    5.5745157    5.5705061    1.0257068        0.075    2.0775279          0.5   0.11396742    4.3872186    2.7996993    30.801768 -0.025692039   -0.3613292 -0.012630744   0.41322367   -2.1079467    4.0543638 
 1762000    11.104847    1.4896748    9.6151719  -0.29517084   0.99333706    1.2669731    0.8115842   -3.5502959            3    5.4431792    7.6829721    7.8693558   0.77720977 -0.017338312  -0.27616555  0.024656994    5.2651284     5.258183    1.0074678        0.075    2.0515084          0.5   0.11194087    4.4666439    2.7934716    30.801768  0.014051421  -0.36071887  -0.01333344   0.31617301    2.9954885    4.4201031 
 1763000    11.139708    1.4881037     9.651604  -0.28490527   0.99228945     1.283403   0.79890395   -3.5502959            3    5.5351066    7.7954798    7.8913457   0.91849419 -0.010371664 -0.089167438 -0.070506295    5.3598376    5.3477113     1.037182        0.075    2.0395933          0.5   0.11524244    4.3386794    2.8302762    30.801768  0.036730082  -0.36495265 -0.0026606047   0.37500949   0.18877637    2.2175669 
 1764000    11.108842    1.5003167    9.6085254   -0.2998343    1.0004332    1.2805973   0.81433824   -3.5502959            3    5.7951703    7.9878955    8.1624201    1.2351951 0.0025241462  0.026182763  -0.02919493    5.6165152    5.6081847    1.0238317        0.075    2.0213832          0.5   0.11375908    4.3952536    2.8265047    30.801768  0.026568823  -0.28853121 -0.023744627   0.36203411   0.51107715    1.4356335 
 1765000    11.100707    1.4999019    9.6008047  -0.29269387    1.0001567    1.2856274   0.81052972   -3.5502959            3    5.5555101    7.8010667    7.9518547   0.91360891 -0.040965028 -0.055723105 0.0069490534    5.3776906      5.36779    1.0205992        0.075    2.0169162          0.5   0.11339992    4.4091743     2.793961    30.801768  0.026556614  -0.41267281 -0.0092488357   0.41599795   -2.6232772    1.1565976 
 1766000    11.133324    1.4949883    9.6383355  -0.28369459   0.99688019     1.285487    0.8051648   -3.5502959            3    5.6808549    7.9270506    8.0394702    1.0760438 0.0052587382  -0.11557437 -0.034320053    5.5042124    5.4931553    1.0278135        0.075    2.0344398          0.5    0.1142015    4.3782262    2.8202141    30.801768  0.024303069  -0.34239161  0.024178621   0.41480042   0.32916002    5.6870333 
 1767000    11.134645     1.506883    9.6277617  -0.29382817    1.0048118    1.3139019   0.79946647   -3.5502959            3    5.6223241    7.7296891    8.0164047    1.1208784 -0.010592625  -0.31117349 -0.022268846    5.4469317    5.4304755    1.0346981        0.075     2.077826          0.5   0.11496645    4.3490948    2.8190405    30.801768 -0.00041700118  -0.43042212  0.021484693   0.38181893    1.0597483    3.3681986 
 1768000    11.149757    1.5514638    9.5982935  -0.29266196    1.0345389    1.2951327   0.86148167   -3.5502959            3    5.6093938    7.9133535     7.936107   0.97872101  0.011809393  -0.26807859 -0.031166554    5.4203962    5.4202859    1.0224811        0.075    2.0826552          0.5   0.11360901    4.4010594     2.804667    30.801768 0.0028030259  -0.42921547 5.1393194e-05   0.35191139   0.39324933    1.7076625 
 1769000    11.144297    1.5116878    9.6326096  -0.28467056    1.0080157    1.3134965   0.80507377   -3.5502959            3    5.7026356    7.9495072    8.0400942    1.1183056 0.0036797787  -0.15114238   0.12041233    5.5260131    5.5108463    1.0244586        0.075    2.0441702          0.5   0.11382873    4.3925642    2.8158576    30.801768  0.019999303  -0.36748332 -0.012024716   0.31024466    2.2583855    3.1816523 
 1770000    11.097482    1.5026203    9.5948622  -0.29728189    1.0019693    1.2937948   0.80811362   -3.5502959            3    5.6987326    7.8539208    8.0817617    1.1605154  0.013171841 -0.053920855 -0.0032786096    5.5214432      5.50982    1.0131718        0.075    2.0378861          0.5   0.11257464    4.4414976    2.7802193    30.801768 -0.018688658  -0.35162037  0.020803206   0.44689153  -0.43248362    6.4206971 
 1771000    11.122338    1.5068131    9.6155247  -0.30265334    1.0047651    1.3218444   0.79410262   -3.5502959            3    5.6780367     7.841483    8.0293137    1.1633134 -0.0097816102   -0.2757238  0.030610637    5.5038211    5.4850284    1.0250067        0.075    2.0535168          0.5   0.11388963    4.3902154    2.8000721    30.801768  0.017847917  -0.42237131    0.0247201   0.38735703    1.5028329    4.7825992 
 1772000    11.160174    1.4991706    9.6610035  -0.27818605   0.99966904    1.2887289   0.80765312   -3.5502959            3    5.6202624    7.8751236    8.0271336   0.95853009  0.012603257  0.050725648  0.057058736     5.443074    5.4320895    1.0255015        0.075     2.032518          0.5   0.11394461    4.3880972    2.8151657    30.801768 -0.0096039854  -0.37050525 -0.027952786   0.37311024   -1.5782134    0.5574363 
 1773000    11.110717    1.4922617    9.6184557  -0.28103698   0.99506207    1.2774681   0.80747297   -3.5502959            3    5.5325768    7.7606481    7.9086571   0.92842525  0.018928081  -0.33988589   0.11325053    5.3554279    5.3460481    1.0120761        0.075     2.037137          0.5    0.1124529    4.4463058    2.7646663    30.801768 -0.0039868586  -0.40991956   -0.0205655   0.43753725   0.51225036   -1.7383898 
 1774000     11.06673     1.492146    9.5745837  -0.30909237   0.99498489    1.2924225   0.79739139   -3.5502959            3    5.5206581    7.7640071    7.9354198    0.8625473 -0.033939356   0.12778921  0.029422789     5.345721    5.3319459    1.0405617        0.075    2.0501949          0.5   0.11561796    4.3245876    2.7989726    30.801768 -0.014893016  -0.33862329 0.0040144826   0.33452132   -1.2572184    5.5798676 
 1775000    11.082833    1.4887827      9.59405  -0.29428288   0.99274223    1.2586542   0.81612997   -3.5502959            3    5.4731864    7.7970073    7.8403012    0.7822508 -0.010097213  -0.14415597  0.084326439    5.2941383    5.2894048    1.0181356        0.075    2.0776868          0.5   0.11312618    4.4198435    2.7989289    30.801768 0.0014702016  -0.31014977   0.01794553   0.45294822   0.81750493   -2.1251567 
 1776000    11.092077    1.4782089     9.613868  -0.31194507   0.98569145    1.2576904   0.80502535   -3.5502959            3    5.6508508    7.8236238    7.9864019    1.1425266 -0.0049587717  -0.14013285 -0.020487479    5.4742389    5.4672099    1.0312274        0.075    2.0617906          0.5   0.11458083    4.3637318    2.8053172    30.801768  0.030976191  -0.38131457 -0.0030437672   0.36423562  -0.59514112      10.6487 
 1777000    11.099766    1.4813575    9.6184081  -0.28954803   0.98779101    1.2839255   0.79106213   -3.5502959            3    5.5489234    7.7985821    7.9322885   0.91589966 0.0030540513  -0.19126341  0.041242157    5.3753749    5.3614519    1.0113462        0.075     2.080395          0.5    0.1123718     4.449515    2.7912014    30.801768 -0.001827983  -0.34187854  0.034956767   0.36051502    2.4897693  -0.99972041 
 1778000    11.081019    1.4794222    9.6015973  -0.30141588   0.98650048     1.302465   0.77657308   -3.5502959            3    5.7159046    7.9633571    8.0661719    1.1181848 -0.020269872 -0.071593523   -0.1229658    5.5455348     5.525726    1.0490152        0.075    2.0775499          0.5   0.11655724    4.2897377    2.8216032    30.801768  0.018360882  -0.50357039 -0.0077038503   0.38228016  0.028521563    4.6180435 
 1779000    11.139113    1.5037634    9.6353495  -0.28028278    1.0027316    1.2695898   0.82549328   -3.5502959            3    5.4497443    7.7361824     7.858693    0.7543574 -0.012977298    0.2590566 -0.029911673     5.268642     5.264366    1.0172914        0.075    2.0205357          0.5   0.11303238    4.4235113    2.8129709    30.801768  0.058470101  -0.32265463 -0.0079302514   0.36319921   -2.1238148    2.9431147 
 1780000    11.121073    1.5136447    9.6074286  -0.29486644    1.0093206    1.3249689   0.79961208   -3.5502959            3    5.5042147    7.7326927    7.9423845   0.83756677  0.011683468  -0.18488013 0.0079377137    5.3287904    5.3107502     1.033091        0.075    2.0501014          0.5   0.11478789    4.3558602    2.8125743    30.801768  0.028024921  -0.34194228 -0.032506449   0.31902905  -0.20201982    7.2722479 
 1781000    11.122058    1.4778177    9.6442407  -0.29564594   0.98543062     1.277642   0.79131195   -3.5502959            3     5.540593     7.753185    7.9408755   0.92771847 -0.019588238  -0.17963488  0.021462762    5.3669896    5.3540389    1.0140064        0.075    2.0776404          0.5   0.11266737     4.437842    2.7997532    30.801768 -0.012404729  -0.36486137 -0.0020939087   0.42185333   -1.3913609    2.4593551 
 1782000    11.119509    1.4955135    9.6239956  -0.28196302   0.99723043    1.3078187   0.79088527   -3.5502959            3    5.4761768    7.7895808    7.7786007   0.86034898 -0.017827766 -0.052253149  -0.16484794    5.3026671    5.2852166    1.0175518        0.075    2.0753975          0.5   0.11306131    4.4223793    2.8230251    30.801768  0.010877712  -0.30050142  0.031853167   0.37520472   0.89320035    2.7892193 
 1783000     11.15391    1.5183246    9.6355849  -0.29235418    1.0124412    1.3303115   0.80125498   -3.5502959            3    5.5401782    7.7407031    7.9552483   0.92458306 -0.023418011  -0.15362881 -0.088048848    5.3643934    5.3459336    1.0264444        0.075    2.0725379          0.5   0.11404938    4.3840661    2.8314973    30.801768  0.022610881  -0.36512161 -0.022532244    0.3834752   -1.5417802    5.8506657 
 1784000    11.134477    1.4927861    9.6416905  -0.29229345   0.99541175    1.2547995   0.82314271   -3.5502959            3    5.4881135    7.7046413    7.9420637   0.81763549 0.0021896564  0.075341006 -0.035281518    5.3075269    5.3048948   0.99844204        0.075     2.090773          0.5     0.110938    4.5070218     2.827147    30.801768 -0.038837941  -0.36224597  -0.01001146   0.36967889    -1.966008    1.7254867 
 1785000    11.103158    1.4936344    9.6095239  -0.29888151   0.99597741    1.3057123   0.79019973   -3.5502959            3      5.58709    7.7927451    7.9381693    1.0303554 0.00028253329 -0.087964987 -0.011382915    5.4137306    5.3964372    1.0128897        0.075    2.0491406          0.5    0.1125433    4.4427345    2.8123576    30.801768  0.018665903  -0.41724086 0.0036453156   0.43006527   0.19299589    3.1714189 
 1786000    11.115877    1.4893252    9.6265515  -0.29160033   0.99310395    1.2940651   0.79316464   -3.5502959            3    5.6004683    7.8639222    7.9278178    1.0096648  0.024449537   0.19756432  0.047595529    5.4264585    5.4115162    1.0179168        0.075    2.0670289          0.5   0.11310186    4.4207937    2.8266773    30.801768 0.0067863534  -0.30499199  0.020018055   0.38206152   -1.2198783    4.6412944 
 1787000    11.154161     1.493964    9.6601973  -0.27712634   0.99619717    1.3060413   0.79034688   -3.5502959            3    5.7188408    7.9497422    8.0255066    1.1812736  0.008466317 -0.0015637956  0.051764511    5.5454492      5.52814    1.0230195        0.075    2.0812696          0.5   0.11366883    4.3987432     2.792851    30.801768 -0.0017888085  -0.30542751 0.0070926867   0.35906052 -0.086599941    5.7933968 
 1788000       11.095    1.4919469    9.6030533  -0.29480884   0.99485215    1.2870975   0.80071436   -3.5502959            3    5.5198706    7.7982431    7.9346899   0.82667876  0.021742358  -0.07764204  0.044650247    5.3442044    5.3319359    1.0360665        0.075    2.0504869          0.5    0.1151185    4.3433505    2.8147592    30.801768 -0.00049872754  -0.40369932 -0.0019776021   0.40764276   0.37366489     -1.42424 
 1789000    11.119283    1.4911099    9.6281729  -0.29079085   0.99429404    1.2919593   0.79654874   -3.5502959            3    5.7771524    7.9652786    8.0881847     1.277994 0.0004509138  -0.15702679  0.069596562    5.6024002    5.5885078    1.0141153        0.075     2.080081          0.5   0.11267947    4.4373654    2.7911107    30.801768 0.0041678676  -0.30300231 -0.010221491   0.41654913   -2.2338775    8.1673865 
 1790000    11.093216    1.4850921    9.6081244  -0.29012605   0.99028124    1.2985082   0.78550509   -3.5502959            3    5.5003395    7.7508851    7.9528348   0.79729867 -0.014500749 -0.090827736  0.050993277    5.3280101    5.3107387    1.0523101        0.075    2.1043942          0.5   0.11692334    4.2763061    2.8634449    30.801768 -0.0024792187  -0.39838813 -0.013866693   0.39941221   0.99124467     2.379269 
 1791000    11.081412    1.4733691    9.6080429  -0.29295827    0.9824642    1.2738217   0.78891269   -3.5502959            3    5.3229082    7.6206301    7.7299554   0.61813897 0.0022296933  -0.15819907 -0.024644186    5.1498312    5.1369119     1.015954        0.075    2.0624373          0.5   0.11288378    4.4293342    2.8131376    30.801768 -0.015808539  -0.37371609 -0.037323419   0.36226028    2.8209692    3.3839421 
 1792000    11.114765    1.5091783    9.6055866  -0.31191038    1.0063423    1.3375756   0.78625998   -3.5502959            3    5.6005972     7.800126    7.9705284     1.031137 0.0080231355  -0.22193614 0.0027422503    5.4281021    5.4052919    1.0402208        0.075     2.057683          0.5   0.11558009    4.3260046    2.8004295    30.801768 -0.039268613  -0.46411236  0.023982315    0.3871669  -0.45160636   -1.3097157 
 1793000    11.115971    1.5184381    9.5975334  -0.27984368    1.0125169    1.3049736    0.8182449   -3.5502959            3      5.49619    7.7910638    7.8980273   0.79947876 -0.022156817 -0.038217947  0.054539201    5.3166779    5.3056451    1.0217185        0.075    2.0720565          0.5   0.11352428    4.4043441    2.8244685    30.801768  0.018916079  -0.36608761 0.0049614142   0.45466205    2.1986997  -0.39503983 
 1794000    11.128852    1.5129051     9.615947  -0.30861237    1.0088274    1.3056521   0.81164686   -3.5502959            3    5.4983227    7.7082525    7.8883074   0.89840826 0.0055369024  -0.20602259 -0.023551243    5.3202581    5.3076788    1.0383706        0.075    2.0872144          0.5   0.11537451    4.3337129    2.8054639    30.801768 -0.028198899  -0.42394936 -0.033770281    0.4542975  -0.15716308    -2.422846 
 1795000    11.137167      1.51682    9.6203471  -0.27482594    1.0114379    1.2946432   0.82332289   -3.5502959            3    5.6529309    7.9431599    7.9346567     1.080976  0.019977617  -0.16601094   0.10566329    5.4723047    5.4638944    1.0111671        0.075    2.0751682          0.5    0.1123519     4.450303    2.8071191    30.801768  0.011597468  -0.35638594 -0.022060217   0.33155578 -0.0057314453    5.9835095 
 1796000    11.054968    1.4568281    9.5981402  -0.28329997    0.9714344    1.2509592   0.78575415   -3.5502959            3    5.6316728    7.9430342    7.9086065    1.0433775 0.0045301765   0.24612204  0.075153683    5.4592887    5.4490148    1.0162853        0.075    2.0327033          0.5   0.11292059    4.4278906    2.7946992    30.801768 -0.0037504182  -0.36109465 -0.017117692   0.32676074  -0.10163362   -2.1813382 
 1797000    11.122126    1.4785743    9.6435518  -0.28823917   0.98593509    1.2591765   0.80444215   -3.5502959            3    5.7019892    7.8935643    8.0270265    1.1853769 -0.012362621  -0.16288696   0.10676668    5.5255053    5.5181314    1.0414072        0.075    2.0628761          0.5   0.11571192    4.3210762      2.81246    30.801768  0.023235483  -0.38502713 0.0096366553   0.34495822    1.0114001    9.2899469 
 1798000    11.102543    1.4677718     9.634771  -0.28581345   0.97873184    1.2587551   0.79272253   -3.5502959            3    5.5063565    7.6965431    7.9241213   0.89840511 0.0093139598   0.19936212 -0.095194872    5.3324437    5.3225602    1.0089452        0.075    2.0704296          0.5   0.11210503    4.4601033    2.8104071    30.801768 0.0017234696  -0.40821328 -0.0079427844   0.44068509   0.15581452   0.28144478 
 1799000    11.135273    1.5116156    9.6236579  -0.30406578    1.0079675    1.2587335   0.84144142   -3.5502959            3     5.677729    7.7988425    8.0370922    1.1972522 -0.004615217  -0.13139842  0.019630319    5.4931279    5.4939358    1.0518094        0.075    2.0990728          0.5   0.11686771    4.2783418    2.8204261    30.801768 -0.015125732   -0.4095594 -0.014945705   0.41749995  -0.61443979    2.6896885 
 1800000    11.099176    1.4917117    9.6074641  -0.28903004   0.99469535    1.2574744   0.82016898   -3.5502959            3    5.3571232    7.6291832     7.727554   0.71463228 -0.017015947  -0.24105492 -0.082350977     5.177189    5.1735139    1.0047961        0.075    2.0998032          0.5   0.11164401    4.4785205    2.8103126    30.801768 -0.011122452  -0.33080873 -0.0056068023   0.36285808    1.3653851    -2.713478 
Loop time of 600.461 on 1 procs for 800000 steps with 4504 atoms

Performance: 575557.310 tau/day, 1332.309 timesteps/s
98.8% CPU use with 1 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 77.554     | 77.554     | 77.554     |   0.0 | 12.92
Bond    | 136.58     | 136.58     | 136.58     |   0.0 | 22.75
Neigh   | 230.19     | 230.19     | 230.19     |   0.0 | 38.34
Comm    | 14.108     | 14.108     | 14.108     |   0.0 |  2.35
Output  | 1.3264     | 1.3264     | 1.3264     |   0.0 |  0.22
Modify  | 128.92     | 128.92     | 128.92     |   0.0 | 21.47
Other   |            | 11.79      |            |       |  1.96

Nlocal:    4504 ave 4504 max 4504 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:    1405 ave 1405 max 1405 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:    9612 ave 9612 max 9612 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 9612
Ave neighs/atom = 2.1341
Ave special neighs/atom = 6.98401
Neighbor list builds = 118727
Dangerous builds = 0
